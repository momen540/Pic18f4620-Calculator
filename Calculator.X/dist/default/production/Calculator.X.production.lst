

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Dec 14 16:06:51 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=3
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=3
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=3
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=3
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=3
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=3
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=3
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=3
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=3
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1
    88                           	psect	text72,global,reloc=2,class=CODE,delta=1
    89                           	psect	text73,global,reloc=2,class=CODE,delta=1
    90                           	psect	text74,global,reloc=2,class=CODE,delta=1
    91                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text79,global,reloc=2,class=CODE,delta=1
    96                           	psect	text80,global,reloc=2,class=CODE,delta=1
    97                           	psect	text81,global,reloc=2,class=CODE,delta=1
    98                           	psect	text82,global,reloc=2,class=CODE,delta=1
    99                           	psect	text83,global,reloc=2,class=CODE,delta=1
   100                           	psect	text84,global,reloc=2,class=CODE,delta=1
   101                           	psect	text85,global,reloc=2,class=CODE,delta=1
   102                           	psect	text86,global,reloc=2,class=CODE,delta=1
   103                           	psect	text87,global,reloc=2,class=CODE,delta=1
   104                           	psect	text88,global,reloc=2,class=CODE,delta=1
   105                           	psect	text89,global,reloc=2,class=CODE,delta=1
   106                           	psect	text90,global,reloc=2,class=CODE,delta=1
   107                           	psect	text91,global,reloc=2,class=CODE,delta=1
   108                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   109                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   110                           	psect	text93,global,reloc=2,class=CODE,delta=1
   111                           	psect	text94,global,reloc=2,class=CODE,delta=1
   112                           	psect	text95,global,reloc=2,class=CODE,delta=1
   113                           	psect	text96,global,reloc=2,class=CODE,delta=1
   114                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   115                           	psect	text97,global,reloc=2,class=CODE,delta=1
   116                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   117                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   118                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   119                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   120   000000                     
   121                           ; Version 2.40
   122                           ; Generated 17/11/2021 GMT
   123                           ; 
   124                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   125                           ; All rights reserved.
   126                           ; 
   127                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   128                           ; 
   129                           ; Redistribution and use in source and binary forms, with or without modification, are
   130                           ; permitted provided that the following conditions are met:
   131                           ; 
   132                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   133                           ;        conditions and the following disclaimer.
   134                           ; 
   135                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   136                           ;        of conditions and the following disclaimer in the documentation and/or other
   137                           ;        materials provided with the distribution. Publication is not required when
   138                           ;        this file is used in an embedded application.
   139                           ; 
   140                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   141                           ;        software without specific prior written permission.
   142                           ; 
   143                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   144                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   145                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   146                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   147                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   148                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   149                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   150                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   151                           ; 
   152                           ; 
   153                           ; Code-generator required, PIC18F4620 Definitions
   154                           ; 
   155                           ; SFR Addresses
   156   000000                     
   157                           	psect	idataBANK2
   158   00A442                     __pidataBANK2:
   159                           	callstack 0
   160                           
   161                           ;initializer for convert_float_to_string@F3618
   162   00A442  20                 	db	32
   163   00A443  00                 	db	0
   164   00A444  00                 	db	0
   165   00A445  00                 	db	0
   166   00A446  00                 	db	0
   167   00A447  00                 	db	0
   168   00A448  00                 	db	0
   169   00A449  00                 	db	0
   170   00A44A  00                 	db	0
   171   00A44B  00                 	db	0
   172   00A44C  00                 	db	0
   173   00A44D  00                 	db	0
   174   00A44E  00                 	db	0
   175   00A44F  00                 	db	0
   176   00A450  00                 	db	0
   177   00A451  00                 	db	0
   178                           
   179                           ;initializer for convert_int32_to_string@F3611
   180   00A452  20                 	db	32
   181   00A453  00                 	db	0
   182   00A454  00                 	db	0
   183   00A455  00                 	db	0
   184   00A456  00                 	db	0
   185   00A457  00                 	db	0
   186   00A458  00                 	db	0
   187   00A459  00                 	db	0
   188   00A45A  00                 	db	0
   189   00A45B  00                 	db	0
   190   00A45C  00                 	db	0
   191   00A45D  00                 	db	0
   192                           
   193                           ;initializer for _port_registers
   194   00A45E  80                 	db	128
   195   00A45F  0F                 	db	15
   196   00A460  81                 	db	129
   197   00A461  0F                 	db	15
   198   00A462  82                 	db	130
   199   00A463  0F                 	db	15
   200   00A464  83                 	db	131
   201   00A465  0F                 	db	15
   202   00A466  84                 	db	132
   203   00A467  0F                 	db	15
   204                           
   205                           ;initializer for _lat_registers
   206   00A468  89                 	db	137
   207   00A469  0F                 	db	15
   208   00A46A  8A                 	db	138
   209   00A46B  0F                 	db	15
   210   00A46C  8B                 	db	139
   211   00A46D  0F                 	db	15
   212   00A46E  8C                 	db	140
   213   00A46F  0F                 	db	15
   214   00A470  8D                 	db	141
   215   00A471  0F                 	db	15
   216                           
   217                           ;initializer for _tris_registers
   218   00A472  92                 	db	146
   219   00A473  0F                 	db	15
   220   00A474  93                 	db	147
   221   00A475  0F                 	db	15
   222   00A476  94                 	db	148
   223   00A477  0F                 	db	15
   224   00A478  95                 	db	149
   225   00A479  0F                 	db	15
   226   00A47A  96                 	db	150
   227   00A47B  0F                 	db	15
   228                           
   229                           ;initializer for _I2C
   230   00A47C  08                 	db	8
   231   00A47D  1A80               	dw	6784
   232   00A47F  0006               	dw	6
   233   00A481  0000               	dw	0
   234   00A483  03                 	db	3
   235                           
   236                           ;initializer for _Keypad
   237   00A484  03                 	db	3
   238   00A485  0B                 	db	11
   239   00A486  13                 	db	19
   240   00A487  1B                 	db	27
   241   00A488  63                 	db	99
   242   00A489  6B                 	db	107
   243   00A48A  73                 	db	115
   244   00A48B  7B                 	db	123
   245                           
   246                           ;initializer for _NB1
   247   00A48C  AA                 	db	low _EXTINT1
   248   00A48D  AC                 	db	high _EXTINT1
   249   00A48E  49                 	db	73
   250   00A48F  01                 	db	1
   251   00A490  01                 	db	1
   252   00A491  01                 	db	1
   253                           
   254                           ;initializer for _NB0
   255   00A492  A2                 	db	low _EXTINT0
   256   00A493  AC                 	db	high _EXTINT0
   257   00A494  41                 	db	65
   258   00A495  00                 	db	0
   259   00A496  01                 	db	1
   260   00A497  01                 	db	1
   261                           
   262                           	psect	smallconst
   263   001000                     __psmallconst:
   264                           	callstack 0
   265   001000  00                 	db	0
   266   001001                     _keypad_buttons:
   267                           	callstack 0
   268   001001  37                 	db	55
   269   001002  38                 	db	56
   270   001003  39                 	db	57
   271   001004  2F                 	db	47
   272   001005  34                 	db	52
   273   001006  35                 	db	53
   274   001007  36                 	db	54
   275   001008  2A                 	db	42
   276   001009  31                 	db	49
   277   00100A  32                 	db	50
   278   00100B  33                 	db	51
   279   00100C  2D                 	db	45
   280   00100D  23                 	db	35
   281   00100E  30                 	db	48
   282   00100F  3D                 	db	61
   283   001010  2B                 	db	43
   284   001011                     __end_of_keypad_buttons:
   285                           	callstack 0
   286   001011                     _dp_l:
   287                           	callstack 0
   288   001011  0000               	dw	0
   289   001013  0000               	dw	0
   290   001015  CFDC               	dw	53212
   291   001017  35D1               	dw	13777
   292   001019                     __end_of_dp_l:
   293                           	callstack 0
   294   001019                     _dp_h:
   295                           	callstack 0
   296   001019  0000               	dw	0
   297   00101B  0000               	dw	0
   298   00101D  C000               	dw	49152
   299   00101F  3F15               	dw	16149
   300   001021                     __end_of_dp_h:
   301                           	callstack 0
   302   001021  4260               	dw	16992
   303   001023  0DA2               	dw	3490
   304   001025                     __end_of_tiny@sqrtf$F2478:
   305                           	callstack 0
   306   001025  A570               	dw	42352
   307   001027  36EC               	dw	14060
   308   001029                     __end_of_ivln2_l:
   309                           	callstack 0
   310   001029  AA3B               	dw	43579
   311   00102B  3FB8               	dw	16312
   312   00102D                     __end_of_ivln2:
   313                           	callstack 0
   314   00102D  384F               	dw	14415
   315   00102F  3F76               	dw	16246
   316   001031                     __end_of_cp:
   317                           	callstack 0
   318   001031  AA3C               	dw	43580
   319   001033  3338               	dw	13112
   320   001035                     __end_of_ovt:
   321                           	callstack 0
   322   001035  BE8C               	dw	48780
   323   001037  35BF               	dw	13759
   324   001039                     __end_of_lg2_l:
   325                           	callstack 0
   326   001039  7200               	dw	29184
   327   00103B  3F31               	dw	16177
   328   00103D                     __end_of_lg2_h:
   329                           	callstack 0
   330   00103D  7218               	dw	29208
   331   00103F  3F31               	dw	16177
   332   001041                     __end_of_lg2:
   333                           	callstack 0
   334   001041  BB4C               	dw	47948
   335   001043  3331               	dw	13105
   336   001045                     __end_of_P5:
   337                           	callstack 0
   338   001045  EA0E               	dw	59918
   339   001047  B5DD               	dw	46557
   340   001049                     __end_of_P4:
   341                           	callstack 0
   342   001049  B355               	dw	45909
   343   00104B  388A               	dw	14474
   344   00104D                     __end_of_P3:
   345                           	callstack 0
   346   00104D  0B61               	dw	2913
   347   00104F  BB36               	dw	47926
   348   001051                     __end_of_P2:
   349                           	callstack 0
   350   001051  AAAB               	dw	43691
   351   001053  3E2A               	dw	15914
   352   001055                     __end_of_P1:
   353                           	callstack 0
   354   001055  F142               	dw	61762
   355   001057  3E53               	dw	15955
   356   001059                     __end_of_L6:
   357                           	callstack 0
   358   001059  3255               	dw	12885
   359   00105B  3E6C               	dw	15980
   360   00105D                     __end_of_L5:
   361                           	callstack 0
   362   00105D  A305               	dw	41733
   363   00105F  3E8B               	dw	16011
   364   001061                     __end_of_L4:
   365                           	callstack 0
   366   001061  AAAB               	dw	43691
   367   001063  3EAA               	dw	16042
   368   001065                     __end_of_L3:
   369                           	callstack 0
   370   001065  6DB7               	dw	28087
   371   001067  3EDB               	dw	16091
   372   001069                     __end_of_L2:
   373                           	callstack 0
   374   001069  999A               	dw	39322
   375   00106B  3F19               	dw	16153
   376   00106D                     __end_of_L1:
   377                           	callstack 0
   378   00106D  4260               	dw	16992
   379   00106F  0DA2               	dw	3490
   380   001071                     __end_of_tiny:
   381                           	callstack 0
   382   001071  F2CA               	dw	62154
   383   001073  7149               	dw	29001
   384   001075                     __end_of_huge:
   385                           	callstack 0
   386   001075  0000               	dw	0
   387   001077  4B80               	dw	19328
   388   001079                     __end_of_two24:
   389                           	callstack 0
   390   001079                     _bp:
   391                           	callstack 0
   392   001079  0000               	dw	0
   393   00107B  3F80               	dw	16256
   394   00107D  0000               	dw	0
   395   00107F  3FC0               	dw	16320
   396   001081                     __end_of_bp:
   397                           	callstack 0
   398   001081  AA00               	dw	43520
   399   001083  3FB8               	dw	16312
   400   001085                     __end_of_ivln2_h:
   401                           	callstack 0
   402   001085  23C6               	dw	9158
   403   001087  B8F6               	dw	47350
   404   001089                     __end_of_cp_l:
   405                           	callstack 0
   406   001089  4000               	dw	16384
   407   00108B  3F76               	dw	16246
   408   00108D                     __end_of_cp_h:
   409                           	callstack 0
   410   000000                     _INTCON2bits	set	4081
   411   000000                     _SSPADD	set	4040
   412   000000                     _SSPBUF	set	4041
   413   000000                     _SSPSTATbits	set	4039
   414   000000                     _TRISCbits	set	3988
   415   000000                     _INTCONbits	set	4082
   416   000000                     _PORTE	set	3972
   417   000000                     _PORTD	set	3971
   418   000000                     _PORTC	set	3970
   419   000000                     _PORTB	set	3969
   420   000000                     _PORTA	set	3968
   421   000000                     _LATA	set	3977
   422   000000                     _TRISA	set	3986
   423   000000                     _PIR1bits	set	3998
   424   000000                     _SSPCON2bits	set	4037
   425   000000                     _SSPCON1bits	set	4038
   426   000000                     _TRISE	set	3990
   427   000000                     _TRISD	set	3989
   428   000000                     _TRISC	set	3988
   429   000000                     _TRISB	set	3987
   430   000000                     _LATE	set	3981
   431   000000                     _LATD	set	3980
   432   000000                     _LATC	set	3979
   433   000000                     _LATB	set	3978
   434   000000                     _INTCON3bits	set	4080
   435   00108D                     STR_6:
   436                           
   437                           ; BSR set to: 1
   438   00108D  53                 	db	83	;'S'
   439   00108E  79                 	db	121	;'y'
   440   00108F  6E                 	db	110	;'n'
   441   001090  74                 	db	116	;'t'
   442   001091  61                 	db	97	;'a'
   443   001092  78                 	db	120	;'x'
   444   001093  20                 	db	32
   445   001094  45                 	db	69	;'E'
   446   001095  72                 	db	114	;'r'
   447   001096  72                 	db	114	;'r'
   448   001097  6F                 	db	111	;'o'
   449   001098  72                 	db	114	;'r'
   450   001099  00                 	db	0
   451   00109A                     STR_5:
   452                           
   453                           ; BSR set to: 1
   454   00109A  4D                 	db	77	;'M'
   455   00109B  61                 	db	97	;'a'
   456   00109C  74                 	db	116	;'t'
   457   00109D  68                 	db	104	;'h'
   458   00109E  20                 	db	32
   459   00109F  45                 	db	69	;'E'
   460   0010A0  72                 	db	114	;'r'
   461   0010A1  72                 	db	114	;'r'
   462   0010A2  6F                 	db	111	;'o'
   463   0010A3  72                 	db	114	;'r'
   464   0010A4  00                 	db	0
   465   0010A5                     STR_15:
   466                           
   467                           ; BSR set to: 1
   468   0010A5  49                 	db	73	;'I'
   469   0010A6  4E                 	db	78	;'N'
   470   0010A7  46                 	db	70	;'F'
   471   0010A8  49                 	db	73	;'I'
   472   0010A9  4E                 	db	78	;'N'
   473   0010AA  49                 	db	73	;'I'
   474   0010AB  54                 	db	84	;'T'
   475   0010AC  59                 	db	89	;'Y'
   476   0010AD  00                 	db	0
   477   0010AE                     STR_14:
   478                           
   479                           ; BSR set to: 1
   480   0010AE  69                 	db	105	;'i'
   481   0010AF  6E                 	db	110	;'n'
   482   0010B0  66                 	db	102	;'f'
   483   0010B1  69                 	db	105	;'i'
   484   0010B2  6E                 	db	110	;'n'
   485   0010B3  69                 	db	105	;'i'
   486   0010B4  74                 	db	116	;'t'
   487   0010B5  79                 	db	121	;'y'
   488   0010B6  00                 	db	0
   489   0010B7                     STR_4:
   490                           
   491                           ; BSR set to: 1
   492   0010B7  25                 	db	37
   493   0010B8  30                 	db	48	;'0'
   494   0010B9  2E                 	db	46
   495   0010BA  33                 	db	51	;'3'
   496   0010BB  66                 	db	102	;'f'
   497   0010BC  00                 	db	0
   498   0010BD                     STR_20:
   499                           
   500                           ; BSR set to: 1
   501   0010BD  4E                 	db	78	;'N'
   502   0010BE  41                 	db	65	;'A'
   503   0010BF  4E                 	db	78	;'N'
   504   0010C0  00                 	db	0
   505   0010C1                     STR_7:
   506                           
   507                           ; BSR set to: 1
   508   0010C1  69                 	db	105	;'i'
   509   0010C2  6E                 	db	110	;'n'
   510   0010C3  66                 	db	102	;'f'
   511   0010C4  00                 	db	0
   512   0010C5                     STR_10:
   513                           
   514                           ; BSR set to: 1
   515   0010C5  6E                 	db	110	;'n'
   516   0010C6  61                 	db	97	;'a'
   517   0010C7  6E                 	db	110	;'n'
   518   0010C8  00                 	db	0
   519   0010C9                     STR_1:
   520                           
   521                           ; BSR set to: 1
   522   0010C9  25                 	db	37
   523   0010CA  69                 	db	105	;'i'
   524   0010CB  00                 	db	0
   525   0010CC  00                 	db	0	; dummy byte at the end
   526   000000                     
   527                           ; #config settings
   528                           
   529                           	psect	cinit
   530   00A832                     __pcinit:
   531                           	callstack 0
   532   00A832                     start_initialization:
   533                           	callstack 0
   534   00A832                     __initialization:
   535                           	callstack 0
   536                           
   537                           ; Initialize objects allocated to BANK2 (86 bytes)
   538                           ; load TBLPTR registers with __pidataBANK2
   539   00A832  0E42               	movlw	low __pidataBANK2
   540   00A834  6EF6               	movwf	tblptrl,c
   541   00A836  0EA4               	movlw	high __pidataBANK2
   542   00A838  6EF7               	movwf	tblptrh,c
   543   00A83A  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   544   00A83C  6EF8               	movwf	tblptru,c
   545   00A83E  EE02  F08D         	lfsr	0,__pdataBANK2
   546   00A842  EE10 F056          	lfsr	1,86
   547   00A846                     copy_data0:
   548   00A846  0009               	tblrd		*+
   549   00A848  CFF5 FFEE          	movff	tablat,postinc0
   550   00A84C  50E5               	movf	postdec1,w,c
   551   00A84E  50E1               	movf	fsr1l,w,c
   552   00A850  E1FA               	bnz	copy_data0
   553                           
   554                           ; Clear objects allocated to BANK2 (141 bytes)
   555   00A852  EE02  F000         	lfsr	0,__pbssBANK2
   556   00A856  0E8D               	movlw	141
   557   00A858                     clear_0:
   558   00A858  6AEE               	clrf	postinc0,c
   559   00A85A  06E8               	decf	wreg,f,c
   560   00A85C  E1FD               	bnz	clear_0
   561                           
   562                           ; Clear objects allocated to BANK1 (1 bytes)
   563   00A85E  0101               	movlb	1
   564   00A860  6BFE               	clrf	__pbssBANK1& (0+255),b
   565                           
   566                           ; Clear objects allocated to BANK0 (2 bytes)
   567   00A862  0100               	movlb	0
   568   00A864  6BFC               	clrf	(__pbssBANK0+1)& (0+255),b
   569   00A866  6BFB               	clrf	__pbssBANK0& (0+255),b
   570                           
   571                           ; Clear objects allocated to COMRAM (2 bytes)
   572   00A868  6A7C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   573   00A86A  6A7B               	clrf	__pbssCOMRAM& (0+255),c
   574   00A86C                     end_of_initialization:
   575                           	callstack 0
   576   00A86C                     __end_of__initialization:
   577                           	callstack 0
   578   00A86C  907D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   579   00A86E  927D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   580   00A870  0100               	movlb	0
   581   00A872  EFA9  F03A         	goto	_main	;jump to C main() function
   582                           
   583                           	psect	bssCOMRAM
   584   00007B                     __pbssCOMRAM:
   585                           	callstack 0
   586   00007B                     _prec:
   587                           	callstack 0
   588   00007B                     	ds	2
   589                           
   590                           	psect	bssBANK0
   591   0000FB                     __pbssBANK0:
   592                           	callstack 0
   593   0000FB                     _flags:
   594                           	callstack 0
   595   0000FB                     	ds	1
   596   0000FC                     _RS:
   597                           	callstack 0
   598   0000FC                     	ds	1
   599                           
   600                           	psect	bssBANK1
   601   0001FE                     __pbssBANK1:
   602                           	callstack 0
   603   0001FE                     _keypadder:
   604                           	callstack 0
   605   0001FE                     	ds	1
   606                           
   607                           	psect	bssBANK2
   608   000200                     __pbssBANK2:
   609                           	callstack 0
   610   000200                     	ds	6
   611   000206                     	ds	5
   612   00020B                     fabsf@F465:
   613                           	callstack 0
   614   00020B                     	ds	4
   615   00020F                     ___fpclassifyf@F465:
   616                           	callstack 0
   617   00020F                     	ds	4
   618   000213                     floorf@F526:
   619                           	callstack 0
   620   000213                     	ds	4
   621   000217                     ceilf@F526:
   622                           	callstack 0
   623   000217                     	ds	4
   624   00021B                     _errno:
   625                           	callstack 0
   626   00021B                     	ds	2
   627   00021D                     _width:
   628                           	callstack 0
   629   00021D                     	ds	2
   630   00021F                     _RB7_InterruptLowHandler:
   631                           	callstack 0
   632   00021F                     	ds	2
   633   000221                     _RB7_InterruptHighHandler:
   634                           	callstack 0
   635   000221                     	ds	2
   636   000223                     _RB6_InterruptLowHandler:
   637                           	callstack 0
   638   000223                     	ds	2
   639   000225                     _RB6_InterruptHighHandler:
   640                           	callstack 0
   641   000225                     	ds	2
   642   000227                     _RB5_InterruptLowHandler:
   643                           	callstack 0
   644   000227                     	ds	2
   645   000229                     _RB5_InterruptHighHandler:
   646                           	callstack 0
   647   000229                     	ds	2
   648   00022B                     _RB4_InterruptLowHandler:
   649                           	callstack 0
   650   00022B                     	ds	2
   651   00022D                     _RB4_InterruptHighHandler:
   652                           	callstack 0
   653   00022D                     	ds	2
   654   00022F                     _INT2_InterruptHandler:
   655                           	callstack 0
   656   00022F                     	ds	2
   657   000231                     _INT1_InterruptHandler:
   658                           	callstack 0
   659   000231                     	ds	2
   660   000233                     _INT0_InterruptHandler:
   661                           	callstack 0
   662   000233                     	ds	2
   663   000235                     _dbuf:
   664                           	callstack 0
   665   000235                     	ds	80
   666   000285                     _lcd:
   667                           	callstack 0
   668   000285                     	ds	8
   669                           
   670                           	psect	dataBANK2
   671   00028D                     __pdataBANK2:
   672                           	callstack 0
   673   00028D                     convert_float_to_string@F3618:
   674                           	callstack 0
   675   00028D                     	ds	16
   676   00029D                     convert_int32_to_string@F3611:
   677                           	callstack 0
   678   00029D                     	ds	12
   679   0002A9                     _port_registers:
   680                           	callstack 0
   681   0002A9                     	ds	10
   682   0002B3                     _lat_registers:
   683                           	callstack 0
   684   0002B3                     	ds	10
   685   0002BD                     _tris_registers:
   686                           	callstack 0
   687   0002BD                     	ds	10
   688   0002C7                     _I2C:
   689                           	callstack 0
   690   0002C7                     	ds	8
   691   0002CF                     _Keypad:
   692                           	callstack 0
   693   0002CF                     	ds	8
   694   0002D7                     _NB1:
   695                           	callstack 0
   696   0002D7                     	ds	6
   697   0002DD                     _NB0:
   698                           	callstack 0
   699   0002DD                     	ds	6
   700                           
   701                           	psect	cstackBANK1
   702   000100                     __pcstackBANK1:
   703                           	callstack 0
   704   000100                     _powf$2926:
   705                           	callstack 0
   706   000100                     convert_float_to_string@Temp_String:
   707                           	callstack 0
   708                           
   709                           ; 16 bytes @ 0x0
   710   000100                     	ds	4
   711   000104                     _powf$2927:
   712                           	callstack 0
   713                           
   714                           ; 4 bytes @ 0x4
   715   000104                     	ds	4
   716   000108                     _powf$2931:
   717                           	callstack 0
   718                           
   719                           ; 4 bytes @ 0x8
   720   000108                     	ds	4
   721   00010C                     _powf$2932:
   722                           	callstack 0
   723                           
   724                           ; 4 bytes @ 0xC
   725   00010C                     	ds	4
   726   000110                     convert_float_to_string@DataCounter:
   727                           	callstack 0
   728   000110                     _powf$2933:
   729                           	callstack 0
   730                           
   731                           ; 4 bytes @ 0x10
   732   000110                     	ds	1
   733   000111                     Calculator_display_result@Res:
   734                           	callstack 0
   735                           
   736                           ; 4 bytes @ 0x11
   737   000111                     	ds	3
   738   000114                     _powf$2934:
   739                           	callstack 0
   740                           
   741                           ; 4 bytes @ 0x14
   742   000114                     	ds	1
   743   000115                     Calculator_display_result@result_str:
   744                           	callstack 0
   745                           
   746                           ; 20 bytes @ 0x15
   747   000115                     	ds	3
   748   000118                     _powf$2935:
   749                           	callstack 0
   750                           
   751                           ; 4 bytes @ 0x18
   752   000118                     	ds	4
   753   00011C                     powf@t2:
   754                           	callstack 0
   755                           
   756                           ; 4 bytes @ 0x1C
   757   00011C                     	ds	4
   758   000120                     powf@z_h:
   759                           	callstack 0
   760                           
   761                           ; 4 bytes @ 0x20
   762   000120                     	ds	4
   763   000124                     powf@z_l:
   764                           	callstack 0
   765                           
   766                           ; 4 bytes @ 0x24
   767   000124                     	ds	4
   768   000128                     powf@y1:
   769                           	callstack 0
   770                           
   771                           ; 4 bytes @ 0x28
   772   000128                     	ds	1
   773   000129                     _Calculator_display_result$2920:
   774                           	callstack 0
   775                           
   776                           ; 4 bytes @ 0x29
   777   000129                     	ds	3
   778   00012C                     powf@i:
   779                           	callstack 0
   780                           
   781                           ; 4 bytes @ 0x2C
   782   00012C                     	ds	4
   783   000130                     powf@s_l:
   784                           	callstack 0
   785                           
   786                           ; 4 bytes @ 0x30
   787   000130                     	ds	4
   788   000134                     powf@t_l:
   789                           	callstack 0
   790                           
   791                           ; 4 bytes @ 0x34
   792   000134                     	ds	4
   793   000138                     _powf$2925:
   794                           	callstack 0
   795                           
   796                           ; 4 bytes @ 0x38
   797   000138                     	ds	4
   798   00013C                     _powf$2929:
   799                           	callstack 0
   800                           
   801                           ; 4 bytes @ 0x3C
   802   00013C                     	ds	4
   803   000140                     _powf$2930:
   804                           	callstack 0
   805                           
   806                           ; 4 bytes @ 0x40
   807   000140                     	ds	4
   808   000144                     powf@w:
   809                           	callstack 0
   810                           
   811                           ; 4 bytes @ 0x44
   812   000144                     	ds	4
   813   000148                     _powf$2923:
   814                           	callstack 0
   815                           
   816                           ; 4 bytes @ 0x48
   817   000148                     	ds	4
   818   00014C                     powf@r:
   819                           	callstack 0
   820                           
   821                           ; 4 bytes @ 0x4C
   822   00014C                     	ds	4
   823   000150                     powf@yisint:
   824                           	callstack 0
   825                           
   826                           ; 4 bytes @ 0x50
   827   000150                     	ds	4
   828   000154                     _powf$2922:
   829                           	callstack 0
   830                           
   831                           ; 4 bytes @ 0x54
   832   000154                     	ds	4
   833   000158                     _powf$2928:
   834                           	callstack 0
   835                           
   836                           ; 4 bytes @ 0x58
   837   000158                     	ds	4
   838   00015C                     powf@s:
   839                           	callstack 0
   840                           
   841                           ; 4 bytes @ 0x5C
   842   00015C                     	ds	4
   843   000160                     powf@hx:
   844                           	callstack 0
   845                           
   846                           ; 4 bytes @ 0x60
   847   000160                     	ds	4
   848   000164                     powf@p_l:
   849                           	callstack 0
   850                           
   851                           ; 4 bytes @ 0x64
   852   000164                     	ds	4
   853   000168                     powf@t_h:
   854                           	callstack 0
   855                           
   856                           ; 4 bytes @ 0x68
   857   000168                     	ds	4
   858   00016C                     powf@s_h:
   859                           	callstack 0
   860                           
   861                           ; 4 bytes @ 0x6C
   862   00016C                     	ds	4
   863   000170                     powf@ax:
   864                           	callstack 0
   865                           
   866                           ; 4 bytes @ 0x70
   867   000170                     	ds	4
   868   000174                     powf@u:
   869                           	callstack 0
   870                           
   871                           ; 4 bytes @ 0x74
   872   000174                     	ds	4
   873   000178                     powf@v:
   874                           	callstack 0
   875                           
   876                           ; 4 bytes @ 0x78
   877   000178                     	ds	4
   878   00017C                     powf@hy:
   879                           	callstack 0
   880                           
   881                           ; 4 bytes @ 0x7C
   882   00017C                     	ds	4
   883   000180                     powf@n:
   884                           	callstack 0
   885                           
   886                           ; 4 bytes @ 0x80
   887   000180                     	ds	4
   888   000184                     powf@t1:
   889                           	callstack 0
   890                           
   891                           ; 4 bytes @ 0x84
   892   000184                     	ds	4
   893   000188                     powf@sn:
   894                           	callstack 0
   895                           
   896                           ; 4 bytes @ 0x88
   897   000188                     	ds	4
   898   00018C                     powf@s2:
   899                           	callstack 0
   900                           
   901                           ; 4 bytes @ 0x8C
   902   00018C                     	ds	4
   903   000190                     powf@iy:
   904                           	callstack 0
   905                           
   906                           ; 4 bytes @ 0x90
   907   000190                     	ds	4
   908   000194                     powf@is:
   909                           	callstack 0
   910                           
   911                           ; 4 bytes @ 0x94
   912   000194                     	ds	4
   913   000198                     _powf$2924:
   914                           	callstack 0
   915                           
   916                           ; 4 bytes @ 0x98
   917   000198                     	ds	4
   918   00019C                     powf@p_h:
   919                           	callstack 0
   920                           
   921                           ; 4 bytes @ 0x9C
   922   00019C                     	ds	4
   923   0001A0                     powf@k:
   924                           	callstack 0
   925                           
   926                           ; 4 bytes @ 0xA0
   927   0001A0                     	ds	4
   928   0001A4                     _powf$2921:
   929                           	callstack 0
   930                           
   931                           ; 4 bytes @ 0xA4
   932   0001A4                     	ds	4
   933   0001A8                     powf@ix:
   934                           	callstack 0
   935                           
   936                           ; 4 bytes @ 0xA8
   937   0001A8                     	ds	4
   938   0001AC                     powf@j:
   939                           	callstack 0
   940                           
   941                           ; 4 bytes @ 0xAC
   942   0001AC                     	ds	4
   943   0001B0                     powf@t:
   944                           	callstack 0
   945                           
   946                           ; 4 bytes @ 0xB0
   947   0001B0                     	ds	4
   948   0001B4                     powf@z:
   949                           	callstack 0
   950                           
   951                           ; 4 bytes @ 0xB4
   952   0001B4                     	ds	4
   953   0001B8                     powf@__xc8_float_word:
   954                           	callstack 0
   955                           
   956                           ; 4 bytes @ 0xB8
   957   0001B8                     	ds	4
   958   0001BC                     main@MATH_STR:
   959                           	callstack 0
   960                           
   961                           ; 60 bytes @ 0xBC
   962   0001BC                     	ds	60
   963   0001F8                     main@result:
   964                           	callstack 0
   965                           
   966                           ; 4 bytes @ 0xF8
   967   0001F8                     	ds	4
   968   0001FC                     main@Calculate_flag:
   969                           	callstack 0
   970                           
   971                           ; 1 bytes @ 0xFC
   972   0001FC                     	ds	1
   973   0001FD                     main@length:
   974                           	callstack 0
   975                           
   976                           ; 1 bytes @ 0xFD
   977   0001FD                     	ds	1
   978                           
   979                           	psect	cstackBANK0
   980   000080                     __pcstackBANK0:
   981                           	callstack 0
   982   000080                     ?_powf:
   983                           	callstack 0
   984   000080                     ?_strtof:
   985                           	callstack 0
   986   000080                     efgtoa@fp:
   987                           	callstack 0
   988   000080                     strtof@s:
   989                           	callstack 0
   990   000080                     powf@x:
   991                           	callstack 0
   992                           
   993                           ; 4 bytes @ 0x0
   994   000080                     	ds	2
   995   000082                     strtof@res:
   996                           	callstack 0
   997   000082                     efgtoa@f:
   998                           	callstack 0
   999                           
  1000                           ; 4 bytes @ 0x2
  1001   000082                     	ds	2
  1002   000084                     ??_strtof:
  1003   000084                     powf@y:
  1004                           	callstack 0
  1005                           
  1006                           ; 4 bytes @ 0x4
  1007   000084                     	ds	2
  1008   000086                     efgtoa@c:
  1009                           	callstack 0
  1010                           
  1011                           ; 1 bytes @ 0x6
  1012   000086                     	ds	1
  1013   000087                     ??_efgtoa:
  1014                           
  1015                           ; 1 bytes @ 0x7
  1016   000087                     	ds	1
  1017   000088                     ??_powf:
  1018                           
  1019                           ; 1 bytes @ 0x8
  1020   000088                     	ds	1
  1021   000089                     efgtoa@ne:
  1022                           	callstack 0
  1023                           
  1024                           ; 2 bytes @ 0x9
  1025   000089                     	ds	1
  1026   00008A                     strtof@digit:
  1027                           	callstack 0
  1028                           
  1029                           ; 1 bytes @ 0xA
  1030   00008A                     	ds	1
  1031   00008B                     strtof@flags:
  1032                           	callstack 0
  1033   00008B                     efgtoa@p:
  1034                           	callstack 0
  1035                           
  1036                           ; 2 bytes @ 0xB
  1037   00008B                     	ds	1
  1038   00008C                     strtof@expon:
  1039                           	callstack 0
  1040                           
  1041                           ; 2 bytes @ 0xC
  1042   00008C                     	ds	1
  1043   00008D                     efgtoa@t:
  1044                           	callstack 0
  1045                           
  1046                           ; 2 bytes @ 0xD
  1047   00008D                     	ds	1
  1048   00008E                     strtof@eexp:
  1049                           	callstack 0
  1050                           
  1051                           ; 2 bytes @ 0xE
  1052   00008E                     	ds	1
  1053   00008F                     _efgtoa$2267:
  1054                           	callstack 0
  1055                           
  1056                           ; 2 bytes @ 0xF
  1057   00008F                     	ds	1
  1058   000090                     strtof@_u:
  1059                           	callstack 0
  1060                           
  1061                           ; 4 bytes @ 0x10
  1062   000090                     	ds	1
  1063   000091                     ?_Calculate:
  1064                           	callstack 0
  1065   000091                     efgtoa@pp:
  1066                           	callstack 0
  1067   000091                     Calculate@n1:
  1068                           	callstack 0
  1069                           
  1070                           ; 4 bytes @ 0x11
  1071   000091                     	ds	1
  1072   000092                     efgtoa@mode:
  1073                           	callstack 0
  1074                           
  1075                           ; 1 bytes @ 0x12
  1076   000092                     	ds	1
  1077   000093                     efgtoa@nmode:
  1078                           	callstack 0
  1079                           
  1080                           ; 1 bytes @ 0x13
  1081   000093                     	ds	1
  1082   000094                     strtof@i:
  1083                           	callstack 0
  1084   000094                     efgtoa@d:
  1085                           	callstack 0
  1086                           
  1087                           ; 2 bytes @ 0x14
  1088   000094                     	ds	1
  1089   000095                     ?_atof:
  1090                           	callstack 0
  1091   000095                     atof@s:
  1092                           	callstack 0
  1093   000095                     Calculate@n2:
  1094                           	callstack 0
  1095                           
  1096                           ; 4 bytes @ 0x15
  1097   000095                     	ds	1
  1098   000096                     efgtoa@m:
  1099                           	callstack 0
  1100                           
  1101                           ; 2 bytes @ 0x16
  1102   000096                     	ds	2
  1103   000098                     efgtoa@e:
  1104                           	callstack 0
  1105                           
  1106                           ; 2 bytes @ 0x18
  1107   000098                     	ds	1
  1108   000099                     Calculate@op:
  1109                           	callstack 0
  1110                           
  1111                           ; 1 bytes @ 0x19
  1112   000099                     	ds	1
  1113   00009A                     ??_Calculate:
  1114   00009A                     efgtoa@ou:
  1115                           	callstack 0
  1116                           
  1117                           ; 4 bytes @ 0x1A
  1118   00009A                     	ds	2
  1119   00009C                     ?_HandleString:
  1120                           	callstack 0
  1121   00009C                     HandleString@str:
  1122                           	callstack 0
  1123                           
  1124                           ; 2 bytes @ 0x1C
  1125   00009C                     	ds	2
  1126   00009E                     efgtoa@w:
  1127                           	callstack 0
  1128                           
  1129                           ; 2 bytes @ 0x1E
  1130   00009E                     	ds	2
  1131   0000A0                     efgtoa@h:
  1132                           	callstack 0
  1133                           
  1134                           ; 4 bytes @ 0x20
  1135   0000A0                     	ds	1
  1136   0000A1                     HandleString@FIRST_NUM:
  1137                           	callstack 0
  1138                           
  1139                           ; 1 bytes @ 0x21
  1140   0000A1                     	ds	1
  1141   0000A2                     HandleString@numberCaught:
  1142                           	callstack 0
  1143                           
  1144                           ; 1 bytes @ 0x22
  1145   0000A2                     	ds	1
  1146   0000A3                     HandleString@temp:
  1147                           	callstack 0
  1148                           
  1149                           ; 4 bytes @ 0x23
  1150   0000A3                     	ds	1
  1151   0000A4                     efgtoa@l:
  1152                           	callstack 0
  1153                           
  1154                           ; 4 bytes @ 0x24
  1155   0000A4                     	ds	3
  1156   0000A7                     HandleString@president_flag:
  1157                           	callstack 0
  1158                           
  1159                           ; 1 bytes @ 0x27
  1160   0000A7                     	ds	1
  1161   0000A8                     HandleString@op_Handle_Power:
  1162                           	callstack 0
  1163   0000A8                     efgtoa@i:
  1164                           	callstack 0
  1165                           
  1166                           ; 2 bytes @ 0x28
  1167   0000A8                     	ds	1
  1168   0000A9                     HandleString@op2:
  1169                           	callstack 0
  1170                           
  1171                           ; 1 bytes @ 0x29
  1172   0000A9                     	ds	1
  1173   0000AA                     efgtoa@sign:
  1174                           	callstack 0
  1175   0000AA                     HandleString@num2:
  1176                           	callstack 0
  1177                           
  1178                           ; 4 bytes @ 0x2A
  1179   0000AA                     	ds	1
  1180   0000AB                     efgtoa@g:
  1181                           	callstack 0
  1182                           
  1183                           ; 4 bytes @ 0x2B
  1184   0000AB                     	ds	3
  1185   0000AE                     HandleString@num1:
  1186                           	callstack 0
  1187                           
  1188                           ; 4 bytes @ 0x2E
  1189   0000AE                     	ds	1
  1190   0000AF                     efgtoa@n:
  1191                           	callstack 0
  1192                           
  1193                           ; 2 bytes @ 0x2F
  1194   0000AF                     	ds	2
  1195   0000B1                     efgtoa@u:
  1196                           	callstack 0
  1197                           
  1198                           ; 4 bytes @ 0x31
  1199   0000B1                     	ds	1
  1200   0000B2                     HandleString@op:
  1201                           	callstack 0
  1202                           
  1203                           ; 1 bytes @ 0x32
  1204   0000B2                     	ds	3
  1205   0000B5                     vfpfcnvrt@fp:
  1206                           	callstack 0
  1207                           
  1208                           ; 2 bytes @ 0x35
  1209   0000B5                     	ds	2
  1210   0000B7                     vfpfcnvrt@fmt:
  1211                           	callstack 0
  1212                           
  1213                           ; 2 bytes @ 0x37
  1214   0000B7                     	ds	2
  1215   0000B9                     vfpfcnvrt@ap:
  1216                           	callstack 0
  1217                           
  1218                           ; 2 bytes @ 0x39
  1219   0000B9                     	ds	2
  1220   0000BB                     ??_vfpfcnvrt:
  1221                           
  1222                           ; 1 bytes @ 0x3B
  1223   0000BB                     	ds	3
  1224   0000BE                     vfpfcnvrt@done:
  1225                           	callstack 0
  1226                           
  1227                           ; 2 bytes @ 0x3E
  1228   0000BE                     	ds	2
  1229   0000C0                     vfpfcnvrt@convarg:
  1230                           	callstack 0
  1231                           
  1232                           ; 8 bytes @ 0x40
  1233   0000C0                     	ds	8
  1234   0000C8                     vfpfcnvrt@c:
  1235                           	callstack 0
  1236                           
  1237                           ; 1 bytes @ 0x48
  1238   0000C8                     	ds	1
  1239   0000C9                     vfpfcnvrt@cp:
  1240                           	callstack 0
  1241                           
  1242                           ; 2 bytes @ 0x49
  1243   0000C9                     	ds	2
  1244   0000CB                     ?_vfprintf:
  1245                           	callstack 0
  1246   0000CB                     vfprintf@fp:
  1247                           	callstack 0
  1248                           
  1249                           ; 2 bytes @ 0x4B
  1250   0000CB                     	ds	2
  1251   0000CD                     vfprintf@fmt:
  1252                           	callstack 0
  1253                           
  1254                           ; 2 bytes @ 0x4D
  1255   0000CD                     	ds	2
  1256   0000CF                     vfprintf@ap:
  1257                           	callstack 0
  1258                           
  1259                           ; 2 bytes @ 0x4F
  1260   0000CF                     	ds	2
  1261   0000D1                     vfprintf@cfmt:
  1262                           	callstack 0
  1263                           
  1264                           ; 2 bytes @ 0x51
  1265   0000D1                     	ds	2
  1266   0000D3                     ?_sprintf:
  1267                           	callstack 0
  1268   0000D3                     sprintf@s:
  1269                           	callstack 0
  1270                           
  1271                           ; 2 bytes @ 0x53
  1272   0000D3                     	ds	2
  1273   0000D5                     sprintf@fmt:
  1274                           	callstack 0
  1275                           
  1276                           ; 2 bytes @ 0x55
  1277   0000D5                     	ds	6
  1278   0000DB                     sprintf@ap:
  1279                           	callstack 0
  1280                           
  1281                           ; 2 bytes @ 0x5B
  1282   0000DB                     	ds	2
  1283   0000DD                     sprintf@f:
  1284                           	callstack 0
  1285                           
  1286                           ; 11 bytes @ 0x5D
  1287   0000DD                     	ds	11
  1288   0000E8                     convert_int32_to_string@value:
  1289                           	callstack 0
  1290   0000E8                     convert_float_to_string@value:
  1291                           	callstack 0
  1292                           
  1293                           ; 4 bytes @ 0x68
  1294   0000E8                     	ds	4
  1295   0000EC                     convert_int32_to_string@str:
  1296                           	callstack 0
  1297   0000EC                     convert_float_to_string@str:
  1298                           	callstack 0
  1299                           
  1300                           ; 2 bytes @ 0x6C
  1301   0000EC                     	ds	2
  1302   0000EE                     convert_int32_to_string@Temp_String:
  1303                           	callstack 0
  1304                           
  1305                           ; 12 bytes @ 0x6E
  1306   0000EE                     	ds	12
  1307   0000FA                     convert_int32_to_string@DataCounter:
  1308                           	callstack 0
  1309                           
  1310                           ; 1 bytes @ 0x7A
  1311   0000FA                     	ds	1
  1312                           
  1313                           	psect	cstackCOMRAM
  1314   000001                     __pcstackCOMRAM:
  1315                           	callstack 0
  1316   000001                     ??_InterruptMananger:
  1317   000001                     
  1318                           ; 1 bytes @ 0x0
  1319   000001                     	ds	2
  1320   000003                     ?_strlen:
  1321                           	callstack 0
  1322   000003                     ?_isspace:
  1323                           	callstack 0
  1324   000003                     ?_isdigit:
  1325                           	callstack 0
  1326   000003                     ?___fpclassifyf:
  1327                           	callstack 0
  1328   000003                     ?_islower:
  1329                           	callstack 0
  1330   000003                     ?___wmul:
  1331                           	callstack 0
  1332   000003                     ?_ceilf:
  1333                           	callstack 0
  1334   000003                     ?_labs:
  1335                           	callstack 0
  1336   000003                     ?_fabsf:
  1337                           	callstack 0
  1338   000003                     ?_nanf:
  1339                           	callstack 0
  1340   000003                     ?___lmul:
  1341                           	callstack 0
  1342   000003                     ?___flneg:
  1343                           	callstack 0
  1344   000003                     ?___xxtofl:
  1345                           	callstack 0
  1346   000003                     ?___aodiv:
  1347                           	callstack 0
  1348   000003                     ?___aomod:
  1349                           	callstack 0
  1350   000003                     is_num@x:
  1351                           	callstack 0
  1352   000003                     is_op@x:
  1353                           	callstack 0
  1354   000003                     is_power@x:
  1355                           	callstack 0
  1356   000003                     GPIO_pin_write@_pin_cfg:
  1357                           	callstack 0
  1358   000003                     GPIO_pin_read_logic@_pin_cfg:
  1359                           	callstack 0
  1360   000003                     MSSP_I2C_Master_Send_Start@_i2c:
  1361                           	callstack 0
  1362   000003                     MSSP_I2C_Master_Send_Stop@_i2c:
  1363                           	callstack 0
  1364   000003                     MSSP_I2C_Master_Write_Blocking@_i2c:
  1365                           	callstack 0
  1366   000003                     Slave_cfg@_i2c:
  1367                           	callstack 0
  1368   000003                     I2C_Module_Interrupt_cfg@_i2c:
  1369                           	callstack 0
  1370   000003                     INTx_Enable@pin:
  1371                           	callstack 0
  1372   000003                     INTx_Disable@pin:
  1373                           	callstack 0
  1374   000003                     INTx_Set_Polarity@pin:
  1375                           	callstack 0
  1376   000003                     INTx_Clear_Flag@pin:
  1377                           	callstack 0
  1378   000003                     INTx_Set_Priority@pin:
  1379                           	callstack 0
  1380   000003                     INT0_SetHandler@InterruptHandler:
  1381                           	callstack 0
  1382   000003                     INT1_SetHandler@InterruptHandler:
  1383                           	callstack 0
  1384   000003                     INT2_SetHandler@InterruptHandler:
  1385                           	callstack 0
  1386   000003                     String_Remove_Char@str:
  1387                           	callstack 0
  1388   000003                     ___wmul@multiplier:
  1389                           	callstack 0
  1390   000003                     isdigit@c:
  1391                           	callstack 0
  1392   000003                     isspace@c:
  1393                           	callstack 0
  1394   000003                     memset@dest:
  1395                           	callstack 0
  1396   000003                     memcpy@d1:
  1397                           	callstack 0
  1398   000003                     fputc@c:
  1399                           	callstack 0
  1400   000003                     nanf@s:
  1401                           	callstack 0
  1402   000003                     strcpy@dest:
  1403                           	callstack 0
  1404   000003                     strlen@s:
  1405                           	callstack 0
  1406   000003                     islower@c:
  1407                           	callstack 0
  1408   000003                     ___lmul@multiplier:
  1409                           	callstack 0
  1410   000003                     ___flneg@f1:
  1411                           	callstack 0
  1412   000003                     ___xxtofl@val:
  1413                           	callstack 0
  1414   000003                     ceilf@x:
  1415                           	callstack 0
  1416   000003                     ___fpclassifyf@x:
  1417                           	callstack 0
  1418   000003                     labs@a:
  1419                           	callstack 0
  1420   000003                     fabsf@x:
  1421                           	callstack 0
  1422   000003                     ___aodiv@dividend:
  1423                           	callstack 0
  1424   000003                     ___aomod@dividend:
  1425                           	callstack 0
  1426                           
  1427                           ; 8 bytes @ 0x2
  1428   000003                     	ds	2
  1429   000005                     ??_INTx_Disable:
  1430   000005                     ??_INTx_Clear_Flag:
  1431   000005                     ??_INTx_Set_Polarity:
  1432   000005                     ??_INTx_Enable:
  1433   000005                     ??_isspace:
  1434   000005                     ??_isdigit:
  1435   000005                     ??_islower:
  1436   000005                     GPIO_pin_write@logic:
  1437                           	callstack 0
  1438   000005                     MSSP_I2C_Master_Send_Start@ret:
  1439                           	callstack 0
  1440   000005                     MSSP_I2C_Master_Send_Stop@ret:
  1441                           	callstack 0
  1442   000005                     MSSP_I2C_Master_Write_Blocking@Data:
  1443                           	callstack 0
  1444   000005                     I2C_Module_Interrupt_cfg@ret:
  1445                           	callstack 0
  1446   000005                     INTx_Set_Priority@ret:
  1447                           	callstack 0
  1448   000005                     INT0_SetHandler@ret:
  1449                           	callstack 0
  1450   000005                     INT1_SetHandler@ret:
  1451                           	callstack 0
  1452   000005                     INT2_SetHandler@ret:
  1453                           	callstack 0
  1454   000005                     String_Remove_Char@length:
  1455                           	callstack 0
  1456   000005                     GPIO_pin_read_logic@logic:
  1457                           	callstack 0
  1458   000005                     ___wmul@multiplicand:
  1459                           	callstack 0
  1460   000005                     memset@c:
  1461                           	callstack 0
  1462   000005                     memcpy@s1:
  1463                           	callstack 0
  1464   000005                     fputc@fp:
  1465                           	callstack 0
  1466   000005                     strcpy@src:
  1467                           	callstack 0
  1468   000005                     strlen@a:
  1469                           	callstack 0
  1470                           
  1471                           ; 2 bytes @ 0x4
  1472   000005                     	ds	1
  1473   000006                     ??_GPIO_pin_write:
  1474   000006                     ??_String_Remove_Char:
  1475   000006                     is_power@temp:
  1476                           	callstack 0
  1477   000006                     MSSP_I2C_Master_Write_Blocking@ACK_State:
  1478                           	callstack 0
  1479   000006                     INTx_SetHandler@pin:
  1480                           	callstack 0
  1481                           
  1482                           ; 2 bytes @ 0x5
  1483   000006                     	ds	1
  1484   000007                     ??_GPIO_pin_read_logic:
  1485   000007                     ??_ceilf:
  1486   000007                     ??_fputc:
  1487   000007                     ??___fpclassifyf:
  1488   000007                     ??_labs:
  1489   000007                     ??___xxtofl:
  1490   000007                     ?_isxdigit:
  1491                           	callstack 0
  1492   000007                     ?_toupper:
  1493                           	callstack 0
  1494   000007                     INTx_Enable@ret:
  1495                           	callstack 0
  1496   000007                     INTx_Disable@ret:
  1497                           	callstack 0
  1498   000007                     INTx_Set_Polarity@ret:
  1499                           	callstack 0
  1500   000007                     INTx_Clear_Flag@ret:
  1501                           	callstack 0
  1502   000007                     _isspace$2115:
  1503                           	callstack 0
  1504   000007                     ___wmul@product:
  1505                           	callstack 0
  1506   000007                     memset@n:
  1507                           	callstack 0
  1508   000007                     memcpy@n:
  1509                           	callstack 0
  1510   000007                     strcpy@s:
  1511                           	callstack 0
  1512   000007                     strncat@d:
  1513                           	callstack 0
  1514   000007                     isxdigit@c:
  1515                           	callstack 0
  1516   000007                     toupper@c:
  1517                           	callstack 0
  1518   000007                     ___lmul@multiplicand:
  1519                           	callstack 0
  1520   000007                     fabsf@u:
  1521                           	callstack 0
  1522   000007                     nanf@u:
  1523                           	callstack 0
  1524                           
  1525                           ; 4 bytes @ 0x6
  1526   000007                     	ds	1
  1527   000008                     ??_INTx_SetHandler:
  1528   000008                     MSSP_I2C_Master_Write_Blocking@ret:
  1529                           	callstack 0
  1530   000008                     SyntaxErr@str:
  1531                           	callstack 0
  1532                           
  1533                           ; 2 bytes @ 0x7
  1534   000008                     	ds	1
  1535   000009                     ??_memset:
  1536   000009                     ??_isxdigit:
  1537   000009                     ??_toupper:
  1538   000009                     ?_atoi:
  1539                           	callstack 0
  1540   000009                     memcpy@tmp:
  1541                           	callstack 0
  1542   000009                     I2C_Master_Transmit@_i2c:
  1543                           	callstack 0
  1544   000009                     atoi@s:
  1545                           	callstack 0
  1546   000009                     strcpy@d:
  1547                           	callstack 0
  1548   000009                     strncat@s:
  1549                           	callstack 0
  1550                           
  1551                           ; 2 bytes @ 0x8
  1552   000009                     	ds	1
  1553   00000A                     ??_SyntaxErr:
  1554   00000A                     memcpy@d:
  1555                           	callstack 0
  1556                           
  1557                           ; 2 bytes @ 0x9
  1558   00000A                     	ds	1
  1559   00000B                     ??_atoi:
  1560   00000B                     I2C_Master_Transmit@Address:
  1561                           	callstack 0
  1562   00000B                     ___xxtofl@sign:
  1563                           	callstack 0
  1564   00000B                     memset@k:
  1565                           	callstack 0
  1566   00000B                     ___fpclassifyf@e:
  1567                           	callstack 0
  1568   00000B                     strncat@n:
  1569                           	callstack 0
  1570   00000B                     ___lmul@product:
  1571                           	callstack 0
  1572   00000B                     ___aodiv@divisor:
  1573                           	callstack 0
  1574   00000B                     ___aomod@divisor:
  1575                           	callstack 0
  1576                           
  1577                           ; 8 bytes @ 0xA
  1578   00000B                     	ds	1
  1579   00000C                     GPIO_pin_write@ret:
  1580                           	callstack 0
  1581   00000C                     GPIO_pin_read_logic@ret:
  1582                           	callstack 0
  1583   00000C                     I2C_Master_Transmit@Length:
  1584                           	callstack 0
  1585   00000C                     ___xxtofl@exp:
  1586                           	callstack 0
  1587   00000C                     memcpy@s:
  1588                           	callstack 0
  1589   00000C                     fputs@s:
  1590                           	callstack 0
  1591                           
  1592                           ; 2 bytes @ 0xB
  1593   00000C                     	ds	1
  1594   00000D                     _isxdigit$2580:
  1595                           	callstack 0
  1596   00000D                     SyntaxErr@length:
  1597                           	callstack 0
  1598   00000D                     keypad_get_val@keypad:
  1599                           	callstack 0
  1600   00000D                     GPIO_pin_dir_init@_pin_cfg:
  1601                           	callstack 0
  1602   00000D                     I2C_Master_Transmit@str:
  1603                           	callstack 0
  1604   00000D                     String_Append_Char@str:
  1605                           	callstack 0
  1606   00000D                     memset@s:
  1607                           	callstack 0
  1608   00000D                     ___xxtofl@arg:
  1609                           	callstack 0
  1610   00000D                     ceilf@m:
  1611                           	callstack 0
  1612   00000D                     ___fpclassifyf@u:
  1613                           	callstack 0
  1614                           
  1615                           ; 4 bytes @ 0xC
  1616   00000D                     	ds	1
  1617   00000E                     atoi@neg:
  1618                           	callstack 0
  1619   00000E                     fputs@fp:
  1620                           	callstack 0
  1621                           
  1622                           ; 2 bytes @ 0xD
  1623   00000E                     	ds	1
  1624   00000F                     ??_GPIO_pin_dir_init:
  1625   00000F                     String_Append_Char@Data:
  1626                           	callstack 0
  1627   00000F                     SyntaxErr@temp:
  1628                           	callstack 0
  1629   00000F                     keypad_get_val@val:
  1630                           	callstack 0
  1631   00000F                     I2C_Master_Transmit@ACK_State:
  1632                           	callstack 0
  1633                           
  1634                           ; 2 bytes @ 0xE
  1635   00000F                     	ds	1
  1636   000010                     fputs@c:
  1637                           	callstack 0
  1638   000010                     atoi@n:
  1639                           	callstack 0
  1640                           
  1641                           ; 2 bytes @ 0xF
  1642   000010                     	ds	1
  1643   000011                     ??_keypad_get_val:
  1644   000011                     ?___fladd:
  1645                           	callstack 0
  1646   000011                     I2C_Master_Transmit@ctr:
  1647                           	callstack 0
  1648   000011                     ceilf@e:
  1649                           	callstack 0
  1650   000011                     fputs@i:
  1651                           	callstack 0
  1652   000011                     ___fladd@b:
  1653                           	callstack 0
  1654                           
  1655                           ; 4 bytes @ 0x10
  1656   000011                     	ds	1
  1657   000012                     I2C_Master_Transmit@ret:
  1658                           	callstack 0
  1659   000012                     MathError@str:
  1660                           	callstack 0
  1661                           
  1662                           ; 2 bytes @ 0x11
  1663   000012                     	ds	1
  1664   000013                     keypad_get_val@ret:
  1665                           	callstack 0
  1666   000013                     I2C_Master_Transmit@ack:
  1667                           	callstack 0
  1668   000013                     ___aodiv@counter:
  1669                           	callstack 0
  1670   000013                     ___aomod@counter:
  1671                           	callstack 0
  1672   000013                     pad@fp:
  1673                           	callstack 0
  1674   000013                     ceilf@u:
  1675                           	callstack 0
  1676                           
  1677                           ; 4 bytes @ 0x12
  1678   000013                     	ds	1
  1679   000014                     keypad_get_val@row_counter_1:
  1680                           	callstack 0
  1681   000014                     ___aodiv@sign:
  1682                           	callstack 0
  1683   000014                     ___aomod@sign:
  1684                           	callstack 0
  1685   000014                     IO_expander_write@lcd:
  1686                           	callstack 0
  1687                           
  1688                           ; 2 bytes @ 0x13
  1689   000014                     	ds	1
  1690   000015                     ?_abs:
  1691                           	callstack 0
  1692   000015                     keypad_get_val@row_counter_2:
  1693                           	callstack 0
  1694   000015                     GPIO_pin_dir_init@ret:
  1695                           	callstack 0
  1696   000015                     MathError@temp:
  1697                           	callstack 0
  1698   000015                     pad@buf:
  1699                           	callstack 0
  1700   000015                     abs@a:
  1701                           	callstack 0
  1702   000015                     ___fladd@a:
  1703                           	callstack 0
  1704   000015                     ___aodiv@quotient:
  1705                           	callstack 0
  1706                           
  1707                           ; 8 bytes @ 0x14
  1708   000015                     	ds	1
  1709   000016                     keypad_get_val@col_logic:
  1710                           	callstack 0
  1711   000016                     IO_expander_write@data:
  1712                           	callstack 0
  1713   000016                     GPIO_pin_init@_pin_cfg:
  1714                           	callstack 0
  1715   000016                     INTx_interrupt_init@pin:
  1716                           	callstack 0
  1717                           
  1718                           ; 2 bytes @ 0x15
  1719   000016                     	ds	1
  1720   000017                     ??_abs:
  1721   000017                     keypad_get_val@col_counter:
  1722                           	callstack 0
  1723   000017                     IO_expander_write@ret:
  1724                           	callstack 0
  1725   000017                     pad@p:
  1726                           	callstack 0
  1727                           
  1728                           ; 2 bytes @ 0x16
  1729   000017                     	ds	1
  1730   000018                     ??_GPIO_pin_init:
  1731   000018                     IO_expander_write@ack_St:
  1732                           	callstack 0
  1733   000018                     INTx_interrupt_init@ret:
  1734                           	callstack 0
  1735                           
  1736                           ; 1 bytes @ 0x17
  1737   000018                     	ds	1
  1738   000019                     ??___fladd:
  1739   000019                     ??_pad:
  1740   000019                     keypad_init@keypad:
  1741                           	callstack 0
  1742   000019                     lcd_send_4bits@lcd:
  1743                           	callstack 0
  1744                           
  1745                           ; 2 bytes @ 0x18
  1746   000019                     	ds	1
  1747   00001A                     pad@i:
  1748                           	callstack 0
  1749                           
  1750                           ; 2 bytes @ 0x19
  1751   00001A                     	ds	1
  1752   00001B                     ??_keypad_init:
  1753   00001B                     lcd_send_4bits@_data_command:
  1754                           	callstack 0
  1755                           
  1756                           ; 1 bytes @ 0x1A
  1757   00001B                     	ds	1
  1758   00001C                     lcd_send_command@lcd:
  1759                           	callstack 0
  1760   00001C                     lcd_send_char@lcd:
  1761                           	callstack 0
  1762   00001C                     pad@w:
  1763                           	callstack 0
  1764                           
  1765                           ; 2 bytes @ 0x1B
  1766   00001C                     	ds	1
  1767   00001D                     keypad_init@ret:
  1768                           	callstack 0
  1769   00001D                     ___fladd@signs:
  1770                           	callstack 0
  1771                           
  1772                           ; 1 bytes @ 0x1C
  1773   00001D                     	ds	1
  1774   00001E                     keypad_init@index:
  1775                           	callstack 0
  1776   00001E                     lcd_send_command@command:
  1777                           	callstack 0
  1778   00001E                     lcd_send_char@data:
  1779                           	callstack 0
  1780   00001E                     ___fladd@aexp:
  1781                           	callstack 0
  1782   00001E                     dtoa@fp:
  1783                           	callstack 0
  1784                           
  1785                           ; 2 bytes @ 0x1D
  1786   00001E                     	ds	1
  1787   00001F                     lcd_send_command@ret:
  1788                           	callstack 0
  1789   00001F                     lcd_send_char@ret:
  1790                           	callstack 0
  1791   00001F                     ___fladd@bexp:
  1792                           	callstack 0
  1793                           
  1794                           ; 1 bytes @ 0x1E
  1795   00001F                     	ds	1
  1796   000020                     ___fladd@grs:
  1797                           	callstack 0
  1798   000020                     lcd_init@lcd:
  1799                           	callstack 0
  1800   000020                     lcd_set_cursor@lcd:
  1801                           	callstack 0
  1802   000020                     dtoa@d:
  1803                           	callstack 0
  1804                           
  1805                           ; 8 bytes @ 0x1F
  1806   000020                     	ds	1
  1807   000021                     ?___flmul:
  1808                           	callstack 0
  1809   000021                     ___flmul@b:
  1810                           	callstack 0
  1811                           
  1812                           ; 4 bytes @ 0x20
  1813   000021                     	ds	1
  1814   000022                     ??_lcd_init:
  1815   000022                     lcd_set_cursor@row:
  1816                           	callstack 0
  1817                           
  1818                           ; 1 bytes @ 0x21
  1819   000022                     	ds	1
  1820   000023                     lcd_init@ret:
  1821                           	callstack 0
  1822   000023                     lcd_set_cursor@column:
  1823                           	callstack 0
  1824                           
  1825                           ; 1 bytes @ 0x22
  1826   000023                     	ds	1
  1827   000024                     ??_lcd_set_cursor:
  1828                           
  1829                           ; 1 bytes @ 0x23
  1830   000024                     	ds	1
  1831   000025                     ___flmul@a:
  1832                           	callstack 0
  1833                           
  1834                           ; 4 bytes @ 0x24
  1835   000025                     	ds	1
  1836   000026                     lcd_set_cursor@ret:
  1837                           	callstack 0
  1838                           
  1839                           ; 1 bytes @ 0x25
  1840   000026                     	ds	1
  1841   000027                     lcd_send_char_at@lcd:
  1842                           	callstack 0
  1843                           
  1844                           ; 2 bytes @ 0x26
  1845   000027                     	ds	1
  1846   000028                     ??_dtoa:
  1847                           
  1848                           ; 1 bytes @ 0x27
  1849   000028                     	ds	1
  1850   000029                     ??___flmul:
  1851   000029                     lcd_send_char_at@row:
  1852                           	callstack 0
  1853                           
  1854                           ; 1 bytes @ 0x28
  1855   000029                     	ds	1
  1856   00002A                     lcd_send_char_at@column:
  1857                           	callstack 0
  1858                           
  1859                           ; 1 bytes @ 0x29
  1860   00002A                     	ds	1
  1861   00002B                     lcd_send_char_at@data:
  1862                           	callstack 0
  1863                           
  1864                           ; 1 bytes @ 0x2A
  1865   00002B                     	ds	1
  1866   00002C                     lcd_send_char_at@ret:
  1867                           	callstack 0
  1868                           
  1869                           ; 1 bytes @ 0x2B
  1870   00002C                     	ds	1
  1871   00002D                     ___flmul@sign:
  1872                           	callstack 0
  1873   00002D                     lcd_send_data@lcd:
  1874                           	callstack 0
  1875                           
  1876                           ; 2 bytes @ 0x2C
  1877   00002D                     	ds	1
  1878   00002E                     ___flmul@aexp:
  1879                           	callstack 0
  1880                           
  1881                           ; 1 bytes @ 0x2D
  1882   00002E                     	ds	1
  1883   00002F                     lcd_send_data@row:
  1884                           	callstack 0
  1885   00002F                     ___flmul@grs:
  1886                           	callstack 0
  1887                           
  1888                           ; 4 bytes @ 0x2E
  1889   00002F                     	ds	1
  1890   000030                     lcd_send_data@column:
  1891                           	callstack 0
  1892   000030                     _dtoa$2236:
  1893                           	callstack 0
  1894                           
  1895                           ; 2 bytes @ 0x2F
  1896   000030                     	ds	1
  1897   000031                     lcd_send_data@str:
  1898                           	callstack 0
  1899                           
  1900                           ; 2 bytes @ 0x30
  1901   000031                     	ds	1
  1902   000032                     dtoa@p:
  1903                           	callstack 0
  1904                           
  1905                           ; 2 bytes @ 0x31
  1906   000032                     	ds	1
  1907   000033                     lcd_send_data@ret:
  1908                           	callstack 0
  1909   000033                     ___flmul@bexp:
  1910                           	callstack 0
  1911                           
  1912                           ; 1 bytes @ 0x32
  1913   000033                     	ds	1
  1914   000034                     dtoa@w:
  1915                           	callstack 0
  1916   000034                     ___flmul@prod:
  1917                           	callstack 0
  1918                           
  1919                           ; 4 bytes @ 0x33
  1920   000034                     	ds	2
  1921   000036                     dtoa@n:
  1922                           	callstack 0
  1923                           
  1924                           ; 8 bytes @ 0x35
  1925   000036                     	ds	2
  1926   000038                     ___flmul@temp:
  1927                           	callstack 0
  1928                           
  1929                           ; 2 bytes @ 0x37
  1930   000038                     	ds	2
  1931   00003A                     ?___flsub:
  1932                           	callstack 0
  1933   00003A                     ?_scalbnf:
  1934                           	callstack 0
  1935   00003A                     ___flsub@b:
  1936                           	callstack 0
  1937   00003A                     scalbnf@x:
  1938                           	callstack 0
  1939                           
  1940                           ; 4 bytes @ 0x39
  1941   00003A                     	ds	4
  1942   00003E                     dtoa@s:
  1943                           	callstack 0
  1944   00003E                     scalbnf@n:
  1945                           	callstack 0
  1946   00003E                     ___flsub@a:
  1947                           	callstack 0
  1948                           
  1949                           ; 4 bytes @ 0x3D
  1950   00003E                     	ds	1
  1951   00003F                     dtoa@i:
  1952                           	callstack 0
  1953                           
  1954                           ; 2 bytes @ 0x3E
  1955   00003F                     	ds	1
  1956   000040                     ??_scalbnf:
  1957                           
  1958                           ; 1 bytes @ 0x3F
  1959   000040                     	ds	2
  1960   000042                     ?___fldiv:
  1961                           	callstack 0
  1962   000042                     ___flge@ff1:
  1963                           	callstack 0
  1964   000042                     ___fldiv@b:
  1965                           	callstack 0
  1966                           
  1967                           ; 4 bytes @ 0x41
  1968   000042                     	ds	2
  1969   000044                     scalbnf@u:
  1970                           	callstack 0
  1971                           
  1972                           ; 4 bytes @ 0x43
  1973   000044                     	ds	2
  1974   000046                     ___flge@ff2:
  1975                           	callstack 0
  1976   000046                     ___fldiv@a:
  1977                           	callstack 0
  1978                           
  1979                           ; 4 bytes @ 0x45
  1980   000046                     	ds	2
  1981   000048                     scalbnf@y:
  1982                           	callstack 0
  1983                           
  1984                           ; 4 bytes @ 0x47
  1985   000048                     	ds	2
  1986   00004A                     ??___fldiv:
  1987   00004A                     ??___flge:
  1988                           
  1989                           ; 1 bytes @ 0x49
  1990   00004A                     	ds	4
  1991   00004E                     ?_sqrtf:
  1992                           	callstack 0
  1993   00004E                     ___fldiv@rem:
  1994                           	callstack 0
  1995   00004E                     sqrtf@x:
  1996                           	callstack 0
  1997                           
  1998                           ; 4 bytes @ 0x4D
  1999   00004E                     	ds	4
  2000   000052                     ??_sqrtf:
  2001   000052                     ___fldiv@sign:
  2002                           	callstack 0
  2003                           
  2004                           ; 1 bytes @ 0x51
  2005   000052                     	ds	1
  2006   000053                     ___fldiv@new_exp:
  2007                           	callstack 0
  2008                           
  2009                           ; 2 bytes @ 0x52
  2010   000053                     	ds	2
  2011   000055                     ___fldiv@grs:
  2012                           	callstack 0
  2013                           
  2014                           ; 4 bytes @ 0x54
  2015   000055                     	ds	2
  2016   000057                     sqrtf@s:
  2017                           	callstack 0
  2018                           
  2019                           ; 4 bytes @ 0x56
  2020   000057                     	ds	2
  2021   000059                     ___fldiv@bexp:
  2022                           	callstack 0
  2023                           
  2024                           ; 1 bytes @ 0x58
  2025   000059                     	ds	1
  2026   00005A                     ___fldiv@aexp:
  2027                           	callstack 0
  2028                           
  2029                           ; 1 bytes @ 0x59
  2030   00005A                     	ds	1
  2031   00005B                     ?_floorf:
  2032                           	callstack 0
  2033   00005B                     ?___fltol:
  2034                           	callstack 0
  2035   00005B                     ___fltol@f1:
  2036                           	callstack 0
  2037   00005B                     floorf@x:
  2038                           	callstack 0
  2039   00005B                     sqrtf@i:
  2040                           	callstack 0
  2041                           
  2042                           ; 4 bytes @ 0x5A
  2043   00005B                     	ds	4
  2044   00005F                     ??_floorf:
  2045   00005F                     ??___fltol:
  2046   00005F                     sqrtf@__xc8_float_word:
  2047                           	callstack 0
  2048                           
  2049                           ; 4 bytes @ 0x5E
  2050   00005F                     	ds	4
  2051   000063                     ___fltol@sign1:
  2052                           	callstack 0
  2053   000063                     sqrtf@q:
  2054                           	callstack 0
  2055                           
  2056                           ; 4 bytes @ 0x62
  2057   000063                     	ds	1
  2058   000064                     ___fltol@exp1:
  2059                           	callstack 0
  2060                           
  2061                           ; 1 bytes @ 0x63
  2062   000064                     	ds	1
  2063   000065                     Set_I2C_Master_cfg@_i2c:
  2064                           	callstack 0
  2065   000065                     floorf@m:
  2066                           	callstack 0
  2067                           
  2068                           ; 4 bytes @ 0x64
  2069   000065                     	ds	2
  2070   000067                     MSSP_I2C_Cfg@_i2c:
  2071                           	callstack 0
  2072   000067                     sqrtf@t:
  2073                           	callstack 0
  2074                           
  2075                           ; 4 bytes @ 0x66
  2076   000067                     	ds	2
  2077   000069                     ??_MSSP_I2C_Cfg:
  2078   000069                     floorf@e:
  2079                           	callstack 0
  2080                           
  2081                           ; 2 bytes @ 0x68
  2082   000069                     	ds	1
  2083   00006A                     MSSP_I2C_Cfg@ret:
  2084                           	callstack 0
  2085                           
  2086                           ; 1 bytes @ 0x69
  2087   00006A                     	ds	1
  2088   00006B                     MSSP_I2C_init@_i2c:
  2089                           	callstack 0
  2090   00006B                     floorf@u:
  2091                           	callstack 0
  2092   00006B                     sqrtf@z:
  2093                           	callstack 0
  2094                           
  2095                           ; 4 bytes @ 0x6A
  2096   00006B                     	ds	2
  2097   00006D                     MSSP_I2C_init@ret:
  2098                           	callstack 0
  2099                           
  2100                           ; 1 bytes @ 0x6C
  2101   00006D                     	ds	1
  2102   00006E                     Calculator_Init@ret:
  2103                           	callstack 0
  2104                           
  2105                           ; 1 bytes @ 0x6D
  2106   00006E                     	ds	1
  2107   00006F                     ___fleq@ff1:
  2108                           	callstack 0
  2109   00006F                     sqrtf@m:
  2110                           	callstack 0
  2111                           
  2112                           ; 4 bytes @ 0x6E
  2113   00006F                     	ds	4
  2114   000073                     ___fleq@ff2:
  2115                           	callstack 0
  2116   000073                     sqrtf@r:
  2117                           	callstack 0
  2118                           
  2119                           ; 4 bytes @ 0x72
  2120   000073                     	ds	4
  2121   000077                     ??___fleq:
  2122   000077                     sqrtf@ix:
  2123                           	callstack 0
  2124                           
  2125                           ; 4 bytes @ 0x76
  2126   000077                     	ds	4
  2127   00007B                     
  2128                           ; 1 bytes @ 0x7A
  2129 ;;
  2130 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2131 ;;
  2132 ;; *************** function _main *****************
  2133 ;; Defined at:
  2134 ;;		line 16 in file "Calculator.c"
  2135 ;; Parameters:    Size  Location     Type
  2136 ;;		None
  2137 ;; Auto vars:     Size  Location     Type
  2138 ;;  MATH_STR       60  188[BANK1 ] unsigned char [60]
  2139 ;;  result          4  248[BANK1 ] float 
  2140 ;;  length          1  253[BANK1 ] unsigned char 
  2141 ;;  Calculate_fl    1  252[BANK1 ] unsigned char 
  2142 ;; Return value:  Size  Location     Type
  2143 ;;                  1    wreg      void 
  2144 ;; Registers used:
  2145 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2146 ;; Tracked objects:
  2147 ;;		On entry : 0/0
  2148 ;;		On exit  : 0/0
  2149 ;;		Unchanged: 0/0
  2150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2152 ;;      Locals:         0       0      66       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2154 ;;      Totals:         0       0      66       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2155 ;;Total ram usage:       66 bytes
  2156 ;; Hardware stack levels required when called: 13
  2157 ;; This function calls:
  2158 ;;		_Calculator_Init
  2159 ;;		_Calculator_display_result
  2160 ;;		_HandleString
  2161 ;;		_MathError
  2162 ;;		_String_Append_Char
  2163 ;;		_String_Remove_Char
  2164 ;;		_SyntaxErr
  2165 ;;		_keypad_get_val
  2166 ;;		_lcd_send_command
  2167 ;;		_lcd_send_data
  2168 ;;		_memset
  2169 ;; This function is called by:
  2170 ;;		Startup code after reset
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174                           	psect	text0
  2175   007552                     __ptext0:
  2176                           	callstack 0
  2177   007552                     _main:
  2178                           	callstack 18
  2179   007552                     
  2180                           ;Calculator.c: 19:     Calculator_Init();
  2181   007552  ECC0  F051         	call	_Calculator_Init	;wreg free
  2182   007556                     
  2183                           ;Calculator.c: 23:     char MATH_STR[((uint8)60)];;Calculator.c: 25:     uint8 length = 
      +                          0;
  2184   007556  0E00               	movlw	0
  2185   007558  0101               	movlb	1	; () banked
  2186   00755A  6FFD               	movwf	main@length& (0+255),b
  2187   00755C                     
  2188                           ; BSR set to: 1
  2189                           ;Calculator.c: 27:     uint8 Calculate_flag = 0;
  2190   00755C  0E00               	movlw	0
  2191   00755E  6FFC               	movwf	main@Calculate_flag& (0+255),b
  2192   007560                     l13448:
  2193                           
  2194                           ; BSR set to: 1
  2195                           ;Calculator.c: 31:         keypad_get_val(&Keypad,&keypadder);
  2196   007560  0ECF               	movlw	low _Keypad
  2197   007562  6E0D               	movwf	keypad_get_val@keypad^0,c
  2198   007564  0E02               	movlw	high _Keypad
  2199   007566  6E0E               	movwf	(keypad_get_val@keypad+1)^0,c
  2200   007568  0EFE               	movlw	low _keypadder
  2201   00756A  6E0F               	movwf	keypad_get_val@val^0,c
  2202   00756C  0E01               	movlw	high _keypadder
  2203   00756E  6E10               	movwf	(keypad_get_val@val+1)^0,c
  2204   007570  ECEC  F045         	call	_keypad_get_val	;wreg free
  2205   007574                     
  2206                           ;Calculator.c: 33:         if((keypadder)&&(keypadder != '=')&&(keypadder != '#')){
  2207   007574  0101               	movlb	1	; () banked
  2208   007576  51FE               	movf	_keypadder& (0+255),w,b	;volatile
  2209   007578  B4D8               	btfsc	status,2,c
  2210   00757A  EFC1  F03A         	goto	u17401
  2211   00757E  EFC3  F03A         	goto	u17400
  2212   007582                     u17401:
  2213   007582  EF29  F03B         	goto	l13478
  2214   007586                     u17400:
  2215   007586                     
  2216                           ; BSR set to: 1
  2217   007586  0E3D               	movlw	61
  2218   007588  19FE               	xorwf	_keypadder& (0+255),w,b	;volatile
  2219   00758A  B4D8               	btfsc	status,2,c
  2220   00758C  EFCA  F03A         	goto	u17411
  2221   007590  EFCC  F03A         	goto	u17410
  2222   007594                     u17411:
  2223   007594  EF29  F03B         	goto	l13478
  2224   007598                     u17410:
  2225   007598                     
  2226                           ; BSR set to: 1
  2227   007598  0E23               	movlw	35
  2228   00759A  19FE               	xorwf	_keypadder& (0+255),w,b	;volatile
  2229   00759C  B4D8               	btfsc	status,2,c
  2230   00759E  EFD3  F03A         	goto	u17421
  2231   0075A2  EFD5  F03A         	goto	u17420
  2232   0075A6                     u17421:
  2233   0075A6  EF29  F03B         	goto	l13478
  2234   0075AA                     u17420:
  2235   0075AA                     
  2236                           ; BSR set to: 1
  2237                           ;Calculator.c: 35:             if(keypadder == ('@')){
  2238   0075AA  0E40               	movlw	64
  2239   0075AC  19FE               	xorwf	_keypadder& (0+255),w,b	;volatile
  2240   0075AE  A4D8               	btfss	status,2,c
  2241   0075B0  EFDC  F03A         	goto	u17431
  2242   0075B4  EFDE  F03A         	goto	u17430
  2243   0075B8                     u17431:
  2244   0075B8  EFF2  F03A         	goto	l13464
  2245   0075BC                     u17430:
  2246   0075BC                     
  2247                           ; BSR set to: 1
  2248                           ;Calculator.c: 36:                 String_Remove_Char(MATH_STR,length);
  2249   0075BC  0EBC               	movlw	low main@MATH_STR
  2250   0075BE  6E03               	movwf	String_Remove_Char@str^0,c
  2251   0075C0  0E01               	movlw	high main@MATH_STR
  2252   0075C2  6E04               	movwf	(String_Remove_Char@str+1)^0,c
  2253   0075C4  C1FD  F005         	movff	main@length,String_Remove_Char@length
  2254   0075C8  ECD6  F054         	call	_String_Remove_Char	;wreg free
  2255   0075CC                     
  2256                           ;Calculator.c: 37:                 length --;
  2257   0075CC  0101               	movlb	1	; () banked
  2258   0075CE  07FD               	decf	main@length& (0+255),f,b
  2259   0075D0                     
  2260                           ; BSR set to: 1
  2261                           ;Calculator.c: 38:                 lcd_send_command(&lcd, (0x01));
  2262   0075D0  0E85               	movlw	low _lcd
  2263   0075D2  6E1C               	movwf	lcd_send_command@lcd^0,c
  2264   0075D4  0E02               	movlw	high _lcd
  2265   0075D6  6E1D               	movwf	(lcd_send_command@lcd+1)^0,c
  2266   0075D8  0E01               	movlw	1
  2267   0075DA  6E1E               	movwf	lcd_send_command@command^0,c
  2268   0075DC  EC68  F053         	call	_lcd_send_command	;wreg free
  2269                           
  2270                           ;Calculator.c: 39:             }
  2271   0075E0  EF14  F03B         	goto	l13474
  2272   0075E4                     l13464:
  2273                           
  2274                           ; BSR set to: 1
  2275                           ;Calculator.c: 42:                 if(length < ((uint8)60) ){
  2276   0075E4  0E3C               	movlw	60
  2277   0075E6  61FD               	cpfslt	main@length& (0+255),b
  2278   0075E8  EFF8  F03A         	goto	u17441
  2279   0075EC  EFFA  F03A         	goto	u17440
  2280   0075F0                     u17441:
  2281   0075F0  EF14  F03B         	goto	l13474
  2282   0075F4                     u17440:
  2283   0075F4                     
  2284                           ; BSR set to: 1
  2285                           ;Calculator.c: 43:                     if(length == 0){lcd_send_command(&lcd, (0x01));}
  2286   0075F4  51FD               	movf	main@length& (0+255),w,b
  2287   0075F6  A4D8               	btfss	status,2,c
  2288   0075F8  EF00  F03B         	goto	u17451
  2289   0075FC  EF02  F03B         	goto	u17450
  2290   007600                     u17451:
  2291   007600  EF0A  F03B         	goto	l13470
  2292   007604                     u17450:
  2293   007604                     
  2294                           ; BSR set to: 1
  2295   007604  0E85               	movlw	low _lcd
  2296   007606  6E1C               	movwf	lcd_send_command@lcd^0,c
  2297   007608  0E02               	movlw	high _lcd
  2298   00760A  6E1D               	movwf	(lcd_send_command@lcd+1)^0,c
  2299   00760C  0E01               	movlw	1
  2300   00760E  6E1E               	movwf	lcd_send_command@command^0,c
  2301   007610  EC68  F053         	call	_lcd_send_command	;wreg free
  2302   007614                     l13470:
  2303                           
  2304                           ;Calculator.c: 44:                     String_Append_Char(MATH_STR,keypadder);
  2305   007614  0EBC               	movlw	low main@MATH_STR
  2306   007616  6E0D               	movwf	String_Append_Char@str^0,c
  2307   007618  0E01               	movlw	high main@MATH_STR
  2308   00761A  6E0E               	movwf	(String_Append_Char@str+1)^0,c
  2309   00761C  C1FE  F00F         	movff	_keypadder,String_Append_Char@Data	;volatile
  2310   007620  EC24  F056         	call	_String_Append_Char	;wreg free
  2311   007624                     
  2312                           ;Calculator.c: 45:                     length ++;
  2313   007624  0101               	movlb	1	; () banked
  2314   007626  2BFD               	incf	main@length& (0+255),f,b
  2315   007628                     l13474:
  2316                           
  2317                           ;Calculator.c: 49:             keypadder = 0;
  2318   007628  0E00               	movlw	0
  2319   00762A  0101               	movlb	1	; () banked
  2320   00762C  6FFE               	movwf	_keypadder& (0+255),b	;volatile
  2321                           
  2322                           ;Calculator.c: 50:             Calculate_flag = 1;
  2323   00762E  0E01               	movlw	1
  2324   007630  6FFC               	movwf	main@Calculate_flag& (0+255),b
  2325   007632                     
  2326                           ; BSR set to: 1
  2327                           ;Calculator.c: 51:             lcd_send_data(&lcd,1,1,MATH_STR);
  2328   007632  0E85               	movlw	low _lcd
  2329   007634  6E2D               	movwf	lcd_send_data@lcd^0,c
  2330   007636  0E02               	movlw	high _lcd
  2331   007638  6E2E               	movwf	(lcd_send_data@lcd+1)^0,c
  2332   00763A  0E01               	movlw	1
  2333   00763C  6E2F               	movwf	lcd_send_data@row^0,c
  2334   00763E  0E01               	movlw	1
  2335   007640  6E30               	movwf	lcd_send_data@column^0,c
  2336   007642  0EBC               	movlw	low main@MATH_STR
  2337   007644  6E31               	movwf	lcd_send_data@str^0,c
  2338   007646  0E01               	movlw	high main@MATH_STR
  2339   007648  6E32               	movwf	(lcd_send_data@str+1)^0,c
  2340   00764A  EC65  F049         	call	_lcd_send_data	;wreg free
  2341                           
  2342                           ;Calculator.c: 52:         }
  2343   00764E  EF62  F03B         	goto	l13492
  2344   007652                     l13478:
  2345                           
  2346                           ; BSR set to: 1
  2347   007652  0E23               	movlw	35
  2348   007654  19FE               	xorwf	_keypadder& (0+255),w,b	;volatile
  2349   007656  A4D8               	btfss	status,2,c
  2350   007658  EF30  F03B         	goto	u17461
  2351   00765C  EF32  F03B         	goto	u17460
  2352   007660                     u17461:
  2353   007660  EF4F  F03B         	goto	l13486
  2354   007664                     u17460:
  2355   007664                     
  2356                           ; BSR set to: 1
  2357                           ;Calculator.c: 56:             memset(MATH_STR,0,60);
  2358   007664  0EBC               	movlw	low main@MATH_STR
  2359   007666  6E03               	movwf	memset@dest^0,c
  2360   007668  0E01               	movlw	high main@MATH_STR
  2361   00766A  6E04               	movwf	(memset@dest+1)^0,c
  2362   00766C  0E00               	movlw	0
  2363   00766E  6E06               	movwf	(memset@c+1)^0,c
  2364   007670  0E00               	movlw	0
  2365   007672  6E05               	movwf	memset@c^0,c
  2366   007674  0E00               	movlw	0
  2367   007676  6E08               	movwf	(memset@n+1)^0,c
  2368   007678  0E3C               	movlw	60
  2369   00767A  6E07               	movwf	memset@n^0,c
  2370   00767C  EC70  F042         	call	_memset	;wreg free
  2371   007680                     
  2372                           ;Calculator.c: 57:             length = 0;
  2373   007680  0E00               	movlw	0
  2374   007682  0101               	movlb	1	; () banked
  2375   007684  6FFD               	movwf	main@length& (0+255),b
  2376   007686                     
  2377                           ; BSR set to: 1
  2378                           ;Calculator.c: 58:             keypadder = 0;
  2379   007686  0E00               	movlw	0
  2380   007688  6FFE               	movwf	_keypadder& (0+255),b	;volatile
  2381                           
  2382                           ;Calculator.c: 59:             lcd_send_command(&lcd, (0x01));
  2383   00768A  0E85               	movlw	low _lcd
  2384   00768C  6E1C               	movwf	lcd_send_command@lcd^0,c
  2385   00768E  0E02               	movlw	high _lcd
  2386   007690  6E1D               	movwf	(lcd_send_command@lcd+1)^0,c
  2387   007692  0E01               	movlw	1
  2388   007694  6E1E               	movwf	lcd_send_command@command^0,c
  2389   007696  EC68  F053         	call	_lcd_send_command	;wreg free
  2390                           
  2391                           ;Calculator.c: 60:             }
  2392   00769A  EF62  F03B         	goto	l13492
  2393   00769E                     l13486:
  2394                           
  2395                           ; BSR set to: 1
  2396   00769E  0E3D               	movlw	61
  2397   0076A0  19FE               	xorwf	_keypadder& (0+255),w,b	;volatile
  2398   0076A2  A4D8               	btfss	status,2,c
  2399   0076A4  EF56  F03B         	goto	u17471
  2400   0076A8  EF58  F03B         	goto	u17470
  2401   0076AC                     u17471:
  2402   0076AC  EF62  F03B         	goto	l13492
  2403   0076B0                     u17470:
  2404   0076B0                     
  2405                           ; BSR set to: 1
  2406                           ;Calculator.c: 63:             Calculate_flag = 1;
  2407   0076B0  0E01               	movlw	1
  2408   0076B2  6FFC               	movwf	main@Calculate_flag& (0+255),b
  2409   0076B4                     
  2410                           ; BSR set to: 1
  2411                           ;Calculator.c: 64:             lcd_send_command(&lcd, (0x01));
  2412   0076B4  0E85               	movlw	low _lcd
  2413   0076B6  6E1C               	movwf	lcd_send_command@lcd^0,c
  2414   0076B8  0E02               	movlw	high _lcd
  2415   0076BA  6E1D               	movwf	(lcd_send_command@lcd+1)^0,c
  2416   0076BC  0E01               	movlw	1
  2417   0076BE  6E1E               	movwf	lcd_send_command@command^0,c
  2418   0076C0  EC68  F053         	call	_lcd_send_command	;wreg free
  2419   0076C4                     l13492:
  2420                           
  2421                           ;Calculator.c: 68:         if(Calculate_flag){
  2422   0076C4  0101               	movlb	1	; () banked
  2423   0076C6  51FC               	movf	main@Calculate_flag& (0+255),w,b
  2424   0076C8  B4D8               	btfsc	status,2,c
  2425   0076CA  EF69  F03B         	goto	u17481
  2426   0076CE  EF6B  F03B         	goto	u17480
  2427   0076D2                     u17481:
  2428   0076D2  EFD7  F03B         	goto	l13512
  2429   0076D6                     u17480:
  2430   0076D6                     
  2431                           ; BSR set to: 1
  2432                           ;Calculator.c: 69:             if(SyntaxErr(MATH_STR) == (0)){
  2433   0076D6  0EBC               	movlw	low main@MATH_STR
  2434   0076D8  6E08               	movwf	SyntaxErr@str^0,c
  2435   0076DA  0E01               	movlw	high main@MATH_STR
  2436   0076DC  6E09               	movwf	(SyntaxErr@str+1)^0,c
  2437   0076DE  ECD6  F035         	call	_SyntaxErr	;wreg free
  2438   0076E2  0900               	iorlw	0
  2439   0076E4  A4D8               	btfss	status,2,c
  2440   0076E6  EF77  F03B         	goto	u17491
  2441   0076EA  EF79  F03B         	goto	u17490
  2442   0076EE                     u17491:
  2443   0076EE  EFBC  F03B         	goto	l13506
  2444   0076F2                     u17490:
  2445   0076F2                     
  2446                           ;Calculator.c: 70:                 if(MathError(MATH_STR) == (0)){
  2447   0076F2  0EBC               	movlw	low main@MATH_STR
  2448   0076F4  6E12               	movwf	MathError@str^0,c
  2449   0076F6  0E01               	movlw	high main@MATH_STR
  2450   0076F8  6E13               	movwf	(MathError@str+1)^0,c
  2451   0076FA  ECCE  F047         	call	_MathError	;wreg free
  2452   0076FE  0900               	iorlw	0
  2453   007700  A4D8               	btfss	status,2,c
  2454   007702  EF85  F03B         	goto	u17501
  2455   007706  EF87  F03B         	goto	u17500
  2456   00770A                     u17501:
  2457   00770A  EFA2  F03B         	goto	l13502
  2458   00770E                     u17500:
  2459   00770E                     
  2460                           ;Calculator.c: 71:                     result = HandleString(MATH_STR);
  2461   00770E  0EBC               	movlw	low main@MATH_STR
  2462   007710  0100               	movlb	0	; () banked
  2463   007712  6F9C               	movwf	HandleString@str& (0+255),b
  2464   007714  0E01               	movlw	high main@MATH_STR
  2465   007716  6F9D               	movwf	(HandleString@str+1)& (0+255),b
  2466   007718  EC9D  F037         	call	_HandleString	;wreg free
  2467   00771C  C09C  F1F8         	movff	?_HandleString,main@result
  2468   007720  C09D  F1F9         	movff	?_HandleString+1,main@result+1
  2469   007724  C09E  F1FA         	movff	?_HandleString+2,main@result+2
  2470   007728  C09F  F1FB         	movff	?_HandleString+3,main@result+3
  2471   00772C                     
  2472                           ;Calculator.c: 72:                     Calculator_display_result(result);
  2473   00772C  C1F8  F111         	movff	main@result,Calculator_display_result@Res
  2474   007730  C1F9  F112         	movff	main@result+1,Calculator_display_result@Res+1
  2475   007734  C1FA  F113         	movff	main@result+2,Calculator_display_result@Res+2
  2476   007738  C1FB  F114         	movff	main@result+3,Calculator_display_result@Res+3
  2477   00773C  EC94  F046         	call	_Calculator_display_result	;wreg free
  2478                           
  2479                           ;Calculator.c: 73:                 }
  2480   007740  EFD4  F03B         	goto	l13510
  2481   007744                     l13502:
  2482                           
  2483                           ;Calculator.c: 75:                     if(keypadder == '='){
  2484   007744  0E3D               	movlw	61
  2485   007746  0101               	movlb	1	; () banked
  2486   007748  19FE               	xorwf	_keypadder& (0+255),w,b	;volatile
  2487   00774A  A4D8               	btfss	status,2,c
  2488   00774C  EFAA  F03B         	goto	u17511
  2489   007750  EFAC  F03B         	goto	u17510
  2490   007754                     u17511:
  2491   007754  EFD4  F03B         	goto	l13510
  2492   007758                     u17510:
  2493   007758                     
  2494                           ; BSR set to: 1
  2495                           ;Calculator.c: 76:                     lcd_send_data(&lcd,4,1,"Math Error");
  2496   007758  0E85               	movlw	low _lcd
  2497   00775A  6E2D               	movwf	lcd_send_data@lcd^0,c
  2498   00775C  0E02               	movlw	high _lcd
  2499   00775E  6E2E               	movwf	(lcd_send_data@lcd+1)^0,c
  2500   007760  0E04               	movlw	4
  2501   007762  6E2F               	movwf	lcd_send_data@row^0,c
  2502   007764  0E01               	movlw	1
  2503   007766  6E30               	movwf	lcd_send_data@column^0,c
  2504   007768  0E9A               	movlw	low STR_5
  2505   00776A  6E31               	movwf	lcd_send_data@str^0,c
  2506   00776C  0E10               	movlw	high STR_5
  2507   00776E  6E32               	movwf	(lcd_send_data@str+1)^0,c
  2508   007770  EC65  F049         	call	_lcd_send_data	;wreg free
  2509   007774  EFD4  F03B         	goto	l13510
  2510   007778                     l13506:
  2511                           
  2512                           ;Calculator.c: 81:                 if(keypadder == '='){
  2513   007778  0E3D               	movlw	61
  2514   00777A  0101               	movlb	1	; () banked
  2515   00777C  19FE               	xorwf	_keypadder& (0+255),w,b	;volatile
  2516   00777E  A4D8               	btfss	status,2,c
  2517   007780  EFC4  F03B         	goto	u17521
  2518   007784  EFC6  F03B         	goto	u17520
  2519   007788                     u17521:
  2520   007788  EFD4  F03B         	goto	l13510
  2521   00778C                     u17520:
  2522   00778C                     
  2523                           ; BSR set to: 1
  2524                           ;Calculator.c: 82:                     lcd_send_data(&lcd,4,1,"Syntax Error");
  2525   00778C  0E85               	movlw	low _lcd
  2526   00778E  6E2D               	movwf	lcd_send_data@lcd^0,c
  2527   007790  0E02               	movlw	high _lcd
  2528   007792  6E2E               	movwf	(lcd_send_data@lcd+1)^0,c
  2529   007794  0E04               	movlw	4
  2530   007796  6E2F               	movwf	lcd_send_data@row^0,c
  2531   007798  0E01               	movlw	1
  2532   00779A  6E30               	movwf	lcd_send_data@column^0,c
  2533   00779C  0E8D               	movlw	low STR_6
  2534   00779E  6E31               	movwf	lcd_send_data@str^0,c
  2535   0077A0  0E10               	movlw	high STR_6
  2536   0077A2  6E32               	movwf	(lcd_send_data@str+1)^0,c
  2537   0077A4  EC65  F049         	call	_lcd_send_data	;wreg free
  2538   0077A8                     l13510:
  2539                           
  2540                           ;Calculator.c: 85:             Calculate_flag = 0;
  2541   0077A8  0E00               	movlw	0
  2542   0077AA  0101               	movlb	1	; () banked
  2543   0077AC  6FFC               	movwf	main@Calculate_flag& (0+255),b
  2544   0077AE                     l13512:
  2545                           
  2546                           ; BSR set to: 1
  2547                           ;Calculator.c: 90:         if(keypadder == '='){
  2548   0077AE  0E3D               	movlw	61
  2549   0077B0  19FE               	xorwf	_keypadder& (0+255),w,b	;volatile
  2550   0077B2  A4D8               	btfss	status,2,c
  2551   0077B4  EFDE  F03B         	goto	u17531
  2552   0077B8  EFE0  F03B         	goto	u17530
  2553   0077BC                     u17531:
  2554   0077BC  EFB0  F03A         	goto	l13448
  2555   0077C0                     u17530:
  2556   0077C0                     
  2557                           ; BSR set to: 1
  2558                           ;Calculator.c: 91:             memset(MATH_STR,0,60);
  2559   0077C0  0EBC               	movlw	low main@MATH_STR
  2560   0077C2  6E03               	movwf	memset@dest^0,c
  2561   0077C4  0E01               	movlw	high main@MATH_STR
  2562   0077C6  6E04               	movwf	(memset@dest+1)^0,c
  2563   0077C8  0E00               	movlw	0
  2564   0077CA  6E06               	movwf	(memset@c+1)^0,c
  2565   0077CC  0E00               	movlw	0
  2566   0077CE  6E05               	movwf	memset@c^0,c
  2567   0077D0  0E00               	movlw	0
  2568   0077D2  6E08               	movwf	(memset@n+1)^0,c
  2569   0077D4  0E3C               	movlw	60
  2570   0077D6  6E07               	movwf	memset@n^0,c
  2571   0077D8  EC70  F042         	call	_memset	;wreg free
  2572   0077DC                     
  2573                           ;Calculator.c: 92:             length = 0;
  2574   0077DC  0E00               	movlw	0
  2575   0077DE  0101               	movlb	1	; () banked
  2576   0077E0  6FFD               	movwf	main@length& (0+255),b
  2577   0077E2                     
  2578                           ; BSR set to: 1
  2579                           ;Calculator.c: 93:             keypadder = 0;
  2580   0077E2  0E00               	movlw	0
  2581   0077E4  6FFE               	movwf	_keypadder& (0+255),b	;volatile
  2582   0077E6  EFB0  F03A         	goto	l13448
  2583   0077EA  EF07  F000         	goto	start
  2584   0077EE                     __end_of_main:
  2585                           	callstack 0
  2586                           
  2587 ;; *************** function _keypad_get_val *****************
  2588 ;; Defined at:
  2589 ;;		line 49 in file "ECU_Layer/ECU_keypad/ECU_keypad.c"
  2590 ;; Parameters:    Size  Location     Type
  2591 ;;  keypad          2   12[COMRAM] PTR const struct .
  2592 ;;		 -> Keypad(8), 
  2593 ;;  val             2   14[COMRAM] PTR unsigned char 
  2594 ;;		 -> keypadder(1), 
  2595 ;; Auto vars:     Size  Location     Type
  2596 ;;  col_counter     1   22[COMRAM] unsigned char 
  2597 ;;  col_logic       1   21[COMRAM] enum E3401
  2598 ;;  row_counter_    1   20[COMRAM] unsigned char 
  2599 ;;  row_counter_    1   19[COMRAM] unsigned char 
  2600 ;;  ret             1   18[COMRAM] unsigned char 
  2601 ;; Return value:  Size  Location     Type
  2602 ;;                  1    wreg      unsigned char 
  2603 ;; Registers used:
  2604 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2605 ;; Tracked objects:
  2606 ;;		On entry : 0/0
  2607 ;;		On exit  : 0/0
  2608 ;;		Unchanged: 0/0
  2609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2610 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2611 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2612 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2613 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2614 ;;Total ram usage:       11 bytes
  2615 ;; Hardware stack levels used: 1
  2616 ;; Hardware stack levels required when called: 4
  2617 ;; This function calls:
  2618 ;;		_GPIO_pin_read_logic
  2619 ;;		_GPIO_pin_write
  2620 ;; This function is called by:
  2621 ;;		_main
  2622 ;; This function uses a non-reentrant model
  2623 ;;
  2624                           
  2625                           	psect	text1
  2626   008BD8                     __ptext1:
  2627                           	callstack 0
  2628   008BD8                     _keypad_get_val:
  2629                           	callstack 26
  2630   008BD8  0E00               	movlw	0
  2631   008BDA  6E15               	movwf	keypad_get_val@row_counter_2^0,c
  2632   008BDC  0E00               	movlw	0
  2633   008BDE  6E17               	movwf	keypad_get_val@col_counter^0,c
  2634                           
  2635                           ;ECU_Layer/ECU_keypad/ECU_keypad.c: 52:     Logic_t col_logic=0;
  2636   008BE0  0E00               	movlw	0
  2637   008BE2  6E16               	movwf	keypad_get_val@col_logic^0,c
  2638                           
  2639                           ;ECU_Layer/ECU_keypad/ECU_keypad.c: 53:     Std_ReturnType ret = ((Std_ReturnType)0X00);
  2640   008BE4  0E00               	movlw	0
  2641   008BE6  6E13               	movwf	keypad_get_val@ret^0,c
  2642   008BE8                     
  2643                           ;ECU_Layer/ECU_keypad/ECU_keypad.c: 54:     if((((void*)0)!=keypad)&&(((void*)0)!=val))
  2644   008BE8  500D               	movf	keypad_get_val@keypad^0,w,c
  2645   008BEA  100E               	iorwf	(keypad_get_val@keypad+1)^0,w,c
  2646   008BEC  B4D8               	btfsc	status,2,c
  2647   008BEE  EFFB  F045         	goto	u12341
  2648   008BF2  EFFD  F045         	goto	u12340
  2649   008BF6                     u12341:
  2650   008BF6  EF93  F046         	goto	l187
  2651   008BFA                     u12340:
  2652   008BFA  500F               	movf	keypad_get_val@val^0,w,c
  2653   008BFC  1010               	iorwf	(keypad_get_val@val+1)^0,w,c
  2654   008BFE  B4D8               	btfsc	status,2,c
  2655   008C00  EF04  F046         	goto	u12351
  2656   008C04  EF06  F046         	goto	u12350
  2657   008C08                     u12351:
  2658   008C08  EF93  F046         	goto	l187
  2659   008C0C                     u12350:
  2660   008C0C                     
  2661                           ;ECU_Layer/ECU_keypad/ECU_keypad.c: 57:         for(row_counter_2=0;row_counter_2<(4);ro
      +                          w_counter_2++)
  2662   008C0C  0E00               	movlw	0
  2663   008C0E  6E15               	movwf	keypad_get_val@row_counter_2^0,c
  2664   008C10                     l10062:
  2665                           
  2666                           ;ECU_Layer/ECU_keypad/ECU_keypad.c: 58:         {;ECU_Layer/ECU_keypad/ECU_keypad.c: 59:
      +                                       for(row_counter_1=0;row_counter_1<(4);row_counter_1++)
  2667   008C10  0E00               	movlw	0
  2668   008C12  6E14               	movwf	keypad_get_val@row_counter_1^0,c
  2669   008C14                     l10068:
  2670   008C14  5014               	movf	keypad_get_val@row_counter_1^0,w,c
  2671   008C16  240D               	addwf	keypad_get_val@keypad^0,w,c
  2672   008C18  6E03               	movwf	GPIO_pin_write@_pin_cfg^0,c
  2673   008C1A  0E00               	movlw	0
  2674   008C1C  200E               	addwfc	(keypad_get_val@keypad+1)^0,w,c
  2675   008C1E  6E04               	movwf	(GPIO_pin_write@_pin_cfg+1)^0,c
  2676   008C20  0E00               	movlw	0
  2677   008C22  6E05               	movwf	GPIO_pin_write@logic^0,c
  2678   008C24  EC43  F045         	call	_GPIO_pin_write	;wreg free
  2679   008C28                     
  2680                           ;ECU_Layer/ECU_keypad/ECU_keypad.c: 62:             }
  2681   008C28  2A14               	incf	keypad_get_val@row_counter_1^0,f,c
  2682   008C2A  0E03               	movlw	3
  2683   008C2C  6414               	cpfsgt	keypad_get_val@row_counter_1^0,c
  2684   008C2E  EF1B  F046         	goto	u12361
  2685   008C32  EF1D  F046         	goto	u12360
  2686   008C36                     u12361:
  2687   008C36  EF0A  F046         	goto	l10068
  2688   008C3A                     u12360:
  2689   008C3A  5015               	movf	keypad_get_val@row_counter_2^0,w,c
  2690   008C3C  240D               	addwf	keypad_get_val@keypad^0,w,c
  2691   008C3E  6E03               	movwf	GPIO_pin_write@_pin_cfg^0,c
  2692   008C40  0E00               	movlw	0
  2693   008C42  200E               	addwfc	(keypad_get_val@keypad+1)^0,w,c
  2694   008C44  6E04               	movwf	(GPIO_pin_write@_pin_cfg+1)^0,c
  2695   008C46  0E01               	movlw	1
  2696   008C48  6E05               	movwf	GPIO_pin_write@logic^0,c
  2697   008C4A  EC43  F045         	call	_GPIO_pin_write	;wreg free
  2698   008C4E                     
  2699                           ;ECU_Layer/ECU_keypad/ECU_keypad.c: 64:             _delay((unsigned long)((5)*(4000000u
      +                          l/4000.0)));
  2700   008C4E  0E07               	movlw	7
  2701   008C50  6E11               	movwf	??_keypad_get_val^0,c
  2702   008C52  0E7D               	movlw	125
  2703   008C54                     u17547:
  2704   008C54  2EE8               	decfsz	wreg,f,c
  2705   008C56  D7FE               	bra	u17547
  2706   008C58  2E11               	decfsz	??_keypad_get_val^0,f,c
  2707   008C5A  D7FC               	bra	u17547
  2708   008C5C  F000               	nop	
  2709   008C5E                     
  2710                           ;ECU_Layer/ECU_keypad/ECU_keypad.c: 65:             for(col_counter=0;col_counter<(4);co
      +                          l_counter++)
  2711   008C5E  0E00               	movlw	0
  2712   008C60  6E17               	movwf	keypad_get_val@col_counter^0,c
  2713   008C62                     l10084:
  2714   008C62  5017               	movf	keypad_get_val@col_counter^0,w,c
  2715   008C64  240D               	addwf	keypad_get_val@keypad^0,w,c
  2716   008C66  6E11               	movwf	??_keypad_get_val^0,c
  2717   008C68  0E00               	movlw	0
  2718   008C6A  200E               	addwfc	(keypad_get_val@keypad+1)^0,w,c
  2719   008C6C  6E12               	movwf	(??_keypad_get_val+1)^0,c
  2720   008C6E  0E04               	movlw	4
  2721   008C70  2411               	addwf	??_keypad_get_val^0,w,c
  2722   008C72  6E03               	movwf	GPIO_pin_read_logic@_pin_cfg^0,c
  2723   008C74  0E00               	movlw	0
  2724   008C76  2012               	addwfc	(??_keypad_get_val+1)^0,w,c
  2725   008C78  6E04               	movwf	(GPIO_pin_read_logic@_pin_cfg+1)^0,c
  2726   008C7A  0E16               	movlw	low keypad_get_val@col_logic
  2727   008C7C  6E05               	movwf	GPIO_pin_read_logic@logic^0,c
  2728   008C7E  0E00               	movlw	high keypad_get_val@col_logic
  2729   008C80  6E06               	movwf	(GPIO_pin_read_logic@logic+1)^0,c
  2730   008C82  ECD7  F04A         	call	_GPIO_pin_read_logic	;wreg free
  2731   008C86                     
  2732                           ;ECU_Layer/ECU_keypad/ECU_keypad.c: 68:                 if(col_logic)
  2733   008C86  5016               	movf	keypad_get_val@col_logic^0,w,c
  2734   008C88  B4D8               	btfsc	status,2,c
  2735   008C8A  EF49  F046         	goto	u12371
  2736   008C8E  EF4B  F046         	goto	u12370
  2737   008C92                     u12371:
  2738   008C92  EF81  F046         	goto	l10094
  2739   008C96                     u12370:
  2740   008C96                     
  2741                           ;ECU_Layer/ECU_keypad/ECU_keypad.c: 69:                 {;ECU_Layer/ECU_keypad/ECU_keypa
      +                          d.c: 70:                     *val = keypad_buttons[row_counter_2][col_counter];
  2742   008C96  5015               	movf	keypad_get_val@row_counter_2^0,w,c
  2743   008C98  0D04               	mullw	4
  2744   008C9A  0E01               	movlw	low _keypad_buttons
  2745   008C9C  24F3               	addwf	243,w,c
  2746   008C9E  6E11               	movwf	??_keypad_get_val^0,c
  2747   008CA0  0E10               	movlw	high _keypad_buttons
  2748   008CA2  20F4               	addwfc	prodh,w,c
  2749   008CA4  6E12               	movwf	(??_keypad_get_val+1)^0,c
  2750   008CA6  5017               	movf	keypad_get_val@col_counter^0,w,c
  2751   008CA8  2611               	addwf	??_keypad_get_val^0,f,c
  2752   008CAA  0E00               	movlw	0
  2753   008CAC  2212               	addwfc	(??_keypad_get_val+1)^0,f,c
  2754   008CAE  C011  FFF6         	movff	??_keypad_get_val,tblptrl
  2755   008CB2  C012  FFF7         	movff	??_keypad_get_val+1,tblptrh
  2756   008CB6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2757   008CB6  6AF8               	clrf	tblptru,c
  2758   008CB8                     	endif
  2759   008CB8                     	if	0	;tblptru may be non-zero
  2760   008CB8                     	endif
  2761   008CB8  C00F  FFD9         	movff	keypad_get_val@val,fsr2l
  2762   008CBC  C010  FFDA         	movff	keypad_get_val@val+1,fsr2h
  2763   008CC0  0008               	tblrd		*
  2764   008CC2  CFF5 FFDF          	movff	tablat,indf2
  2765                           
  2766                           ;ECU_Layer/ECU_keypad/ECU_keypad.c: 71:                     while(col_logic){ret=GPIO_pi
      +                          n_read_logic(&(keypad->keypad_col_pins[col_counter]),&col_logic);}
  2767   008CC6  EF77  F046         	goto	l10092
  2768   008CCA                     l10090:
  2769   008CCA  5017               	movf	keypad_get_val@col_counter^0,w,c
  2770   008CCC  240D               	addwf	keypad_get_val@keypad^0,w,c
  2771   008CCE  6E11               	movwf	??_keypad_get_val^0,c
  2772   008CD0  0E00               	movlw	0
  2773   008CD2  200E               	addwfc	(keypad_get_val@keypad+1)^0,w,c
  2774   008CD4  6E12               	movwf	(??_keypad_get_val+1)^0,c
  2775   008CD6  0E04               	movlw	4
  2776   008CD8  2411               	addwf	??_keypad_get_val^0,w,c
  2777   008CDA  6E03               	movwf	GPIO_pin_read_logic@_pin_cfg^0,c
  2778   008CDC  0E00               	movlw	0
  2779   008CDE  2012               	addwfc	(??_keypad_get_val+1)^0,w,c
  2780   008CE0  6E04               	movwf	(GPIO_pin_read_logic@_pin_cfg+1)^0,c
  2781   008CE2  0E16               	movlw	low keypad_get_val@col_logic
  2782   008CE4  6E05               	movwf	GPIO_pin_read_logic@logic^0,c
  2783   008CE6  0E00               	movlw	high keypad_get_val@col_logic
  2784   008CE8  6E06               	movwf	(GPIO_pin_read_logic@logic+1)^0,c
  2785   008CEA  ECD7  F04A         	call	_GPIO_pin_read_logic	;wreg free
  2786   008CEE                     l10092:
  2787   008CEE  5016               	movf	keypad_get_val@col_logic^0,w,c
  2788   008CF0  A4D8               	btfss	status,2,c
  2789   008CF2  EF7D  F046         	goto	u12381
  2790   008CF6  EF7F  F046         	goto	u12380
  2791   008CFA                     u12381:
  2792   008CFA  EF65  F046         	goto	l10090
  2793   008CFE                     u12380:
  2794   008CFE  EF93  F046         	goto	l187
  2795   008D02                     l10094:
  2796                           
  2797                           ;ECU_Layer/ECU_keypad/ECU_keypad.c: 74:             }
  2798   008D02  2A17               	incf	keypad_get_val@col_counter^0,f,c
  2799   008D04  0E03               	movlw	3
  2800   008D06  6417               	cpfsgt	keypad_get_val@col_counter^0,c
  2801   008D08  EF88  F046         	goto	u12391
  2802   008D0C  EF8A  F046         	goto	u12390
  2803   008D10                     u12391:
  2804   008D10  EF31  F046         	goto	l10084
  2805   008D14                     u12390:
  2806   008D14                     
  2807                           ;ECU_Layer/ECU_keypad/ECU_keypad.c: 75:         }
  2808   008D14  2A15               	incf	keypad_get_val@row_counter_2^0,f,c
  2809   008D16  0E03               	movlw	3
  2810   008D18  6415               	cpfsgt	keypad_get_val@row_counter_2^0,c
  2811   008D1A  EF91  F046         	goto	u12401
  2812   008D1E  EF93  F046         	goto	u12400
  2813   008D22                     u12401:
  2814   008D22  EF08  F046         	goto	l10062
  2815   008D26                     u12400:
  2816   008D26                     l187:
  2817   008D26  0012               	return		;funcret
  2818   008D28                     __end_of_keypad_get_val:
  2819                           	callstack 0
  2820                           
  2821 ;; *************** function _GPIO_pin_read_logic *****************
  2822 ;; Defined at:
  2823 ;;		line 128 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2824 ;; Parameters:    Size  Location     Type
  2825 ;;  _pin_cfg        2    2[COMRAM] PTR const struct .
  2826 ;;		 -> Keypad.keypad_col_pins(4), Keypad(8), 
  2827 ;;  logic           2    4[COMRAM] PTR enum E3401
  2828 ;;		 -> keypad_get_val@col_logic(1), button_read_state@button_logic(1), 
  2829 ;; Auto vars:     Size  Location     Type
  2830 ;;  ret             1   11[COMRAM] unsigned char 
  2831 ;; Return value:  Size  Location     Type
  2832 ;;                  1    wreg      unsigned char 
  2833 ;; Registers used:
  2834 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2835 ;; Tracked objects:
  2836 ;;		On entry : 0/0
  2837 ;;		On exit  : 0/0
  2838 ;;		Unchanged: 0/0
  2839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2840 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2841 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2842 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2843 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2844 ;;Total ram usage:       10 bytes
  2845 ;; Hardware stack levels used: 1
  2846 ;; Hardware stack levels required when called: 3
  2847 ;; This function calls:
  2848 ;;		Nothing
  2849 ;; This function is called by:
  2850 ;;		_keypad_get_val
  2851 ;;		_button_read_state
  2852 ;; This function uses a non-reentrant model
  2853 ;;
  2854                           
  2855                           	psect	text2
  2856   0095AE                     __ptext2:
  2857                           	callstack 0
  2858   0095AE                     _GPIO_pin_read_logic:
  2859                           	callstack 26
  2860   0095AE                     
  2861                           ;MCAL_Layer/GPIO/hal_gpio.c: 128: Std_ReturnType GPIO_pin_read_logic(const Pin_config_t 
      +                          * _pin_cfg,Logic_t *logic);MCAL_Layer/GPIO/hal_gpio.c: 129: {;MCAL_Layer/GPIO/hal_gpio.c
      +                          : 130:     Std_ReturnType ret = ((Std_ReturnType)0X00);
  2862   0095AE  0E00               	movlw	0
  2863   0095B0  6E0C               	movwf	GPIO_pin_read_logic@ret^0,c
  2864   0095B2                     
  2865                           ;MCAL_Layer/GPIO/hal_gpio.c: 131:     if((((void*)0)!=_pin_cfg)&&(_pin_cfg->Pin < ((8)))
      +                          &&(_pin_cfg->Port < ((5)))&&(((void*)0)!=logic))
  2866   0095B2  5003               	movf	GPIO_pin_read_logic@_pin_cfg^0,w,c
  2867   0095B4  1004               	iorwf	(GPIO_pin_read_logic@_pin_cfg+1)^0,w,c
  2868   0095B6  B4D8               	btfsc	status,2,c
  2869   0095B8  EFE0  F04A         	goto	u11341
  2870   0095BC  EFE2  F04A         	goto	u11340
  2871   0095C0                     u11341:
  2872   0095C0  EF3E  F04B         	goto	l9522
  2873   0095C4                     u11340:
  2874   0095C4  C003  FFD9         	movff	GPIO_pin_read_logic@_pin_cfg,fsr2l
  2875   0095C8  C004  FFDA         	movff	GPIO_pin_read_logic@_pin_cfg+1,fsr2h
  2876   0095CC  30DF               	rrcf	223,w,c
  2877   0095CE  32E8               	rrcf	wreg,f,c
  2878   0095D0  32E8               	rrcf	wreg,f,c
  2879   0095D2  0B07               	andlw	7
  2880   0095D4  6E07               	movwf	??_GPIO_pin_read_logic^0,c
  2881   0095D6  0E08               	movlw	8
  2882   0095D8  6007               	cpfslt	??_GPIO_pin_read_logic^0,c
  2883   0095DA  EFF1  F04A         	goto	u11351
  2884   0095DE  EFF3  F04A         	goto	u11350
  2885   0095E2                     u11351:
  2886   0095E2  EF3E  F04B         	goto	l9522
  2887   0095E6                     u11350:
  2888   0095E6  C003  FFD9         	movff	GPIO_pin_read_logic@_pin_cfg,fsr2l
  2889   0095EA  C004  FFDA         	movff	GPIO_pin_read_logic@_pin_cfg+1,fsr2h
  2890   0095EE  50DF               	movf	223,w,c
  2891   0095F0  0B07               	andlw	7
  2892   0095F2  6E07               	movwf	??_GPIO_pin_read_logic^0,c
  2893   0095F4  0E05               	movlw	5
  2894   0095F6  6007               	cpfslt	??_GPIO_pin_read_logic^0,c
  2895   0095F8  EF00  F04B         	goto	u11361
  2896   0095FC  EF02  F04B         	goto	u11360
  2897   009600                     u11361:
  2898   009600  EF3E  F04B         	goto	l9522
  2899   009604                     u11360:
  2900   009604  5005               	movf	GPIO_pin_read_logic@logic^0,w,c
  2901   009606  1006               	iorwf	(GPIO_pin_read_logic@logic+1)^0,w,c
  2902   009608  B4D8               	btfsc	status,2,c
  2903   00960A  EF09  F04B         	goto	u11371
  2904   00960E  EF0B  F04B         	goto	u11370
  2905   009612                     u11371:
  2906   009612  EF3E  F04B         	goto	l9522
  2907   009616                     u11370:
  2908   009616                     
  2909                           ;MCAL_Layer/GPIO/hal_gpio.c: 132:     {;MCAL_Layer/GPIO/hal_gpio.c: 133:         *logic=
      +                          ((*port_registers[_pin_cfg->Port] >> _pin_cfg->Pin) & 1);
  2910   009616  C003  FFD9         	movff	GPIO_pin_read_logic@_pin_cfg,fsr2l
  2911   00961A  C004  FFDA         	movff	GPIO_pin_read_logic@_pin_cfg+1,fsr2h
  2912   00961E  30DF               	rrcf	223,w,c
  2913   009620  32E8               	rrcf	wreg,f,c
  2914   009622  32E8               	rrcf	wreg,f,c
  2915   009624  0B07               	andlw	7
  2916   009626  6E07               	movwf	??_GPIO_pin_read_logic^0,c
  2917   009628  C003  FFD9         	movff	GPIO_pin_read_logic@_pin_cfg,fsr2l
  2918   00962C  C004  FFDA         	movff	GPIO_pin_read_logic@_pin_cfg+1,fsr2h
  2919   009630  50DF               	movf	223,w,c
  2920   009632  0B07               	andlw	7
  2921   009634  6E08               	movwf	(??_GPIO_pin_read_logic+1)^0,c
  2922   009636  5008               	movf	(??_GPIO_pin_read_logic+1)^0,w,c
  2923   009638  0D02               	mullw	2
  2924   00963A  0EA9               	movlw	low _port_registers
  2925   00963C  24F3               	addwf	243,w,c
  2926   00963E  6ED9               	movwf	fsr2l,c
  2927   009640  0E02               	movlw	high _port_registers
  2928   009642  20F4               	addwfc	prodh,w,c
  2929   009644  6EDA               	movwf	fsr2h,c
  2930   009646  CFDE F009          	movff	postinc2,??_GPIO_pin_read_logic+2
  2931   00964A  CFDD F00A          	movff	postdec2,??_GPIO_pin_read_logic+3
  2932   00964E  C009  FFD9         	movff	??_GPIO_pin_read_logic+2,fsr2l
  2933   009652  C00A  FFDA         	movff	??_GPIO_pin_read_logic+3,fsr2h
  2934   009656  50DF               	movf	indf2,w,c
  2935   009658  6E0B               	movwf	(??_GPIO_pin_read_logic+4)^0,c
  2936   00965A  2A07               	incf	??_GPIO_pin_read_logic^0,f,c
  2937   00965C  EF32  F04B         	goto	u11384
  2938   009660                     u11385:
  2939   009660  90D8               	bcf	status,0,c
  2940   009662  320B               	rrcf	(??_GPIO_pin_read_logic+4)^0,f,c
  2941   009664                     u11384:
  2942   009664  2E07               	decfsz	??_GPIO_pin_read_logic^0,f,c
  2943   009666  EF30  F04B         	goto	u11385
  2944   00966A  500B               	movf	(??_GPIO_pin_read_logic+4)^0,w,c
  2945   00966C  0B01               	andlw	1
  2946   00966E  C005  FFD9         	movff	GPIO_pin_read_logic@logic,fsr2l
  2947   009672  C006  FFDA         	movff	GPIO_pin_read_logic@logic+1,fsr2h
  2948   009676  6EDF               	movwf	indf2,c
  2949   009678                     
  2950                           ;MCAL_Layer/GPIO/hal_gpio.c: 134:         ret=((Std_ReturnType)0X01);
  2951   009678  0E01               	movlw	1
  2952   00967A  6E0C               	movwf	GPIO_pin_read_logic@ret^0,c
  2953   00967C                     l9522:
  2954                           
  2955                           ;MCAL_Layer/GPIO/hal_gpio.c: 136:     return ret;
  2956   00967C  500C               	movf	GPIO_pin_read_logic@ret^0,w,c
  2957   00967E  0012               	return		;funcret
  2958   009680                     __end_of_GPIO_pin_read_logic:
  2959                           	callstack 0
  2960                           
  2961 ;; *************** function _SyntaxErr *****************
  2962 ;; Defined at:
  2963 ;;		line 167 in file "Calculator_Math/CalculatorMath.c"
  2964 ;; Parameters:    Size  Location     Type
  2965 ;;  str             2    7[COMRAM] PTR unsigned char 
  2966 ;;		 -> main@MATH_STR(60), 
  2967 ;; Auto vars:     Size  Location     Type
  2968 ;;  temp            2   14[COMRAM] PTR unsigned char 
  2969 ;;		 -> main@MATH_STR(60), 
  2970 ;;  length          2   12[COMRAM] int 
  2971 ;; Return value:  Size  Location     Type
  2972 ;;                  1    wreg      _Bool 
  2973 ;; Registers used:
  2974 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2975 ;; Tracked objects:
  2976 ;;		On entry : 0/0
  2977 ;;		On exit  : 0/0
  2978 ;;		Unchanged: 0/0
  2979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2980 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2981 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2982 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2983 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2984 ;;Total ram usage:        9 bytes
  2985 ;; Hardware stack levels used: 1
  2986 ;; Hardware stack levels required when called: 4
  2987 ;; This function calls:
  2988 ;;		_is_num
  2989 ;;		_is_op
  2990 ;;		_is_power
  2991 ;;		_strlen
  2992 ;; This function is called by:
  2993 ;;		_main
  2994 ;; This function uses a non-reentrant model
  2995 ;;
  2996                           
  2997                           	psect	text3
  2998   006BAC                     __ptext3:
  2999                           	callstack 0
  3000   006BAC                     _SyntaxErr:
  3001                           	callstack 26
  3002   006BAC                     
  3003                           ;Calculator_Math/CalculatorMath.c: 169:     int length = strlen(str);
  3004   006BAC  C008  F003         	movff	SyntaxErr@str,strlen@s
  3005   006BB0  C009  F004         	movff	SyntaxErr@str+1,strlen@s+1
  3006   006BB4  ECF1  F054         	call	_strlen	;wreg free
  3007   006BB8  C003  F00D         	movff	?_strlen,SyntaxErr@length
  3008   006BBC  C004  F00E         	movff	?_strlen+1,SyntaxErr@length+1
  3009                           
  3010                           ;Calculator_Math/CalculatorMath.c: 171:     if
  3011   006BC0  C008  FFD9         	movff	SyntaxErr@str,fsr2l
  3012   006BC4  C009  FFDA         	movff	SyntaxErr@str+1,fsr2h
  3013   006BC8  50DF               	movf	indf2,w,c
  3014   006BCA  EC71  F055         	call	_is_num
  3015   006BCE  0900               	iorlw	0
  3016   006BD0  A4D8               	btfss	status,2,c
  3017   006BD2  EFED  F035         	goto	u11941
  3018   006BD6  EFEF  F035         	goto	u11940
  3019   006BDA                     u11941:
  3020   006BDA  EF19  F036         	goto	l9874
  3021   006BDE                     u11940:
  3022   006BDE  C008  FFD9         	movff	SyntaxErr@str,fsr2l
  3023   006BE2  C009  FFDA         	movff	SyntaxErr@str+1,fsr2h
  3024   006BE6  0E2D               	movlw	45
  3025   006BE8  18DE               	xorwf	postinc2,w,c
  3026   006BEA  B4D8               	btfsc	status,2,c
  3027   006BEC  EFFA  F035         	goto	u11951
  3028   006BF0  EFFC  F035         	goto	u11950
  3029   006BF4                     u11951:
  3030   006BF4  EF19  F036         	goto	l9874
  3031   006BF8                     u11950:
  3032   006BF8  C008  FFD9         	movff	SyntaxErr@str,fsr2l
  3033   006BFC  C009  FFDA         	movff	SyntaxErr@str+1,fsr2h
  3034   006C00  0E2B               	movlw	43
  3035   006C02  18DE               	xorwf	postinc2,w,c
  3036   006C04  B4D8               	btfsc	status,2,c
  3037   006C06  EF07  F036         	goto	u11961
  3038   006C0A  EF09  F036         	goto	u11960
  3039   006C0E                     u11961:
  3040   006C0E  EF19  F036         	goto	l9874
  3041   006C12                     u11960:
  3042   006C12  C008  FFD9         	movff	SyntaxErr@str,fsr2l
  3043   006C16  C009  FFDA         	movff	SyntaxErr@str+1,fsr2h
  3044   006C1A  0E2E               	movlw	46
  3045   006C1C  18DE               	xorwf	postinc2,w,c
  3046   006C1E  B4D8               	btfsc	status,2,c
  3047   006C20  EF14  F036         	goto	u11971
  3048   006C24  EF16  F036         	goto	u11970
  3049   006C28                     u11971:
  3050   006C28  EF19  F036         	goto	l9874
  3051   006C2C                     u11970:
  3052   006C2C                     l9870:
  3053                           
  3054                           ;Calculator_Math/CalculatorMath.c: 180:     ){;Calculator_Math/CalculatorMath.c: 181:   
      +                                return (1);
  3055   006C2C  0E01               	movlw	1
  3056   006C2E  EF9C  F037         	goto	l49
  3057   006C32                     l9874:
  3058                           
  3059                           ;Calculator_Math/CalculatorMath.c: 184:     if((!is_num(str[length-1])) && (str[length-1
      +                          ]!='.'))
  3060   006C32  500D               	movf	SyntaxErr@length^0,w,c
  3061   006C34  2408               	addwf	SyntaxErr@str^0,w,c
  3062   006C36  6E0A               	movwf	??_SyntaxErr^0,c
  3063   006C38  500E               	movf	(SyntaxErr@length+1)^0,w,c
  3064   006C3A  2009               	addwfc	(SyntaxErr@str+1)^0,w,c
  3065   006C3C  6E0B               	movwf	(??_SyntaxErr+1)^0,c
  3066   006C3E  0EFF               	movlw	255
  3067   006C40  240A               	addwf	??_SyntaxErr^0,w,c
  3068   006C42  6ED9               	movwf	fsr2l,c
  3069   006C44  0EFF               	movlw	255
  3070   006C46  200B               	addwfc	(??_SyntaxErr+1)^0,w,c
  3071   006C48  6EDA               	movwf	fsr2h,c
  3072   006C4A  50DF               	movf	indf2,w,c
  3073   006C4C  EC71  F055         	call	_is_num
  3074   006C50  0900               	iorlw	0
  3075   006C52  A4D8               	btfss	status,2,c
  3076   006C54  EF2E  F036         	goto	u11981
  3077   006C58  EF30  F036         	goto	u11980
  3078   006C5C                     u11981:
  3079   006C5C  EF47  F036         	goto	l9882
  3080   006C60                     u11980:
  3081   006C60  500D               	movf	SyntaxErr@length^0,w,c
  3082   006C62  2408               	addwf	SyntaxErr@str^0,w,c
  3083   006C64  6E0A               	movwf	??_SyntaxErr^0,c
  3084   006C66  500E               	movf	(SyntaxErr@length+1)^0,w,c
  3085   006C68  2009               	addwfc	(SyntaxErr@str+1)^0,w,c
  3086   006C6A  6E0B               	movwf	(??_SyntaxErr+1)^0,c
  3087   006C6C  0EFF               	movlw	255
  3088   006C6E  240A               	addwf	??_SyntaxErr^0,w,c
  3089   006C70  6ED9               	movwf	fsr2l,c
  3090   006C72  0EFF               	movlw	255
  3091   006C74  200B               	addwfc	(??_SyntaxErr+1)^0,w,c
  3092   006C76  6EDA               	movwf	fsr2h,c
  3093   006C78  0E2E               	movlw	46
  3094   006C7A  18DE               	xorwf	postinc2,w,c
  3095   006C7C  B4D8               	btfsc	status,2,c
  3096   006C7E  EF43  F036         	goto	u11991
  3097   006C82  EF45  F036         	goto	u11990
  3098   006C86                     u11991:
  3099   006C86  EF47  F036         	goto	l9882
  3100   006C8A                     u11990:
  3101   006C8A  EF16  F036         	goto	l9870
  3102   006C8E                     l9882:
  3103                           
  3104                           ;Calculator_Math/CalculatorMath.c: 188:     char *temp = str;
  3105   006C8E  C008  F00F         	movff	SyntaxErr@str,SyntaxErr@temp
  3106   006C92  C009  F010         	movff	SyntaxErr@str+1,SyntaxErr@temp+1
  3107                           
  3108                           ;Calculator_Math/CalculatorMath.c: 189:     while(*str)
  3109   006C96  EF8F  F037         	goto	l9970
  3110   006C9A                     l9884:
  3111                           
  3112                           ;Calculator_Math/CalculatorMath.c: 190:     {;Calculator_Math/CalculatorMath.c: 191:    
      +                               if(*str == '/'){
  3113   006C9A  C008  FFD9         	movff	SyntaxErr@str,fsr2l
  3114   006C9E  C009  FFDA         	movff	SyntaxErr@str+1,fsr2h
  3115   006CA2  0E2F               	movlw	47
  3116   006CA4  18DE               	xorwf	postinc2,w,c
  3117   006CA6  A4D8               	btfss	status,2,c
  3118   006CA8  EF58  F036         	goto	u12001
  3119   006CAC  EF5A  F036         	goto	u12000
  3120   006CB0                     u12001:
  3121   006CB0  EF84  F036         	goto	l9898
  3122   006CB4                     u12000:
  3123   006CB4                     
  3124                           ;Calculator_Math/CalculatorMath.c: 192:             temp++;
  3125   006CB4  4A0F               	infsnz	SyntaxErr@temp^0,f,c
  3126   006CB6  2A10               	incf	(SyntaxErr@temp+1)^0,f,c
  3127   006CB8                     
  3128                           ;Calculator_Math/CalculatorMath.c: 193:             if(*temp){
  3129   006CB8  C00F  FFD9         	movff	SyntaxErr@temp,fsr2l
  3130   006CBC  C010  FFDA         	movff	SyntaxErr@temp+1,fsr2h
  3131   006CC0  50DF               	movf	indf2,w,c
  3132   006CC2  B4D8               	btfsc	status,2,c
  3133   006CC4  EF66  F036         	goto	u12011
  3134   006CC8  EF68  F036         	goto	u12010
  3135   006CCC                     u12011:
  3136   006CCC  EF84  F036         	goto	l9898
  3137   006CD0                     u12010:
  3138   006CD0                     
  3139                           ;Calculator_Math/CalculatorMath.c: 194:                 if((*temp=='*')||(*temp == '/'))
      +                          {
  3140   006CD0  C00F  FFD9         	movff	SyntaxErr@temp,fsr2l
  3141   006CD4  C010  FFDA         	movff	SyntaxErr@temp+1,fsr2h
  3142   006CD8  0E2A               	movlw	42
  3143   006CDA  18DE               	xorwf	postinc2,w,c
  3144   006CDC  B4D8               	btfsc	status,2,c
  3145   006CDE  EF73  F036         	goto	u12021
  3146   006CE2  EF75  F036         	goto	u12020
  3147   006CE6                     u12021:
  3148   006CE6  EF16  F036         	goto	l9870
  3149   006CEA                     u12020:
  3150   006CEA  C00F  FFD9         	movff	SyntaxErr@temp,fsr2l
  3151   006CEE  C010  FFDA         	movff	SyntaxErr@temp+1,fsr2h
  3152   006CF2  0E2F               	movlw	47
  3153   006CF4  18DE               	xorwf	postinc2,w,c
  3154   006CF6  A4D8               	btfss	status,2,c
  3155   006CF8  EF80  F036         	goto	u12031
  3156   006CFC  EF82  F036         	goto	u12030
  3157   006D00                     u12031:
  3158   006D00  EF84  F036         	goto	l9898
  3159   006D04                     u12030:
  3160   006D04  EF16  F036         	goto	l9870
  3161   006D08                     l9898:
  3162                           
  3163                           ;Calculator_Math/CalculatorMath.c: 199:         if(*str == '.'){
  3164   006D08  C008  FFD9         	movff	SyntaxErr@str,fsr2l
  3165   006D0C  C009  FFDA         	movff	SyntaxErr@str+1,fsr2h
  3166   006D10  0E2E               	movlw	46
  3167   006D12  18DE               	xorwf	postinc2,w,c
  3168   006D14  A4D8               	btfss	status,2,c
  3169   006D16  EF8F  F036         	goto	u12041
  3170   006D1A  EF91  F036         	goto	u12040
  3171   006D1E                     u12041:
  3172   006D1E  EFC1  F036         	goto	l9916
  3173   006D22                     u12040:
  3174   006D22                     l9900:
  3175                           
  3176                           ;Calculator_Math/CalculatorMath.c: 200:             temp++;
  3177   006D22  4A0F               	infsnz	SyntaxErr@temp^0,f,c
  3178   006D24  2A10               	incf	(SyntaxErr@temp+1)^0,f,c
  3179                           
  3180                           ;Calculator_Math/CalculatorMath.c: 201:             while(*temp){
  3181   006D26  EFB5  F036         	goto	l9914
  3182   006D2A                     l9902:
  3183                           
  3184                           ;Calculator_Math/CalculatorMath.c: 202:                 if(*temp=='.'){
  3185   006D2A  C00F  FFD9         	movff	SyntaxErr@temp,fsr2l
  3186   006D2E  C010  FFDA         	movff	SyntaxErr@temp+1,fsr2h
  3187   006D32  0E2E               	movlw	46
  3188   006D34  18DE               	xorwf	postinc2,w,c
  3189   006D36  A4D8               	btfss	status,2,c
  3190   006D38  EFA0  F036         	goto	u12051
  3191   006D3C  EFA2  F036         	goto	u12050
  3192   006D40                     u12051:
  3193   006D40  EFA4  F036         	goto	l9908
  3194   006D44                     u12050:
  3195   006D44  EF16  F036         	goto	l9870
  3196   006D48                     l9908:
  3197                           
  3198                           ;Calculator_Math/CalculatorMath.c: 205:                 if(is_op(*temp)){
  3199   006D48  C00F  FFD9         	movff	SyntaxErr@temp,fsr2l
  3200   006D4C  C010  FFDA         	movff	SyntaxErr@temp+1,fsr2h
  3201   006D50  50DF               	movf	indf2,w,c
  3202   006D52  EC77  F052         	call	_is_op
  3203   006D56  0900               	iorlw	0
  3204   006D58  B4D8               	btfsc	status,2,c
  3205   006D5A  EFB1  F036         	goto	u12061
  3206   006D5E  EFB3  F036         	goto	u12060
  3207   006D62                     u12061:
  3208   006D62  EF91  F036         	goto	l9900
  3209   006D66                     u12060:
  3210   006D66  EFC1  F036         	goto	l9916
  3211   006D6A                     l9914:
  3212                           
  3213                           ;Calculator_Math/CalculatorMath.c: 201:             while(*temp){
  3214   006D6A  C00F  FFD9         	movff	SyntaxErr@temp,fsr2l
  3215   006D6E  C010  FFDA         	movff	SyntaxErr@temp+1,fsr2h
  3216   006D72  50DF               	movf	indf2,w,c
  3217   006D74  A4D8               	btfss	status,2,c
  3218   006D76  EFBF  F036         	goto	u12071
  3219   006D7A  EFC1  F036         	goto	u12070
  3220   006D7E                     u12071:
  3221   006D7E  EF95  F036         	goto	l9902
  3222   006D82                     u12070:
  3223   006D82                     l9916:
  3224                           
  3225                           ;Calculator_Math/CalculatorMath.c: 212:         if((*str == '+')||(*str == '-')){
  3226   006D82  C008  FFD9         	movff	SyntaxErr@str,fsr2l
  3227   006D86  C009  FFDA         	movff	SyntaxErr@str+1,fsr2h
  3228   006D8A  0E2B               	movlw	43
  3229   006D8C  18DE               	xorwf	postinc2,w,c
  3230   006D8E  B4D8               	btfsc	status,2,c
  3231   006D90  EFCC  F036         	goto	u12081
  3232   006D94  EFCE  F036         	goto	u12080
  3233   006D98                     u12081:
  3234   006D98  EFDB  F036         	goto	l9920
  3235   006D9C                     u12080:
  3236   006D9C  C008  FFD9         	movff	SyntaxErr@str,fsr2l
  3237   006DA0  C009  FFDA         	movff	SyntaxErr@str+1,fsr2h
  3238   006DA4  0E2D               	movlw	45
  3239   006DA6  18DE               	xorwf	postinc2,w,c
  3240   006DA8  A4D8               	btfss	status,2,c
  3241   006DAA  EFD9  F036         	goto	u12091
  3242   006DAE  EFDB  F036         	goto	u12090
  3243   006DB2                     u12091:
  3244   006DB2  EFFA  F036         	goto	l9930
  3245   006DB6                     u12090:
  3246   006DB6                     l9920:
  3247                           
  3248                           ;Calculator_Math/CalculatorMath.c: 213:             temp++;
  3249   006DB6  4A0F               	infsnz	SyntaxErr@temp^0,f,c
  3250   006DB8  2A10               	incf	(SyntaxErr@temp+1)^0,f,c
  3251   006DBA                     
  3252                           ;Calculator_Math/CalculatorMath.c: 214:             if(*temp){
  3253   006DBA  C00F  FFD9         	movff	SyntaxErr@temp,fsr2l
  3254   006DBE  C010  FFDA         	movff	SyntaxErr@temp+1,fsr2h
  3255   006DC2  50DF               	movf	indf2,w,c
  3256   006DC4  B4D8               	btfsc	status,2,c
  3257   006DC6  EFE7  F036         	goto	u12101
  3258   006DCA  EFE9  F036         	goto	u12100
  3259   006DCE                     u12101:
  3260   006DCE  EFFA  F036         	goto	l9930
  3261   006DD2                     u12100:
  3262   006DD2                     
  3263                           ;Calculator_Math/CalculatorMath.c: 215:                 if(is_op(*temp)){
  3264   006DD2  C00F  FFD9         	movff	SyntaxErr@temp,fsr2l
  3265   006DD6  C010  FFDA         	movff	SyntaxErr@temp+1,fsr2h
  3266   006DDA  50DF               	movf	indf2,w,c
  3267   006DDC  EC77  F052         	call	_is_op
  3268   006DE0  0900               	iorlw	0
  3269   006DE2  B4D8               	btfsc	status,2,c
  3270   006DE4  EFF6  F036         	goto	u12111
  3271   006DE8  EFF8  F036         	goto	u12110
  3272   006DEC                     u12111:
  3273   006DEC  EFFA  F036         	goto	l9930
  3274   006DF0                     u12110:
  3275   006DF0  EF16  F036         	goto	l9870
  3276   006DF4                     l9930:
  3277                           
  3278                           ;Calculator_Math/CalculatorMath.c: 221:         if(*str == '*'){
  3279   006DF4  C008  FFD9         	movff	SyntaxErr@str,fsr2l
  3280   006DF8  C009  FFDA         	movff	SyntaxErr@str+1,fsr2h
  3281   006DFC  0E2A               	movlw	42
  3282   006DFE  18DE               	xorwf	postinc2,w,c
  3283   006E00  A4D8               	btfss	status,2,c
  3284   006E02  EF05  F037         	goto	u12121
  3285   006E06  EF07  F037         	goto	u12120
  3286   006E0A                     u12121:
  3287   006E0A  EF5E  F037         	goto	l9956
  3288   006E0E                     u12120:
  3289   006E0E                     
  3290                           ;Calculator_Math/CalculatorMath.c: 222:             if(is_power(str)){
  3291   006E0E  C008  F003         	movff	SyntaxErr@str,is_power@x
  3292   006E12  C009  F004         	movff	SyntaxErr@str+1,is_power@x+1
  3293   006E16  ECEA  F050         	call	_is_power	;wreg free
  3294   006E1A  0900               	iorlw	0
  3295   006E1C  B4D8               	btfsc	status,2,c
  3296   006E1E  EF13  F037         	goto	u12131
  3297   006E22  EF15  F037         	goto	u12130
  3298   006E26                     u12131:
  3299   006E26  EF41  F037         	goto	l9946
  3300   006E2A                     u12130:
  3301   006E2A                     
  3302                           ;Calculator_Math/CalculatorMath.c: 223:                 temp++;
  3303   006E2A  4A0F               	infsnz	SyntaxErr@temp^0,f,c
  3304   006E2C  2A10               	incf	(SyntaxErr@temp+1)^0,f,c
  3305                           
  3306                           ;Calculator_Math/CalculatorMath.c: 224:                 temp++;
  3307   006E2E  4A0F               	infsnz	SyntaxErr@temp^0,f,c
  3308   006E30  2A10               	incf	(SyntaxErr@temp+1)^0,f,c
  3309   006E32                     
  3310                           ;Calculator_Math/CalculatorMath.c: 225:                 if(*temp){
  3311   006E32  C00F  FFD9         	movff	SyntaxErr@temp,fsr2l
  3312   006E36  C010  FFDA         	movff	SyntaxErr@temp+1,fsr2h
  3313   006E3A  50DF               	movf	indf2,w,c
  3314   006E3C  B4D8               	btfsc	status,2,c
  3315   006E3E  EF23  F037         	goto	u12141
  3316   006E42  EF25  F037         	goto	u12140
  3317   006E46                     u12141:
  3318   006E46  EF5E  F037         	goto	l9956
  3319   006E4A                     u12140:
  3320   006E4A                     
  3321                           ;Calculator_Math/CalculatorMath.c: 226:                 if((*temp=='*')||(*temp == '/'))
      +                          {
  3322   006E4A  C00F  FFD9         	movff	SyntaxErr@temp,fsr2l
  3323   006E4E  C010  FFDA         	movff	SyntaxErr@temp+1,fsr2h
  3324   006E52  0E2A               	movlw	42
  3325   006E54  18DE               	xorwf	postinc2,w,c
  3326   006E56  B4D8               	btfsc	status,2,c
  3327   006E58  EF30  F037         	goto	u12151
  3328   006E5C  EF32  F037         	goto	u12150
  3329   006E60                     u12151:
  3330   006E60  EF16  F036         	goto	l9870
  3331   006E64                     u12150:
  3332   006E64  C00F  FFD9         	movff	SyntaxErr@temp,fsr2l
  3333   006E68  C010  FFDA         	movff	SyntaxErr@temp+1,fsr2h
  3334   006E6C  0E2F               	movlw	47
  3335   006E6E  18DE               	xorwf	postinc2,w,c
  3336   006E70  A4D8               	btfss	status,2,c
  3337   006E72  EF3D  F037         	goto	u12161
  3338   006E76  EF3F  F037         	goto	u12160
  3339   006E7A                     u12161:
  3340   006E7A  EF5E  F037         	goto	l75
  3341   006E7E                     u12160:
  3342   006E7E  EF16  F036         	goto	l9870
  3343   006E82                     l9946:
  3344                           
  3345                           ;Calculator_Math/CalculatorMath.c: 232:                 temp++;
  3346   006E82  4A0F               	infsnz	SyntaxErr@temp^0,f,c
  3347   006E84  2A10               	incf	(SyntaxErr@temp+1)^0,f,c
  3348   006E86                     
  3349                           ;Calculator_Math/CalculatorMath.c: 233:                 if(*temp){
  3350   006E86  C00F  FFD9         	movff	SyntaxErr@temp,fsr2l
  3351   006E8A  C010  FFDA         	movff	SyntaxErr@temp+1,fsr2h
  3352   006E8E  50DF               	movf	indf2,w,c
  3353   006E90  B4D8               	btfsc	status,2,c
  3354   006E92  EF4D  F037         	goto	u12171
  3355   006E96  EF4F  F037         	goto	u12170
  3356   006E9A                     u12171:
  3357   006E9A  EF5E  F037         	goto	l9956
  3358   006E9E                     u12170:
  3359   006E9E                     
  3360                           ;Calculator_Math/CalculatorMath.c: 234:                     if(*temp == '/'){
  3361   006E9E  C00F  FFD9         	movff	SyntaxErr@temp,fsr2l
  3362   006EA2  C010  FFDA         	movff	SyntaxErr@temp+1,fsr2h
  3363   006EA6  0E2F               	movlw	47
  3364   006EA8  18DE               	xorwf	postinc2,w,c
  3365   006EAA  A4D8               	btfss	status,2,c
  3366   006EAC  EF5A  F037         	goto	u12181
  3367   006EB0  EF5C  F037         	goto	u12180
  3368   006EB4                     u12181:
  3369   006EB4  EF5E  F037         	goto	l75
  3370   006EB8                     u12180:
  3371   006EB8  EF16  F036         	goto	l9870
  3372   006EBC                     l75:
  3373   006EBC                     l9956:
  3374                           
  3375                           ;Calculator_Math/CalculatorMath.c: 241:         if((!is_num(*str))&&(!is_op(*str))&&(*st
      +                          r!='.')){
  3376   006EBC  C008  FFD9         	movff	SyntaxErr@str,fsr2l
  3377   006EC0  C009  FFDA         	movff	SyntaxErr@str+1,fsr2h
  3378   006EC4  50DF               	movf	indf2,w,c
  3379   006EC6  EC71  F055         	call	_is_num
  3380   006ECA  0900               	iorlw	0
  3381   006ECC  A4D8               	btfss	status,2,c
  3382   006ECE  EF6B  F037         	goto	u12191
  3383   006ED2  EF6D  F037         	goto	u12190
  3384   006ED6                     u12191:
  3385   006ED6  EF8B  F037         	goto	l9966
  3386   006EDA                     u12190:
  3387   006EDA  C008  FFD9         	movff	SyntaxErr@str,fsr2l
  3388   006EDE  C009  FFDA         	movff	SyntaxErr@str+1,fsr2h
  3389   006EE2  50DF               	movf	indf2,w,c
  3390   006EE4  EC77  F052         	call	_is_op
  3391   006EE8  0900               	iorlw	0
  3392   006EEA  A4D8               	btfss	status,2,c
  3393   006EEC  EF7A  F037         	goto	u12201
  3394   006EF0  EF7C  F037         	goto	u12200
  3395   006EF4                     u12201:
  3396   006EF4  EF8B  F037         	goto	l9966
  3397   006EF8                     u12200:
  3398   006EF8  C008  FFD9         	movff	SyntaxErr@str,fsr2l
  3399   006EFC  C009  FFDA         	movff	SyntaxErr@str+1,fsr2h
  3400   006F00  0E2E               	movlw	46
  3401   006F02  18DE               	xorwf	postinc2,w,c
  3402   006F04  B4D8               	btfsc	status,2,c
  3403   006F06  EF87  F037         	goto	u12211
  3404   006F0A  EF89  F037         	goto	u12210
  3405   006F0E                     u12211:
  3406   006F0E  EF8B  F037         	goto	l9966
  3407   006F12                     u12210:
  3408   006F12  EF16  F036         	goto	l9870
  3409   006F16                     l9966:
  3410                           
  3411                           ;Calculator_Math/CalculatorMath.c: 244:         str++;
  3412   006F16  4A08               	infsnz	SyntaxErr@str^0,f,c
  3413   006F18  2A09               	incf	(SyntaxErr@str+1)^0,f,c
  3414   006F1A  EF47  F036         	goto	l9882
  3415   006F1E                     l9970:
  3416                           
  3417                           ;Calculator_Math/CalculatorMath.c: 189:     while(*str)
  3418   006F1E  C008  FFD9         	movff	SyntaxErr@str,fsr2l
  3419   006F22  C009  FFDA         	movff	SyntaxErr@str+1,fsr2h
  3420   006F26  50DF               	movf	indf2,w,c
  3421   006F28  A4D8               	btfss	status,2,c
  3422   006F2A  EF99  F037         	goto	u12221
  3423   006F2E  EF9B  F037         	goto	u12220
  3424   006F32                     u12221:
  3425   006F32  EF4D  F036         	goto	l9884
  3426   006F36                     u12220:
  3427   006F36                     
  3428                           ;Calculator_Math/CalculatorMath.c: 247:     return (0);
  3429   006F36  0E00               	movlw	0
  3430   006F38                     l49:
  3431   006F38  0012               	return		;funcret
  3432   006F3A                     __end_of_SyntaxErr:
  3433                           	callstack 0
  3434                           
  3435 ;; *************** function _is_num *****************
  3436 ;; Defined at:
  3437 ;;		line 295 in file "Calculator_Math/CalculatorMath.c"
  3438 ;; Parameters:    Size  Location     Type
  3439 ;;  x               1    wreg     unsigned char 
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;  x               1    2[COMRAM] unsigned char 
  3442 ;; Return value:  Size  Location     Type
  3443 ;;                  1    wreg      _Bool 
  3444 ;; Registers used:
  3445 ;;		wreg, status,2, status,0
  3446 ;; Tracked objects:
  3447 ;;		On entry : 0/0
  3448 ;;		On exit  : 0/0
  3449 ;;		Unchanged: 0/0
  3450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3452 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3454 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3455 ;;Total ram usage:        1 bytes
  3456 ;; Hardware stack levels used: 1
  3457 ;; Hardware stack levels required when called: 3
  3458 ;; This function calls:
  3459 ;;		Nothing
  3460 ;; This function is called by:
  3461 ;;		_SyntaxErr
  3462 ;; This function uses a non-reentrant model
  3463 ;;
  3464                           
  3465                           	psect	text4
  3466   00AAE2                     __ptext4:
  3467                           	callstack 0
  3468   00AAE2                     _is_num:
  3469                           	callstack 26
  3470                           
  3471                           ;incstack = 0
  3472                           ;is_num@x stored from wreg
  3473   00AAE2  6E03               	movwf	is_num@x^0,c
  3474   00AAE4                     
  3475                           ;Calculator_Math/CalculatorMath.c: 296:     if((x >= '0') && (x <= '9')){
  3476   00AAE4  0E2F               	movlw	47
  3477   00AAE6  6403               	cpfsgt	is_num@x^0,c
  3478   00AAE8  EF78  F055         	goto	u11321
  3479   00AAEC  EF7A  F055         	goto	u11320
  3480   00AAF0                     u11321:
  3481   00AAF0  EF85  F055         	goto	l9504
  3482   00AAF4                     u11320:
  3483   00AAF4  0E3A               	movlw	58
  3484   00AAF6  6003               	cpfslt	is_num@x^0,c
  3485   00AAF8  EF80  F055         	goto	u11331
  3486   00AAFC  EF82  F055         	goto	u11330
  3487   00AB00                     u11331:
  3488   00AB00  EF85  F055         	goto	l9504
  3489   00AB04                     u11330:
  3490   00AB04                     
  3491                           ;Calculator_Math/CalculatorMath.c: 297:         return (1);
  3492   00AB04  0E01               	movlw	1
  3493   00AB06  EF86  F055         	goto	l98
  3494   00AB0A                     l9504:
  3495                           
  3496                           ;Calculator_Math/CalculatorMath.c: 299:     return (0);
  3497   00AB0A  0E00               	movlw	0
  3498   00AB0C                     l98:
  3499   00AB0C  0012               	return		;funcret
  3500   00AB0E                     __end_of_is_num:
  3501                           	callstack 0
  3502                           
  3503 ;; *************** function _String_Remove_Char *****************
  3504 ;; Defined at:
  3505 ;;		line 122 in file "Calculator.c"
  3506 ;; Parameters:    Size  Location     Type
  3507 ;;  str             2    2[COMRAM] PTR unsigned char 
  3508 ;;		 -> main@MATH_STR(60), 
  3509 ;;  length          1    4[COMRAM] unsigned char 
  3510 ;; Auto vars:     Size  Location     Type
  3511 ;;		None
  3512 ;; Return value:  Size  Location     Type
  3513 ;;                  1    wreg      unsigned char 
  3514 ;; Registers used:
  3515 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3516 ;; Tracked objects:
  3517 ;;		On entry : 0/0
  3518 ;;		On exit  : 0/0
  3519 ;;		Unchanged: 0/0
  3520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3521 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3523 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3524 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3525 ;;Total ram usage:        5 bytes
  3526 ;; Hardware stack levels used: 1
  3527 ;; Hardware stack levels required when called: 3
  3528 ;; This function calls:
  3529 ;;		Nothing
  3530 ;; This function is called by:
  3531 ;;		_main
  3532 ;; This function uses a non-reentrant model
  3533 ;;
  3534                           
  3535                           	psect	text5
  3536   00A9AC                     __ptext5:
  3537                           	callstack 0
  3538   00A9AC                     _String_Remove_Char:
  3539                           	callstack 27
  3540   00A9AC                     
  3541                           ;Calculator.c: 123:     if(*str){
  3542   00A9AC  C003  FFD9         	movff	String_Remove_Char@str,fsr2l
  3543   00A9B0  C004  FFDA         	movff	String_Remove_Char@str+1,fsr2h
  3544   00A9B4  50DF               	movf	indf2,w,c
  3545   00A9B6  B4D8               	btfsc	status,2,c
  3546   00A9B8  EFE0  F054         	goto	u12461
  3547   00A9BC  EFE2  F054         	goto	u12460
  3548   00A9C0                     u12461:
  3549   00A9C0  EFF0  F054         	goto	l841
  3550   00A9C4                     u12460:
  3551   00A9C4                     
  3552                           ;Calculator.c: 124:         str[length-1] = ((void*)0);
  3553   00A9C4  5005               	movf	String_Remove_Char@length^0,w,c
  3554   00A9C6  2403               	addwf	String_Remove_Char@str^0,w,c
  3555   00A9C8  6E06               	movwf	??_String_Remove_Char^0,c
  3556   00A9CA  0E00               	movlw	0
  3557   00A9CC  2004               	addwfc	(String_Remove_Char@str+1)^0,w,c
  3558   00A9CE  6E07               	movwf	(??_String_Remove_Char+1)^0,c
  3559   00A9D0  0EFF               	movlw	255
  3560   00A9D2  2406               	addwf	??_String_Remove_Char^0,w,c
  3561   00A9D4  6ED9               	movwf	fsr2l,c
  3562   00A9D6  0EFF               	movlw	255
  3563   00A9D8  2007               	addwfc	(??_String_Remove_Char+1)^0,w,c
  3564   00A9DA  6EDA               	movwf	fsr2h,c
  3565   00A9DC  0E00               	movlw	0
  3566   00A9DE  6EDF               	movwf	indf2,c
  3567   00A9E0                     l841:
  3568   00A9E0  0012               	return		;funcret
  3569   00A9E2                     __end_of_String_Remove_Char:
  3570                           	callstack 0
  3571                           
  3572 ;; *************** function _String_Append_Char *****************
  3573 ;; Defined at:
  3574 ;;		line 137 in file "Calculator.c"
  3575 ;; Parameters:    Size  Location     Type
  3576 ;;  str             2   12[COMRAM] PTR unsigned char 
  3577 ;;		 -> main@MATH_STR(60), 
  3578 ;;  Data            1   14[COMRAM] unsigned char 
  3579 ;; Auto vars:     Size  Location     Type
  3580 ;;		None
  3581 ;; Return value:  Size  Location     Type
  3582 ;;                  1    wreg      void 
  3583 ;; Registers used:
  3584 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3585 ;; Tracked objects:
  3586 ;;		On entry : 0/0
  3587 ;;		On exit  : 0/0
  3588 ;;		Unchanged: 0/0
  3589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3590 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3593 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3594 ;;Total ram usage:        3 bytes
  3595 ;; Hardware stack levels used: 1
  3596 ;; Hardware stack levels required when called: 5
  3597 ;; This function calls:
  3598 ;;		_strncat
  3599 ;; This function is called by:
  3600 ;;		_main
  3601 ;; This function uses a non-reentrant model
  3602 ;;
  3603                           
  3604                           	psect	text6
  3605   00AC48                     __ptext6:
  3606                           	callstack 0
  3607   00AC48                     _String_Append_Char:
  3608                           	callstack 25
  3609   00AC48                     
  3610                           ;Calculator.c: 138:     strncat(str,&Data,1);
  3611   00AC48  C00D  F007         	movff	String_Append_Char@str,strncat@d
  3612   00AC4C  C00E  F008         	movff	String_Append_Char@str+1,strncat@d+1
  3613   00AC50  0E0F               	movlw	low String_Append_Char@Data
  3614   00AC52  6E09               	movwf	strncat@s^0,c
  3615   00AC54  0E00               	movlw	high String_Append_Char@Data
  3616   00AC56  6E0A               	movwf	(strncat@s+1)^0,c
  3617   00AC58  0E00               	movlw	0
  3618   00AC5A  6E0C               	movwf	(strncat@n+1)^0,c
  3619   00AC5C  0E01               	movlw	1
  3620   00AC5E  6E0B               	movwf	strncat@n^0,c
  3621   00AC60  EC74  F050         	call	_strncat	;wreg free
  3622   00AC64  0012               	return		;funcret
  3623   00AC66                     __end_of_String_Append_Char:
  3624                           	callstack 0
  3625                           
  3626 ;; *************** function _strncat *****************
  3627 ;; Defined at:
  3628 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strncat.c"
  3629 ;; Parameters:    Size  Location     Type
  3630 ;;  d               2    6[COMRAM] PTR unsigned char 
  3631 ;;		 -> main@MATH_STR(60), 
  3632 ;;  s               2    8[COMRAM] PTR const unsigned char 
  3633 ;;		 -> String_Append_Char@Data(1), 
  3634 ;;  n               2   10[COMRAM] unsigned int 
  3635 ;; Auto vars:     Size  Location     Type
  3636 ;;  a               2    0        PTR unsigned char 
  3637 ;;		 -> main@MATH_STR(60), 
  3638 ;; Return value:  Size  Location     Type
  3639 ;;                  2    6[COMRAM] PTR unsigned char 
  3640 ;; Registers used:
  3641 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3642 ;; Tracked objects:
  3643 ;;		On entry : 0/0
  3644 ;;		On exit  : 0/0
  3645 ;;		Unchanged: 0/0
  3646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3647 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3650 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3651 ;;Total ram usage:        6 bytes
  3652 ;; Hardware stack levels used: 1
  3653 ;; Hardware stack levels required when called: 4
  3654 ;; This function calls:
  3655 ;;		_strlen
  3656 ;; This function is called by:
  3657 ;;		_String_Append_Char
  3658 ;; This function uses a non-reentrant model
  3659 ;;
  3660                           
  3661                           	psect	text7
  3662   00A0E8                     __ptext7:
  3663                           	callstack 0
  3664   00A0E8                     _strncat:
  3665                           	callstack 25
  3666   00A0E8  C007  F003         	movff	strncat@d,strlen@s
  3667   00A0EC  C008  F004         	movff	strncat@d+1,strlen@s+1
  3668   00A0F0  ECF1  F054         	call	_strlen	;wreg free
  3669   00A0F4  5003               	movf	?_strlen^0,w,c
  3670   00A0F6  2607               	addwf	strncat@d^0,f,c
  3671   00A0F8  5004               	movf	(?_strlen+1)^0,w,c
  3672   00A0FA  2208               	addwfc	(strncat@d+1)^0,f,c
  3673   00A0FC  EF91  F050         	goto	l9746
  3674   00A100                     l9738:
  3675   00A100  060B               	decf	strncat@n^0,f,c
  3676   00A102  A0D8               	btfss	status,0,c
  3677   00A104  060C               	decf	(strncat@n+1)^0,f,c
  3678   00A106  C009  FFD9         	movff	strncat@s,fsr2l
  3679   00A10A  C00A  FFDA         	movff	strncat@s+1,fsr2h
  3680   00A10E  C007  FFE1         	movff	strncat@d,fsr1l
  3681   00A112  C008  FFE2         	movff	strncat@d+1,fsr1h
  3682   00A116  CFDF FFE7          	movff	indf2,indf1
  3683   00A11A  4A09               	infsnz	strncat@s^0,f,c
  3684   00A11C  2A0A               	incf	(strncat@s+1)^0,f,c
  3685   00A11E  4A07               	infsnz	strncat@d^0,f,c
  3686   00A120  2A08               	incf	(strncat@d+1)^0,f,c
  3687   00A122                     l9746:
  3688   00A122  500B               	movf	strncat@n^0,w,c
  3689   00A124  100C               	iorwf	(strncat@n+1)^0,w,c
  3690   00A126  B4D8               	btfsc	status,2,c
  3691   00A128  EF98  F050         	goto	u11651
  3692   00A12C  EF9A  F050         	goto	u11650
  3693   00A130                     u11651:
  3694   00A130  EFA6  F050         	goto	l9750
  3695   00A134                     u11650:
  3696   00A134  C009  FFD9         	movff	strncat@s,fsr2l
  3697   00A138  C00A  FFDA         	movff	strncat@s+1,fsr2h
  3698   00A13C  50DF               	movf	indf2,w,c
  3699   00A13E  A4D8               	btfss	status,2,c
  3700   00A140  EFA4  F050         	goto	u11661
  3701   00A144  EFA6  F050         	goto	u11660
  3702   00A148                     u11661:
  3703   00A148  EF80  F050         	goto	l9738
  3704   00A14C                     u11660:
  3705   00A14C                     l9750:
  3706   00A14C  C007  FFD9         	movff	strncat@d,fsr2l
  3707   00A150  C008  FFDA         	movff	strncat@d+1,fsr2h
  3708   00A154  0E00               	movlw	0
  3709   00A156  6EDF               	movwf	indf2,c
  3710   00A158  4A07               	infsnz	strncat@d^0,f,c
  3711   00A15A  2A08               	incf	(strncat@d+1)^0,f,c
  3712   00A15C  0012               	return		;funcret
  3713   00A15E                     __end_of_strncat:
  3714                           	callstack 0
  3715                           
  3716 ;; *************** function _strlen *****************
  3717 ;; Defined at:
  3718 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strlen.c"
  3719 ;; Parameters:    Size  Location     Type
  3720 ;;  s               2    2[COMRAM] PTR const unsigned char 
  3721 ;;		 -> main@MATH_STR(60), 
  3722 ;; Auto vars:     Size  Location     Type
  3723 ;;  a               2    4[COMRAM] PTR const unsigned char 
  3724 ;;		 -> main@MATH_STR(60), 
  3725 ;; Return value:  Size  Location     Type
  3726 ;;                  2    2[COMRAM] unsigned int 
  3727 ;; Registers used:
  3728 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3729 ;; Tracked objects:
  3730 ;;		On entry : 0/0
  3731 ;;		On exit  : 0/0
  3732 ;;		Unchanged: 0/0
  3733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3734 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3735 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3737 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3738 ;;Total ram usage:        4 bytes
  3739 ;; Hardware stack levels used: 1
  3740 ;; Hardware stack levels required when called: 3
  3741 ;; This function calls:
  3742 ;;		Nothing
  3743 ;; This function is called by:
  3744 ;;		_SyntaxErr
  3745 ;;		_strncat
  3746 ;; This function uses a non-reentrant model
  3747 ;;
  3748                           
  3749                           	psect	text8
  3750   00A9E2                     __ptext8:
  3751                           	callstack 0
  3752   00A9E2                     _strlen:
  3753                           	callstack 26
  3754   00A9E2  C003  F005         	movff	strlen@s,strlen@a
  3755   00A9E6  C004  F006         	movff	strlen@s+1,strlen@a+1
  3756   00A9EA  EFF9  F054         	goto	l8316
  3757   00A9EE                     l8314:
  3758   00A9EE  4A03               	infsnz	strlen@s^0,f,c
  3759   00A9F0  2A04               	incf	(strlen@s+1)^0,f,c
  3760   00A9F2                     l8316:
  3761   00A9F2  C003  FFD9         	movff	strlen@s,fsr2l
  3762   00A9F6  C004  FFDA         	movff	strlen@s+1,fsr2h
  3763   00A9FA  50DF               	movf	indf2,w,c
  3764   00A9FC  A4D8               	btfss	status,2,c
  3765   00A9FE  EF03  F055         	goto	u9481
  3766   00AA02  EF05  F055         	goto	u9480
  3767   00AA06                     u9481:
  3768   00AA06  EFF7  F054         	goto	l8314
  3769   00AA0A                     u9480:
  3770   00AA0A  5005               	movf	strlen@a^0,w,c
  3771   00AA0C  5C03               	subwf	strlen@s^0,w,c
  3772   00AA0E  6E03               	movwf	?_strlen^0,c
  3773   00AA10  5006               	movf	(strlen@a+1)^0,w,c
  3774   00AA12  5804               	subwfb	(strlen@s+1)^0,w,c
  3775   00AA14  6E04               	movwf	(?_strlen+1)^0,c
  3776   00AA16  0012               	return		;funcret
  3777   00AA18                     __end_of_strlen:
  3778                           	callstack 0
  3779                           
  3780 ;; *************** function _MathError *****************
  3781 ;; Defined at:
  3782 ;;		line 257 in file "Calculator_Math/CalculatorMath.c"
  3783 ;; Parameters:    Size  Location     Type
  3784 ;;  str             2   17[COMRAM] PTR unsigned char 
  3785 ;;		 -> main@MATH_STR(60), 
  3786 ;; Auto vars:     Size  Location     Type
  3787 ;;  temp            2   20[COMRAM] PTR unsigned char 
  3788 ;;		 -> main@MATH_STR(60), 
  3789 ;; Return value:  Size  Location     Type
  3790 ;;                  1    wreg      _Bool 
  3791 ;; Registers used:
  3792 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3793 ;; Tracked objects:
  3794 ;;		On entry : 0/0
  3795 ;;		On exit  : 0/0
  3796 ;;		Unchanged: 0/0
  3797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3798 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3799 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3800 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3801 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3802 ;;Total ram usage:        5 bytes
  3803 ;; Hardware stack levels used: 1
  3804 ;; Hardware stack levels required when called: 5
  3805 ;; This function calls:
  3806 ;;		_atoi
  3807 ;;		_is_power
  3808 ;; This function is called by:
  3809 ;;		_main
  3810 ;; This function uses a non-reentrant model
  3811 ;;
  3812                           
  3813                           	psect	text9
  3814   008F9C                     __ptext9:
  3815                           	callstack 0
  3816   008F9C                     _MathError:
  3817                           	callstack 25
  3818   008F9C                     l13330:
  3819                           
  3820                           ;Calculator_Math/CalculatorMath.c: 258:     char *temp = str;
  3821   008F9C  C012  F015         	movff	MathError@str,MathError@temp
  3822   008FA0  C013  F016         	movff	MathError@str+1,MathError@temp+1
  3823                           
  3824                           ;Calculator_Math/CalculatorMath.c: 259:     while(*str){
  3825   008FA4  EF52  F048         	goto	l13366
  3826   008FA8                     l13332:
  3827                           
  3828                           ;Calculator_Math/CalculatorMath.c: 260:         if(*str=='/'){
  3829   008FA8  C012  FFD9         	movff	MathError@str,fsr2l
  3830   008FAC  C013  FFDA         	movff	MathError@str+1,fsr2h
  3831   008FB0  0E2F               	movlw	47
  3832   008FB2  18DE               	xorwf	postinc2,w,c
  3833   008FB4  A4D8               	btfss	status,2,c
  3834   008FB6  EFDF  F047         	goto	u17211
  3835   008FBA  EFE1  F047         	goto	u17210
  3836   008FBE                     u17211:
  3837   008FBE  EF0C  F048         	goto	l13346
  3838   008FC2                     u17210:
  3839   008FC2                     
  3840                           ;Calculator_Math/CalculatorMath.c: 261:             temp++;
  3841   008FC2  4A15               	infsnz	MathError@temp^0,f,c
  3842   008FC4  2A16               	incf	(MathError@temp+1)^0,f,c
  3843   008FC6                     
  3844                           ;Calculator_Math/CalculatorMath.c: 262:             if(*temp){
  3845   008FC6  C015  FFD9         	movff	MathError@temp,fsr2l
  3846   008FCA  C016  FFDA         	movff	MathError@temp+1,fsr2h
  3847   008FCE  50DF               	movf	indf2,w,c
  3848   008FD0  B4D8               	btfsc	status,2,c
  3849   008FD2  EFED  F047         	goto	u17221
  3850   008FD6  EFEF  F047         	goto	u17220
  3851   008FDA                     u17221:
  3852   008FDA  EF0C  F048         	goto	l13346
  3853   008FDE                     u17220:
  3854   008FDE                     
  3855                           ;Calculator_Math/CalculatorMath.c: 263:                 if((*temp == '0')||(*temp == '.'
      +                          )){
  3856   008FDE  C015  FFD9         	movff	MathError@temp,fsr2l
  3857   008FE2  C016  FFDA         	movff	MathError@temp+1,fsr2h
  3858   008FE6  0E30               	movlw	48
  3859   008FE8  18DE               	xorwf	postinc2,w,c
  3860   008FEA  B4D8               	btfsc	status,2,c
  3861   008FEC  EFFA  F047         	goto	u17231
  3862   008FF0  EFFC  F047         	goto	u17230
  3863   008FF4                     u17231:
  3864   008FF4  EF09  F048         	goto	l13342
  3865   008FF8                     u17230:
  3866   008FF8  C015  FFD9         	movff	MathError@temp,fsr2l
  3867   008FFC  C016  FFDA         	movff	MathError@temp+1,fsr2h
  3868   009000  0E2E               	movlw	46
  3869   009002  18DE               	xorwf	postinc2,w,c
  3870   009004  A4D8               	btfss	status,2,c
  3871   009006  EF07  F048         	goto	u17241
  3872   00900A  EF09  F048         	goto	u17240
  3873   00900E                     u17241:
  3874   00900E  EF0C  F048         	goto	l13346
  3875   009012                     u17240:
  3876   009012                     l13342:
  3877                           
  3878                           ;Calculator_Math/CalculatorMath.c: 264:                     return (1);
  3879   009012  0E01               	movlw	1
  3880   009014  EF5F  F048         	goto	l89
  3881   009018                     l13346:
  3882                           
  3883                           ;Calculator_Math/CalculatorMath.c: 268:         if(*str == '0'){
  3884   009018  C012  FFD9         	movff	MathError@str,fsr2l
  3885   00901C  C013  FFDA         	movff	MathError@str+1,fsr2h
  3886   009020  0E30               	movlw	48
  3887   009022  18DE               	xorwf	postinc2,w,c
  3888   009024  A4D8               	btfss	status,2,c
  3889   009026  EF17  F048         	goto	u17251
  3890   00902A  EF19  F048         	goto	u17250
  3891   00902E                     u17251:
  3892   00902E  EF4E  F048         	goto	l13362
  3893   009032                     u17250:
  3894   009032                     
  3895                           ;Calculator_Math/CalculatorMath.c: 269:             temp++;
  3896   009032  4A15               	infsnz	MathError@temp^0,f,c
  3897   009034  2A16               	incf	(MathError@temp+1)^0,f,c
  3898   009036                     
  3899                           ;Calculator_Math/CalculatorMath.c: 270:             if(is_power(temp)){
  3900   009036  C015  F003         	movff	MathError@temp,is_power@x
  3901   00903A  C016  F004         	movff	MathError@temp+1,is_power@x+1
  3902   00903E  ECEA  F050         	call	_is_power	;wreg free
  3903   009042  0900               	iorlw	0
  3904   009044  B4D8               	btfsc	status,2,c
  3905   009046  EF27  F048         	goto	u17261
  3906   00904A  EF29  F048         	goto	u17260
  3907   00904E                     u17261:
  3908   00904E  EF4E  F048         	goto	l13362
  3909   009052                     u17260:
  3910   009052                     
  3911                           ;Calculator_Math/CalculatorMath.c: 271:                 temp++;
  3912   009052  4A15               	infsnz	MathError@temp^0,f,c
  3913   009054  2A16               	incf	(MathError@temp+1)^0,f,c
  3914                           
  3915                           ;Calculator_Math/CalculatorMath.c: 272:                 temp++;
  3916   009056  4A15               	infsnz	MathError@temp^0,f,c
  3917   009058  2A16               	incf	(MathError@temp+1)^0,f,c
  3918   00905A                     
  3919                           ;Calculator_Math/CalculatorMath.c: 273:                 if(*str){
  3920   00905A  C012  FFD9         	movff	MathError@str,fsr2l
  3921   00905E  C013  FFDA         	movff	MathError@str+1,fsr2h
  3922   009062  50DF               	movf	indf2,w,c
  3923   009064  B4D8               	btfsc	status,2,c
  3924   009066  EF37  F048         	goto	u17271
  3925   00906A  EF39  F048         	goto	u17270
  3926   00906E                     u17271:
  3927   00906E  EF4E  F048         	goto	l13362
  3928   009072                     u17270:
  3929   009072                     
  3930                           ;Calculator_Math/CalculatorMath.c: 274:                     if(atoi(temp)<=0)
  3931   009072  C015  F009         	movff	MathError@temp,atoi@s
  3932   009076  C016  F00A         	movff	MathError@temp+1,atoi@s+1
  3933   00907A  EC23  F03F         	call	_atoi	;wreg free
  3934   00907E  BE0A               	btfsc	(?_atoi+1)^0,7,c
  3935   009080  EF4C  F048         	goto	u17280
  3936   009084  500A               	movf	(?_atoi+1)^0,w,c
  3937   009086  E106               	bnz	u17281
  3938   009088  0409               	decf	?_atoi^0,w,c
  3939   00908A  B0D8               	btfsc	status,0,c
  3940   00908C  EF4A  F048         	goto	u17281
  3941   009090  EF4C  F048         	goto	u17280
  3942   009094                     u17281:
  3943   009094  EF4E  F048         	goto	l91
  3944   009098                     u17280:
  3945   009098  EF09  F048         	goto	l13342
  3946   00909C                     l91:
  3947   00909C                     l13362:
  3948                           
  3949                           ;Calculator_Math/CalculatorMath.c: 281:         str++;
  3950   00909C  4A12               	infsnz	MathError@str^0,f,c
  3951   00909E  2A13               	incf	(MathError@str+1)^0,f,c
  3952   0090A0  EFCE  F047         	goto	l13330
  3953   0090A4                     l13366:
  3954                           
  3955                           ;Calculator_Math/CalculatorMath.c: 259:     while(*str){
  3956   0090A4  C012  FFD9         	movff	MathError@str,fsr2l
  3957   0090A8  C013  FFDA         	movff	MathError@str+1,fsr2h
  3958   0090AC  50DF               	movf	indf2,w,c
  3959   0090AE  A4D8               	btfss	status,2,c
  3960   0090B0  EF5C  F048         	goto	u17291
  3961   0090B4  EF5E  F048         	goto	u17290
  3962   0090B8                     u17291:
  3963   0090B8  EFD4  F047         	goto	l13332
  3964   0090BC                     u17290:
  3965   0090BC                     
  3966                           ;Calculator_Math/CalculatorMath.c: 284:     return (0);
  3967   0090BC  0E00               	movlw	0
  3968   0090BE                     l89:
  3969   0090BE  0012               	return		;funcret
  3970   0090C0                     __end_of_MathError:
  3971                           	callstack 0
  3972                           
  3973 ;; *************** function _HandleString *****************
  3974 ;; Defined at:
  3975 ;;		line 54 in file "Calculator_Math/CalculatorMath.c"
  3976 ;; Parameters:    Size  Location     Type
  3977 ;;  str             2   28[BANK0 ] PTR unsigned char 
  3978 ;;		 -> main@MATH_STR(60), 
  3979 ;; Auto vars:     Size  Location     Type
  3980 ;;  num1            4   46[BANK0 ] float 
  3981 ;;  num2            4   42[BANK0 ] float 
  3982 ;;  temp            4   35[BANK0 ] float 
  3983 ;;  op              1   50[BANK0 ] unsigned char 
  3984 ;;  op2             1   41[BANK0 ] unsigned char 
  3985 ;;  op_Handle_Po    1   40[BANK0 ] unsigned char 
  3986 ;;  president_fl    1   39[BANK0 ] _Bool 
  3987 ;;  numberCaught    1   34[BANK0 ] unsigned char 
  3988 ;;  FIRST_NUM       1   33[BANK0 ] unsigned char 
  3989 ;;  prev_char       1    0        unsigned char 
  3990 ;; Return value:  Size  Location     Type
  3991 ;;                  4   28[BANK0 ] float 
  3992 ;; Registers used:
  3993 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3994 ;; Tracked objects:
  3995 ;;		On entry : 0/0
  3996 ;;		On exit  : 0/0
  3997 ;;		Unchanged: 0/0
  3998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3999 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4000 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4001 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4002 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4003 ;;Total ram usage:       23 bytes
  4004 ;; Hardware stack levels used: 1
  4005 ;; Hardware stack levels required when called: 7
  4006 ;; This function calls:
  4007 ;;		_Calculate
  4008 ;;		_atof
  4009 ;;		_is_op
  4010 ;;		_is_power
  4011 ;; This function is called by:
  4012 ;;		_main
  4013 ;; This function uses a non-reentrant model
  4014 ;;
  4015                           
  4016                           	psect	text10
  4017   006F3A                     __ptext10:
  4018                           	callstack 0
  4019   006F3A                     _HandleString:
  4020                           	callstack 23
  4021   006F3A                     
  4022                           ;Calculator_Math/CalculatorMath.c: 58:     unsigned char numberCaught = (0);
  4023   006F3A  0E00               	movlw	0
  4024   006F3C  0100               	movlb	0	; () banked
  4025   006F3E  6FA2               	movwf	HandleString@numberCaught& (0+255),b
  4026                           
  4027                           ;Calculator_Math/CalculatorMath.c: 60:     unsigned char FIRST_NUM = 1;
  4028   006F40  0E01               	movlw	1
  4029   006F42  6FA1               	movwf	HandleString@FIRST_NUM& (0+255),b
  4030                           
  4031                           ;Calculator_Math/CalculatorMath.c: 62:     char op = 0;
  4032   006F44  0E00               	movlw	0
  4033   006F46  6FB2               	movwf	HandleString@op& (0+255),b
  4034                           
  4035                           ;Calculator_Math/CalculatorMath.c: 64:     char op2 = 0;
  4036   006F48  0E00               	movlw	0
  4037   006F4A  6FA9               	movwf	HandleString@op2& (0+255),b
  4038                           
  4039                           ;Calculator_Math/CalculatorMath.c: 66:     char op_Handle_Power=0;
  4040   006F4C  0E00               	movlw	0
  4041   006F4E  6FA8               	movwf	HandleString@op_Handle_Power& (0+255),b
  4042                           
  4043                           ;Calculator_Math/CalculatorMath.c: 68:     _Bool president_flag = 0;
  4044   006F50  0E00               	movlw	0
  4045   006F52  6FA7               	movwf	HandleString@president_flag& (0+255),b
  4046                           
  4047                           ;Calculator_Math/CalculatorMath.c: 70:     float32 temp = 0;
  4048   006F54  0E00               	movlw	0
  4049   006F56  6FA3               	movwf	HandleString@temp& (0+255),b
  4050   006F58  0E00               	movlw	0
  4051   006F5A  6FA4               	movwf	(HandleString@temp+1)& (0+255),b
  4052   006F5C  0E00               	movlw	0
  4053   006F5E  6FA5               	movwf	(HandleString@temp+2)& (0+255),b
  4054   006F60  0E00               	movlw	0
  4055   006F62  6FA6               	movwf	(HandleString@temp+3)& (0+255),b
  4056                           
  4057                           ;Calculator_Math/CalculatorMath.c: 72:     float32 num1 = 0;
  4058   006F64  0E00               	movlw	0
  4059   006F66  6FAE               	movwf	HandleString@num1& (0+255),b
  4060   006F68  0E00               	movlw	0
  4061   006F6A  6FAF               	movwf	(HandleString@num1+1)& (0+255),b
  4062   006F6C  0E00               	movlw	0
  4063   006F6E  6FB0               	movwf	(HandleString@num1+2)& (0+255),b
  4064   006F70  0E00               	movlw	0
  4065   006F72  6FB1               	movwf	(HandleString@num1+3)& (0+255),b
  4066                           
  4067                           ;Calculator_Math/CalculatorMath.c: 74:     float32 num2 = 0;
  4068   006F74  0E00               	movlw	0
  4069   006F76  6FAA               	movwf	HandleString@num2& (0+255),b
  4070   006F78  0E00               	movlw	0
  4071   006F7A  6FAB               	movwf	(HandleString@num2+1)& (0+255),b
  4072   006F7C  0E00               	movlw	0
  4073   006F7E  6FAC               	movwf	(HandleString@num2+2)& (0+255),b
  4074   006F80  0E00               	movlw	0
  4075   006F82  6FAD               	movwf	(HandleString@num2+3)& (0+255),b
  4076   006F84                     
  4077                           ; BSR set to: 0
  4078                           ;Calculator_Math/CalculatorMath.c: 77:     if((*str == '-')||(*str == '+')){
  4079   006F84  C09C  FFD9         	movff	HandleString@str,fsr2l
  4080   006F88  C09D  FFDA         	movff	HandleString@str+1,fsr2h
  4081   006F8C  0E2D               	movlw	45
  4082   006F8E  18DE               	xorwf	postinc2,w,c
  4083   006F90  B4D8               	btfsc	status,2,c
  4084   006F92  EFCD  F037         	goto	u17041
  4085   006F96  EFCF  F037         	goto	u17040
  4086   006F9A                     u17041:
  4087   006F9A  EFDC  F037         	goto	l13258
  4088   006F9E                     u17040:
  4089   006F9E                     
  4090                           ; BSR set to: 0
  4091   006F9E  C09C  FFD9         	movff	HandleString@str,fsr2l
  4092   006FA2  C09D  FFDA         	movff	HandleString@str+1,fsr2h
  4093   006FA6  0E2B               	movlw	43
  4094   006FA8  18DE               	xorwf	postinc2,w,c
  4095   006FAA  A4D8               	btfss	status,2,c
  4096   006FAC  EFDA  F037         	goto	u17051
  4097   006FB0  EFDC  F037         	goto	u17050
  4098   006FB4                     u17051:
  4099   006FB4  EFE8  F038         	goto	l13316
  4100   006FB8                     u17050:
  4101   006FB8                     l13258:
  4102                           
  4103                           ; BSR set to: 0
  4104                           ;Calculator_Math/CalculatorMath.c: 78:         FIRST_NUM = 0;
  4105   006FB8  0E00               	movlw	0
  4106   006FBA  6FA1               	movwf	HandleString@FIRST_NUM& (0+255),b
  4107                           
  4108                           ;Calculator_Math/CalculatorMath.c: 79:         numberCaught = (1);
  4109   006FBC  0E01               	movlw	1
  4110   006FBE  6FA2               	movwf	HandleString@numberCaught& (0+255),b
  4111   006FC0  EFE8  F038         	goto	l13316
  4112   006FC4                     l13260:
  4113                           
  4114                           ; BSR set to: 0
  4115                           ;Calculator_Math/CalculatorMath.c: 85:         if(numberCaught == (0)){
  4116   006FC4  51A2               	movf	HandleString@numberCaught& (0+255),w,b
  4117   006FC6  A4D8               	btfss	status,2,c
  4118   006FC8  EFE8  F037         	goto	u17061
  4119   006FCC  EFEA  F037         	goto	u17060
  4120   006FD0                     u17061:
  4121   006FD0  EF16  F038         	goto	l13270
  4122   006FD4                     u17060:
  4123   006FD4                     
  4124                           ; BSR set to: 0
  4125                           ;Calculator_Math/CalculatorMath.c: 86:             numberCaught = (1);
  4126   006FD4  0E01               	movlw	1
  4127   006FD6  6FA2               	movwf	HandleString@numberCaught& (0+255),b
  4128                           
  4129                           ;Calculator_Math/CalculatorMath.c: 87:             if(FIRST_NUM){
  4130   006FD8  51A1               	movf	HandleString@FIRST_NUM& (0+255),w,b
  4131   006FDA  B4D8               	btfsc	status,2,c
  4132   006FDC  EFF2  F037         	goto	u17071
  4133   006FE0  EFF4  F037         	goto	u17070
  4134   006FE4                     u17071:
  4135   006FE4  EF06  F038         	goto	l13268
  4136   006FE8                     u17070:
  4137   006FE8                     
  4138                           ; BSR set to: 0
  4139                           ;Calculator_Math/CalculatorMath.c: 88:                 FIRST_NUM = 0;
  4140   006FE8  0E00               	movlw	0
  4141   006FEA  6FA1               	movwf	HandleString@FIRST_NUM& (0+255),b
  4142   006FEC                     
  4143                           ; BSR set to: 0
  4144                           ;Calculator_Math/CalculatorMath.c: 89:                 num1 = atof(str);
  4145   006FEC  C09C  F095         	movff	HandleString@str,atof@s
  4146   006FF0  C09D  F096         	movff	HandleString@str+1,atof@s+1
  4147   006FF4  ECB3  F055         	call	_atof	;wreg free
  4148   006FF8  C095  F0AE         	movff	?_atof,HandleString@num1
  4149   006FFC  C096  F0AF         	movff	?_atof+1,HandleString@num1+1
  4150   007000  C097  F0B0         	movff	?_atof+2,HandleString@num1+2
  4151   007004  C098  F0B1         	movff	?_atof+3,HandleString@num1+3
  4152                           
  4153                           ;Calculator_Math/CalculatorMath.c: 90:             }
  4154   007008  EFE5  F038         	goto	l13312
  4155   00700C                     l13268:
  4156                           
  4157                           ; BSR set to: 0
  4158                           ;Calculator_Math/CalculatorMath.c: 92:                 num2 = atof(str);
  4159   00700C  C09C  F095         	movff	HandleString@str,atof@s
  4160   007010  C09D  F096         	movff	HandleString@str+1,atof@s+1
  4161   007014  ECB3  F055         	call	_atof	;wreg free
  4162   007018  C095  F0AA         	movff	?_atof,HandleString@num2
  4163   00701C  C096  F0AB         	movff	?_atof+1,HandleString@num2+1
  4164   007020  C097  F0AC         	movff	?_atof+2,HandleString@num2+2
  4165   007024  C098  F0AD         	movff	?_atof+3,HandleString@num2+3
  4166   007028  EFE5  F038         	goto	l13312
  4167   00702C                     l13270:
  4168                           
  4169                           ; BSR set to: 0
  4170   00702C  C09C  FFD9         	movff	HandleString@str,fsr2l
  4171   007030  C09D  FFDA         	movff	HandleString@str+1,fsr2h
  4172   007034  50DF               	movf	indf2,w,c
  4173   007036  EC77  F052         	call	_is_op
  4174   00703A  0900               	iorlw	0
  4175   00703C  B4D8               	btfsc	status,2,c
  4176   00703E  EF23  F038         	goto	u17081
  4177   007042  EF25  F038         	goto	u17080
  4178   007046                     u17081:
  4179   007046  EFE5  F038         	goto	l13312
  4180   00704A                     u17080:
  4181   00704A                     
  4182                           ;Calculator_Math/CalculatorMath.c: 98:             if(is_power(str)){
  4183   00704A  C09C  F003         	movff	HandleString@str,is_power@x
  4184   00704E  C09D  F004         	movff	HandleString@str+1,is_power@x+1
  4185   007052  ECEA  F050         	call	_is_power	;wreg free
  4186   007056  0900               	iorlw	0
  4187   007058  B4D8               	btfsc	status,2,c
  4188   00705A  EF31  F038         	goto	u17091
  4189   00705E  EF33  F038         	goto	u17090
  4190   007062                     u17091:
  4191   007062  EF3A  F038         	goto	l13278
  4192   007066                     u17090:
  4193   007066                     
  4194                           ;Calculator_Math/CalculatorMath.c: 100:                 op_Handle_Power = '.';
  4195   007066  0E2E               	movlw	46
  4196   007068  0100               	movlb	0	; () banked
  4197   00706A  6FA8               	movwf	HandleString@op_Handle_Power& (0+255),b
  4198   00706C                     
  4199                           ; BSR set to: 0
  4200                           ;Calculator_Math/CalculatorMath.c: 101:                 str++;
  4201   00706C  4B9C               	infsnz	HandleString@str& (0+255),f,b
  4202   00706E  2B9D               	incf	(HandleString@str+1)& (0+255),f,b
  4203                           
  4204                           ;Calculator_Math/CalculatorMath.c: 102:             }
  4205   007070  EF41  F038         	goto	l13280
  4206   007074                     l13278:
  4207                           
  4208                           ;Calculator_Math/CalculatorMath.c: 104:                 op_Handle_Power = *str;
  4209   007074  C09C  FFD9         	movff	HandleString@str,fsr2l
  4210   007078  C09D  FFDA         	movff	HandleString@str+1,fsr2h
  4211   00707C  50DF               	movf	indf2,w,c
  4212   00707E  0100               	movlb	0	; () banked
  4213   007080  6FA8               	movwf	HandleString@op_Handle_Power& (0+255),b
  4214   007082                     l13280:
  4215                           
  4216                           ; BSR set to: 0
  4217                           ;Calculator_Math/CalculatorMath.c: 111:             if(president_flag){
  4218   007082  51A7               	movf	HandleString@president_flag& (0+255),w,b
  4219   007084  B4D8               	btfsc	status,2,c
  4220   007086  EF47  F038         	goto	u17101
  4221   00708A  EF49  F038         	goto	u17100
  4222   00708E                     u17101:
  4223   00708E  EF70  F038         	goto	l13288
  4224   007092                     u17100:
  4225   007092                     
  4226                           ; BSR set to: 0
  4227                           ;Calculator_Math/CalculatorMath.c: 112:                 num2=Calculate(num1,num2,op2);
  4228   007092  C0AE  F091         	movff	HandleString@num1,Calculate@n1
  4229   007096  C0AF  F092         	movff	HandleString@num1+1,Calculate@n1+1
  4230   00709A  C0B0  F093         	movff	HandleString@num1+2,Calculate@n1+2
  4231   00709E  C0B1  F094         	movff	HandleString@num1+3,Calculate@n1+3
  4232   0070A2  C0AA  F095         	movff	HandleString@num2,Calculate@n2
  4233   0070A6  C0AB  F096         	movff	HandleString@num2+1,Calculate@n2+1
  4234   0070AA  C0AC  F097         	movff	HandleString@num2+2,Calculate@n2+2
  4235   0070AE  C0AD  F098         	movff	HandleString@num2+3,Calculate@n2+3
  4236   0070B2  C0A9  F099         	movff	HandleString@op2,Calculate@op
  4237   0070B6  EC2B  F043         	call	_Calculate	;wreg free
  4238   0070BA  C091  F0AA         	movff	?_Calculate,HandleString@num2
  4239   0070BE  C092  F0AB         	movff	?_Calculate+1,HandleString@num2+1
  4240   0070C2  C093  F0AC         	movff	?_Calculate+2,HandleString@num2+2
  4241   0070C6  C094  F0AD         	movff	?_Calculate+3,HandleString@num2+3
  4242   0070CA                     
  4243                           ;Calculator_Math/CalculatorMath.c: 113:                 num1 = temp;
  4244   0070CA  C0A3  F0AE         	movff	HandleString@temp,HandleString@num1
  4245   0070CE  C0A4  F0AF         	movff	HandleString@temp+1,HandleString@num1+1
  4246   0070D2  C0A5  F0B0         	movff	HandleString@temp+2,HandleString@num1+2
  4247   0070D6  C0A6  F0B1         	movff	HandleString@temp+3,HandleString@num1+3
  4248   0070DA                     
  4249                           ;Calculator_Math/CalculatorMath.c: 114:                 president_flag = 0;
  4250   0070DA  0E00               	movlw	0
  4251   0070DC  0100               	movlb	0	; () banked
  4252   0070DE  6FA7               	movwf	HandleString@president_flag& (0+255),b
  4253   0070E0                     l13288:
  4254                           
  4255                           ; BSR set to: 0
  4256                           ;Calculator_Math/CalculatorMath.c: 118:             if(op!=0){
  4257   0070E0  51B2               	movf	HandleString@op& (0+255),w,b
  4258   0070E2  B4D8               	btfsc	status,2,c
  4259   0070E4  EF76  F038         	goto	u17111
  4260   0070E8  EF78  F038         	goto	u17110
  4261   0070EC                     u17111:
  4262   0070EC  EFE0  F038         	goto	l13308
  4263   0070F0                     u17110:
  4264   0070F0                     
  4265                           ; BSR set to: 0
  4266                           ;Calculator_Math/CalculatorMath.c: 119:                 op2=op_Handle_Power;
  4267   0070F0  C0A8  F0A9         	movff	HandleString@op_Handle_Power,HandleString@op2
  4268   0070F4                     
  4269                           ; BSR set to: 0
  4270                           ;Calculator_Math/CalculatorMath.c: 121:                  if(
  4271   0070F4  0E2A               	movlw	42
  4272   0070F6  19A9               	xorwf	HandleString@op2& (0+255),w,b
  4273   0070F8  B4D8               	btfsc	status,2,c
  4274   0070FA  EF81  F038         	goto	u17121
  4275   0070FE  EF83  F038         	goto	u17120
  4276   007102                     u17121:
  4277   007102  EF8C  F038         	goto	l13296
  4278   007106                     u17120:
  4279   007106                     
  4280                           ; BSR set to: 0
  4281   007106  0E2F               	movlw	47
  4282   007108  19A9               	xorwf	HandleString@op2& (0+255),w,b
  4283   00710A  A4D8               	btfss	status,2,c
  4284   00710C  EF8A  F038         	goto	u17131
  4285   007110  EF8C  F038         	goto	u17130
  4286   007114                     u17131:
  4287   007114  EFA7  F038         	goto	l13302
  4288   007118                     u17130:
  4289   007118                     l13296:
  4290                           
  4291                           ; BSR set to: 0
  4292   007118  0E2E               	movlw	46
  4293   00711A  19B2               	xorwf	HandleString@op& (0+255),w,b
  4294   00711C  B4D8               	btfsc	status,2,c
  4295   00711E  EF93  F038         	goto	u17141
  4296   007122  EF95  F038         	goto	u17140
  4297   007126                     u17141:
  4298   007126  EFA7  F038         	goto	l13302
  4299   00712A                     u17140:
  4300   00712A                     
  4301                           ; BSR set to: 0
  4302   00712A  0E2A               	movlw	42
  4303   00712C  19B2               	xorwf	HandleString@op& (0+255),w,b
  4304   00712E  B4D8               	btfsc	status,2,c
  4305   007130  EF9C  F038         	goto	u17151
  4306   007134  EF9E  F038         	goto	u17150
  4307   007138                     u17151:
  4308   007138  EFA7  F038         	goto	l13302
  4309   00713C                     u17150:
  4310   00713C                     
  4311                           ; BSR set to: 0
  4312   00713C  0E2F               	movlw	47
  4313   00713E  19B2               	xorwf	HandleString@op& (0+255),w,b
  4314   007140  A4D8               	btfss	status,2,c
  4315   007142  EFA5  F038         	goto	u17161
  4316   007146  EFA7  F038         	goto	u17160
  4317   00714A                     u17161:
  4318   00714A  EFB0  F038         	goto	l35
  4319   00714E                     u17160:
  4320   00714E                     l13302:
  4321                           
  4322                           ; BSR set to: 0
  4323   00714E  0E2E               	movlw	46
  4324   007150  19A9               	xorwf	HandleString@op2& (0+255),w,b
  4325   007152  A4D8               	btfss	status,2,c
  4326   007154  EFAE  F038         	goto	u17171
  4327   007158  EFB0  F038         	goto	u17170
  4328   00715C                     u17171:
  4329   00715C  EFC4  F038         	goto	l13306
  4330   007160                     u17170:
  4331   007160                     l35:
  4332                           
  4333                           ; BSR set to: 0
  4334                           ;Calculator_Math/CalculatorMath.c: 125:                     ){;Calculator_Math/Calculato
      +                          rMath.c: 126:                     temp = num1;
  4335   007160  C0AE  F0A3         	movff	HandleString@num1,HandleString@temp
  4336   007164  C0AF  F0A4         	movff	HandleString@num1+1,HandleString@temp+1
  4337   007168  C0B0  F0A5         	movff	HandleString@num1+2,HandleString@temp+2
  4338   00716C  C0B1  F0A6         	movff	HandleString@num1+3,HandleString@temp+3
  4339                           
  4340                           ;Calculator_Math/CalculatorMath.c: 127:                     num1 = num2;
  4341   007170  C0AA  F0AE         	movff	HandleString@num2,HandleString@num1
  4342   007174  C0AB  F0AF         	movff	HandleString@num2+1,HandleString@num1+1
  4343   007178  C0AC  F0B0         	movff	HandleString@num2+2,HandleString@num1+2
  4344   00717C  C0AD  F0B1         	movff	HandleString@num2+3,HandleString@num1+3
  4345   007180                     
  4346                           ; BSR set to: 0
  4347                           ;Calculator_Math/CalculatorMath.c: 128:                     president_flag = 1;
  4348   007180  0E01               	movlw	1
  4349   007182  6FA7               	movwf	HandleString@president_flag& (0+255),b
  4350                           
  4351                           ;Calculator_Math/CalculatorMath.c: 129:                 }
  4352   007184  EFE2  F038         	goto	l13310
  4353   007188                     l13306:
  4354                           
  4355                           ; BSR set to: 0
  4356                           ;Calculator_Math/CalculatorMath.c: 132:                     num1 = Calculate(num1,num2,o
      +                          p);
  4357   007188  C0AE  F091         	movff	HandleString@num1,Calculate@n1
  4358   00718C  C0AF  F092         	movff	HandleString@num1+1,Calculate@n1+1
  4359   007190  C0B0  F093         	movff	HandleString@num1+2,Calculate@n1+2
  4360   007194  C0B1  F094         	movff	HandleString@num1+3,Calculate@n1+3
  4361   007198  C0AA  F095         	movff	HandleString@num2,Calculate@n2
  4362   00719C  C0AB  F096         	movff	HandleString@num2+1,Calculate@n2+1
  4363   0071A0  C0AC  F097         	movff	HandleString@num2+2,Calculate@n2+2
  4364   0071A4  C0AD  F098         	movff	HandleString@num2+3,Calculate@n2+3
  4365   0071A8  C0B2  F099         	movff	HandleString@op,Calculate@op
  4366   0071AC  EC2B  F043         	call	_Calculate	;wreg free
  4367   0071B0  C091  F0AE         	movff	?_Calculate,HandleString@num1
  4368   0071B4  C092  F0AF         	movff	?_Calculate+1,HandleString@num1+1
  4369   0071B8  C093  F0B0         	movff	?_Calculate+2,HandleString@num1+2
  4370   0071BC  C094  F0B1         	movff	?_Calculate+3,HandleString@num1+3
  4371   0071C0                     l13308:
  4372                           
  4373                           ;Calculator_Math/CalculatorMath.c: 133:                     op = op_Handle_Power;
  4374   0071C0  C0A8  F0B2         	movff	HandleString@op_Handle_Power,HandleString@op
  4375   0071C4                     l13310:
  4376                           
  4377                           ;Calculator_Math/CalculatorMath.c: 141:             numberCaught = (0);
  4378   0071C4  0E00               	movlw	0
  4379   0071C6  0100               	movlb	0	; () banked
  4380   0071C8  6FA2               	movwf	HandleString@numberCaught& (0+255),b
  4381   0071CA                     l13312:
  4382   0071CA                     
  4383                           ;Calculator_Math/CalculatorMath.c: 145:         str++;
  4384   0071CA  0100               	movlb	0	; () banked
  4385   0071CC  4B9C               	infsnz	HandleString@str& (0+255),f,b
  4386   0071CE  2B9D               	incf	(HandleString@str+1)& (0+255),f,b
  4387   0071D0                     l13316:
  4388                           
  4389                           ; BSR set to: 0
  4390                           ;Calculator_Math/CalculatorMath.c: 83:     while(*str){
  4391   0071D0  C09C  FFD9         	movff	HandleString@str,fsr2l
  4392   0071D4  C09D  FFDA         	movff	HandleString@str+1,fsr2h
  4393   0071D8  50DF               	movf	indf2,w,c
  4394   0071DA  A4D8               	btfss	status,2,c
  4395   0071DC  EFF2  F038         	goto	u17181
  4396   0071E0  EFF4  F038         	goto	u17180
  4397   0071E4                     u17181:
  4398   0071E4  EFE2  F037         	goto	l13260
  4399   0071E8                     u17180:
  4400   0071E8                     
  4401                           ; BSR set to: 0
  4402                           ;Calculator_Math/CalculatorMath.c: 148:     if(op){
  4403   0071E8  51B2               	movf	HandleString@op& (0+255),w,b
  4404   0071EA  B4D8               	btfsc	status,2,c
  4405   0071EC  EFFA  F038         	goto	u17191
  4406   0071F0  EFFC  F038         	goto	u17190
  4407   0071F4                     u17191:
  4408   0071F4  EF44  F039         	goto	l13326
  4409   0071F8                     u17190:
  4410   0071F8                     
  4411                           ; BSR set to: 0
  4412                           ;Calculator_Math/CalculatorMath.c: 149:         if(president_flag){
  4413   0071F8  51A7               	movf	HandleString@president_flag& (0+255),w,b
  4414   0071FA  B4D8               	btfsc	status,2,c
  4415   0071FC  EF02  F039         	goto	u17201
  4416   007200  EF04  F039         	goto	u17200
  4417   007204                     u17201:
  4418   007204  EF28  F039         	goto	l44
  4419   007208                     u17200:
  4420   007208                     
  4421                           ; BSR set to: 0
  4422                           ;Calculator_Math/CalculatorMath.c: 150:             num2=Calculate(num1,num2,op2);
  4423   007208  C0AE  F091         	movff	HandleString@num1,Calculate@n1
  4424   00720C  C0AF  F092         	movff	HandleString@num1+1,Calculate@n1+1
  4425   007210  C0B0  F093         	movff	HandleString@num1+2,Calculate@n1+2
  4426   007214  C0B1  F094         	movff	HandleString@num1+3,Calculate@n1+3
  4427   007218  C0AA  F095         	movff	HandleString@num2,Calculate@n2
  4428   00721C  C0AB  F096         	movff	HandleString@num2+1,Calculate@n2+1
  4429   007220  C0AC  F097         	movff	HandleString@num2+2,Calculate@n2+2
  4430   007224  C0AD  F098         	movff	HandleString@num2+3,Calculate@n2+3
  4431   007228  C0A9  F099         	movff	HandleString@op2,Calculate@op
  4432   00722C  EC2B  F043         	call	_Calculate	;wreg free
  4433   007230  C091  F0AA         	movff	?_Calculate,HandleString@num2
  4434   007234  C092  F0AB         	movff	?_Calculate+1,HandleString@num2+1
  4435   007238  C093  F0AC         	movff	?_Calculate+2,HandleString@num2+2
  4436   00723C  C094  F0AD         	movff	?_Calculate+3,HandleString@num2+3
  4437   007240                     
  4438                           ;Calculator_Math/CalculatorMath.c: 151:             num1 = temp;
  4439   007240  C0A3  F0AE         	movff	HandleString@temp,HandleString@num1
  4440   007244  C0A4  F0AF         	movff	HandleString@temp+1,HandleString@num1+1
  4441   007248  C0A5  F0B0         	movff	HandleString@temp+2,HandleString@num1+2
  4442   00724C  C0A6  F0B1         	movff	HandleString@temp+3,HandleString@num1+3
  4443   007250                     l44:
  4444                           
  4445                           ;Calculator_Math/CalculatorMath.c: 153:         num1 = Calculate(num1,num2,op);
  4446   007250  C0AE  F091         	movff	HandleString@num1,Calculate@n1
  4447   007254  C0AF  F092         	movff	HandleString@num1+1,Calculate@n1+1
  4448   007258  C0B0  F093         	movff	HandleString@num1+2,Calculate@n1+2
  4449   00725C  C0B1  F094         	movff	HandleString@num1+3,Calculate@n1+3
  4450   007260  C0AA  F095         	movff	HandleString@num2,Calculate@n2
  4451   007264  C0AB  F096         	movff	HandleString@num2+1,Calculate@n2+1
  4452   007268  C0AC  F097         	movff	HandleString@num2+2,Calculate@n2+2
  4453   00726C  C0AD  F098         	movff	HandleString@num2+3,Calculate@n2+3
  4454   007270  C0B2  F099         	movff	HandleString@op,Calculate@op
  4455   007274  EC2B  F043         	call	_Calculate	;wreg free
  4456   007278  C091  F0AE         	movff	?_Calculate,HandleString@num1
  4457   00727C  C092  F0AF         	movff	?_Calculate+1,HandleString@num1+1
  4458   007280  C093  F0B0         	movff	?_Calculate+2,HandleString@num1+2
  4459   007284  C094  F0B1         	movff	?_Calculate+3,HandleString@num1+3
  4460   007288                     l13326:
  4461                           
  4462                           ;Calculator_Math/CalculatorMath.c: 156:     return num1;
  4463   007288  C0AE  F09C         	movff	HandleString@num1,?_HandleString
  4464   00728C  C0AF  F09D         	movff	HandleString@num1+1,?_HandleString+1
  4465   007290  C0B0  F09E         	movff	HandleString@num1+2,?_HandleString+2
  4466   007294  C0B1  F09F         	movff	HandleString@num1+3,?_HandleString+3
  4467   007298  0012               	return		;funcret
  4468   00729A                     __end_of_HandleString:
  4469                           	callstack 0
  4470                           
  4471 ;; *************** function _is_power *****************
  4472 ;; Defined at:
  4473 ;;		line 323 in file "Calculator_Math/CalculatorMath.c"
  4474 ;; Parameters:    Size  Location     Type
  4475 ;;  x               2    2[COMRAM] PTR unsigned char 
  4476 ;;		 -> main@MATH_STR(60), 
  4477 ;; Auto vars:     Size  Location     Type
  4478 ;;  temp            2    5[COMRAM] PTR unsigned char 
  4479 ;;		 -> main@MATH_STR(60), 
  4480 ;; Return value:  Size  Location     Type
  4481 ;;                  1    wreg      _Bool 
  4482 ;; Registers used:
  4483 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4484 ;; Tracked objects:
  4485 ;;		On entry : 0/0
  4486 ;;		On exit  : 0/0
  4487 ;;		Unchanged: 0/0
  4488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4489 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4490 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4491 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4492 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4493 ;;Total ram usage:        5 bytes
  4494 ;; Hardware stack levels used: 1
  4495 ;; Hardware stack levels required when called: 3
  4496 ;; This function calls:
  4497 ;;		Nothing
  4498 ;; This function is called by:
  4499 ;;		_HandleString
  4500 ;;		_SyntaxErr
  4501 ;;		_MathError
  4502 ;; This function uses a non-reentrant model
  4503 ;;
  4504                           
  4505                           	psect	text11
  4506   00A1D4                     __ptext11:
  4507                           	callstack 0
  4508   00A1D4                     _is_power:
  4509                           	callstack 26
  4510   00A1D4                     
  4511                           ;Calculator_Math/CalculatorMath.c: 324:     char *temp = x;
  4512   00A1D4  C003  F006         	movff	is_power@x,is_power@temp
  4513   00A1D8  C004  F007         	movff	is_power@x+1,is_power@temp+1
  4514                           
  4515                           ;Calculator_Math/CalculatorMath.c: 325:     if(temp != ((void*)0)){
  4516   00A1DC  5006               	movf	is_power@temp^0,w,c
  4517   00A1DE  1007               	iorwf	(is_power@temp+1)^0,w,c
  4518   00A1E0  B4D8               	btfsc	status,2,c
  4519   00A1E2  EFF5  F050         	goto	u11281
  4520   00A1E6  EFF7  F050         	goto	u11280
  4521   00A1EA                     u11281:
  4522   00A1EA  EF1F  F051         	goto	l9450
  4523   00A1EE                     u11280:
  4524   00A1EE                     
  4525                           ;Calculator_Math/CalculatorMath.c: 326:         if(*temp == '*'){
  4526   00A1EE  C006  FFD9         	movff	is_power@temp,fsr2l
  4527   00A1F2  C007  FFDA         	movff	is_power@temp+1,fsr2h
  4528   00A1F6  0E2A               	movlw	42
  4529   00A1F8  18DE               	xorwf	postinc2,w,c
  4530   00A1FA  A4D8               	btfss	status,2,c
  4531   00A1FC  EF02  F051         	goto	u11291
  4532   00A200  EF04  F051         	goto	u11290
  4533   00A204                     u11291:
  4534   00A204  EF1F  F051         	goto	l9450
  4535   00A208                     u11290:
  4536   00A208                     
  4537                           ;Calculator_Math/CalculatorMath.c: 327:             temp++;
  4538   00A208  4A06               	infsnz	is_power@temp^0,f,c
  4539   00A20A  2A07               	incf	(is_power@temp+1)^0,f,c
  4540   00A20C                     
  4541                           ;Calculator_Math/CalculatorMath.c: 328:             if(temp!=((void*)0)){
  4542   00A20C  5006               	movf	is_power@temp^0,w,c
  4543   00A20E  1007               	iorwf	(is_power@temp+1)^0,w,c
  4544   00A210  B4D8               	btfsc	status,2,c
  4545   00A212  EF0D  F051         	goto	u11301
  4546   00A216  EF0F  F051         	goto	u11300
  4547   00A21A                     u11301:
  4548   00A21A  EF1F  F051         	goto	l9450
  4549   00A21E                     u11300:
  4550   00A21E                     
  4551                           ;Calculator_Math/CalculatorMath.c: 329:                 if(*temp =='*'){
  4552   00A21E  C006  FFD9         	movff	is_power@temp,fsr2l
  4553   00A222  C007  FFDA         	movff	is_power@temp+1,fsr2h
  4554   00A226  0E2A               	movlw	42
  4555   00A228  18DE               	xorwf	postinc2,w,c
  4556   00A22A  A4D8               	btfss	status,2,c
  4557   00A22C  EF1A  F051         	goto	u11311
  4558   00A230  EF1C  F051         	goto	u11310
  4559   00A234                     u11311:
  4560   00A234  EF1F  F051         	goto	l108
  4561   00A238                     u11310:
  4562   00A238                     
  4563                           ;Calculator_Math/CalculatorMath.c: 330:                     return (1);
  4564   00A238  0E01               	movlw	1
  4565   00A23A  EF20  F051         	goto	l111
  4566   00A23E                     l108:
  4567   00A23E                     l9450:
  4568                           
  4569                           ;Calculator_Math/CalculatorMath.c: 335:     return (0);
  4570   00A23E  0E00               	movlw	0
  4571   00A240                     l111:
  4572   00A240  0012               	return		;funcret
  4573   00A242                     __end_of_is_power:
  4574                           	callstack 0
  4575                           
  4576 ;; *************** function _is_op *****************
  4577 ;; Defined at:
  4578 ;;		line 309 in file "Calculator_Math/CalculatorMath.c"
  4579 ;; Parameters:    Size  Location     Type
  4580 ;;  x               1    wreg     unsigned char 
  4581 ;; Auto vars:     Size  Location     Type
  4582 ;;  x               1    2[COMRAM] unsigned char 
  4583 ;; Return value:  Size  Location     Type
  4584 ;;                  1    wreg      _Bool 
  4585 ;; Registers used:
  4586 ;;		wreg, status,2, status,0
  4587 ;; Tracked objects:
  4588 ;;		On entry : 0/0
  4589 ;;		On exit  : 0/0
  4590 ;;		Unchanged: 0/0
  4591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4593 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4595 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4596 ;;Total ram usage:        1 bytes
  4597 ;; Hardware stack levels used: 1
  4598 ;; Hardware stack levels required when called: 3
  4599 ;; This function calls:
  4600 ;;		Nothing
  4601 ;; This function is called by:
  4602 ;;		_HandleString
  4603 ;;		_SyntaxErr
  4604 ;; This function uses a non-reentrant model
  4605 ;;
  4606                           
  4607                           	psect	text12
  4608   00A4EE                     __ptext12:
  4609                           	callstack 0
  4610   00A4EE                     _is_op:
  4611                           	callstack 26
  4612                           
  4613                           ;incstack = 0
  4614                           ;is_op@x stored from wreg
  4615   00A4EE  6E03               	movwf	is_op@x^0,c
  4616   00A4F0                     
  4617                           ;Calculator_Math/CalculatorMath.c: 310:     if((x=='-')||(x=='+')||(x=='*')||(x=='/')){
  4618   00A4F0  0E2D               	movlw	45
  4619   00A4F2  1803               	xorwf	is_op@x^0,w,c
  4620   00A4F4  B4D8               	btfsc	status,2,c
  4621   00A4F6  EF7F  F052         	goto	u11241
  4622   00A4FA  EF81  F052         	goto	u11240
  4623   00A4FE                     u11241:
  4624   00A4FE  EF9C  F052         	goto	l9428
  4625   00A502                     u11240:
  4626   00A502  0E2B               	movlw	43
  4627   00A504  1803               	xorwf	is_op@x^0,w,c
  4628   00A506  B4D8               	btfsc	status,2,c
  4629   00A508  EF88  F052         	goto	u11251
  4630   00A50C  EF8A  F052         	goto	u11250
  4631   00A510                     u11251:
  4632   00A510  EF9C  F052         	goto	l9428
  4633   00A514                     u11250:
  4634   00A514  0E2A               	movlw	42
  4635   00A516  1803               	xorwf	is_op@x^0,w,c
  4636   00A518  B4D8               	btfsc	status,2,c
  4637   00A51A  EF91  F052         	goto	u11261
  4638   00A51E  EF93  F052         	goto	u11260
  4639   00A522                     u11261:
  4640   00A522  EF9C  F052         	goto	l9428
  4641   00A526                     u11260:
  4642   00A526  0E2F               	movlw	47
  4643   00A528  1803               	xorwf	is_op@x^0,w,c
  4644   00A52A  A4D8               	btfss	status,2,c
  4645   00A52C  EF9A  F052         	goto	u11271
  4646   00A530  EF9C  F052         	goto	u11270
  4647   00A534                     u11271:
  4648   00A534  EF9F  F052         	goto	l9432
  4649   00A538                     u11270:
  4650   00A538                     l9428:
  4651                           
  4652                           ;Calculator_Math/CalculatorMath.c: 311:         return (1);
  4653   00A538  0E01               	movlw	1
  4654   00A53A  EFA0  F052         	goto	l104
  4655   00A53E                     l9432:
  4656                           
  4657                           ;Calculator_Math/CalculatorMath.c: 313:     return (0);
  4658   00A53E  0E00               	movlw	0
  4659   00A540                     l104:
  4660   00A540  0012               	return		;funcret
  4661   00A542                     __end_of_is_op:
  4662                           	callstack 0
  4663                           
  4664 ;; *************** function _atof *****************
  4665 ;; Defined at:
  4666 ;;		line 423 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strtof.c"
  4667 ;; Parameters:    Size  Location     Type
  4668 ;;  s               2   21[BANK0 ] PTR const unsigned char 
  4669 ;;		 -> main@MATH_STR(60), 
  4670 ;; Auto vars:     Size  Location     Type
  4671 ;;		None
  4672 ;; Return value:  Size  Location     Type
  4673 ;;                  4   21[BANK0 ] PTR const unsigned char 
  4674 ;; Registers used:
  4675 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4676 ;; Tracked objects:
  4677 ;;		On entry : 0/0
  4678 ;;		On exit  : 0/0
  4679 ;;		Unchanged: 0/0
  4680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4681 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4684 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4685 ;;Total ram usage:        4 bytes
  4686 ;; Hardware stack levels used: 1
  4687 ;; Hardware stack levels required when called: 6
  4688 ;; This function calls:
  4689 ;;		_strtof
  4690 ;; This function is called by:
  4691 ;;		_HandleString
  4692 ;; This function uses a non-reentrant model
  4693 ;;
  4694                           
  4695                           	psect	text13
  4696   00AB66                     __ptext13:
  4697                           	callstack 0
  4698   00AB66                     _atof:
  4699                           	callstack 23
  4700   00AB66  C095  F080         	movff	atof@s,strtof@s
  4701   00AB6A  C096  F081         	movff	atof@s+1,strtof@s+1
  4702   00AB6E  0E00               	movlw	0
  4703   00AB70  0100               	movlb	0	; () banked
  4704   00AB72  6F82               	movwf	strtof@res& (0+255),b
  4705   00AB74  0E00               	movlw	0
  4706   00AB76  6F83               	movwf	(strtof@res+1)& (0+255),b
  4707   00AB78  EC8A  F01D         	call	_strtof	;wreg free
  4708   00AB7C  C080  F095         	movff	?_strtof,?_atof
  4709   00AB80  C081  F096         	movff	?_strtof+1,?_atof+1
  4710   00AB84  C082  F097         	movff	?_strtof+2,?_atof+2
  4711   00AB88  C083  F098         	movff	?_strtof+3,?_atof+3
  4712   00AB8C  0012               	return		;funcret
  4713   00AB8E                     __end_of_atof:
  4714                           	callstack 0
  4715                           
  4716 ;; *************** function _strtof *****************
  4717 ;; Defined at:
  4718 ;;		line 95 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strtof.c"
  4719 ;; Parameters:    Size  Location     Type
  4720 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  4721 ;;		 -> main@MATH_STR(60), 
  4722 ;;  res             2    2[BANK0 ] PTR PTR unsigned char 
  4723 ;;		 -> NULL(0), 
  4724 ;; Auto vars:     Size  Location     Type
  4725 ;;  _u              4   16[BANK0 ] struct .
  4726 ;;  eexp            2   14[BANK0 ] int 
  4727 ;;  expon           2   12[BANK0 ] int 
  4728 ;;  i               1   20[BANK0 ] unsigned char 
  4729 ;;  flags           1   11[BANK0 ] unsigned char 
  4730 ;;  digit           1   10[BANK0 ] unsigned char 
  4731 ;; Return value:  Size  Location     Type
  4732 ;;                  4    0[BANK0 ] float 
  4733 ;; Registers used:
  4734 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4735 ;; Tracked objects:
  4736 ;;		On entry : 0/0
  4737 ;;		On exit  : 0/0
  4738 ;;		Unchanged: 0/0
  4739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4740 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4741 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4742 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4743 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4744 ;;Total ram usage:       21 bytes
  4745 ;; Hardware stack levels used: 1
  4746 ;; Hardware stack levels required when called: 5
  4747 ;; This function calls:
  4748 ;;		___fldiv
  4749 ;;		___fleq
  4750 ;;		___flge
  4751 ;;		___flmul
  4752 ;;		___flneg
  4753 ;;		___lmul
  4754 ;;		___wmul
  4755 ;;		___xxtofl
  4756 ;;		_isdigit
  4757 ;;		_isspace
  4758 ;;		_isxdigit
  4759 ;;		_nanf
  4760 ;;		_toupper
  4761 ;; This function is called by:
  4762 ;;		_atof
  4763 ;; This function uses a non-reentrant model
  4764 ;;
  4765                           
  4766                           	psect	text14
  4767   003B14                     __ptext14:
  4768                           	callstack 0
  4769   003B14                     _strtof:
  4770                           	callstack 23
  4771   003B14  0100               	movlb	0	; () banked
  4772   003B16  5182               	movf	strtof@res& (0+255),w,b
  4773   003B18  1183               	iorwf	(strtof@res+1)& (0+255),w,b
  4774   003B1A  B4D8               	btfsc	status,2,c
  4775   003B1C  EF92  F01D         	goto	u16031
  4776   003B20  EF94  F01D         	goto	u16030
  4777   003B24                     u16031:
  4778   003B24  EFA0  F01D         	goto	l12730
  4779   003B28                     u16030:
  4780   003B28                     
  4781                           ; BSR set to: 0
  4782   003B28  C082  FFD9         	movff	strtof@res,fsr2l
  4783   003B2C  C083  FFDA         	movff	strtof@res+1,fsr2h
  4784   003B30  C080  FFDE         	movff	strtof@s,postinc2
  4785   003B34  C081  FFDD         	movff	strtof@s+1,postdec2
  4786   003B38  EFA0  F01D         	goto	l12730
  4787   003B3C                     l12726:
  4788                           
  4789                           ; BSR set to: 0
  4790   003B3C  4B80               	infsnz	strtof@s& (0+255),f,b
  4791   003B3E  2B81               	incf	(strtof@s+1)& (0+255),f,b
  4792   003B40                     l12730:
  4793                           
  4794                           ; BSR set to: 0
  4795   003B40  C080  FFD9         	movff	strtof@s,fsr2l
  4796   003B44  C081  FFDA         	movff	strtof@s+1,fsr2h
  4797   003B48  0E20               	movlw	32
  4798   003B4A  18DE               	xorwf	postinc2,w,c
  4799   003B4C  B4D8               	btfsc	status,2,c
  4800   003B4E  EFAB  F01D         	goto	u16041
  4801   003B52  EFAE  F01D         	goto	u16040
  4802   003B56                     u16041:
  4803   003B56  0E01               	movlw	1
  4804   003B58  EFAF  F01D         	goto	u16050
  4805   003B5C                     u16040:
  4806   003B5C  0E00               	movlw	0
  4807   003B5E                     u16050:
  4808   003B5E  6F8E               	movwf	strtof@eexp& (0+255),b
  4809   003B60  6B8F               	clrf	(strtof@eexp+1)& (0+255),b
  4810   003B62  518E               	movf	strtof@eexp& (0+255),w,b
  4811   003B64  118F               	iorwf	(strtof@eexp+1)& (0+255),w,b
  4812   003B66  A4D8               	btfss	status,2,c
  4813   003B68  EFB8  F01D         	goto	u16061
  4814   003B6C  EFBA  F01D         	goto	u16060
  4815   003B70                     u16061:
  4816   003B70  EF9E  F01D         	goto	l12726
  4817   003B74                     u16060:
  4818   003B74                     
  4819                           ; BSR set to: 0
  4820   003B74  C080  FFD9         	movff	strtof@s,fsr2l
  4821   003B78  C081  FFDA         	movff	strtof@s+1,fsr2h
  4822   003B7C  50DF               	movf	indf2,w,c
  4823   003B7E  6F84               	movwf	??_strtof& (0+255),b
  4824   003B80  5184               	movf	??_strtof& (0+255),w,b
  4825   003B82  6F8E               	movwf	strtof@eexp& (0+255),b
  4826   003B84  6B8F               	clrf	(strtof@eexp+1)& (0+255),b
  4827   003B86  0EF7               	movlw	247
  4828   003B88  258E               	addwf	strtof@eexp& (0+255),w,b
  4829   003B8A  6F85               	movwf	(??_strtof+1)& (0+255),b
  4830   003B8C  0EFF               	movlw	255
  4831   003B8E  218F               	addwfc	(strtof@eexp+1)& (0+255),w,b
  4832   003B90  6F86               	movwf	(??_strtof+2)& (0+255),b
  4833   003B92  5186               	movf	(??_strtof+2)& (0+255),w,b
  4834   003B94  E109               	bnz	u16070
  4835   003B96  0E05               	movlw	5
  4836   003B98  5D85               	subwf	(??_strtof+1)& (0+255),w,b
  4837   003B9A  A0D8               	btfss	status,0,c
  4838   003B9C  EFD2  F01D         	goto	u16071
  4839   003BA0  EFD4  F01D         	goto	u16070
  4840   003BA4                     u16071:
  4841   003BA4  EF9E  F01D         	goto	l12726
  4842   003BA8                     u16070:
  4843   003BA8                     
  4844                           ; BSR set to: 0
  4845   003BA8  0E00               	movlw	0
  4846   003BAA  6F8B               	movwf	strtof@flags& (0+255),b
  4847   003BAC                     
  4848                           ; BSR set to: 0
  4849   003BAC  0E2D               	movlw	45
  4850   003BAE  198E               	xorwf	strtof@eexp& (0+255),w,b
  4851   003BB0  118F               	iorwf	(strtof@eexp+1)& (0+255),w,b
  4852   003BB2  A4D8               	btfss	status,2,c
  4853   003BB4  EFDE  F01D         	goto	u16081
  4854   003BB8  EFE0  F01D         	goto	u16080
  4855   003BBC                     u16081:
  4856   003BBC  EFE6  F01D         	goto	l12742
  4857   003BC0                     u16080:
  4858   003BC0                     
  4859                           ; BSR set to: 0
  4860   003BC0  0E01               	movlw	1
  4861   003BC2  6F8B               	movwf	strtof@flags& (0+255),b
  4862   003BC4                     l12740:
  4863                           
  4864                           ; BSR set to: 0
  4865   003BC4  4B80               	infsnz	strtof@s& (0+255),f,b
  4866   003BC6  2B81               	incf	(strtof@s+1)& (0+255),f,b
  4867   003BC8  EFF2  F01D         	goto	l12746
  4868   003BCC                     l12742:
  4869                           
  4870                           ; BSR set to: 0
  4871   003BCC  0E2B               	movlw	43
  4872   003BCE  198E               	xorwf	strtof@eexp& (0+255),w,b
  4873   003BD0  118F               	iorwf	(strtof@eexp+1)& (0+255),w,b
  4874   003BD2  A4D8               	btfss	status,2,c
  4875   003BD4  EFEE  F01D         	goto	u16091
  4876   003BD8  EFF0  F01D         	goto	u16090
  4877   003BDC                     u16091:
  4878   003BDC  EFF2  F01D         	goto	l12746
  4879   003BE0                     u16090:
  4880   003BE0  EFE2  F01D         	goto	l12740
  4881   003BE4                     l12746:
  4882                           
  4883                           ; BSR set to: 0
  4884   003BE4  0E00               	movlw	0
  4885   003BE6  6F94               	movwf	strtof@i& (0+255),b
  4886   003BE8  EFF7  F01D         	goto	l12750
  4887   003BEC                     l12748:
  4888                           
  4889                           ; BSR set to: 0
  4890   003BEC  2B94               	incf	strtof@i& (0+255),f,b
  4891   003BEE                     l12750:
  4892                           
  4893                           ; BSR set to: 0
  4894   003BEE  5194               	movf	strtof@i& (0+255),w,b
  4895   003BF0  2580               	addwf	strtof@s& (0+255),w,b
  4896   003BF2  6ED9               	movwf	fsr2l,c
  4897   003BF4  0E00               	movlw	0
  4898   003BF6  2181               	addwfc	(strtof@s+1)& (0+255),w,b
  4899   003BF8  6EDA               	movwf	fsr2h,c
  4900   003BFA  50DF               	movf	indf2,w,c
  4901   003BFC  B4D8               	btfsc	status,2,c
  4902   003BFE  EF03  F01E         	goto	u16101
  4903   003C02  EF05  F01E         	goto	u16100
  4904   003C06                     u16101:
  4905   003C06  EF3B  F01E         	goto	l12756
  4906   003C0A                     u16100:
  4907   003C0A                     
  4908                           ; BSR set to: 0
  4909   003C0A  5194               	movf	strtof@i& (0+255),w,b
  4910   003C0C  2580               	addwf	strtof@s& (0+255),w,b
  4911   003C0E  6ED9               	movwf	fsr2l,c
  4912   003C10  0E00               	movlw	0
  4913   003C12  2181               	addwfc	(strtof@s+1)& (0+255),w,b
  4914   003C14  6EDA               	movwf	fsr2h,c
  4915   003C16  50DF               	movf	indf2,w,c
  4916   003C18  6F84               	movwf	??_strtof& (0+255),b
  4917   003C1A  0EAE               	movlw	low STR_14
  4918   003C1C  2594               	addwf	strtof@i& (0+255),w,b
  4919   003C1E  6EF6               	movwf	tblptrl,c
  4920   003C20  6AF7               	clrf	tblptrh,c
  4921   003C22  0E10               	movlw	high STR_14
  4922   003C24  22F7               	addwfc	tblptrh,f,c
  4923   003C26                     	if	1	;There are 3 active tblptr bytes
  4924   003C26  6AF8               	clrf	tblptru,c
  4925   003C28  0E00               	movlw	low (__mediumconst shr (0+16))
  4926   003C2A  22F8               	addwfc	tblptru,f,c
  4927   003C2C                     	endif
  4928   003C2C  0008               	tblrd		*
  4929   003C2E  50F5               	movf	tablat,w,c
  4930   003C30  1984               	xorwf	??_strtof& (0+255),w,b
  4931   003C32  B4D8               	btfsc	status,2,c
  4932   003C34  EF1E  F01E         	goto	u16111
  4933   003C38  EF20  F01E         	goto	u16110
  4934   003C3C                     u16111:
  4935   003C3C  EFF6  F01D         	goto	l12748
  4936   003C40                     u16110:
  4937   003C40                     
  4938                           ; BSR set to: 0
  4939   003C40  5194               	movf	strtof@i& (0+255),w,b
  4940   003C42  2580               	addwf	strtof@s& (0+255),w,b
  4941   003C44  6ED9               	movwf	fsr2l,c
  4942   003C46  0E00               	movlw	0
  4943   003C48  2181               	addwfc	(strtof@s+1)& (0+255),w,b
  4944   003C4A  6EDA               	movwf	fsr2h,c
  4945   003C4C  50DF               	movf	indf2,w,c
  4946   003C4E  6F84               	movwf	??_strtof& (0+255),b
  4947   003C50  0EA5               	movlw	low STR_15
  4948   003C52  2594               	addwf	strtof@i& (0+255),w,b
  4949   003C54  6EF6               	movwf	tblptrl,c
  4950   003C56  6AF7               	clrf	tblptrh,c
  4951   003C58  0E10               	movlw	high STR_15
  4952   003C5A  22F7               	addwfc	tblptrh,f,c
  4953   003C5C                     	if	1	;There are 3 active tblptr bytes
  4954   003C5C  6AF8               	clrf	tblptru,c
  4955   003C5E  0E00               	movlw	low (__mediumconst shr (0+16))
  4956   003C60  22F8               	addwfc	tblptru,f,c
  4957   003C62                     	endif
  4958   003C62  0008               	tblrd		*
  4959   003C64  50F5               	movf	tablat,w,c
  4960   003C66  1984               	xorwf	??_strtof& (0+255),w,b
  4961   003C68  B4D8               	btfsc	status,2,c
  4962   003C6A  EF39  F01E         	goto	u16121
  4963   003C6E  EF3B  F01E         	goto	u16120
  4964   003C72                     u16121:
  4965   003C72  EFF6  F01D         	goto	l12748
  4966   003C76                     u16120:
  4967   003C76                     l12756:
  4968                           
  4969                           ; BSR set to: 0
  4970   003C76  0E02               	movlw	2
  4971   003C78  6594               	cpfsgt	strtof@i& (0+255),b
  4972   003C7A  EF41  F01E         	goto	u16131
  4973   003C7E  EF43  F01E         	goto	u16130
  4974   003C82                     u16131:
  4975   003C82  EF6F  F01E         	goto	l12768
  4976   003C86                     u16130:
  4977   003C86                     
  4978                           ; BSR set to: 0
  4979   003C86  0E00               	movlw	0
  4980   003C88  6F90               	movwf	strtof@_u& (0+255),b
  4981   003C8A  0E00               	movlw	0
  4982   003C8C  6F91               	movwf	(strtof@_u+1)& (0+255),b
  4983   003C8E  0E80               	movlw	128
  4984   003C90  6F92               	movwf	(strtof@_u+2)& (0+255),b
  4985   003C92  0E7F               	movlw	127
  4986   003C94  6F93               	movwf	(strtof@_u+3)& (0+255),b
  4987   003C96                     
  4988                           ; BSR set to: 0
  4989   003C96  5182               	movf	strtof@res& (0+255),w,b
  4990   003C98  1183               	iorwf	(strtof@res+1)& (0+255),w,b
  4991   003C9A  B4D8               	btfsc	status,2,c
  4992   003C9C  EF52  F01E         	goto	u16141
  4993   003CA0  EF54  F01E         	goto	u16140
  4994   003CA4                     u16141:
  4995   003CA4  EFAA  F025         	goto	l2110
  4996   003CA8                     u16140:
  4997   003CA8                     
  4998                           ; BSR set to: 0
  4999   003CA8  0E08               	movlw	8
  5000   003CAA  1994               	xorwf	strtof@i& (0+255),w,b
  5001   003CAC  B4D8               	btfsc	status,2,c
  5002   003CAE  EF5B  F01E         	goto	u16151
  5003   003CB2  EF5D  F01E         	goto	u16150
  5004   003CB6                     u16151:
  5005   003CB6  EF5F  F01E         	goto	l12766
  5006   003CBA                     u16150:
  5007   003CBA                     
  5008                           ; BSR set to: 0
  5009   003CBA  0E03               	movlw	3
  5010   003CBC  6F94               	movwf	strtof@i& (0+255),b
  5011   003CBE                     l12766:
  5012                           
  5013                           ; BSR set to: 0
  5014   003CBE  5194               	movf	strtof@i& (0+255),w,b
  5015   003CC0  2580               	addwf	strtof@s& (0+255),w,b
  5016   003CC2  6F84               	movwf	??_strtof& (0+255),b
  5017   003CC4  0E00               	movlw	0
  5018   003CC6  2181               	addwfc	(strtof@s+1)& (0+255),w,b
  5019   003CC8  6F85               	movwf	(??_strtof+1)& (0+255),b
  5020   003CCA  C082  FFD9         	movff	strtof@res,fsr2l
  5021   003CCE  C083  FFDA         	movff	strtof@res+1,fsr2h
  5022   003CD2  C084  FFDE         	movff	??_strtof,postinc2
  5023   003CD6  C085  FFDD         	movff	??_strtof+1,postdec2
  5024   003CDA  EFAA  F025         	goto	l2110
  5025   003CDE                     l12768:
  5026                           
  5027                           ; BSR set to: 0
  5028   003CDE  0E00               	movlw	0
  5029   003CE0  6F94               	movwf	strtof@i& (0+255),b
  5030   003CE2  EF74  F01E         	goto	l12772
  5031   003CE6                     l12770:
  5032                           
  5033                           ; BSR set to: 0
  5034   003CE6  2B94               	incf	strtof@i& (0+255),f,b
  5035   003CE8                     l12772:
  5036                           
  5037                           ; BSR set to: 0
  5038   003CE8  5194               	movf	strtof@i& (0+255),w,b
  5039   003CEA  2580               	addwf	strtof@s& (0+255),w,b
  5040   003CEC  6ED9               	movwf	fsr2l,c
  5041   003CEE  0E00               	movlw	0
  5042   003CF0  2181               	addwfc	(strtof@s+1)& (0+255),w,b
  5043   003CF2  6EDA               	movwf	fsr2h,c
  5044   003CF4  50DF               	movf	indf2,w,c
  5045   003CF6  B4D8               	btfsc	status,2,c
  5046   003CF8  EF80  F01E         	goto	u16161
  5047   003CFC  EF82  F01E         	goto	u16160
  5048   003D00                     u16161:
  5049   003D00  EFB8  F01E         	goto	l12778
  5050   003D04                     u16160:
  5051   003D04                     
  5052                           ; BSR set to: 0
  5053   003D04  5194               	movf	strtof@i& (0+255),w,b
  5054   003D06  2580               	addwf	strtof@s& (0+255),w,b
  5055   003D08  6ED9               	movwf	fsr2l,c
  5056   003D0A  0E00               	movlw	0
  5057   003D0C  2181               	addwfc	(strtof@s+1)& (0+255),w,b
  5058   003D0E  6EDA               	movwf	fsr2h,c
  5059   003D10  50DF               	movf	indf2,w,c
  5060   003D12  6F84               	movwf	??_strtof& (0+255),b
  5061   003D14  0EC5               	movlw	low STR_10
  5062   003D16  2594               	addwf	strtof@i& (0+255),w,b
  5063   003D18  6EF6               	movwf	tblptrl,c
  5064   003D1A  6AF7               	clrf	tblptrh,c
  5065   003D1C  0E10               	movlw	high STR_10
  5066   003D1E  22F7               	addwfc	tblptrh,f,c
  5067   003D20                     	if	1	;There are 3 active tblptr bytes
  5068   003D20  6AF8               	clrf	tblptru,c
  5069   003D22  0E00               	movlw	low (__mediumconst shr (0+16))
  5070   003D24  22F8               	addwfc	tblptru,f,c
  5071   003D26                     	endif
  5072   003D26  0008               	tblrd		*
  5073   003D28  50F5               	movf	tablat,w,c
  5074   003D2A  1984               	xorwf	??_strtof& (0+255),w,b
  5075   003D2C  B4D8               	btfsc	status,2,c
  5076   003D2E  EF9B  F01E         	goto	u16171
  5077   003D32  EF9D  F01E         	goto	u16170
  5078   003D36                     u16171:
  5079   003D36  EF73  F01E         	goto	l12770
  5080   003D3A                     u16170:
  5081   003D3A                     
  5082                           ; BSR set to: 0
  5083   003D3A  5194               	movf	strtof@i& (0+255),w,b
  5084   003D3C  2580               	addwf	strtof@s& (0+255),w,b
  5085   003D3E  6ED9               	movwf	fsr2l,c
  5086   003D40  0E00               	movlw	0
  5087   003D42  2181               	addwfc	(strtof@s+1)& (0+255),w,b
  5088   003D44  6EDA               	movwf	fsr2h,c
  5089   003D46  50DF               	movf	indf2,w,c
  5090   003D48  6F84               	movwf	??_strtof& (0+255),b
  5091   003D4A  0EBD               	movlw	low STR_20
  5092   003D4C  2594               	addwf	strtof@i& (0+255),w,b
  5093   003D4E  6EF6               	movwf	tblptrl,c
  5094   003D50  6AF7               	clrf	tblptrh,c
  5095   003D52  0E10               	movlw	high STR_20
  5096   003D54  22F7               	addwfc	tblptrh,f,c
  5097   003D56                     	if	1	;There are 3 active tblptr bytes
  5098   003D56  6AF8               	clrf	tblptru,c
  5099   003D58  0E00               	movlw	low (__mediumconst shr (0+16))
  5100   003D5A  22F8               	addwfc	tblptru,f,c
  5101   003D5C                     	endif
  5102   003D5C  0008               	tblrd		*
  5103   003D5E  50F5               	movf	tablat,w,c
  5104   003D60  1984               	xorwf	??_strtof& (0+255),w,b
  5105   003D62  B4D8               	btfsc	status,2,c
  5106   003D64  EFB6  F01E         	goto	u16181
  5107   003D68  EFB8  F01E         	goto	u16180
  5108   003D6C                     u16181:
  5109   003D6C  EF73  F01E         	goto	l12770
  5110   003D70                     u16180:
  5111   003D70                     l12778:
  5112                           
  5113                           ; BSR set to: 0
  5114   003D70  0E03               	movlw	3
  5115   003D72  1994               	xorwf	strtof@i& (0+255),w,b
  5116   003D74  A4D8               	btfss	status,2,c
  5117   003D76  EFBF  F01E         	goto	u16191
  5118   003D7A  EFC1  F01E         	goto	u16190
  5119   003D7E                     u16191:
  5120   003D7E  EF30  F01F         	goto	l12802
  5121   003D82                     u16190:
  5122   003D82                     
  5123                           ; BSR set to: 0
  5124   003D82  0EC0               	movlw	low (STR_20+3)
  5125   003D84  6E03               	movwf	nanf@s^0,c
  5126   003D86  0E10               	movlw	high (STR_20+3)
  5127   003D88  6E04               	movwf	(nanf@s+1)^0,c
  5128   003D8A  EC13  F056         	call	_nanf	;wreg free
  5129   003D8E  C003  F090         	movff	?_nanf,strtof@_u
  5130   003D92  C004  F091         	movff	?_nanf+1,strtof@_u+1
  5131   003D96  C005  F092         	movff	?_nanf+2,strtof@_u+2
  5132   003D9A  C006  F093         	movff	?_nanf+3,strtof@_u+3
  5133   003D9E  0100               	movlb	0	; () banked
  5134   003DA0  5182               	movf	strtof@res& (0+255),w,b
  5135   003DA2  1183               	iorwf	(strtof@res+1)& (0+255),w,b
  5136   003DA4  B4D8               	btfsc	status,2,c
  5137   003DA6  EFD7  F01E         	goto	u16201
  5138   003DAA  EFD9  F01E         	goto	u16200
  5139   003DAE                     u16201:
  5140   003DAE  EFAA  F025         	goto	l2110
  5141   003DB2                     u16200:
  5142   003DB2                     
  5143                           ; BSR set to: 0
  5144   003DB2  5194               	movf	strtof@i& (0+255),w,b
  5145   003DB4  2780               	addwf	strtof@s& (0+255),f,b
  5146   003DB6  0E00               	movlw	0
  5147   003DB8  2381               	addwfc	(strtof@s+1)& (0+255),f,b
  5148   003DBA                     
  5149                           ; BSR set to: 0
  5150   003DBA  C080  FFD9         	movff	strtof@s,fsr2l
  5151   003DBE  C081  FFDA         	movff	strtof@s+1,fsr2h
  5152   003DC2  0E28               	movlw	40
  5153   003DC4  18DE               	xorwf	postinc2,w,c
  5154   003DC6  A4D8               	btfss	status,2,c
  5155   003DC8  EFE8  F01E         	goto	u16211
  5156   003DCC  EFEA  F01E         	goto	u16210
  5157   003DD0                     u16211:
  5158   003DD0  EF26  F01F         	goto	l12800
  5159   003DD4                     u16210:
  5160   003DD4                     
  5161                           ; BSR set to: 0
  5162   003DD4  0E00               	movlw	0
  5163   003DD6  6F94               	movwf	strtof@i& (0+255),b
  5164   003DD8  EFEF  F01E         	goto	l12792
  5165   003DDC                     l12790:
  5166                           
  5167                           ; BSR set to: 0
  5168   003DDC  2B94               	incf	strtof@i& (0+255),f,b
  5169   003DDE                     l12792:
  5170                           
  5171                           ; BSR set to: 0
  5172   003DDE  5194               	movf	strtof@i& (0+255),w,b
  5173   003DE0  2580               	addwf	strtof@s& (0+255),w,b
  5174   003DE2  6ED9               	movwf	fsr2l,c
  5175   003DE4  0E00               	movlw	0
  5176   003DE6  2181               	addwfc	(strtof@s+1)& (0+255),w,b
  5177   003DE8  6EDA               	movwf	fsr2h,c
  5178   003DEA  50DF               	movf	indf2,w,c
  5179   003DEC  B4D8               	btfsc	status,2,c
  5180   003DEE  EFFB  F01E         	goto	u16221
  5181   003DF2  EFFD  F01E         	goto	u16220
  5182   003DF6                     u16221:
  5183   003DF6  EF0C  F01F         	goto	l12796
  5184   003DFA                     u16220:
  5185   003DFA                     
  5186                           ; BSR set to: 0
  5187   003DFA  5194               	movf	strtof@i& (0+255),w,b
  5188   003DFC  2580               	addwf	strtof@s& (0+255),w,b
  5189   003DFE  6ED9               	movwf	fsr2l,c
  5190   003E00  0E00               	movlw	0
  5191   003E02  2181               	addwfc	(strtof@s+1)& (0+255),w,b
  5192   003E04  6EDA               	movwf	fsr2h,c
  5193   003E06  0E29               	movlw	41
  5194   003E08  18DE               	xorwf	postinc2,w,c
  5195   003E0A  A4D8               	btfss	status,2,c
  5196   003E0C  EF0A  F01F         	goto	u16231
  5197   003E10  EF0C  F01F         	goto	u16230
  5198   003E14                     u16231:
  5199   003E14  EFEE  F01E         	goto	l12790
  5200   003E18                     u16230:
  5201   003E18                     l12796:
  5202                           
  5203                           ; BSR set to: 0
  5204   003E18  5194               	movf	strtof@i& (0+255),w,b
  5205   003E1A  2580               	addwf	strtof@s& (0+255),w,b
  5206   003E1C  6ED9               	movwf	fsr2l,c
  5207   003E1E  0E00               	movlw	0
  5208   003E20  2181               	addwfc	(strtof@s+1)& (0+255),w,b
  5209   003E22  6EDA               	movwf	fsr2h,c
  5210   003E24  0E29               	movlw	41
  5211   003E26  18DE               	xorwf	postinc2,w,c
  5212   003E28  A4D8               	btfss	status,2,c
  5213   003E2A  EF19  F01F         	goto	u16241
  5214   003E2E  EF1B  F01F         	goto	u16240
  5215   003E32                     u16241:
  5216   003E32  EF26  F01F         	goto	l12800
  5217   003E36                     u16240:
  5218   003E36                     
  5219                           ; BSR set to: 0
  5220   003E36  5194               	movf	strtof@i& (0+255),w,b
  5221   003E38  6F84               	movwf	??_strtof& (0+255),b
  5222   003E3A  6B85               	clrf	(??_strtof+1)& (0+255),b
  5223   003E3C  0E01               	movlw	1
  5224   003E3E  2784               	addwf	??_strtof& (0+255),f,b
  5225   003E40  0E00               	movlw	0
  5226   003E42  2385               	addwfc	(??_strtof+1)& (0+255),f,b
  5227   003E44  5184               	movf	??_strtof& (0+255),w,b
  5228   003E46  2780               	addwf	strtof@s& (0+255),f,b
  5229   003E48  5185               	movf	(??_strtof+1)& (0+255),w,b
  5230   003E4A  2381               	addwfc	(strtof@s+1)& (0+255),f,b
  5231   003E4C                     l12800:
  5232                           
  5233                           ; BSR set to: 0
  5234   003E4C  C082  FFD9         	movff	strtof@res,fsr2l
  5235   003E50  C083  FFDA         	movff	strtof@res+1,fsr2h
  5236   003E54  C080  FFDE         	movff	strtof@s,postinc2
  5237   003E58  C081  FFDD         	movff	strtof@s+1,postdec2
  5238   003E5C  EFAA  F025         	goto	l2110
  5239   003E60                     l12802:
  5240                           
  5241                           ; BSR set to: 0
  5242   003E60  0E00               	movlw	0
  5243   003E62  6F8F               	movwf	(strtof@eexp+1)& (0+255),b
  5244   003E64  0E00               	movlw	0
  5245   003E66  6F8E               	movwf	strtof@eexp& (0+255),b
  5246   003E68  0E00               	movlw	0
  5247   003E6A  6F90               	movwf	strtof@_u& (0+255),b
  5248   003E6C  0E00               	movlw	0
  5249   003E6E  6F91               	movwf	(strtof@_u+1)& (0+255),b
  5250   003E70  0E00               	movlw	0
  5251   003E72  6F92               	movwf	(strtof@_u+2)& (0+255),b
  5252   003E74  0E00               	movlw	0
  5253   003E76  6F93               	movwf	(strtof@_u+3)& (0+255),b
  5254   003E78  0E00               	movlw	0
  5255   003E7A  6F8D               	movwf	(strtof@expon+1)& (0+255),b
  5256   003E7C  0E00               	movlw	0
  5257   003E7E  6F8C               	movwf	strtof@expon& (0+255),b
  5258   003E80  0E00               	movlw	0
  5259   003E82  6F94               	movwf	strtof@i& (0+255),b
  5260   003E84  EF45  F01F         	goto	l12806
  5261   003E88                     l12804:
  5262                           
  5263                           ; BSR set to: 0
  5264   003E88  2B94               	incf	strtof@i& (0+255),f,b
  5265   003E8A                     l12806:
  5266                           
  5267                           ; BSR set to: 0
  5268   003E8A  5194               	movf	strtof@i& (0+255),w,b
  5269   003E8C  2580               	addwf	strtof@s& (0+255),w,b
  5270   003E8E  6ED9               	movwf	fsr2l,c
  5271   003E90  0E00               	movlw	0
  5272   003E92  2181               	addwfc	(strtof@s+1)& (0+255),w,b
  5273   003E94  6EDA               	movwf	fsr2h,c
  5274   003E96  0E30               	movlw	48
  5275   003E98  18DE               	xorwf	postinc2,w,c
  5276   003E9A  B4D8               	btfsc	status,2,c
  5277   003E9C  EF52  F01F         	goto	u16251
  5278   003EA0  EF54  F01F         	goto	u16250
  5279   003EA4                     u16251:
  5280   003EA4  EF44  F01F         	goto	l12804
  5281   003EA8                     u16250:
  5282   003EA8                     
  5283                           ; BSR set to: 0
  5284   003EA8  5194               	movf	strtof@i& (0+255),w,b
  5285   003EAA  B4D8               	btfsc	status,2,c
  5286   003EAC  EF5A  F01F         	goto	u16261
  5287   003EB0  EF5C  F01F         	goto	u16260
  5288   003EB4                     u16261:
  5289   003EB4  EFC7  F022         	goto	l2195
  5290   003EB8                     u16260:
  5291   003EB8                     
  5292                           ; BSR set to: 0
  5293   003EB8  5194               	movf	strtof@i& (0+255),w,b
  5294   003EBA  2580               	addwf	strtof@s& (0+255),w,b
  5295   003EBC  6ED9               	movwf	fsr2l,c
  5296   003EBE  0E00               	movlw	0
  5297   003EC0  2181               	addwfc	(strtof@s+1)& (0+255),w,b
  5298   003EC2  6EDA               	movwf	fsr2h,c
  5299   003EC4  0E78               	movlw	120
  5300   003EC6  18DE               	xorwf	postinc2,w,c
  5301   003EC8  B4D8               	btfsc	status,2,c
  5302   003ECA  EF69  F01F         	goto	u16271
  5303   003ECE  EF6B  F01F         	goto	u16270
  5304   003ED2                     u16271:
  5305   003ED2  EF7A  F01F         	goto	l12814
  5306   003ED6                     u16270:
  5307   003ED6                     
  5308                           ; BSR set to: 0
  5309   003ED6  5194               	movf	strtof@i& (0+255),w,b
  5310   003ED8  2580               	addwf	strtof@s& (0+255),w,b
  5311   003EDA  6ED9               	movwf	fsr2l,c
  5312   003EDC  0E00               	movlw	0
  5313   003EDE  2181               	addwfc	(strtof@s+1)& (0+255),w,b
  5314   003EE0  6EDA               	movwf	fsr2h,c
  5315   003EE2  0E58               	movlw	88
  5316   003EE4  18DE               	xorwf	postinc2,w,c
  5317   003EE6  A4D8               	btfss	status,2,c
  5318   003EE8  EF78  F01F         	goto	u16281
  5319   003EEC  EF7A  F01F         	goto	u16280
  5320   003EF0                     u16281:
  5321   003EF0  EFC7  F022         	goto	l2195
  5322   003EF4                     u16280:
  5323   003EF4                     l12814:
  5324                           
  5325                           ; BSR set to: 0
  5326   003EF4  5194               	movf	strtof@i& (0+255),w,b
  5327   003EF6  6F84               	movwf	??_strtof& (0+255),b
  5328   003EF8  6B85               	clrf	(??_strtof+1)& (0+255),b
  5329   003EFA  0E01               	movlw	1
  5330   003EFC  2784               	addwf	??_strtof& (0+255),f,b
  5331   003EFE  0E00               	movlw	0
  5332   003F00  2385               	addwfc	(??_strtof+1)& (0+255),f,b
  5333   003F02  5184               	movf	??_strtof& (0+255),w,b
  5334   003F04  2780               	addwf	strtof@s& (0+255),f,b
  5335   003F06  5185               	movf	(??_strtof+1)& (0+255),w,b
  5336   003F08  2381               	addwfc	(strtof@s+1)& (0+255),f,b
  5337   003F0A                     
  5338                           ; BSR set to: 0
  5339   003F0A  0E00               	movlw	0
  5340   003F0C  6F94               	movwf	strtof@i& (0+255),b
  5341   003F0E  EF8A  F01F         	goto	l12820
  5342   003F12                     l12818:
  5343                           
  5344                           ; BSR set to: 0
  5345   003F12  2B94               	incf	strtof@i& (0+255),f,b
  5346   003F14                     l12820:
  5347                           
  5348                           ; BSR set to: 0
  5349   003F14  5194               	movf	strtof@i& (0+255),w,b
  5350   003F16  2580               	addwf	strtof@s& (0+255),w,b
  5351   003F18  6ED9               	movwf	fsr2l,c
  5352   003F1A  0E00               	movlw	0
  5353   003F1C  2181               	addwfc	(strtof@s+1)& (0+255),w,b
  5354   003F1E  6EDA               	movwf	fsr2h,c
  5355   003F20  0E30               	movlw	48
  5356   003F22  18DE               	xorwf	postinc2,w,c
  5357   003F24  B4D8               	btfsc	status,2,c
  5358   003F26  EF97  F01F         	goto	u16291
  5359   003F2A  EF99  F01F         	goto	u16290
  5360   003F2E                     u16291:
  5361   003F2E  EF89  F01F         	goto	l12818
  5362   003F32                     u16290:
  5363   003F32                     
  5364                           ; BSR set to: 0
  5365   003F32  0E00               	movlw	0
  5366   003F34  6F94               	movwf	strtof@i& (0+255),b
  5367   003F36                     l12824:
  5368                           
  5369                           ; BSR set to: 0
  5370   003F36  5194               	movf	strtof@i& (0+255),w,b
  5371   003F38  2580               	addwf	strtof@s& (0+255),w,b
  5372   003F3A  6ED9               	movwf	fsr2l,c
  5373   003F3C  0E00               	movlw	0
  5374   003F3E  2181               	addwfc	(strtof@s+1)& (0+255),w,b
  5375   003F40  6EDA               	movwf	fsr2h,c
  5376   003F42  0E70               	movlw	112
  5377   003F44  18DE               	xorwf	postinc2,w,c
  5378   003F46  B4D8               	btfsc	status,2,c
  5379   003F48  EFA8  F01F         	goto	u16301
  5380   003F4C  EFAA  F01F         	goto	u16300
  5381   003F50                     u16301:
  5382   003F50  EF1C  F021         	goto	l12894
  5383   003F54                     u16300:
  5384   003F54                     
  5385                           ; BSR set to: 0
  5386   003F54  5194               	movf	strtof@i& (0+255),w,b
  5387   003F56  2580               	addwf	strtof@s& (0+255),w,b
  5388   003F58  6ED9               	movwf	fsr2l,c
  5389   003F5A  0E00               	movlw	0
  5390   003F5C  2181               	addwfc	(strtof@s+1)& (0+255),w,b
  5391   003F5E  6EDA               	movwf	fsr2h,c
  5392   003F60  0E50               	movlw	80
  5393   003F62  18DE               	xorwf	postinc2,w,c
  5394   003F64  A4D8               	btfss	status,2,c
  5395   003F66  EFB7  F01F         	goto	u16311
  5396   003F6A  EFB9  F01F         	goto	u16310
  5397   003F6E                     u16311:
  5398   003F6E  EFBB  F01F         	goto	l12830
  5399   003F72                     u16310:
  5400   003F72  EF1C  F021         	goto	l12894
  5401   003F76                     l12830:
  5402                           
  5403                           ; BSR set to: 0
  5404   003F76  5194               	movf	strtof@i& (0+255),w,b
  5405   003F78  2580               	addwf	strtof@s& (0+255),w,b
  5406   003F7A  6ED9               	movwf	fsr2l,c
  5407   003F7C  0E00               	movlw	0
  5408   003F7E  2181               	addwfc	(strtof@s+1)& (0+255),w,b
  5409   003F80  6EDA               	movwf	fsr2h,c
  5410   003F82  0E2E               	movlw	46
  5411   003F84  18DE               	xorwf	postinc2,w,c
  5412   003F86  A4D8               	btfss	status,2,c
  5413   003F88  EFC8  F01F         	goto	u16321
  5414   003F8C  EFCA  F01F         	goto	u16320
  5415   003F90                     u16321:
  5416   003F90  EFCE  F01F         	goto	l12836
  5417   003F94                     u16320:
  5418   003F94                     
  5419                           ; BSR set to: 0
  5420   003F94  898B               	bsf	strtof@flags& (0+255),4,b
  5421   003F96  2B94               	incf	strtof@i& (0+255),f,b
  5422   003F98  EF1C  F021         	goto	l12894
  5423   003F9C                     l12836:
  5424                           
  5425                           ; BSR set to: 0
  5426   003F9C  5194               	movf	strtof@i& (0+255),w,b
  5427   003F9E  2580               	addwf	strtof@s& (0+255),w,b
  5428   003FA0  6ED9               	movwf	fsr2l,c
  5429   003FA2  0E00               	movlw	0
  5430   003FA4  2181               	addwfc	(strtof@s+1)& (0+255),w,b
  5431   003FA6  6EDA               	movwf	fsr2h,c
  5432   003FA8  50DF               	movf	indf2,w,c
  5433   003FAA  6F84               	movwf	??_strtof& (0+255),b
  5434   003FAC  5184               	movf	??_strtof& (0+255),w,b
  5435   003FAE  6E07               	movwf	isxdigit@c^0,c
  5436   003FB0  6A08               	clrf	(isxdigit@c+1)^0,c
  5437   003FB2  ECF1  F051         	call	_isxdigit	;wreg free
  5438   003FB6  5007               	movf	?_isxdigit^0,w,c
  5439   003FB8  1008               	iorwf	(?_isxdigit+1)^0,w,c
  5440   003FBA  B4D8               	btfsc	status,2,c
  5441   003FBC  EFE2  F01F         	goto	u16331
  5442   003FC0  EFE4  F01F         	goto	u16330
  5443   003FC4                     u16331:
  5444   003FC4  EF51  F020         	goto	l12856
  5445   003FC8                     u16330:
  5446   003FC8  0E00               	movlw	0
  5447   003FCA  0100               	movlb	0	; () banked
  5448   003FCC  6F8A               	movwf	strtof@digit& (0+255),b
  5449   003FCE                     
  5450                           ; BSR set to: 0
  5451   003FCE  5194               	movf	strtof@i& (0+255),w,b
  5452   003FD0  2580               	addwf	strtof@s& (0+255),w,b
  5453   003FD2  6ED9               	movwf	fsr2l,c
  5454   003FD4  0E00               	movlw	0
  5455   003FD6  2181               	addwfc	(strtof@s+1)& (0+255),w,b
  5456   003FD8  6EDA               	movwf	fsr2h,c
  5457   003FDA  50DF               	movf	indf2,w,c
  5458   003FDC  6F84               	movwf	??_strtof& (0+255),b
  5459   003FDE  0ED0               	movlw	208
  5460   003FE0  2584               	addwf	??_strtof& (0+255),w,b
  5461   003FE2  6F85               	movwf	(??_strtof+1)& (0+255),b
  5462   003FE4  6B86               	clrf	(??_strtof+2)& (0+255),b
  5463   003FE6  0EFF               	movlw	255
  5464   003FE8  2386               	addwfc	(??_strtof+2)& (0+255),f,b
  5465   003FEA  5186               	movf	(??_strtof+2)& (0+255),w,b
  5466   003FEC  E107               	bnz	u16341
  5467   003FEE  0E0A               	movlw	10
  5468   003FF0  5D85               	subwf	(??_strtof+1)& (0+255),w,b
  5469   003FF2  B0D8               	btfsc	status,0,c
  5470   003FF4  EFFE  F01F         	goto	u16341
  5471   003FF8  EF00  F020         	goto	u16340
  5472   003FFC                     u16341:
  5473   003FFC  EF0B  F020         	goto	l12846
  5474   004000                     u16340:
  5475   004000                     
  5476                           ; BSR set to: 0
  5477   004000  5194               	movf	strtof@i& (0+255),w,b
  5478   004002  2580               	addwf	strtof@s& (0+255),w,b
  5479   004004  6ED9               	movwf	fsr2l,c
  5480   004006  0E00               	movlw	0
  5481   004008  2181               	addwfc	(strtof@s+1)& (0+255),w,b
  5482   00400A  6EDA               	movwf	fsr2h,c
  5483   00400C  50DF               	movf	indf2,w,c
  5484   00400E  0FD0               	addlw	208
  5485   004010  6F8A               	movwf	strtof@digit& (0+255),b
  5486   004012  EF1C  F020         	goto	l12848
  5487   004016                     l12846:
  5488                           
  5489                           ; BSR set to: 0
  5490   004016  5194               	movf	strtof@i& (0+255),w,b
  5491   004018  2580               	addwf	strtof@s& (0+255),w,b
  5492   00401A  6ED9               	movwf	fsr2l,c
  5493   00401C  0E00               	movlw	0
  5494   00401E  2181               	addwfc	(strtof@s+1)& (0+255),w,b
  5495   004020  6EDA               	movwf	fsr2h,c
  5496   004022  50DF               	movf	indf2,w,c
  5497   004024  6F84               	movwf	??_strtof& (0+255),b
  5498   004026  5184               	movf	??_strtof& (0+255),w,b
  5499   004028  6E07               	movwf	toupper@c^0,c
  5500   00402A  6A08               	clrf	(toupper@c+1)^0,c
  5501   00402C  EC9E  F054         	call	_toupper	;wreg free
  5502   004030  5007               	movf	?_toupper^0,w,c
  5503   004032  0FC9               	addlw	201
  5504   004034  0100               	movlb	0	; () banked
  5505   004036  6F8A               	movwf	strtof@digit& (0+255),b
  5506   004038                     l12848:
  5507                           
  5508                           ; BSR set to: 0
  5509   004038  BF8F               	btfsc	(strtof@eexp+1)& (0+255),7,b
  5510   00403A  EF2A  F020         	goto	u16350
  5511   00403E  518F               	movf	(strtof@eexp+1)& (0+255),w,b
  5512   004040  E107               	bnz	u16351
  5513   004042  0E08               	movlw	8
  5514   004044  5D8E               	subwf	strtof@eexp& (0+255),w,b
  5515   004046  B0D8               	btfsc	status,0,c
  5516   004048  EF28  F020         	goto	u16351
  5517   00404C  EF2A  F020         	goto	u16350
  5518   004050                     u16351:
  5519   004050  EF49  F020         	goto	l12852
  5520   004054                     u16350:
  5521   004054                     
  5522                           ; BSR set to: 0
  5523   004054  518E               	movf	strtof@eexp& (0+255),w,b
  5524   004056  0807               	sublw	7
  5525   004058  6F84               	movwf	??_strtof& (0+255),b
  5526   00405A  90D8               	bcf	status,0,c
  5527   00405C  3784               	rlcf	??_strtof& (0+255),f,b
  5528   00405E  90D8               	bcf	status,0,c
  5529   004060  3784               	rlcf	??_strtof& (0+255),f,b
  5530   004062  C08A  F085         	movff	strtof@digit,??_strtof+1
  5531   004066  6B86               	clrf	(??_strtof+2)& (0+255),b
  5532   004068  6B87               	clrf	(??_strtof+3)& (0+255),b
  5533   00406A  6B88               	clrf	(??_strtof+4)& (0+255),b
  5534   00406C  2B84               	incf	??_strtof& (0+255),f,b
  5535   00406E  EF3E  F020         	goto	u16360
  5536   004072                     u16365:
  5537   004072  90D8               	bcf	status,0,c
  5538   004074  3785               	rlcf	(??_strtof+1)& (0+255),f,b
  5539   004076  3786               	rlcf	(??_strtof+2)& (0+255),f,b
  5540   004078  3787               	rlcf	(??_strtof+3)& (0+255),f,b
  5541   00407A  3788               	rlcf	(??_strtof+4)& (0+255),f,b
  5542   00407C                     u16360:
  5543   00407C  2F84               	decfsz	??_strtof& (0+255),f,b
  5544   00407E  EF39  F020         	goto	u16365
  5545   004082  5185               	movf	(??_strtof+1)& (0+255),w,b
  5546   004084  1390               	iorwf	strtof@_u& (0+255),f,b
  5547   004086  5186               	movf	(??_strtof+2)& (0+255),w,b
  5548   004088  1391               	iorwf	(strtof@_u+1)& (0+255),f,b
  5549   00408A  5187               	movf	(??_strtof+3)& (0+255),w,b
  5550   00408C  1392               	iorwf	(strtof@_u+2)& (0+255),f,b
  5551   00408E  5188               	movf	(??_strtof+4)& (0+255),w,b
  5552   004090  1393               	iorwf	(strtof@_u+3)& (0+255),f,b
  5553   004092                     l12852:
  5554                           
  5555                           ; BSR set to: 0
  5556   004092  4B8E               	infsnz	strtof@eexp& (0+255),f,b
  5557   004094  2B8F               	incf	(strtof@eexp+1)& (0+255),f,b
  5558   004096                     
  5559                           ; BSR set to: 0
  5560   004096  0E04               	movlw	4
  5561   004098  278C               	addwf	strtof@expon& (0+255),f,b
  5562   00409A  0E00               	movlw	0
  5563   00409C  238D               	addwfc	(strtof@expon+1)& (0+255),f,b
  5564   00409E  EF5C  F020         	goto	l12860
  5565   0040A2                     l12856:
  5566   0040A2  0E00               	movlw	0
  5567   0040A4  0100               	movlb	0	; () banked
  5568   0040A6  6F80               	movwf	?_strtof& (0+255),b
  5569   0040A8  0E00               	movlw	0
  5570   0040AA  6F81               	movwf	(?_strtof+1)& (0+255),b
  5571   0040AC  0E00               	movlw	0
  5572   0040AE  6F82               	movwf	(?_strtof+2)& (0+255),b
  5573   0040B0  0E00               	movlw	0
  5574   0040B2  6F83               	movwf	(?_strtof+3)& (0+255),b
  5575   0040B4  EFCC  F025         	goto	l2154
  5576   0040B8                     l12860:
  5577                           
  5578                           ; BSR set to: 0
  5579   0040B8  2B94               	incf	strtof@i& (0+255),f,b
  5580   0040BA  EF9B  F01F         	goto	l12824
  5581   0040BE                     l12862:
  5582                           
  5583                           ; BSR set to: 0
  5584   0040BE  5194               	movf	strtof@i& (0+255),w,b
  5585   0040C0  2580               	addwf	strtof@s& (0+255),w,b
  5586   0040C2  6ED9               	movwf	fsr2l,c
  5587   0040C4  0E00               	movlw	0
  5588   0040C6  2181               	addwfc	(strtof@s+1)& (0+255),w,b
  5589   0040C8  6EDA               	movwf	fsr2h,c
  5590   0040CA  0E70               	movlw	112
  5591   0040CC  18DE               	xorwf	postinc2,w,c
  5592   0040CE  B4D8               	btfsc	status,2,c
  5593   0040D0  EF6C  F020         	goto	u16371
  5594   0040D4  EF6E  F020         	goto	u16370
  5595   0040D8                     u16371:
  5596   0040D8  EF23  F021         	goto	l12896
  5597   0040DC                     u16370:
  5598   0040DC                     
  5599                           ; BSR set to: 0
  5600   0040DC  5194               	movf	strtof@i& (0+255),w,b
  5601   0040DE  2580               	addwf	strtof@s& (0+255),w,b
  5602   0040E0  6ED9               	movwf	fsr2l,c
  5603   0040E2  0E00               	movlw	0
  5604   0040E4  2181               	addwfc	(strtof@s+1)& (0+255),w,b
  5605   0040E6  6EDA               	movwf	fsr2h,c
  5606   0040E8  0E50               	movlw	80
  5607   0040EA  18DE               	xorwf	postinc2,w,c
  5608   0040EC  A4D8               	btfss	status,2,c
  5609   0040EE  EF7B  F020         	goto	u16381
  5610   0040F2  EF7D  F020         	goto	u16380
  5611   0040F6                     u16381:
  5612   0040F6  EF7F  F020         	goto	l12868
  5613   0040FA                     u16380:
  5614   0040FA  EF23  F021         	goto	l12896
  5615   0040FE                     l12868:
  5616                           
  5617                           ; BSR set to: 0
  5618   0040FE  5194               	movf	strtof@i& (0+255),w,b
  5619   004100  2580               	addwf	strtof@s& (0+255),w,b
  5620   004102  6ED9               	movwf	fsr2l,c
  5621   004104  0E00               	movlw	0
  5622   004106  2181               	addwfc	(strtof@s+1)& (0+255),w,b
  5623   004108  6EDA               	movwf	fsr2h,c
  5624   00410A  0E30               	movlw	48
  5625   00410C  18DE               	xorwf	postinc2,w,c
  5626   00410E  A4D8               	btfss	status,2,c
  5627   004110  EF8C  F020         	goto	u16391
  5628   004114  EF8E  F020         	goto	u16390
  5629   004118                     u16391:
  5630   004118  EF9D  F020         	goto	l12874
  5631   00411C                     u16390:
  5632   00411C                     
  5633                           ; BSR set to: 0
  5634   00411C  518E               	movf	strtof@eexp& (0+255),w,b
  5635   00411E  118F               	iorwf	(strtof@eexp+1)& (0+255),w,b
  5636   004120  A4D8               	btfss	status,2,c
  5637   004122  EF95  F020         	goto	u16401
  5638   004126  EF97  F020         	goto	u16400
  5639   00412A                     u16401:
  5640   00412A  EF9D  F020         	goto	l12874
  5641   00412E                     u16400:
  5642   00412E                     
  5643                           ; BSR set to: 0
  5644   00412E  0EFC               	movlw	252
  5645   004130  278C               	addwf	strtof@expon& (0+255),f,b
  5646   004132  0EFF               	movlw	255
  5647   004134  238D               	addwfc	(strtof@expon+1)& (0+255),f,b
  5648   004136  EF1A  F021         	goto	l12892
  5649   00413A                     l12874:
  5650                           
  5651                           ; BSR set to: 0
  5652   00413A  5194               	movf	strtof@i& (0+255),w,b
  5653   00413C  2580               	addwf	strtof@s& (0+255),w,b
  5654   00413E  6ED9               	movwf	fsr2l,c
  5655   004140  0E00               	movlw	0
  5656   004142  2181               	addwfc	(strtof@s+1)& (0+255),w,b
  5657   004144  6EDA               	movwf	fsr2h,c
  5658   004146  50DF               	movf	indf2,w,c
  5659   004148  6F84               	movwf	??_strtof& (0+255),b
  5660   00414A  5184               	movf	??_strtof& (0+255),w,b
  5661   00414C  6E07               	movwf	isxdigit@c^0,c
  5662   00414E  6A08               	clrf	(isxdigit@c+1)^0,c
  5663   004150  ECF1  F051         	call	_isxdigit	;wreg free
  5664   004154  5007               	movf	?_isxdigit^0,w,c
  5665   004156  1008               	iorwf	(?_isxdigit+1)^0,w,c
  5666   004158  B4D8               	btfsc	status,2,c
  5667   00415A  EFB1  F020         	goto	u16411
  5668   00415E  EFB3  F020         	goto	u16410
  5669   004162                     u16411:
  5670   004162  EF1A  F021         	goto	l12892
  5671   004166                     u16410:
  5672   004166  0E00               	movlw	0
  5673   004168  0100               	movlb	0	; () banked
  5674   00416A  6F8A               	movwf	strtof@digit& (0+255),b
  5675   00416C                     
  5676                           ; BSR set to: 0
  5677   00416C  5194               	movf	strtof@i& (0+255),w,b
  5678   00416E  2580               	addwf	strtof@s& (0+255),w,b
  5679   004170  6ED9               	movwf	fsr2l,c
  5680   004172  0E00               	movlw	0
  5681   004174  2181               	addwfc	(strtof@s+1)& (0+255),w,b
  5682   004176  6EDA               	movwf	fsr2h,c
  5683   004178  50DF               	movf	indf2,w,c
  5684   00417A  6F84               	movwf	??_strtof& (0+255),b
  5685   00417C  0ED0               	movlw	208
  5686   00417E  2584               	addwf	??_strtof& (0+255),w,b
  5687   004180  6F85               	movwf	(??_strtof+1)& (0+255),b
  5688   004182  6B86               	clrf	(??_strtof+2)& (0+255),b
  5689   004184  0EFF               	movlw	255
  5690   004186  2386               	addwfc	(??_strtof+2)& (0+255),f,b
  5691   004188  5186               	movf	(??_strtof+2)& (0+255),w,b
  5692   00418A  E107               	bnz	u16421
  5693   00418C  0E0A               	movlw	10
  5694   00418E  5D85               	subwf	(??_strtof+1)& (0+255),w,b
  5695   004190  B0D8               	btfsc	status,0,c
  5696   004192  EFCD  F020         	goto	u16421
  5697   004196  EFCF  F020         	goto	u16420
  5698   00419A                     u16421:
  5699   00419A  EFDA  F020         	goto	l12884
  5700   00419E                     u16420:
  5701   00419E                     
  5702                           ; BSR set to: 0
  5703   00419E  5194               	movf	strtof@i& (0+255),w,b
  5704   0041A0  2580               	addwf	strtof@s& (0+255),w,b
  5705   0041A2  6ED9               	movwf	fsr2l,c
  5706   0041A4  0E00               	movlw	0
  5707   0041A6  2181               	addwfc	(strtof@s+1)& (0+255),w,b
  5708   0041A8  6EDA               	movwf	fsr2h,c
  5709   0041AA  50DF               	movf	indf2,w,c
  5710   0041AC  0FD0               	addlw	208
  5711   0041AE  6F8A               	movwf	strtof@digit& (0+255),b
  5712   0041B0  EFEB  F020         	goto	l12886
  5713   0041B4                     l12884:
  5714                           
  5715                           ; BSR set to: 0
  5716   0041B4  5194               	movf	strtof@i& (0+255),w,b
  5717   0041B6  2580               	addwf	strtof@s& (0+255),w,b
  5718   0041B8  6ED9               	movwf	fsr2l,c
  5719   0041BA  0E00               	movlw	0
  5720   0041BC  2181               	addwfc	(strtof@s+1)& (0+255),w,b
  5721   0041BE  6EDA               	movwf	fsr2h,c
  5722   0041C0  50DF               	movf	indf2,w,c
  5723   0041C2  6F84               	movwf	??_strtof& (0+255),b
  5724   0041C4  5184               	movf	??_strtof& (0+255),w,b
  5725   0041C6  6E07               	movwf	toupper@c^0,c
  5726   0041C8  6A08               	clrf	(toupper@c+1)^0,c
  5727   0041CA  EC9E  F054         	call	_toupper	;wreg free
  5728   0041CE  5007               	movf	?_toupper^0,w,c
  5729   0041D0  0FC9               	addlw	201
  5730   0041D2  0100               	movlb	0	; () banked
  5731   0041D4  6F8A               	movwf	strtof@digit& (0+255),b
  5732   0041D6                     l12886:
  5733                           
  5734                           ; BSR set to: 0
  5735   0041D6  BF8F               	btfsc	(strtof@eexp+1)& (0+255),7,b
  5736   0041D8  EFF9  F020         	goto	u16430
  5737   0041DC  518F               	movf	(strtof@eexp+1)& (0+255),w,b
  5738   0041DE  E107               	bnz	u16431
  5739   0041E0  0E08               	movlw	8
  5740   0041E2  5D8E               	subwf	strtof@eexp& (0+255),w,b
  5741   0041E4  B0D8               	btfsc	status,0,c
  5742   0041E6  EFF7  F020         	goto	u16431
  5743   0041EA  EFF9  F020         	goto	u16430
  5744   0041EE                     u16431:
  5745   0041EE  EF18  F021         	goto	l12890
  5746   0041F2                     u16430:
  5747   0041F2                     
  5748                           ; BSR set to: 0
  5749   0041F2  518E               	movf	strtof@eexp& (0+255),w,b
  5750   0041F4  0807               	sublw	7
  5751   0041F6  6F84               	movwf	??_strtof& (0+255),b
  5752   0041F8  90D8               	bcf	status,0,c
  5753   0041FA  3784               	rlcf	??_strtof& (0+255),f,b
  5754   0041FC  90D8               	bcf	status,0,c
  5755   0041FE  3784               	rlcf	??_strtof& (0+255),f,b
  5756   004200  C08A  F085         	movff	strtof@digit,??_strtof+1
  5757   004204  6B86               	clrf	(??_strtof+2)& (0+255),b
  5758   004206  6B87               	clrf	(??_strtof+3)& (0+255),b
  5759   004208  6B88               	clrf	(??_strtof+4)& (0+255),b
  5760   00420A  2B84               	incf	??_strtof& (0+255),f,b
  5761   00420C  EF0D  F021         	goto	u16440
  5762   004210                     u16445:
  5763   004210  90D8               	bcf	status,0,c
  5764   004212  3785               	rlcf	(??_strtof+1)& (0+255),f,b
  5765   004214  3786               	rlcf	(??_strtof+2)& (0+255),f,b
  5766   004216  3787               	rlcf	(??_strtof+3)& (0+255),f,b
  5767   004218  3788               	rlcf	(??_strtof+4)& (0+255),f,b
  5768   00421A                     u16440:
  5769   00421A  2F84               	decfsz	??_strtof& (0+255),f,b
  5770   00421C  EF08  F021         	goto	u16445
  5771   004220  5185               	movf	(??_strtof+1)& (0+255),w,b
  5772   004222  1390               	iorwf	strtof@_u& (0+255),f,b
  5773   004224  5186               	movf	(??_strtof+2)& (0+255),w,b
  5774   004226  1391               	iorwf	(strtof@_u+1)& (0+255),f,b
  5775   004228  5187               	movf	(??_strtof+3)& (0+255),w,b
  5776   00422A  1392               	iorwf	(strtof@_u+2)& (0+255),f,b
  5777   00422C  5188               	movf	(??_strtof+4)& (0+255),w,b
  5778   00422E  1393               	iorwf	(strtof@_u+3)& (0+255),f,b
  5779   004230                     l12890:
  5780                           
  5781                           ; BSR set to: 0
  5782   004230  4B8E               	infsnz	strtof@eexp& (0+255),f,b
  5783   004232  2B8F               	incf	(strtof@eexp+1)& (0+255),f,b
  5784   004234                     l12892:
  5785   004234  0100               	movlb	0	; () banked
  5786   004236  2B94               	incf	strtof@i& (0+255),f,b
  5787   004238                     l12894:
  5788                           
  5789                           ; BSR set to: 0
  5790   004238  B98B               	btfsc	strtof@flags& (0+255),4,b
  5791   00423A  EF21  F021         	goto	u16451
  5792   00423E  EF23  F021         	goto	u16450
  5793   004242                     u16451:
  5794   004242  EF5F  F020         	goto	l12862
  5795   004246                     u16450:
  5796   004246                     l12896:
  5797                           
  5798                           ; BSR set to: 0
  5799   004246  5194               	movf	strtof@i& (0+255),w,b
  5800   004248  2580               	addwf	strtof@s& (0+255),w,b
  5801   00424A  6ED9               	movwf	fsr2l,c
  5802   00424C  0E00               	movlw	0
  5803   00424E  2181               	addwfc	(strtof@s+1)& (0+255),w,b
  5804   004250  6EDA               	movwf	fsr2h,c
  5805   004252  0E70               	movlw	112
  5806   004254  18DE               	xorwf	postinc2,w,c
  5807   004256  B4D8               	btfsc	status,2,c
  5808   004258  EF30  F021         	goto	u16461
  5809   00425C  EF32  F021         	goto	u16460
  5810   004260                     u16461:
  5811   004260  EF4B  F021         	goto	l12904
  5812   004264                     u16460:
  5813   004264                     
  5814                           ; BSR set to: 0
  5815   004264  5194               	movf	strtof@i& (0+255),w,b
  5816   004266  2580               	addwf	strtof@s& (0+255),w,b
  5817   004268  6ED9               	movwf	fsr2l,c
  5818   00426A  0E00               	movlw	0
  5819   00426C  2181               	addwfc	(strtof@s+1)& (0+255),w,b
  5820   00426E  6EDA               	movwf	fsr2h,c
  5821   004270  0E50               	movlw	80
  5822   004272  18DE               	xorwf	postinc2,w,c
  5823   004274  B4D8               	btfsc	status,2,c
  5824   004276  EF3F  F021         	goto	u16471
  5825   00427A  EF41  F021         	goto	u16470
  5826   00427E                     u16471:
  5827   00427E  EF4B  F021         	goto	l12904
  5828   004282                     u16470:
  5829   004282                     
  5830                           ; BSR set to: 0
  5831   004282  0E00               	movlw	0
  5832   004284  6F80               	movwf	?_strtof& (0+255),b
  5833   004286  0E00               	movlw	0
  5834   004288  6F81               	movwf	(?_strtof+1)& (0+255),b
  5835   00428A  0E00               	movlw	0
  5836   00428C  6F82               	movwf	(?_strtof+2)& (0+255),b
  5837   00428E  0E00               	movlw	0
  5838   004290  6F83               	movwf	(?_strtof+3)& (0+255),b
  5839   004292  EFCC  F025         	goto	l2154
  5840   004296                     l12904:
  5841                           
  5842                           ; BSR set to: 0
  5843   004296  2B94               	incf	strtof@i& (0+255),f,b
  5844   004298                     
  5845                           ; BSR set to: 0
  5846   004298  5194               	movf	strtof@i& (0+255),w,b
  5847   00429A  2580               	addwf	strtof@s& (0+255),w,b
  5848   00429C  6ED9               	movwf	fsr2l,c
  5849   00429E  0E00               	movlw	0
  5850   0042A0  2181               	addwfc	(strtof@s+1)& (0+255),w,b
  5851   0042A2  6EDA               	movwf	fsr2h,c
  5852   0042A4  0E2B               	movlw	43
  5853   0042A6  18DE               	xorwf	postinc2,w,c
  5854   0042A8  A4D8               	btfss	status,2,c
  5855   0042AA  EF59  F021         	goto	u16481
  5856   0042AE  EF5B  F021         	goto	u16480
  5857   0042B2                     u16481:
  5858   0042B2  EF5E  F021         	goto	l12910
  5859   0042B6                     u16480:
  5860   0042B6                     
  5861                           ; BSR set to: 0
  5862   0042B6  2B94               	incf	strtof@i& (0+255),f,b
  5863   0042B8  EF6F  F021         	goto	l12914
  5864   0042BC                     l12910:
  5865                           
  5866                           ; BSR set to: 0
  5867   0042BC  5194               	movf	strtof@i& (0+255),w,b
  5868   0042BE  2580               	addwf	strtof@s& (0+255),w,b
  5869   0042C0  6ED9               	movwf	fsr2l,c
  5870   0042C2  0E00               	movlw	0
  5871   0042C4  2181               	addwfc	(strtof@s+1)& (0+255),w,b
  5872   0042C6  6EDA               	movwf	fsr2h,c
  5873   0042C8  0E2D               	movlw	45
  5874   0042CA  18DE               	xorwf	postinc2,w,c
  5875   0042CC  A4D8               	btfss	status,2,c
  5876   0042CE  EF6B  F021         	goto	u16491
  5877   0042D2  EF6D  F021         	goto	u16490
  5878   0042D6                     u16491:
  5879   0042D6  EF6F  F021         	goto	l12914
  5880   0042DA                     u16490:
  5881   0042DA                     
  5882                           ; BSR set to: 0
  5883   0042DA  878B               	bsf	strtof@flags& (0+255),3,b
  5884   0042DC  2B94               	incf	strtof@i& (0+255),f,b
  5885   0042DE                     l12914:
  5886                           
  5887                           ; BSR set to: 0
  5888   0042DE  5194               	movf	strtof@i& (0+255),w,b
  5889   0042E0  2780               	addwf	strtof@s& (0+255),f,b
  5890   0042E2  0E00               	movlw	0
  5891   0042E4  2381               	addwfc	(strtof@s+1)& (0+255),f,b
  5892   0042E6                     
  5893                           ; BSR set to: 0
  5894   0042E6  0E00               	movlw	0
  5895   0042E8  6F94               	movwf	strtof@i& (0+255),b
  5896   0042EA  EF78  F021         	goto	l12920
  5897   0042EE                     l12918:
  5898                           
  5899                           ; BSR set to: 0
  5900   0042EE  2B94               	incf	strtof@i& (0+255),f,b
  5901   0042F0                     l12920:
  5902                           
  5903                           ; BSR set to: 0
  5904   0042F0  5194               	movf	strtof@i& (0+255),w,b
  5905   0042F2  2580               	addwf	strtof@s& (0+255),w,b
  5906   0042F4  6ED9               	movwf	fsr2l,c
  5907   0042F6  0E00               	movlw	0
  5908   0042F8  2181               	addwfc	(strtof@s+1)& (0+255),w,b
  5909   0042FA  6EDA               	movwf	fsr2h,c
  5910   0042FC  0E30               	movlw	48
  5911   0042FE  18DE               	xorwf	postinc2,w,c
  5912   004300  B4D8               	btfsc	status,2,c
  5913   004302  EF85  F021         	goto	u16501
  5914   004306  EF87  F021         	goto	u16500
  5915   00430A                     u16501:
  5916   00430A  EF77  F021         	goto	l12918
  5917   00430E                     u16500:
  5918   00430E                     
  5919                           ; BSR set to: 0
  5920   00430E  0E00               	movlw	0
  5921   004310  6F8F               	movwf	(strtof@eexp+1)& (0+255),b
  5922   004312  0E00               	movlw	0
  5923   004314  6F8E               	movwf	strtof@eexp& (0+255),b
  5924   004316  EFB7  F021         	goto	l12934
  5925   00431A                     l12924:
  5926                           
  5927                           ; BSR set to: 0
  5928   00431A  5194               	movf	strtof@i& (0+255),w,b
  5929   00431C  B4D8               	btfsc	status,2,c
  5930   00431E  EF93  F021         	goto	u16511
  5931   004322  EF95  F021         	goto	u16510
  5932   004326                     u16511:
  5933   004326  EFA3  F021         	goto	l12928
  5934   00432A                     u16510:
  5935   00432A                     
  5936                           ; BSR set to: 0
  5937   00432A  C08E  F003         	movff	strtof@eexp,___wmul@multiplier
  5938   00432E  C08F  F004         	movff	strtof@eexp+1,___wmul@multiplier+1
  5939   004332  0E00               	movlw	0
  5940   004334  6E06               	movwf	(___wmul@multiplicand+1)^0,c
  5941   004336  0E0A               	movlw	10
  5942   004338  6E05               	movwf	___wmul@multiplicand^0,c
  5943   00433A  ECC7  F055         	call	___wmul	;wreg free
  5944   00433E  C003  F08E         	movff	?___wmul,strtof@eexp
  5945   004342  C004  F08F         	movff	?___wmul+1,strtof@eexp+1
  5946   004346                     l12928:
  5947   004346  0100               	movlb	0	; () banked
  5948   004348  5194               	movf	strtof@i& (0+255),w,b
  5949   00434A  2580               	addwf	strtof@s& (0+255),w,b
  5950   00434C  6ED9               	movwf	fsr2l,c
  5951   00434E  0E00               	movlw	0
  5952   004350  2181               	addwfc	(strtof@s+1)& (0+255),w,b
  5953   004352  6EDA               	movwf	fsr2h,c
  5954   004354  50DF               	movf	indf2,w,c
  5955   004356  6F84               	movwf	??_strtof& (0+255),b
  5956   004358  0ED0               	movlw	208
  5957   00435A  2584               	addwf	??_strtof& (0+255),w,b
  5958   00435C  6F85               	movwf	(??_strtof+1)& (0+255),b
  5959   00435E  6B86               	clrf	(??_strtof+2)& (0+255),b
  5960   004360  0EFF               	movlw	255
  5961   004362  2386               	addwfc	(??_strtof+2)& (0+255),f,b
  5962   004364  5185               	movf	(??_strtof+1)& (0+255),w,b
  5963   004366  278E               	addwf	strtof@eexp& (0+255),f,b
  5964   004368  5186               	movf	(??_strtof+2)& (0+255),w,b
  5965   00436A  238F               	addwfc	(strtof@eexp+1)& (0+255),f,b
  5966   00436C                     
  5967                           ; BSR set to: 0
  5968   00436C  2B94               	incf	strtof@i& (0+255),f,b
  5969   00436E                     l12934:
  5970                           
  5971                           ; BSR set to: 0
  5972   00436E  5194               	movf	strtof@i& (0+255),w,b
  5973   004370  2580               	addwf	strtof@s& (0+255),w,b
  5974   004372  6ED9               	movwf	fsr2l,c
  5975   004374  0E00               	movlw	0
  5976   004376  2181               	addwfc	(strtof@s+1)& (0+255),w,b
  5977   004378  6EDA               	movwf	fsr2h,c
  5978   00437A  50DF               	movf	indf2,w,c
  5979   00437C  6F84               	movwf	??_strtof& (0+255),b
  5980   00437E  0ED0               	movlw	208
  5981   004380  2584               	addwf	??_strtof& (0+255),w,b
  5982   004382  6F85               	movwf	(??_strtof+1)& (0+255),b
  5983   004384  6B86               	clrf	(??_strtof+2)& (0+255),b
  5984   004386  0EFF               	movlw	255
  5985   004388  2386               	addwfc	(??_strtof+2)& (0+255),f,b
  5986   00438A  5186               	movf	(??_strtof+2)& (0+255),w,b
  5987   00438C  E109               	bnz	u16520
  5988   00438E  0E0A               	movlw	10
  5989   004390  5D85               	subwf	(??_strtof+1)& (0+255),w,b
  5990   004392  A0D8               	btfss	status,0,c
  5991   004394  EFCE  F021         	goto	u16521
  5992   004398  EFD0  F021         	goto	u16520
  5993   00439C                     u16521:
  5994   00439C  EF8D  F021         	goto	l12924
  5995   0043A0                     u16520:
  5996   0043A0                     
  5997                           ; BSR set to: 0
  5998   0043A0  5194               	movf	strtof@i& (0+255),w,b
  5999   0043A2  A4D8               	btfss	status,2,c
  6000   0043A4  EFD6  F021         	goto	u16531
  6001   0043A8  EFD8  F021         	goto	u16530
  6002   0043AC                     u16531:
  6003   0043AC  EFE2  F021         	goto	l2184
  6004   0043B0                     u16530:
  6005   0043B0                     
  6006                           ; BSR set to: 0
  6007   0043B0  0E00               	movlw	0
  6008   0043B2  6F80               	movwf	?_strtof& (0+255),b
  6009   0043B4  0E00               	movlw	0
  6010   0043B6  6F81               	movwf	(?_strtof+1)& (0+255),b
  6011   0043B8  0E00               	movlw	0
  6012   0043BA  6F82               	movwf	(?_strtof+2)& (0+255),b
  6013   0043BC  0E00               	movlw	0
  6014   0043BE  6F83               	movwf	(?_strtof+3)& (0+255),b
  6015   0043C0  EFCC  F025         	goto	l2154
  6016   0043C4                     l2184:
  6017                           
  6018                           ; BSR set to: 0
  6019   0043C4  A78B               	btfss	strtof@flags& (0+255),3,b
  6020   0043C6  EFE7  F021         	goto	u16541
  6021   0043CA  EFE9  F021         	goto	u16540
  6022   0043CE                     u16541:
  6023   0043CE  EFED  F021         	goto	l12944
  6024   0043D2                     u16540:
  6025   0043D2                     
  6026                           ; BSR set to: 0
  6027   0043D2  6D8E               	negf	strtof@eexp& (0+255),b
  6028   0043D4  1F8F               	comf	(strtof@eexp+1)& (0+255),f,b
  6029   0043D6  B0D8               	btfsc	status,0,c
  6030   0043D8  2B8F               	incf	(strtof@eexp+1)& (0+255),f,b
  6031   0043DA                     l12944:
  6032                           
  6033                           ; BSR set to: 0
  6034   0043DA  518E               	movf	strtof@eexp& (0+255),w,b
  6035   0043DC  278C               	addwf	strtof@expon& (0+255),f,b
  6036   0043DE  518F               	movf	(strtof@eexp+1)& (0+255),w,b
  6037   0043E0  238D               	addwfc	(strtof@expon+1)& (0+255),f,b
  6038   0043E2                     
  6039                           ; BSR set to: 0
  6040   0043E2  5182               	movf	strtof@res& (0+255),w,b
  6041   0043E4  1183               	iorwf	(strtof@res+1)& (0+255),w,b
  6042   0043E6  B4D8               	btfsc	status,2,c
  6043   0043E8  EFF8  F021         	goto	u16551
  6044   0043EC  EFFA  F021         	goto	u16550
  6045   0043F0                     u16551:
  6046   0043F0  EF08  F022         	goto	l12950
  6047   0043F4                     u16550:
  6048   0043F4                     
  6049                           ; BSR set to: 0
  6050   0043F4  5194               	movf	strtof@i& (0+255),w,b
  6051   0043F6  2580               	addwf	strtof@s& (0+255),w,b
  6052   0043F8  6F84               	movwf	??_strtof& (0+255),b
  6053   0043FA  0E00               	movlw	0
  6054   0043FC  2181               	addwfc	(strtof@s+1)& (0+255),w,b
  6055   0043FE  6F85               	movwf	(??_strtof+1)& (0+255),b
  6056   004400  C082  FFD9         	movff	strtof@res,fsr2l
  6057   004404  C083  FFDA         	movff	strtof@res+1,fsr2h
  6058   004408  C084  FFDE         	movff	??_strtof,postinc2
  6059   00440C  C085  FFDD         	movff	??_strtof+1,postdec2
  6060   004410                     l12950:
  6061                           
  6062                           ; BSR set to: 0
  6063   004410  5190               	movf	strtof@_u& (0+255),w,b
  6064   004412  1191               	iorwf	(strtof@_u+1)& (0+255),w,b
  6065   004414  1192               	iorwf	(strtof@_u+2)& (0+255),w,b
  6066   004416  1193               	iorwf	(strtof@_u+3)& (0+255),w,b
  6067   004418  A4D8               	btfss	status,2,c
  6068   00441A  EF11  F022         	goto	u16561
  6069   00441E  EF13  F022         	goto	u16560
  6070   004422                     u16561:
  6071   004422  EF1D  F022         	goto	l12956
  6072   004426                     u16560:
  6073   004426                     
  6074                           ; BSR set to: 0
  6075   004426  0E00               	movlw	0
  6076   004428  6F80               	movwf	?_strtof& (0+255),b
  6077   00442A  0E00               	movlw	0
  6078   00442C  6F81               	movwf	(?_strtof+1)& (0+255),b
  6079   00442E  0E00               	movlw	0
  6080   004430  6F82               	movwf	(?_strtof+2)& (0+255),b
  6081   004432  0E00               	movlw	0
  6082   004434  6F83               	movwf	(?_strtof+3)& (0+255),b
  6083   004436  EFCC  F025         	goto	l2154
  6084   00443A                     l12956:
  6085                           
  6086                           ; BSR set to: 0
  6087   00443A  0EFF               	movlw	255
  6088   00443C  1590               	andwf	strtof@_u& (0+255),w,b
  6089   00443E  6F84               	movwf	??_strtof& (0+255),b
  6090   004440  0E00               	movlw	0
  6091   004442  1591               	andwf	(strtof@_u+1)& (0+255),w,b
  6092   004444  6F85               	movwf	(??_strtof+1)& (0+255),b
  6093   004446  0E00               	movlw	0
  6094   004448  1592               	andwf	(strtof@_u+2)& (0+255),w,b
  6095   00444A  6F86               	movwf	(??_strtof+2)& (0+255),b
  6096   00444C  0E00               	movlw	0
  6097   00444E  1593               	andwf	(strtof@_u+3)& (0+255),w,b
  6098   004450  6F87               	movwf	(??_strtof+3)& (0+255),b
  6099   004452  5187               	movf	(??_strtof+3)& (0+255),w,b
  6100   004454  1186               	iorwf	(??_strtof+2)& (0+255),w,b
  6101   004456  1185               	iorwf	(??_strtof+1)& (0+255),w,b
  6102   004458  E109               	bnz	u16570
  6103   00445A  0E81               	movlw	129
  6104   00445C  5D84               	subwf	??_strtof& (0+255),w,b
  6105   00445E  A0D8               	btfss	status,0,c
  6106   004460  EF34  F022         	goto	u16571
  6107   004464  EF36  F022         	goto	u16570
  6108   004468                     u16571:
  6109   004468  EF48  F022         	goto	l12962
  6110   00446C                     u16570:
  6111   00446C                     
  6112                           ; BSR set to: 0
  6113   00446C  0E00               	movlw	0
  6114   00446E  2790               	addwf	strtof@_u& (0+255),f,b
  6115   004470  0E01               	movlw	1
  6116   004472  2391               	addwfc	(strtof@_u+1)& (0+255),f,b
  6117   004474  0E00               	movlw	0
  6118   004476  2392               	addwfc	(strtof@_u+2)& (0+255),f,b
  6119   004478  0E00               	movlw	0
  6120   00447A  2393               	addwfc	(strtof@_u+3)& (0+255),f,b
  6121   00447C  EF48  F022         	goto	l12962
  6122   004480                     l12960:
  6123                           
  6124                           ; BSR set to: 0
  6125   004480  90D8               	bcf	status,0,c
  6126   004482  3790               	rlcf	strtof@_u& (0+255),f,b
  6127   004484  3791               	rlcf	(strtof@_u+1)& (0+255),f,b
  6128   004486  3792               	rlcf	(strtof@_u+2)& (0+255),f,b
  6129   004488  3793               	rlcf	(strtof@_u+3)& (0+255),f,b
  6130   00448A  078C               	decf	strtof@expon& (0+255),f,b
  6131   00448C  A0D8               	btfss	status,0,c
  6132   00448E  078D               	decf	(strtof@expon+1)& (0+255),f,b
  6133   004490                     l12962:
  6134                           
  6135                           ; BSR set to: 0
  6136   004490  AF93               	btfss	(strtof@_u+3)& (0+255),7,b
  6137   004492  EF4D  F022         	goto	u16581
  6138   004496  EF4F  F022         	goto	u16580
  6139   00449A                     u16581:
  6140   00449A  EF40  F022         	goto	l12960
  6141   00449E                     u16580:
  6142   00449E                     
  6143                           ; BSR set to: 0
  6144   00449E  AF8D               	btfss	(strtof@expon+1)& (0+255),7,b
  6145   0044A0  EF5B  F022         	goto	u16591
  6146   0044A4  0E83               	movlw	131
  6147   0044A6  5D8C               	subwf	strtof@expon& (0+255),w,b
  6148   0044A8  0EFF               	movlw	255
  6149   0044AA  598D               	subwfb	(strtof@expon+1)& (0+255),w,b
  6150   0044AC  B0D8               	btfsc	status,0,c
  6151   0044AE  EF5B  F022         	goto	u16591
  6152   0044B2  EF5D  F022         	goto	u16590
  6153   0044B6                     u16591:
  6154   0044B6  EF69  F022         	goto	l12968
  6155   0044BA                     u16590:
  6156   0044BA                     
  6157                           ; BSR set to: 0
  6158   0044BA  0EFF               	movlw	255
  6159   0044BC  6F8D               	movwf	(strtof@expon+1)& (0+255),b
  6160   0044BE  0E81               	movlw	129
  6161   0044C0  6F8C               	movwf	strtof@expon& (0+255),b
  6162   0044C2  0E00               	movlw	0
  6163   0044C4  6F90               	movwf	strtof@_u& (0+255),b
  6164   0044C6  0E00               	movlw	0
  6165   0044C8  6F91               	movwf	(strtof@_u+1)& (0+255),b
  6166   0044CA  0E00               	movlw	0
  6167   0044CC  6F92               	movwf	(strtof@_u+2)& (0+255),b
  6168   0044CE  0E00               	movlw	0
  6169   0044D0  6F93               	movwf	(strtof@_u+3)& (0+255),b
  6170   0044D2                     l12968:
  6171                           
  6172                           ; BSR set to: 0
  6173   0044D2  0E81               	movlw	129
  6174   0044D4  198C               	xorwf	strtof@expon& (0+255),w,b
  6175   0044D6  E108               	bnz	u16600
  6176   0044D8  298D               	incf	(strtof@expon+1)& (0+255),w,b
  6177   0044DA  B4D8               	btfsc	status,2,c
  6178   0044DC  EF72  F022         	goto	u16601
  6179   0044E0  EF74  F022         	goto	u16600
  6180   0044E4                     u16601:
  6181   0044E4  EF7C  F022         	goto	l12972
  6182   0044E8                     u16600:
  6183   0044E8                     
  6184                           ; BSR set to: 0
  6185   0044E8  90D8               	bcf	status,0,c
  6186   0044EA  3790               	rlcf	strtof@_u& (0+255),f,b
  6187   0044EC  3791               	rlcf	(strtof@_u+1)& (0+255),f,b
  6188   0044EE  3792               	rlcf	(strtof@_u+2)& (0+255),f,b
  6189   0044F0  3793               	rlcf	(strtof@_u+3)& (0+255),f,b
  6190   0044F2  078C               	decf	strtof@expon& (0+255),f,b
  6191   0044F4  A0D8               	btfss	status,0,c
  6192   0044F6  078D               	decf	(strtof@expon+1)& (0+255),f,b
  6193   0044F8                     l12972:
  6194                           
  6195                           ; BSR set to: 0
  6196   0044F8  BF8D               	btfsc	(strtof@expon+1)& (0+255),7,b
  6197   0044FA  EF88  F022         	goto	u16611
  6198   0044FE  518D               	movf	(strtof@expon+1)& (0+255),w,b
  6199   004500  E109               	bnz	u16610
  6200   004502  0E80               	movlw	128
  6201   004504  5D8C               	subwf	strtof@expon& (0+255),w,b
  6202   004506  A0D8               	btfss	status,0,c
  6203   004508  EF88  F022         	goto	u16611
  6204   00450C  EF8A  F022         	goto	u16610
  6205   004510                     u16611:
  6206   004510  EF96  F022         	goto	l12976
  6207   004514                     u16610:
  6208   004514                     
  6209                           ; BSR set to: 0
  6210   004514  0E00               	movlw	0
  6211   004516  6F90               	movwf	strtof@_u& (0+255),b
  6212   004518  0E00               	movlw	0
  6213   00451A  6F91               	movwf	(strtof@_u+1)& (0+255),b
  6214   00451C  0E00               	movlw	0
  6215   00451E  6F92               	movwf	(strtof@_u+2)& (0+255),b
  6216   004520  0E00               	movlw	0
  6217   004522  6F93               	movwf	(strtof@_u+3)& (0+255),b
  6218   004524  0E00               	movlw	0
  6219   004526  6F8D               	movwf	(strtof@expon+1)& (0+255),b
  6220   004528  0E80               	movlw	128
  6221   00452A  6F8C               	movwf	strtof@expon& (0+255),b
  6222   00452C                     l12976:
  6223                           
  6224                           ; BSR set to: 0
  6225   00452C  0E09               	movlw	9
  6226   00452E  6F84               	movwf	??_strtof& (0+255),b
  6227   004530                     u16625:
  6228   004530  90D8               	bcf	status,0,c
  6229   004532  3393               	rrcf	(strtof@_u+3)& (0+255),f,b
  6230   004534  3392               	rrcf	(strtof@_u+2)& (0+255),f,b
  6231   004536  3391               	rrcf	(strtof@_u+1)& (0+255),f,b
  6232   004538  3390               	rrcf	strtof@_u& (0+255),f,b
  6233   00453A  2F84               	decfsz	??_strtof& (0+255),f,b
  6234   00453C  EF98  F022         	goto	u16625
  6235   004540                     
  6236                           ; BSR set to: 0
  6237   004540  0EFF               	movlw	255
  6238   004542  1790               	andwf	strtof@_u& (0+255),f,b
  6239   004544  0EFF               	movlw	255
  6240   004546  1791               	andwf	(strtof@_u+1)& (0+255),f,b
  6241   004548  0E7F               	movlw	127
  6242   00454A  1792               	andwf	(strtof@_u+2)& (0+255),f,b
  6243   00454C  0E00               	movlw	0
  6244   00454E  1793               	andwf	(strtof@_u+3)& (0+255),f,b
  6245   004550                     
  6246                           ; BSR set to: 0
  6247   004550  0E7F               	movlw	127
  6248   004552  258C               	addwf	strtof@expon& (0+255),w,b
  6249   004554  6F84               	movwf	??_strtof& (0+255),b
  6250   004556  0E00               	movlw	0
  6251   004558  218D               	addwfc	(strtof@expon+1)& (0+255),w,b
  6252   00455A  6F85               	movwf	(??_strtof+1)& (0+255),b
  6253   00455C  0EFF               	movlw	255
  6254   00455E  1584               	andwf	??_strtof& (0+255),w,b
  6255   004560  6F86               	movwf	(??_strtof+2)& (0+255),b
  6256   004562  6B87               	clrf	(??_strtof+3)& (0+255),b
  6257   004564  6B88               	clrf	(??_strtof+4)& (0+255),b
  6258   004566  6B89               	clrf	(??_strtof+5)& (0+255),b
  6259   004568  0E17               	movlw	23
  6260   00456A                     u16635:
  6261   00456A  90D8               	bcf	status,0,c
  6262   00456C  3786               	rlcf	(??_strtof+2)& (0+255),f,b
  6263   00456E  3787               	rlcf	(??_strtof+3)& (0+255),f,b
  6264   004570  3788               	rlcf	(??_strtof+4)& (0+255),f,b
  6265   004572  3789               	rlcf	(??_strtof+5)& (0+255),f,b
  6266   004574  2EE8               	decfsz	wreg,f,c
  6267   004576  EFB5  F022         	goto	u16635
  6268   00457A  5186               	movf	(??_strtof+2)& (0+255),w,b
  6269   00457C  1390               	iorwf	strtof@_u& (0+255),f,b
  6270   00457E  5187               	movf	(??_strtof+3)& (0+255),w,b
  6271   004580  1391               	iorwf	(strtof@_u+1)& (0+255),f,b
  6272   004582  5188               	movf	(??_strtof+4)& (0+255),w,b
  6273   004584  1392               	iorwf	(strtof@_u+2)& (0+255),f,b
  6274   004586  5189               	movf	(??_strtof+5)& (0+255),w,b
  6275   004588  1393               	iorwf	(strtof@_u+3)& (0+255),f,b
  6276   00458A  EFAA  F025         	goto	l2110
  6277   00458E                     l2195:
  6278                           
  6279                           ; BSR set to: 0
  6280   00458E  B98B               	btfsc	strtof@flags& (0+255),4,b
  6281   004590  EFCC  F022         	goto	u16641
  6282   004594  EFCE  F022         	goto	u16640
  6283   004598                     u16641:
  6284   004598  EFE0  F022         	goto	l12988
  6285   00459C                     u16640:
  6286   00459C                     
  6287                           ; BSR set to: 0
  6288   00459C  C080  FFD9         	movff	strtof@s,fsr2l
  6289   0045A0  C081  FFDA         	movff	strtof@s+1,fsr2h
  6290   0045A4  0E2E               	movlw	46
  6291   0045A6  18DE               	xorwf	postinc2,w,c
  6292   0045A8  A4D8               	btfss	status,2,c
  6293   0045AA  EFD9  F022         	goto	u16651
  6294   0045AE  EFDB  F022         	goto	u16650
  6295   0045B2                     u16651:
  6296   0045B2  EFE0  F022         	goto	l12988
  6297   0045B6                     u16650:
  6298   0045B6                     
  6299                           ; BSR set to: 0
  6300   0045B6  898B               	bsf	strtof@flags& (0+255),4,b
  6301   0045B8  4B80               	infsnz	strtof@s& (0+255),f,b
  6302   0045BA  2B81               	incf	(strtof@s+1)& (0+255),f,b
  6303   0045BC  EFC7  F022         	goto	l2195
  6304   0045C0                     l12988:
  6305                           
  6306                           ; BSR set to: 0
  6307   0045C0  C080  FFD9         	movff	strtof@s,fsr2l
  6308   0045C4  C081  FFDA         	movff	strtof@s+1,fsr2h
  6309   0045C8  50DF               	movf	indf2,w,c
  6310   0045CA  6F84               	movwf	??_strtof& (0+255),b
  6311   0045CC  0ED0               	movlw	208
  6312   0045CE  2584               	addwf	??_strtof& (0+255),w,b
  6313   0045D0  6F85               	movwf	(??_strtof+1)& (0+255),b
  6314   0045D2  6B86               	clrf	(??_strtof+2)& (0+255),b
  6315   0045D4  0EFF               	movlw	255
  6316   0045D6  2386               	addwfc	(??_strtof+2)& (0+255),f,b
  6317   0045D8  5186               	movf	(??_strtof+2)& (0+255),w,b
  6318   0045DA  E109               	bnz	u16660
  6319   0045DC  0E0A               	movlw	10
  6320   0045DE  5D85               	subwf	(??_strtof+1)& (0+255),w,b
  6321   0045E0  A0D8               	btfss	status,0,c
  6322   0045E2  EFF5  F022         	goto	u16661
  6323   0045E6  EFF7  F022         	goto	u16660
  6324   0045EA                     u16661:
  6325   0045EA  EFF9  F022         	goto	l12992
  6326   0045EE                     u16660:
  6327   0045EE  EF48  F023         	goto	l13006
  6328   0045F2                     l12992:
  6329                           
  6330                           ; BSR set to: 0
  6331   0045F2  838B               	bsf	strtof@flags& (0+255),1,b
  6332   0045F4                     
  6333                           ; BSR set to: 0
  6334   0045F4  0E09               	movlw	9
  6335   0045F6  198E               	xorwf	strtof@eexp& (0+255),w,b
  6336   0045F8  118F               	iorwf	(strtof@eexp+1)& (0+255),w,b
  6337   0045FA  B4D8               	btfsc	status,2,c
  6338   0045FC  EF02  F023         	goto	u16671
  6339   004600  EF04  F023         	goto	u16670
  6340   004604                     u16671:
  6341   004604  EF3B  F023         	goto	l2202
  6342   004608                     u16670:
  6343   004608                     
  6344                           ; BSR set to: 0
  6345   004608  A98B               	btfss	strtof@flags& (0+255),4,b
  6346   00460A  EF09  F023         	goto	u16681
  6347   00460E  EF0B  F023         	goto	u16680
  6348   004612                     u16681:
  6349   004612  EF0E  F023         	goto	l2203
  6350   004616                     u16680:
  6351   004616                     
  6352                           ; BSR set to: 0
  6353   004616  078C               	decf	strtof@expon& (0+255),f,b
  6354   004618  A0D8               	btfss	status,0,c
  6355   00461A  078D               	decf	(strtof@expon+1)& (0+255),f,b
  6356   00461C                     l2203:
  6357                           
  6358                           ; BSR set to: 0
  6359   00461C  4B8E               	infsnz	strtof@eexp& (0+255),f,b
  6360   00461E  2B8F               	incf	(strtof@eexp+1)& (0+255),f,b
  6361   004620                     
  6362                           ; BSR set to: 0
  6363   004620  C090  F003         	movff	strtof@_u,___lmul@multiplier
  6364   004624  C091  F004         	movff	strtof@_u+1,___lmul@multiplier+1
  6365   004628  C092  F005         	movff	strtof@_u+2,___lmul@multiplier+2
  6366   00462C  C093  F006         	movff	strtof@_u+3,___lmul@multiplier+3
  6367   004630  0E0A               	movlw	10
  6368   004632  6E07               	movwf	___lmul@multiplicand^0,c
  6369   004634  0E00               	movlw	0
  6370   004636  6E08               	movwf	(___lmul@multiplicand+1)^0,c
  6371   004638  0E00               	movlw	0
  6372   00463A  6E09               	movwf	(___lmul@multiplicand+2)^0,c
  6373   00463C  0E00               	movlw	0
  6374   00463E  6E0A               	movwf	(___lmul@multiplicand+3)^0,c
  6375   004640  EC58  F051         	call	___lmul	;wreg free
  6376   004644  C003  F090         	movff	?___lmul,strtof@_u
  6377   004648  C004  F091         	movff	?___lmul+1,strtof@_u+1
  6378   00464C  C005  F092         	movff	?___lmul+2,strtof@_u+2
  6379   004650  C006  F093         	movff	?___lmul+3,strtof@_u+3
  6380   004654  C080  FFD9         	movff	strtof@s,fsr2l
  6381   004658  C081  FFDA         	movff	strtof@s+1,fsr2h
  6382   00465C  50DF               	movf	indf2,w,c
  6383   00465E  0100               	movlb	0	; () banked
  6384   004660  6F84               	movwf	??_strtof& (0+255),b
  6385   004662  0ED0               	movlw	208
  6386   004664  2784               	addwf	??_strtof& (0+255),f,b
  6387   004666  5184               	movf	??_strtof& (0+255),w,b
  6388   004668  2790               	addwf	strtof@_u& (0+255),f,b
  6389   00466A  0E00               	movlw	0
  6390   00466C  2391               	addwfc	(strtof@_u+1)& (0+255),f,b
  6391   00466E  2392               	addwfc	(strtof@_u+2)& (0+255),f,b
  6392   004670  2393               	addwfc	(strtof@_u+3)& (0+255),f,b
  6393   004672  EF44  F023         	goto	l2204
  6394   004676                     l2202:
  6395                           
  6396                           ; BSR set to: 0
  6397   004676  B98B               	btfsc	strtof@flags& (0+255),4,b
  6398   004678  EF40  F023         	goto	u16691
  6399   00467C  EF42  F023         	goto	u16690
  6400   004680                     u16691:
  6401   004680  EF44  F023         	goto	l2204
  6402   004684                     u16690:
  6403   004684                     
  6404                           ; BSR set to: 0
  6405   004684  4B8C               	infsnz	strtof@expon& (0+255),f,b
  6406   004686  2B8D               	incf	(strtof@expon+1)& (0+255),f,b
  6407   004688                     l2204:
  6408                           
  6409                           ; BSR set to: 0
  6410   004688  4B80               	infsnz	strtof@s& (0+255),f,b
  6411   00468A  2B81               	incf	(strtof@s+1)& (0+255),f,b
  6412   00468C  EFC7  F022         	goto	l2195
  6413   004690                     l13006:
  6414                           
  6415                           ; BSR set to: 0
  6416   004690  0E00               	movlw	0
  6417   004692  6F8F               	movwf	(strtof@eexp+1)& (0+255),b
  6418   004694  0E00               	movlw	0
  6419   004696  6F8E               	movwf	strtof@eexp& (0+255),b
  6420   004698                     
  6421                           ; BSR set to: 0
  6422   004698  C080  FFD9         	movff	strtof@s,fsr2l
  6423   00469C  C081  FFDA         	movff	strtof@s+1,fsr2h
  6424   0046A0  0E65               	movlw	101
  6425   0046A2  18DE               	xorwf	postinc2,w,c
  6426   0046A4  B4D8               	btfsc	status,2,c
  6427   0046A6  EF57  F023         	goto	u16701
  6428   0046AA  EF59  F023         	goto	u16700
  6429   0046AE                     u16701:
  6430   0046AE  EF66  F023         	goto	l13012
  6431   0046B2                     u16700:
  6432   0046B2                     
  6433                           ; BSR set to: 0
  6434   0046B2  C080  FFD9         	movff	strtof@s,fsr2l
  6435   0046B6  C081  FFDA         	movff	strtof@s+1,fsr2h
  6436   0046BA  0E45               	movlw	69
  6437   0046BC  18DE               	xorwf	postinc2,w,c
  6438   0046BE  A4D8               	btfss	status,2,c
  6439   0046C0  EF64  F023         	goto	u16711
  6440   0046C4  EF66  F023         	goto	u16710
  6441   0046C8                     u16711:
  6442   0046C8  EF27  F024         	goto	l13050
  6443   0046CC                     u16710:
  6444   0046CC                     l13012:
  6445                           
  6446                           ; BSR set to: 0
  6447   0046CC  4B80               	infsnz	strtof@s& (0+255),f,b
  6448   0046CE  2B81               	incf	(strtof@s+1)& (0+255),f,b
  6449   0046D0  C080  FFD9         	movff	strtof@s,fsr2l
  6450   0046D4  C081  FFDA         	movff	strtof@s+1,fsr2h
  6451   0046D8  0E2D               	movlw	45
  6452   0046DA  18DE               	xorwf	postinc2,w,c
  6453   0046DC  A4D8               	btfss	status,2,c
  6454   0046DE  EF73  F023         	goto	u16721
  6455   0046E2  EF75  F023         	goto	u16720
  6456   0046E6                     u16721:
  6457   0046E6  EF7A  F023         	goto	l13016
  6458   0046EA                     u16720:
  6459   0046EA                     
  6460                           ; BSR set to: 0
  6461   0046EA  878B               	bsf	strtof@flags& (0+255),3,b
  6462   0046EC  4B80               	infsnz	strtof@s& (0+255),f,b
  6463   0046EE  2B81               	incf	(strtof@s+1)& (0+255),f,b
  6464   0046F0  EF89  F023         	goto	l13022
  6465   0046F4                     l13016:
  6466                           
  6467                           ; BSR set to: 0
  6468   0046F4  C080  FFD9         	movff	strtof@s,fsr2l
  6469   0046F8  C081  FFDA         	movff	strtof@s+1,fsr2h
  6470   0046FC  0E2B               	movlw	43
  6471   0046FE  18DE               	xorwf	postinc2,w,c
  6472   004700  A4D8               	btfss	status,2,c
  6473   004702  EF85  F023         	goto	u16731
  6474   004706  EF87  F023         	goto	u16730
  6475   00470A                     u16731:
  6476   00470A  EF89  F023         	goto	l13022
  6477   00470E                     u16730:
  6478   00470E                     l13018:
  6479                           
  6480                           ; BSR set to: 0
  6481   00470E  4B80               	infsnz	strtof@s& (0+255),f,b
  6482   004710  2B81               	incf	(strtof@s+1)& (0+255),f,b
  6483   004712                     l13022:
  6484                           
  6485                           ; BSR set to: 0
  6486   004712  C080  FFD9         	movff	strtof@s,fsr2l
  6487   004716  C081  FFDA         	movff	strtof@s+1,fsr2h
  6488   00471A  0E30               	movlw	48
  6489   00471C  18DE               	xorwf	postinc2,w,c
  6490   00471E  B4D8               	btfsc	status,2,c
  6491   004720  EF94  F023         	goto	u16741
  6492   004724  EF96  F023         	goto	u16740
  6493   004728                     u16741:
  6494   004728  EF87  F023         	goto	l13018
  6495   00472C                     u16740:
  6496   00472C                     
  6497                           ; BSR set to: 0
  6498   00472C  C080  FFD9         	movff	strtof@s,fsr2l
  6499   004730  C081  FFDA         	movff	strtof@s+1,fsr2h
  6500   004734  50DF               	movf	indf2,w,c
  6501   004736  6F84               	movwf	??_strtof& (0+255),b
  6502   004738  0ED0               	movlw	208
  6503   00473A  2584               	addwf	??_strtof& (0+255),w,b
  6504   00473C  6F85               	movwf	(??_strtof+1)& (0+255),b
  6505   00473E  6B86               	clrf	(??_strtof+2)& (0+255),b
  6506   004740  0EFF               	movlw	255
  6507   004742  2386               	addwfc	(??_strtof+2)& (0+255),f,b
  6508   004744  5186               	movf	(??_strtof+2)& (0+255),w,b
  6509   004746  E107               	bnz	u16751
  6510   004748  0E0A               	movlw	10
  6511   00474A  5D85               	subwf	(??_strtof+1)& (0+255),w,b
  6512   00474C  B0D8               	btfsc	status,0,c
  6513   00474E  EFAB  F023         	goto	u16751
  6514   004752  EFAD  F023         	goto	u16750
  6515   004756                     u16751:
  6516   004756  EF1C  F024         	goto	l13046
  6517   00475A                     u16750:
  6518   00475A                     
  6519                           ; BSR set to: 0
  6520   00475A  C080  FFD9         	movff	strtof@s,fsr2l
  6521   00475E  C081  FFDA         	movff	strtof@s+1,fsr2h
  6522   004762  50DF               	movf	indf2,w,c
  6523   004764  6F84               	movwf	??_strtof& (0+255),b
  6524   004766  0ED0               	movlw	208
  6525   004768  2784               	addwf	??_strtof& (0+255),f,b
  6526   00476A  5184               	movf	??_strtof& (0+255),w,b
  6527   00476C  6F8E               	movwf	strtof@eexp& (0+255),b
  6528   00476E  6B8F               	clrf	(strtof@eexp+1)& (0+255),b
  6529   004770                     
  6530                           ; BSR set to: 0
  6531   004770  4B80               	infsnz	strtof@s& (0+255),f,b
  6532   004772  2B81               	incf	(strtof@s+1)& (0+255),f,b
  6533   004774                     
  6534                           ; BSR set to: 0
  6535   004774  C080  FFD9         	movff	strtof@s,fsr2l
  6536   004778  C081  FFDA         	movff	strtof@s+1,fsr2h
  6537   00477C  50DF               	movf	indf2,w,c
  6538   00477E  6F84               	movwf	??_strtof& (0+255),b
  6539   004780  0ED0               	movlw	208
  6540   004782  2584               	addwf	??_strtof& (0+255),w,b
  6541   004784  6F85               	movwf	(??_strtof+1)& (0+255),b
  6542   004786  6B86               	clrf	(??_strtof+2)& (0+255),b
  6543   004788  0EFF               	movlw	255
  6544   00478A  2386               	addwfc	(??_strtof+2)& (0+255),f,b
  6545   00478C  5186               	movf	(??_strtof+2)& (0+255),w,b
  6546   00478E  E107               	bnz	u16761
  6547   004790  0E0A               	movlw	10
  6548   004792  5D85               	subwf	(??_strtof+1)& (0+255),w,b
  6549   004794  B0D8               	btfsc	status,0,c
  6550   004796  EFCF  F023         	goto	u16761
  6551   00479A  EFD1  F023         	goto	u16760
  6552   00479E                     u16761:
  6553   00479E  EF1C  F024         	goto	l13046
  6554   0047A2                     u16760:
  6555   0047A2                     
  6556                           ; BSR set to: 0
  6557   0047A2  C080  FFD9         	movff	strtof@s,fsr2l
  6558   0047A6  C081  FFDA         	movff	strtof@s+1,fsr2h
  6559   0047AA  50DF               	movf	indf2,w,c
  6560   0047AC  6F84               	movwf	??_strtof& (0+255),b
  6561   0047AE  0ED0               	movlw	208
  6562   0047B0  2784               	addwf	??_strtof& (0+255),f,b
  6563   0047B2  C08E  F003         	movff	strtof@eexp,___wmul@multiplier
  6564   0047B6  C08F  F004         	movff	strtof@eexp+1,___wmul@multiplier+1
  6565   0047BA  0E00               	movlw	0
  6566   0047BC  6E06               	movwf	(___wmul@multiplicand+1)^0,c
  6567   0047BE  0E0A               	movlw	10
  6568   0047C0  6E05               	movwf	___wmul@multiplicand^0,c
  6569   0047C2  ECC7  F055         	call	___wmul	;wreg free
  6570   0047C6  0100               	movlb	0	; () banked
  6571   0047C8  5184               	movf	??_strtof& (0+255),w,b
  6572   0047CA  2403               	addwf	?___wmul^0,w,c
  6573   0047CC  6F8E               	movwf	strtof@eexp& (0+255),b
  6574   0047CE  0E00               	movlw	0
  6575   0047D0  2004               	addwfc	(?___wmul+1)^0,w,c
  6576   0047D2  6F8F               	movwf	(strtof@eexp+1)& (0+255),b
  6577   0047D4                     
  6578                           ; BSR set to: 0
  6579   0047D4  4B80               	infsnz	strtof@s& (0+255),f,b
  6580   0047D6  2B81               	incf	(strtof@s+1)& (0+255),f,b
  6581   0047D8                     
  6582                           ; BSR set to: 0
  6583   0047D8  C080  FFD9         	movff	strtof@s,fsr2l
  6584   0047DC  C081  FFDA         	movff	strtof@s+1,fsr2h
  6585   0047E0  50DF               	movf	indf2,w,c
  6586   0047E2  6F84               	movwf	??_strtof& (0+255),b
  6587   0047E4  0ED0               	movlw	208
  6588   0047E6  2584               	addwf	??_strtof& (0+255),w,b
  6589   0047E8  6F85               	movwf	(??_strtof+1)& (0+255),b
  6590   0047EA  6B86               	clrf	(??_strtof+2)& (0+255),b
  6591   0047EC  0EFF               	movlw	255
  6592   0047EE  2386               	addwfc	(??_strtof+2)& (0+255),f,b
  6593   0047F0  5186               	movf	(??_strtof+2)& (0+255),w,b
  6594   0047F2  E107               	bnz	u16771
  6595   0047F4  0E0A               	movlw	10
  6596   0047F6  5D85               	subwf	(??_strtof+1)& (0+255),w,b
  6597   0047F8  B0D8               	btfsc	status,0,c
  6598   0047FA  EF01  F024         	goto	u16771
  6599   0047FE  EF03  F024         	goto	u16770
  6600   004802                     u16771:
  6601   004802  EF1C  F024         	goto	l13046
  6602   004806                     u16770:
  6603   004806                     
  6604                           ; BSR set to: 0
  6605   004806  C080  FFD9         	movff	strtof@s,fsr2l
  6606   00480A  C081  FFDA         	movff	strtof@s+1,fsr2h
  6607   00480E  50DF               	movf	indf2,w,c
  6608   004810  6F84               	movwf	??_strtof& (0+255),b
  6609   004812  0ED0               	movlw	208
  6610   004814  2784               	addwf	??_strtof& (0+255),f,b
  6611   004816  C08E  F003         	movff	strtof@eexp,___wmul@multiplier
  6612   00481A  C08F  F004         	movff	strtof@eexp+1,___wmul@multiplier+1
  6613   00481E  0E00               	movlw	0
  6614   004820  6E06               	movwf	(___wmul@multiplicand+1)^0,c
  6615   004822  0E0A               	movlw	10
  6616   004824  6E05               	movwf	___wmul@multiplicand^0,c
  6617   004826  ECC7  F055         	call	___wmul	;wreg free
  6618   00482A  0100               	movlb	0	; () banked
  6619   00482C  5184               	movf	??_strtof& (0+255),w,b
  6620   00482E  2403               	addwf	?___wmul^0,w,c
  6621   004830  6F8E               	movwf	strtof@eexp& (0+255),b
  6622   004832  0E00               	movlw	0
  6623   004834  2004               	addwfc	(?___wmul+1)^0,w,c
  6624   004836  6F8F               	movwf	(strtof@eexp+1)& (0+255),b
  6625   004838                     l13046:
  6626                           
  6627                           ; BSR set to: 0
  6628   004838  A78B               	btfss	strtof@flags& (0+255),3,b
  6629   00483A  EF21  F024         	goto	u16781
  6630   00483E  EF23  F024         	goto	u16780
  6631   004842                     u16781:
  6632   004842  EF27  F024         	goto	l13050
  6633   004846                     u16780:
  6634   004846                     
  6635                           ; BSR set to: 0
  6636   004846  6D8E               	negf	strtof@eexp& (0+255),b
  6637   004848  1F8F               	comf	(strtof@eexp+1)& (0+255),f,b
  6638   00484A  B0D8               	btfsc	status,0,c
  6639   00484C  2B8F               	incf	(strtof@eexp+1)& (0+255),f,b
  6640   00484E                     l13050:
  6641                           
  6642                           ; BSR set to: 0
  6643   00484E  518E               	movf	strtof@eexp& (0+255),w,b
  6644   004850  278C               	addwf	strtof@expon& (0+255),f,b
  6645   004852  518F               	movf	(strtof@eexp+1)& (0+255),w,b
  6646   004854  238D               	addwfc	(strtof@expon+1)& (0+255),f,b
  6647   004856                     
  6648                           ; BSR set to: 0
  6649   004856  5182               	movf	strtof@res& (0+255),w,b
  6650   004858  1183               	iorwf	(strtof@res+1)& (0+255),w,b
  6651   00485A  B4D8               	btfsc	status,2,c
  6652   00485C  EF32  F024         	goto	u16791
  6653   004860  EF34  F024         	goto	u16790
  6654   004864                     u16791:
  6655   004864  EF43  F024         	goto	l13058
  6656   004868                     u16790:
  6657   004868                     
  6658                           ; BSR set to: 0
  6659   004868  A38B               	btfss	strtof@flags& (0+255),1,b
  6660   00486A  EF39  F024         	goto	u16801
  6661   00486E  EF3B  F024         	goto	u16800
  6662   004872                     u16801:
  6663   004872  EF43  F024         	goto	l13058
  6664   004876                     u16800:
  6665   004876                     
  6666                           ; BSR set to: 0
  6667   004876  C082  FFD9         	movff	strtof@res,fsr2l
  6668   00487A  C083  FFDA         	movff	strtof@res+1,fsr2h
  6669   00487E  C080  FFDE         	movff	strtof@s,postinc2
  6670   004882  C081  FFDD         	movff	strtof@s+1,postdec2
  6671   004886                     l13058:
  6672                           
  6673                           ; BSR set to: 0
  6674   004886  C090  F003         	movff	strtof@_u,___xxtofl@val
  6675   00488A  C091  F004         	movff	strtof@_u+1,___xxtofl@val+1
  6676   00488E  C092  F005         	movff	strtof@_u+2,___xxtofl@val+2
  6677   004892  C093  F006         	movff	strtof@_u+3,___xxtofl@val+3
  6678   004896  0E00               	movlw	0
  6679   004898  EC01  F040         	call	___xxtofl
  6680   00489C  C003  F090         	movff	?___xxtofl,strtof@_u
  6681   0048A0  C004  F091         	movff	?___xxtofl+1,strtof@_u+1
  6682   0048A4  C005  F092         	movff	?___xxtofl+2,strtof@_u+2
  6683   0048A8  C006  F093         	movff	?___xxtofl+3,strtof@_u+3
  6684   0048AC  C090  F06F         	movff	strtof@_u,___fleq@ff1
  6685   0048B0  C091  F070         	movff	strtof@_u+1,___fleq@ff1+1
  6686   0048B4  C092  F071         	movff	strtof@_u+2,___fleq@ff1+2
  6687   0048B8  C093  F072         	movff	strtof@_u+3,___fleq@ff1+3
  6688   0048BC  0E00               	movlw	0
  6689   0048BE  6E73               	movwf	___fleq@ff2^0,c
  6690   0048C0  0E00               	movlw	0
  6691   0048C2  6E74               	movwf	(___fleq@ff2+1)^0,c
  6692   0048C4  0E00               	movlw	0
  6693   0048C6  6E75               	movwf	(___fleq@ff2+2)^0,c
  6694   0048C8  0E00               	movlw	0
  6695   0048CA  6E76               	movwf	(___fleq@ff2+3)^0,c
  6696   0048CC  EC85  F04D         	call	___fleq	;wreg free
  6697   0048D0  A0D8               	btfss	status,0,c
  6698   0048D2  EF6D  F024         	goto	u16811
  6699   0048D6  EF6F  F024         	goto	u16810
  6700   0048DA                     u16811:
  6701   0048DA  EF7A  F024         	goto	l13066
  6702   0048DE                     u16810:
  6703   0048DE  0E00               	movlw	0
  6704   0048E0  0100               	movlb	0	; () banked
  6705   0048E2  6F80               	movwf	?_strtof& (0+255),b
  6706   0048E4  0E00               	movlw	0
  6707   0048E6  6F81               	movwf	(?_strtof+1)& (0+255),b
  6708   0048E8  0E00               	movlw	0
  6709   0048EA  6F82               	movwf	(?_strtof+2)& (0+255),b
  6710   0048EC  0E00               	movlw	0
  6711   0048EE  6F83               	movwf	(?_strtof+3)& (0+255),b
  6712   0048F0  EFCC  F025         	goto	l2154
  6713   0048F4                     l13066:
  6714   0048F4  0100               	movlb	0	; () banked
  6715   0048F6  BF8D               	btfsc	(strtof@expon+1)& (0+255),7,b
  6716   0048F8  EF82  F024         	goto	u16820
  6717   0048FC  EF80  F024         	goto	u16821
  6718   004900                     u16821:
  6719   004900  EF13  F025         	goto	l13094
  6720   004904                     u16820:
  6721   004904                     
  6722                           ; BSR set to: 0
  6723   004904  6D8C               	negf	strtof@expon& (0+255),b
  6724   004906  1F8D               	comf	(strtof@expon+1)& (0+255),f,b
  6725   004908  B0D8               	btfsc	status,0,c
  6726   00490A  2B8D               	incf	(strtof@expon+1)& (0+255),f,b
  6727   00490C  EFA7  F024         	goto	l13074
  6728   004910                     l13070:
  6729                           
  6730                           ; BSR set to: 0
  6731   004910  C090  F042         	movff	strtof@_u,___fldiv@b
  6732   004914  C091  F043         	movff	strtof@_u+1,___fldiv@b+1
  6733   004918  C092  F044         	movff	strtof@_u+2,___fldiv@b+2
  6734   00491C  C093  F045         	movff	strtof@_u+3,___fldiv@b+3
  6735   004920  0EF9               	movlw	249
  6736   004922  6E46               	movwf	___fldiv@a^0,c
  6737   004924  0E02               	movlw	2
  6738   004926  6E47               	movwf	(___fldiv@a+1)^0,c
  6739   004928  0E15               	movlw	21
  6740   00492A  6E48               	movwf	(___fldiv@a+2)^0,c
  6741   00492C  0E50               	movlw	80
  6742   00492E  6E49               	movwf	(___fldiv@a+3)^0,c
  6743   004930  EC09  F034         	call	___fldiv	;wreg free
  6744   004934  C042  F090         	movff	?___fldiv,strtof@_u
  6745   004938  C043  F091         	movff	?___fldiv+1,strtof@_u+1
  6746   00493C  C044  F092         	movff	?___fldiv+2,strtof@_u+2
  6747   004940  C045  F093         	movff	?___fldiv+3,strtof@_u+3
  6748   004944  0100               	movlb	0	; () banked
  6749   004946  0EF6               	movlw	246
  6750   004948  278C               	addwf	strtof@expon& (0+255),f,b
  6751   00494A  0EFF               	movlw	255
  6752   00494C  238D               	addwfc	(strtof@expon+1)& (0+255),f,b
  6753   00494E                     l13074:
  6754                           
  6755                           ; BSR set to: 0
  6756   00494E  BF8D               	btfsc	(strtof@expon+1)& (0+255),7,b
  6757   004950  EFB5  F024         	goto	u16830
  6758   004954  518D               	movf	(strtof@expon+1)& (0+255),w,b
  6759   004956  E107               	bnz	u16831
  6760   004958  0E0A               	movlw	10
  6761   00495A  5D8C               	subwf	strtof@expon& (0+255),w,b
  6762   00495C  B0D8               	btfsc	status,0,c
  6763   00495E  EFB3  F024         	goto	u16831
  6764   004962  EFB5  F024         	goto	u16830
  6765   004966                     u16831:
  6766   004966  EF88  F024         	goto	l13070
  6767   00496A                     u16830:
  6768   00496A  EFD5  F024         	goto	l13080
  6769   00496E                     l13076:
  6770                           
  6771                           ; BSR set to: 0
  6772   00496E  C090  F042         	movff	strtof@_u,___fldiv@b
  6773   004972  C091  F043         	movff	strtof@_u+1,___fldiv@b+1
  6774   004976  C092  F044         	movff	strtof@_u+2,___fldiv@b+2
  6775   00497A  C093  F045         	movff	strtof@_u+3,___fldiv@b+3
  6776   00497E  0E00               	movlw	0
  6777   004980  6E46               	movwf	___fldiv@a^0,c
  6778   004982  0E00               	movlw	0
  6779   004984  6E47               	movwf	(___fldiv@a+1)^0,c
  6780   004986  0E20               	movlw	32
  6781   004988  6E48               	movwf	(___fldiv@a+2)^0,c
  6782   00498A  0E41               	movlw	65
  6783   00498C  6E49               	movwf	(___fldiv@a+3)^0,c
  6784   00498E  EC09  F034         	call	___fldiv	;wreg free
  6785   004992  C042  F090         	movff	?___fldiv,strtof@_u
  6786   004996  C043  F091         	movff	?___fldiv+1,strtof@_u+1
  6787   00499A  C044  F092         	movff	?___fldiv+2,strtof@_u+2
  6788   00499E  C045  F093         	movff	?___fldiv+3,strtof@_u+3
  6789   0049A2  0100               	movlb	0	; () banked
  6790   0049A4  078C               	decf	strtof@expon& (0+255),f,b
  6791   0049A6  A0D8               	btfss	status,0,c
  6792   0049A8  078D               	decf	(strtof@expon+1)& (0+255),f,b
  6793   0049AA                     l13080:
  6794                           
  6795                           ; BSR set to: 0
  6796   0049AA  518C               	movf	strtof@expon& (0+255),w,b
  6797   0049AC  118D               	iorwf	(strtof@expon+1)& (0+255),w,b
  6798   0049AE  A4D8               	btfss	status,2,c
  6799   0049B0  EFDC  F024         	goto	u16841
  6800   0049B4  EFDE  F024         	goto	u16840
  6801   0049B8                     u16841:
  6802   0049B8  EFB7  F024         	goto	l13076
  6803   0049BC                     u16840:
  6804   0049BC                     
  6805                           ; BSR set to: 0
  6806   0049BC  C090  F042         	movff	strtof@_u,___flge@ff1
  6807   0049C0  C091  F043         	movff	strtof@_u+1,___flge@ff1+1
  6808   0049C4  C092  F044         	movff	strtof@_u+2,___flge@ff1+2
  6809   0049C8  C093  F045         	movff	strtof@_u+3,___flge@ff1+3
  6810   0049CC  0E00               	movlw	0
  6811   0049CE  6E46               	movwf	___flge@ff2^0,c
  6812   0049D0  0E00               	movlw	0
  6813   0049D2  6E47               	movwf	(___flge@ff2+1)^0,c
  6814   0049D4  0E80               	movlw	128
  6815   0049D6  6E48               	movwf	(___flge@ff2+2)^0,c
  6816   0049D8  0E00               	movlw	0
  6817   0049DA  6E49               	movwf	(___flge@ff2+3)^0,c
  6818   0049DC  ECE3  F048         	call	___flge	;wreg free
  6819   0049E0  B0D8               	btfsc	status,0,c
  6820   0049E2  EFF5  F024         	goto	u16851
  6821   0049E6  EFF7  F024         	goto	u16850
  6822   0049EA                     u16851:
  6823   0049EA  EFAA  F025         	goto	l2110
  6824   0049EE                     u16850:
  6825   0049EE  0100               	movlb	0	; () banked
  6826   0049F0  A18B               	btfss	strtof@flags& (0+255),0,b
  6827   0049F2  EFFD  F024         	goto	u16861
  6828   0049F6  EFFF  F024         	goto	u16860
  6829   0049FA                     u16861:
  6830   0049FA  EF09  F025         	goto	l13090
  6831   0049FE                     u16860:
  6832   0049FE                     
  6833                           ; BSR set to: 0
  6834   0049FE  0E00               	movlw	0
  6835   004A00  6F80               	movwf	?_strtof& (0+255),b
  6836   004A02  0E00               	movlw	0
  6837   004A04  6F81               	movwf	(?_strtof+1)& (0+255),b
  6838   004A06  0E80               	movlw	128
  6839   004A08  6F82               	movwf	(?_strtof+2)& (0+255),b
  6840   004A0A  0E80               	movlw	128
  6841   004A0C  6F83               	movwf	(?_strtof+3)& (0+255),b
  6842   004A0E  EFCC  F025         	goto	l2154
  6843   004A12                     l13090:
  6844                           
  6845                           ; BSR set to: 0
  6846   004A12  0E00               	movlw	0
  6847   004A14  6F80               	movwf	?_strtof& (0+255),b
  6848   004A16  0E00               	movlw	0
  6849   004A18  6F81               	movwf	(?_strtof+1)& (0+255),b
  6850   004A1A  0E80               	movlw	128
  6851   004A1C  6F82               	movwf	(?_strtof+2)& (0+255),b
  6852   004A1E  0E00               	movlw	0
  6853   004A20  6F83               	movwf	(?_strtof+3)& (0+255),b
  6854   004A22  EFCC  F025         	goto	l2154
  6855   004A26                     l13094:
  6856                           
  6857                           ; BSR set to: 0
  6858   004A26  BF8D               	btfsc	(strtof@expon+1)& (0+255),7,b
  6859   004A28  EF1E  F025         	goto	u16871
  6860   004A2C  518D               	movf	(strtof@expon+1)& (0+255),w,b
  6861   004A2E  E108               	bnz	u16870
  6862   004A30  058C               	decf	strtof@expon& (0+255),w,b
  6863   004A32  A0D8               	btfss	status,0,c
  6864   004A34  EF1E  F025         	goto	u16871
  6865   004A38  EF20  F025         	goto	u16870
  6866   004A3C                     u16871:
  6867   004A3C  EFAA  F025         	goto	l2110
  6868   004A40                     u16870:
  6869   004A40  EF41  F025         	goto	l13102
  6870   004A44                     l13098:
  6871                           
  6872                           ; BSR set to: 0
  6873   004A44  C090  F021         	movff	strtof@_u,___flmul@b
  6874   004A48  C091  F022         	movff	strtof@_u+1,___flmul@b+1
  6875   004A4C  C092  F023         	movff	strtof@_u+2,___flmul@b+2
  6876   004A50  C093  F024         	movff	strtof@_u+3,___flmul@b+3
  6877   004A54  0EF9               	movlw	249
  6878   004A56  6E25               	movwf	___flmul@a^0,c
  6879   004A58  0E02               	movlw	2
  6880   004A5A  6E26               	movwf	(___flmul@a+1)^0,c
  6881   004A5C  0E15               	movlw	21
  6882   004A5E  6E27               	movwf	(___flmul@a+2)^0,c
  6883   004A60  0E50               	movlw	80
  6884   004A62  6E28               	movwf	(___flmul@a+3)^0,c
  6885   004A64  ECF4  F031         	call	___flmul	;wreg free
  6886   004A68  C021  F090         	movff	?___flmul,strtof@_u
  6887   004A6C  C022  F091         	movff	?___flmul+1,strtof@_u+1
  6888   004A70  C023  F092         	movff	?___flmul+2,strtof@_u+2
  6889   004A74  C024  F093         	movff	?___flmul+3,strtof@_u+3
  6890   004A78  0100               	movlb	0	; () banked
  6891   004A7A  0EF6               	movlw	246
  6892   004A7C  278C               	addwf	strtof@expon& (0+255),f,b
  6893   004A7E  0EFF               	movlw	255
  6894   004A80  238D               	addwfc	(strtof@expon+1)& (0+255),f,b
  6895   004A82                     l13102:
  6896                           
  6897                           ; BSR set to: 0
  6898   004A82  518D               	movf	(strtof@expon+1)& (0+255),w,b
  6899   004A84  E107               	bnz	u16881
  6900   004A86  0E0A               	movlw	10
  6901   004A88  5D8C               	subwf	strtof@expon& (0+255),w,b
  6902   004A8A  B0D8               	btfsc	status,0,c
  6903   004A8C  EF4A  F025         	goto	u16881
  6904   004A90  EF4C  F025         	goto	u16880
  6905   004A94                     u16881:
  6906   004A94  EF22  F025         	goto	l13098
  6907   004A98                     u16880:
  6908   004A98  EF6C  F025         	goto	l13108
  6909   004A9C                     l13104:
  6910                           
  6911                           ; BSR set to: 0
  6912   004A9C  C090  F021         	movff	strtof@_u,___flmul@b
  6913   004AA0  C091  F022         	movff	strtof@_u+1,___flmul@b+1
  6914   004AA4  C092  F023         	movff	strtof@_u+2,___flmul@b+2
  6915   004AA8  C093  F024         	movff	strtof@_u+3,___flmul@b+3
  6916   004AAC  0E00               	movlw	0
  6917   004AAE  6E25               	movwf	___flmul@a^0,c
  6918   004AB0  0E00               	movlw	0
  6919   004AB2  6E26               	movwf	(___flmul@a+1)^0,c
  6920   004AB4  0E20               	movlw	32
  6921   004AB6  6E27               	movwf	(___flmul@a+2)^0,c
  6922   004AB8  0E41               	movlw	65
  6923   004ABA  6E28               	movwf	(___flmul@a+3)^0,c
  6924   004ABC  ECF4  F031         	call	___flmul	;wreg free
  6925   004AC0  C021  F090         	movff	?___flmul,strtof@_u
  6926   004AC4  C022  F091         	movff	?___flmul+1,strtof@_u+1
  6927   004AC8  C023  F092         	movff	?___flmul+2,strtof@_u+2
  6928   004ACC  C024  F093         	movff	?___flmul+3,strtof@_u+3
  6929   004AD0  0100               	movlb	0	; () banked
  6930   004AD2  078C               	decf	strtof@expon& (0+255),f,b
  6931   004AD4  A0D8               	btfss	status,0,c
  6932   004AD6  078D               	decf	(strtof@expon+1)& (0+255),f,b
  6933   004AD8                     l13108:
  6934                           
  6935                           ; BSR set to: 0
  6936   004AD8  518C               	movf	strtof@expon& (0+255),w,b
  6937   004ADA  118D               	iorwf	(strtof@expon+1)& (0+255),w,b
  6938   004ADC  A4D8               	btfss	status,2,c
  6939   004ADE  EF73  F025         	goto	u16891
  6940   004AE2  EF75  F025         	goto	u16890
  6941   004AE6                     u16891:
  6942   004AE6  EF4E  F025         	goto	l13104
  6943   004AEA                     u16890:
  6944   004AEA                     
  6945                           ; BSR set to: 0
  6946   004AEA  0EFF               	movlw	255
  6947   004AEC  6E42               	movwf	___flge@ff1^0,c
  6948   004AEE  0EFF               	movlw	255
  6949   004AF0  6E43               	movwf	(___flge@ff1+1)^0,c
  6950   004AF2  0E7F               	movlw	127
  6951   004AF4  6E44               	movwf	(___flge@ff1+2)^0,c
  6952   004AF6  0E7F               	movlw	127
  6953   004AF8  6E45               	movwf	(___flge@ff1+3)^0,c
  6954   004AFA  C090  F046         	movff	strtof@_u,___flge@ff2
  6955   004AFE  C091  F047         	movff	strtof@_u+1,___flge@ff2+1
  6956   004B02  C092  F048         	movff	strtof@_u+2,___flge@ff2+2
  6957   004B06  C093  F049         	movff	strtof@_u+3,___flge@ff2+3
  6958   004B0A  ECE3  F048         	call	___flge	;wreg free
  6959   004B0E  B0D8               	btfsc	status,0,c
  6960   004B10  EF8C  F025         	goto	u16901
  6961   004B14  EF8E  F025         	goto	u16900
  6962   004B18                     u16901:
  6963   004B18  EFAA  F025         	goto	l2110
  6964   004B1C                     u16900:
  6965   004B1C  0100               	movlb	0	; () banked
  6966   004B1E  A18B               	btfss	strtof@flags& (0+255),0,b
  6967   004B20  EF94  F025         	goto	u16911
  6968   004B24  EF96  F025         	goto	u16910
  6969   004B28                     u16911:
  6970   004B28  EFA0  F025         	goto	l13118
  6971   004B2C                     u16910:
  6972   004B2C                     
  6973                           ; BSR set to: 0
  6974   004B2C  0E00               	movlw	0
  6975   004B2E  6F80               	movwf	?_strtof& (0+255),b
  6976   004B30  0E00               	movlw	0
  6977   004B32  6F81               	movwf	(?_strtof+1)& (0+255),b
  6978   004B34  0E80               	movlw	128
  6979   004B36  6F82               	movwf	(?_strtof+2)& (0+255),b
  6980   004B38  0E80               	movlw	128
  6981   004B3A  6F83               	movwf	(?_strtof+3)& (0+255),b
  6982   004B3C  EFCC  F025         	goto	l2154
  6983   004B40                     l13118:
  6984                           
  6985                           ; BSR set to: 0
  6986   004B40  0E00               	movlw	0
  6987   004B42  6F80               	movwf	?_strtof& (0+255),b
  6988   004B44  0E00               	movlw	0
  6989   004B46  6F81               	movwf	(?_strtof+1)& (0+255),b
  6990   004B48  0E80               	movlw	128
  6991   004B4A  6F82               	movwf	(?_strtof+2)& (0+255),b
  6992   004B4C  0E00               	movlw	0
  6993   004B4E  6F83               	movwf	(?_strtof+3)& (0+255),b
  6994   004B50  EFCC  F025         	goto	l2154
  6995   004B54                     l2110:
  6996   004B54  0100               	movlb	0	; () banked
  6997   004B56  A18B               	btfss	strtof@flags& (0+255),0,b
  6998   004B58  EFB0  F025         	goto	u16921
  6999   004B5C  EFB2  F025         	goto	u16920
  7000   004B60                     u16921:
  7001   004B60  EFC4  F025         	goto	l13124
  7002   004B64                     u16920:
  7003   004B64                     
  7004                           ; BSR set to: 0
  7005   004B64  C090  F003         	movff	strtof@_u,___flneg@f1
  7006   004B68  C091  F004         	movff	strtof@_u+1,___flneg@f1+1
  7007   004B6C  C092  F005         	movff	strtof@_u+2,___flneg@f1+2
  7008   004B70  C093  F006         	movff	strtof@_u+3,___flneg@f1+3
  7009   004B74  ECBA  F054         	call	___flneg	;wreg free
  7010   004B78  C003  F090         	movff	?___flneg,strtof@_u
  7011   004B7C  C004  F091         	movff	?___flneg+1,strtof@_u+1
  7012   004B80  C005  F092         	movff	?___flneg+2,strtof@_u+2
  7013   004B84  C006  F093         	movff	?___flneg+3,strtof@_u+3
  7014   004B88                     l13124:
  7015   004B88  C090  F080         	movff	strtof@_u,?_strtof
  7016   004B8C  C091  F081         	movff	strtof@_u+1,?_strtof+1
  7017   004B90  C092  F082         	movff	strtof@_u+2,?_strtof+2
  7018   004B94  C093  F083         	movff	strtof@_u+3,?_strtof+3
  7019   004B98                     l2154:
  7020   004B98  0012               	return		;funcret
  7021   004B9A                     __end_of_strtof:
  7022                           	callstack 0
  7023                           
  7024 ;; *************** function _toupper *****************
  7025 ;; Defined at:
  7026 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\toupper.c"
  7027 ;; Parameters:    Size  Location     Type
  7028 ;;  c               2    6[COMRAM] int 
  7029 ;; Auto vars:     Size  Location     Type
  7030 ;;		None
  7031 ;; Return value:  Size  Location     Type
  7032 ;;                  2    6[COMRAM] int 
  7033 ;; Registers used:
  7034 ;;		wreg, status,2, status,0
  7035 ;; Tracked objects:
  7036 ;;		On entry : 0/0
  7037 ;;		On exit  : 0/0
  7038 ;;		Unchanged: 0/0
  7039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7040 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7042 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7043 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7044 ;;Total ram usage:        4 bytes
  7045 ;; Hardware stack levels used: 1
  7046 ;; Hardware stack levels required when called: 4
  7047 ;; This function calls:
  7048 ;;		_islower
  7049 ;; This function is called by:
  7050 ;;		_strtof
  7051 ;; This function uses a non-reentrant model
  7052 ;;
  7053                           
  7054                           	psect	text15
  7055   00A93C                     __ptext15:
  7056                           	callstack 0
  7057   00A93C                     _toupper:
  7058                           	callstack 23
  7059   00A93C  0E9F               	movlw	159
  7060   00A93E  2407               	addwf	toupper@c^0,w,c
  7061   00A940  6E09               	movwf	??_toupper^0,c
  7062   00A942  0EFF               	movlw	255
  7063   00A944  2008               	addwfc	(toupper@c+1)^0,w,c
  7064   00A946  6E0A               	movwf	(??_toupper+1)^0,c
  7065   00A948  500A               	movf	(??_toupper+1)^0,w,c
  7066   00A94A  E107               	bnz	u9471
  7067   00A94C  0E1A               	movlw	26
  7068   00A94E  5C09               	subwf	??_toupper^0,w,c
  7069   00A950  B0D8               	btfsc	status,0,c
  7070   00A952  EFAD  F054         	goto	u9471
  7071   00A956  EFAF  F054         	goto	u9470
  7072   00A95A                     u9471:
  7073   00A95A  EFB5  F054         	goto	l2272
  7074   00A95E                     u9470:
  7075   00A95E  0E5F               	movlw	95
  7076   00A960  1407               	andwf	toupper@c^0,w,c
  7077   00A962  6E07               	movwf	?_toupper^0,c
  7078   00A964  6A08               	clrf	(?_toupper+1)^0,c
  7079   00A966  EFB9  F054         	goto	l2275
  7080   00A96A                     l2272:
  7081   00A96A  C007  F007         	movff	toupper@c,?_toupper
  7082   00A96E  C008  F008         	movff	toupper@c+1,?_toupper+1
  7083   00A972                     l2275:
  7084   00A972  0012               	return		;funcret
  7085   00A974                     __end_of_toupper:
  7086                           	callstack 0
  7087                           
  7088 ;; *************** function _islower *****************
  7089 ;; Defined at:
  7090 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\islower.c"
  7091 ;; Parameters:    Size  Location     Type
  7092 ;;  c               2    2[COMRAM] int 
  7093 ;; Auto vars:     Size  Location     Type
  7094 ;;		None
  7095 ;; Return value:  Size  Location     Type
  7096 ;;                  2    2[COMRAM] int 
  7097 ;; Registers used:
  7098 ;;		wreg, status,2, status,0
  7099 ;; Tracked objects:
  7100 ;;		On entry : 0/0
  7101 ;;		On exit  : 0/0
  7102 ;;		Unchanged: 0/0
  7103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7104 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7106 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7107 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7108 ;;Total ram usage:        4 bytes
  7109 ;; Hardware stack levels used: 1
  7110 ;; Hardware stack levels required when called: 3
  7111 ;; This function calls:
  7112 ;;		Nothing
  7113 ;; This function is called by:
  7114 ;;		_toupper
  7115 ;; This function uses a non-reentrant model
  7116 ;;
  7117                           
  7118                           	psect	text16
  7119   00AB0E                     __ptext16:
  7120                           	callstack 0
  7121   00AB0E                     _islower:
  7122                           	callstack 23
  7123   00AB0E  0E9F               	movlw	159
  7124   00AB10  2403               	addwf	islower@c^0,w,c
  7125   00AB12  6E05               	movwf	??_islower^0,c
  7126   00AB14  0EFF               	movlw	255
  7127   00AB16  2004               	addwfc	(islower@c+1)^0,w,c
  7128   00AB18  6E06               	movwf	(??_islower+1)^0,c
  7129   00AB1A  5006               	movf	(??_islower+1)^0,w,c
  7130   00AB1C  E10A               	bnz	u8980
  7131   00AB1E  0E1A               	movlw	26
  7132   00AB20  5C05               	subwf	??_islower^0,w,c
  7133   00AB22  A0D8               	btfss	status,0,c
  7134   00AB24  EF96  F055         	goto	u8981
  7135   00AB28  EF99  F055         	goto	u8980
  7136   00AB2C                     u8981:
  7137   00AB2C  0E01               	movlw	1
  7138   00AB2E  EF9A  F055         	goto	u8990
  7139   00AB32                     u8980:
  7140   00AB32  0E00               	movlw	0
  7141   00AB34                     u8990:
  7142   00AB34  6E03               	movwf	?_islower^0,c
  7143   00AB36  6A04               	clrf	(?_islower+1)^0,c
  7144   00AB38  0012               	return		;funcret
  7145   00AB3A                     __end_of_islower:
  7146                           	callstack 0
  7147                           
  7148 ;; *************** function _isxdigit *****************
  7149 ;; Defined at:
  7150 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isxdigit.c"
  7151 ;; Parameters:    Size  Location     Type
  7152 ;;  c               2    6[COMRAM] int 
  7153 ;; Auto vars:     Size  Location     Type
  7154 ;;		None
  7155 ;; Return value:  Size  Location     Type
  7156 ;;                  2    6[COMRAM] int 
  7157 ;; Registers used:
  7158 ;;		wreg, status,2, status,0
  7159 ;; Tracked objects:
  7160 ;;		On entry : 0/0
  7161 ;;		On exit  : 0/0
  7162 ;;		Unchanged: 0/0
  7163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7164 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7165 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7166 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7167 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7168 ;;Total ram usage:        7 bytes
  7169 ;; Hardware stack levels used: 1
  7170 ;; Hardware stack levels required when called: 4
  7171 ;; This function calls:
  7172 ;;		_isdigit
  7173 ;; This function is called by:
  7174 ;;		_strtof
  7175 ;; This function uses a non-reentrant model
  7176 ;;
  7177                           
  7178                           	psect	text17
  7179   00A3E2                     __ptext17:
  7180                           	callstack 0
  7181   00A3E2                     _isxdigit:
  7182                           	callstack 23
  7183   00A3E2  0E01               	movlw	1
  7184   00A3E4  6E0D               	movwf	_isxdigit$2580^0,c
  7185   00A3E6  0ED0               	movlw	208
  7186   00A3E8  2407               	addwf	isxdigit@c^0,w,c
  7187   00A3EA  6E09               	movwf	??_isxdigit^0,c
  7188   00A3EC  0EFF               	movlw	255
  7189   00A3EE  2008               	addwfc	(isxdigit@c+1)^0,w,c
  7190   00A3F0  6E0A               	movwf	(??_isxdigit+1)^0,c
  7191   00A3F2  500A               	movf	(??_isxdigit+1)^0,w,c
  7192   00A3F4  E109               	bnz	u15360
  7193   00A3F6  0E0A               	movlw	10
  7194   00A3F8  5C09               	subwf	??_isxdigit^0,w,c
  7195   00A3FA  A0D8               	btfss	status,0,c
  7196   00A3FC  EF02  F052         	goto	u15361
  7197   00A400  EF04  F052         	goto	u15360
  7198   00A404                     u15361:
  7199   00A404  EF1D  F052         	goto	l12198
  7200   00A408                     u15360:
  7201   00A408  0E20               	movlw	32
  7202   00A40A  1007               	iorwf	isxdigit@c^0,w,c
  7203   00A40C  6E09               	movwf	??_isxdigit^0,c
  7204   00A40E  0E00               	movlw	0
  7205   00A410  1008               	iorwf	(isxdigit@c+1)^0,w,c
  7206   00A412  6E0A               	movwf	(??_isxdigit+1)^0,c
  7207   00A414  0E9F               	movlw	159
  7208   00A416  2409               	addwf	??_isxdigit^0,w,c
  7209   00A418  6E0B               	movwf	(??_isxdigit+2)^0,c
  7210   00A41A  0EFF               	movlw	255
  7211   00A41C  200A               	addwfc	(??_isxdigit+1)^0,w,c
  7212   00A41E  6E0C               	movwf	(??_isxdigit+3)^0,c
  7213   00A420  500C               	movf	(??_isxdigit+3)^0,w,c
  7214   00A422  E109               	bnz	u15370
  7215   00A424  0E06               	movlw	6
  7216   00A426  5C0B               	subwf	(??_isxdigit+2)^0,w,c
  7217   00A428  A0D8               	btfss	status,0,c
  7218   00A42A  EF19  F052         	goto	u15371
  7219   00A42E  EF1B  F052         	goto	u15370
  7220   00A432                     u15371:
  7221   00A432  EF1D  F052         	goto	l12198
  7222   00A436                     u15370:
  7223   00A436  0E00               	movlw	0
  7224   00A438  6E0D               	movwf	_isxdigit$2580^0,c
  7225   00A43A                     l12198:
  7226   00A43A  C00D  F007         	movff	_isxdigit$2580,?_isxdigit
  7227   00A43E  6A08               	clrf	(?_isxdigit+1)^0,c
  7228   00A440  0012               	return		;funcret
  7229   00A442                     __end_of_isxdigit:
  7230                           	callstack 0
  7231                           
  7232 ;; *************** function ___lmul *****************
  7233 ;; Defined at:
  7234 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
  7235 ;; Parameters:    Size  Location     Type
  7236 ;;  multiplier      4    2[COMRAM] unsigned long 
  7237 ;;  multiplicand    4    6[COMRAM] unsigned long 
  7238 ;; Auto vars:     Size  Location     Type
  7239 ;;  product         4   10[COMRAM] unsigned long 
  7240 ;; Return value:  Size  Location     Type
  7241 ;;                  4    2[COMRAM] unsigned long 
  7242 ;; Registers used:
  7243 ;;		wreg, status,2, status,0
  7244 ;; Tracked objects:
  7245 ;;		On entry : 0/0
  7246 ;;		On exit  : 0/0
  7247 ;;		Unchanged: 0/0
  7248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7249 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7250 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7252 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7253 ;;Total ram usage:       12 bytes
  7254 ;; Hardware stack levels used: 1
  7255 ;; Hardware stack levels required when called: 3
  7256 ;; This function calls:
  7257 ;;		Nothing
  7258 ;; This function is called by:
  7259 ;;		_strtof
  7260 ;; This function uses a non-reentrant model
  7261 ;;
  7262                           
  7263                           	psect	text18
  7264   00A2B0                     __ptext18:
  7265                           	callstack 0
  7266   00A2B0                     ___lmul:
  7267                           	callstack 24
  7268   00A2B0  0E00               	movlw	0
  7269   00A2B2  6E0B               	movwf	___lmul@product^0,c
  7270   00A2B4  0E00               	movlw	0
  7271   00A2B6  6E0C               	movwf	(___lmul@product+1)^0,c
  7272   00A2B8  0E00               	movlw	0
  7273   00A2BA  6E0D               	movwf	(___lmul@product+2)^0,c
  7274   00A2BC  0E00               	movlw	0
  7275   00A2BE  6E0E               	movwf	(___lmul@product+3)^0,c
  7276   00A2C0                     l8140:
  7277   00A2C0  A003               	btfss	___lmul@multiplier^0,0,c
  7278   00A2C2  EF65  F051         	goto	u9211
  7279   00A2C6  EF67  F051         	goto	u9210
  7280   00A2CA                     u9211:
  7281   00A2CA  EF6F  F051         	goto	l8144
  7282   00A2CE                     u9210:
  7283   00A2CE  5007               	movf	___lmul@multiplicand^0,w,c
  7284   00A2D0  260B               	addwf	___lmul@product^0,f,c
  7285   00A2D2  5008               	movf	(___lmul@multiplicand+1)^0,w,c
  7286   00A2D4  220C               	addwfc	(___lmul@product+1)^0,f,c
  7287   00A2D6  5009               	movf	(___lmul@multiplicand+2)^0,w,c
  7288   00A2D8  220D               	addwfc	(___lmul@product+2)^0,f,c
  7289   00A2DA  500A               	movf	(___lmul@multiplicand+3)^0,w,c
  7290   00A2DC  220E               	addwfc	(___lmul@product+3)^0,f,c
  7291   00A2DE                     l8144:
  7292   00A2DE  90D8               	bcf	status,0,c
  7293   00A2E0  3607               	rlcf	___lmul@multiplicand^0,f,c
  7294   00A2E2  3608               	rlcf	(___lmul@multiplicand+1)^0,f,c
  7295   00A2E4  3609               	rlcf	(___lmul@multiplicand+2)^0,f,c
  7296   00A2E6  360A               	rlcf	(___lmul@multiplicand+3)^0,f,c
  7297   00A2E8  90D8               	bcf	status,0,c
  7298   00A2EA  3206               	rrcf	(___lmul@multiplier+3)^0,f,c
  7299   00A2EC  3205               	rrcf	(___lmul@multiplier+2)^0,f,c
  7300   00A2EE  3204               	rrcf	(___lmul@multiplier+1)^0,f,c
  7301   00A2F0  3203               	rrcf	___lmul@multiplier^0,f,c
  7302   00A2F2  5003               	movf	___lmul@multiplier^0,w,c
  7303   00A2F4  1004               	iorwf	(___lmul@multiplier+1)^0,w,c
  7304   00A2F6  1005               	iorwf	(___lmul@multiplier+2)^0,w,c
  7305   00A2F8  1006               	iorwf	(___lmul@multiplier+3)^0,w,c
  7306   00A2FA  A4D8               	btfss	status,2,c
  7307   00A2FC  EF82  F051         	goto	u9221
  7308   00A300  EF84  F051         	goto	u9220
  7309   00A304                     u9221:
  7310   00A304  EF60  F051         	goto	l8140
  7311   00A308                     u9220:
  7312   00A308  C00B  F003         	movff	___lmul@product,?___lmul
  7313   00A30C  C00C  F004         	movff	___lmul@product+1,?___lmul+1
  7314   00A310  C00D  F005         	movff	___lmul@product+2,?___lmul+2
  7315   00A314  C00E  F006         	movff	___lmul@product+3,?___lmul+3
  7316   00A318  0012               	return		;funcret
  7317   00A31A                     __end_of___lmul:
  7318                           	callstack 0
  7319                           
  7320 ;; *************** function _Calculate *****************
  7321 ;; Defined at:
  7322 ;;		line 345 in file "Calculator_Math/CalculatorMath.c"
  7323 ;; Parameters:    Size  Location     Type
  7324 ;;  n1              4   17[BANK0 ] float 
  7325 ;;  n2              4   21[BANK0 ] float 
  7326 ;;  op              1   25[BANK0 ] unsigned char 
  7327 ;; Auto vars:     Size  Location     Type
  7328 ;;		None
  7329 ;; Return value:  Size  Location     Type
  7330 ;;                  4   17[BANK0 ] float 
  7331 ;; Registers used:
  7332 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7333 ;; Tracked objects:
  7334 ;;		On entry : 0/0
  7335 ;;		On exit  : 0/0
  7336 ;;		Unchanged: 0/0
  7337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7338 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7340 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7341 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7342 ;;Total ram usage:       11 bytes
  7343 ;; Hardware stack levels used: 1
  7344 ;; Hardware stack levels required when called: 6
  7345 ;; This function calls:
  7346 ;;		___fladd
  7347 ;;		___fldiv
  7348 ;;		___flmul
  7349 ;;		___flsub
  7350 ;;		_powf
  7351 ;; This function is called by:
  7352 ;;		_HandleString
  7353 ;; This function uses a non-reentrant model
  7354 ;;
  7355                           
  7356                           	psect	text19
  7357   008656                     __ptext19:
  7358                           	callstack 0
  7359   008656                     _Calculate:
  7360                           	callstack 23
  7361   008656                     
  7362                           ;Calculator_Math/CalculatorMath.c: 346:     switch (op)
  7363   008656  EFB9  F043         	goto	l13164
  7364   00865A                     l13134:
  7365                           
  7366                           ; BSR set to: 0
  7367                           ;Calculator_Math/CalculatorMath.c: 349:         return (n1+n2);
  7368   00865A  C091  F011         	movff	Calculate@n1,___fladd@b
  7369   00865E  C092  F012         	movff	Calculate@n1+1,___fladd@b+1
  7370   008662  C093  F013         	movff	Calculate@n1+2,___fladd@b+2
  7371   008666  C094  F014         	movff	Calculate@n1+3,___fladd@b+3
  7372   00866A  C095  F015         	movff	Calculate@n2,___fladd@a
  7373   00866E  C096  F016         	movff	Calculate@n2+1,___fladd@a+1
  7374   008672  C097  F017         	movff	Calculate@n2+2,___fladd@a+2
  7375   008676  C098  F018         	movff	Calculate@n2+3,___fladd@a+3
  7376   00867A  EC00  F02B         	call	___fladd	;wreg free
  7377   00867E  C011  F091         	movff	?___fladd,?_Calculate
  7378   008682  C012  F092         	movff	?___fladd+1,?_Calculate+1
  7379   008686  C013  F093         	movff	?___fladd+2,?_Calculate+2
  7380   00868A  C014  F094         	movff	?___fladd+3,?_Calculate+3
  7381   00868E  EFE3  F043         	goto	l116
  7382   008692                     l13140:
  7383                           
  7384                           ; BSR set to: 0
  7385                           ;Calculator_Math/CalculatorMath.c: 352:         return (n1-n2);
  7386   008692  C091  F03A         	movff	Calculate@n1,___flsub@b
  7387   008696  C092  F03B         	movff	Calculate@n1+1,___flsub@b+1
  7388   00869A  C093  F03C         	movff	Calculate@n1+2,___flsub@b+2
  7389   00869E  C094  F03D         	movff	Calculate@n1+3,___flsub@b+3
  7390   0086A2  C095  F03E         	movff	Calculate@n2,___flsub@a
  7391   0086A6  C096  F03F         	movff	Calculate@n2+1,___flsub@a+1
  7392   0086AA  C097  F040         	movff	Calculate@n2+2,___flsub@a+2
  7393   0086AE  C098  F041         	movff	Calculate@n2+3,___flsub@a+3
  7394   0086B2  EC8D  F053         	call	___flsub	;wreg free
  7395   0086B6  C03A  F091         	movff	?___flsub,?_Calculate
  7396   0086BA  C03B  F092         	movff	?___flsub+1,?_Calculate+1
  7397   0086BE  C03C  F093         	movff	?___flsub+2,?_Calculate+2
  7398   0086C2  C03D  F094         	movff	?___flsub+3,?_Calculate+3
  7399   0086C6  EFE3  F043         	goto	l116
  7400   0086CA                     l13146:
  7401                           
  7402                           ; BSR set to: 0
  7403                           ;Calculator_Math/CalculatorMath.c: 355:         return (n1*n2);
  7404   0086CA  C091  F021         	movff	Calculate@n1,___flmul@b
  7405   0086CE  C092  F022         	movff	Calculate@n1+1,___flmul@b+1
  7406   0086D2  C093  F023         	movff	Calculate@n1+2,___flmul@b+2
  7407   0086D6  C094  F024         	movff	Calculate@n1+3,___flmul@b+3
  7408   0086DA  C095  F025         	movff	Calculate@n2,___flmul@a
  7409   0086DE  C096  F026         	movff	Calculate@n2+1,___flmul@a+1
  7410   0086E2  C097  F027         	movff	Calculate@n2+2,___flmul@a+2
  7411   0086E6  C098  F028         	movff	Calculate@n2+3,___flmul@a+3
  7412   0086EA  ECF4  F031         	call	___flmul	;wreg free
  7413   0086EE  C021  F091         	movff	?___flmul,?_Calculate
  7414   0086F2  C022  F092         	movff	?___flmul+1,?_Calculate+1
  7415   0086F6  C023  F093         	movff	?___flmul+2,?_Calculate+2
  7416   0086FA  C024  F094         	movff	?___flmul+3,?_Calculate+3
  7417   0086FE  EFE3  F043         	goto	l116
  7418   008702                     l13152:
  7419                           
  7420                           ; BSR set to: 0
  7421                           ;Calculator_Math/CalculatorMath.c: 358:         return (n1/n2);
  7422   008702  C091  F042         	movff	Calculate@n1,___fldiv@b
  7423   008706  C092  F043         	movff	Calculate@n1+1,___fldiv@b+1
  7424   00870A  C093  F044         	movff	Calculate@n1+2,___fldiv@b+2
  7425   00870E  C094  F045         	movff	Calculate@n1+3,___fldiv@b+3
  7426   008712  C095  F046         	movff	Calculate@n2,___fldiv@a
  7427   008716  C096  F047         	movff	Calculate@n2+1,___fldiv@a+1
  7428   00871A  C097  F048         	movff	Calculate@n2+2,___fldiv@a+2
  7429   00871E  C098  F049         	movff	Calculate@n2+3,___fldiv@a+3
  7430   008722  EC09  F034         	call	___fldiv	;wreg free
  7431   008726  C042  F091         	movff	?___fldiv,?_Calculate
  7432   00872A  C043  F092         	movff	?___fldiv+1,?_Calculate+1
  7433   00872E  C044  F093         	movff	?___fldiv+2,?_Calculate+2
  7434   008732  C045  F094         	movff	?___fldiv+3,?_Calculate+3
  7435   008736  EFE3  F043         	goto	l116
  7436   00873A                     l13158:
  7437                           
  7438                           ; BSR set to: 0
  7439                           ;Calculator_Math/CalculatorMath.c: 361:         return powf(n1,n2);
  7440   00873A  C091  F080         	movff	Calculate@n1,powf@x
  7441   00873E  C092  F081         	movff	Calculate@n1+1,powf@x+1
  7442   008742  C093  F082         	movff	Calculate@n1+2,powf@x+2
  7443   008746  C094  F083         	movff	Calculate@n1+3,powf@x+3
  7444   00874A  C095  F084         	movff	Calculate@n2,powf@y
  7445   00874E  C096  F085         	movff	Calculate@n2+1,powf@y+1
  7446   008752  C097  F086         	movff	Calculate@n2+2,powf@y+2
  7447   008756  C098  F087         	movff	Calculate@n2+3,powf@y+3
  7448   00875A  EC67  F008         	call	_powf	;wreg free
  7449   00875E  C080  F091         	movff	?_powf,?_Calculate
  7450   008762  C081  F092         	movff	?_powf+1,?_Calculate+1
  7451   008766  C082  F093         	movff	?_powf+2,?_Calculate+2
  7452   00876A  C083  F094         	movff	?_powf+3,?_Calculate+3
  7453   00876E  EFE3  F043         	goto	l116
  7454   008772                     l13164:
  7455   008772  0100               	movlb	0	; () banked
  7456   008774  5199               	movf	Calculate@op& (0+255),w,b
  7457   008776  6F9A               	movwf	??_Calculate& (0+255),b
  7458   008778  6B9B               	clrf	(??_Calculate+1)& (0+255),b
  7459                           
  7460                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7461                           ; Switch size 1, requested type "simple"
  7462                           ; Number of cases is 1, Range of values is 0 to 0
  7463                           ; switch strategies available:
  7464                           ; Name         Instructions Cycles
  7465                           ; simple_byte            4     3 (average)
  7466                           ;	Chosen strategy is simple_byte
  7467   00877A  519B               	movf	(??_Calculate+1)& (0+255),w,b
  7468   00877C  0A00               	xorlw	0	; case 0
  7469   00877E  B4D8               	btfsc	status,2,c
  7470   008780  EFC4  F043         	goto	l13840
  7471   008784  EFDB  F043         	goto	l13166
  7472   008788                     l13840:
  7473                           
  7474                           ; BSR set to: 0
  7475                           ; Switch size 1, requested type "simple"
  7476                           ; Number of cases is 5, Range of values is 42 to 47
  7477                           ; switch strategies available:
  7478                           ; Name         Instructions Cycles
  7479                           ; simple_byte           16     9 (average)
  7480                           ;	Chosen strategy is simple_byte
  7481   008788  519A               	movf	??_Calculate& (0+255),w,b
  7482   00878A  0A2A               	xorlw	42	; case 42
  7483   00878C  B4D8               	btfsc	status,2,c
  7484   00878E  EF65  F043         	goto	l13146
  7485   008792  0A01               	xorlw	1	; case 43
  7486   008794  B4D8               	btfsc	status,2,c
  7487   008796  EF2D  F043         	goto	l13134
  7488   00879A  0A06               	xorlw	6	; case 45
  7489   00879C  B4D8               	btfsc	status,2,c
  7490   00879E  EF49  F043         	goto	l13140
  7491   0087A2  0A03               	xorlw	3	; case 46
  7492   0087A4  B4D8               	btfsc	status,2,c
  7493   0087A6  EF9D  F043         	goto	l13158
  7494   0087AA  0A01               	xorlw	1	; case 47
  7495   0087AC  B4D8               	btfsc	status,2,c
  7496   0087AE  EF81  F043         	goto	l13152
  7497   0087B2  EFDB  F043         	goto	l13166
  7498   0087B6                     l13166:
  7499                           
  7500                           ; BSR set to: 0
  7501                           ;Calculator_Math/CalculatorMath.c: 365:     return 0;
  7502   0087B6  0E00               	movlw	0
  7503   0087B8  6F91               	movwf	?_Calculate& (0+255),b
  7504   0087BA  0E00               	movlw	0
  7505   0087BC  6F92               	movwf	(?_Calculate+1)& (0+255),b
  7506   0087BE  0E00               	movlw	0
  7507   0087C0  6F93               	movwf	(?_Calculate+2)& (0+255),b
  7508   0087C2  0E00               	movlw	0
  7509   0087C4  6F94               	movwf	(?_Calculate+3)& (0+255),b
  7510   0087C6                     l116:
  7511   0087C6  0012               	return		;funcret
  7512   0087C8                     __end_of_Calculate:
  7513                           	callstack 0
  7514                           
  7515 ;; *************** function _powf *****************
  7516 ;; Defined at:
  7517 ;;		line 53 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\powf.c"
  7518 ;; Parameters:    Size  Location     Type
  7519 ;;  x               4    0[BANK0 ] float 
  7520 ;;  y               4    4[BANK0 ] float 
  7521 ;; Auto vars:     Size  Location     Type
  7522 ;;  s2              4  140[BANK1 ] float 
  7523 ;;  s_h             4  108[BANK1 ] float 
  7524 ;;  t_h             4  104[BANK1 ] float 
  7525 ;;  t_l             4   52[BANK1 ] float 
  7526 ;;  s_l             4   48[BANK1 ] float 
  7527 ;;  __xc8_float_    4  184[BANK1 ] struct .
  7528 ;;  z               4  180[BANK1 ] float 
  7529 ;;  t               4  176[BANK1 ] float 
  7530 ;;  j               4  172[BANK1 ] long 
  7531 ;;  ix              4  168[BANK1 ] long 
  7532 ;;  k               4  160[BANK1 ] long 
  7533 ;;  p_h             4  156[BANK1 ] float 
  7534 ;;  is              4  148[BANK1 ] long 
  7535 ;;  iy              4  144[BANK1 ] long 
  7536 ;;  sn              4  136[BANK1 ] float 
  7537 ;;  t1              4  132[BANK1 ] float 
  7538 ;;  n               4  128[BANK1 ] long 
  7539 ;;  hy              4  124[BANK1 ] long 
  7540 ;;  v               4  120[BANK1 ] float 
  7541 ;;  u               4  116[BANK1 ] float 
  7542 ;;  ax              4  112[BANK1 ] float 
  7543 ;;  p_l             4  100[BANK1 ] float 
  7544 ;;  hx              4   96[BANK1 ] long 
  7545 ;;  s               4   92[BANK1 ] float 
  7546 ;;  yisint          4   80[BANK1 ] long 
  7547 ;;  r               4   76[BANK1 ] float 
  7548 ;;  w               4   68[BANK1 ] float 
  7549 ;;  i               4   44[BANK1 ] long 
  7550 ;;  y1              4   40[BANK1 ] float 
  7551 ;;  z_l             4   36[BANK1 ] float 
  7552 ;;  z_h             4   32[BANK1 ] float 
  7553 ;;  t2              4   28[BANK1 ] float 
  7554 ;; Return value:  Size  Location     Type
  7555 ;;                  4    0[BANK0 ] float 
  7556 ;; Registers used:
  7557 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7558 ;; Tracked objects:
  7559 ;;		On entry : 0/0
  7560 ;;		On exit  : 0/0
  7561 ;;		Unchanged: 0/0
  7562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7563 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7564 ;;      Locals:         0       0     188       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7565 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7566 ;;      Totals:         0      17     188       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7567 ;;Total ram usage:      205 bytes
  7568 ;; Hardware stack levels used: 1
  7569 ;; Hardware stack levels required when called: 5
  7570 ;; This function calls:
  7571 ;;		___fladd
  7572 ;;		___fldiv
  7573 ;;		___flge
  7574 ;;		___flmul
  7575 ;;		___flneg
  7576 ;;		___flsub
  7577 ;;		___xxtofl
  7578 ;;		_fabsf
  7579 ;;		_scalbnf
  7580 ;;		_sqrtf
  7581 ;; This function is called by:
  7582 ;;		_Calculate
  7583 ;; This function uses a non-reentrant model
  7584 ;;
  7585                           
  7586                           	psect	text20
  7587   0010CE                     __ptext20:
  7588                           	callstack 0
  7589   0010CE                     _powf:
  7590                           	callstack 23
  7591   0010CE  C080  F1B8         	movff	powf@x,powf@__xc8_float_word
  7592   0010D2  C081  F1B9         	movff	powf@x+1,powf@__xc8_float_word+1
  7593   0010D6  C082  F1BA         	movff	powf@x+2,powf@__xc8_float_word+2
  7594   0010DA  C083  F1BB         	movff	powf@x+3,powf@__xc8_float_word+3
  7595   0010DE  C1B8  F160         	movff	powf@__xc8_float_word,powf@hx
  7596   0010E2  C1B9  F161         	movff	powf@__xc8_float_word+1,powf@hx+1
  7597   0010E6  C1BA  F162         	movff	powf@__xc8_float_word+2,powf@hx+2
  7598   0010EA  C1BB  F163         	movff	powf@__xc8_float_word+3,powf@hx+3
  7599   0010EE  C084  F1B8         	movff	powf@y,powf@__xc8_float_word
  7600   0010F2  C085  F1B9         	movff	powf@y+1,powf@__xc8_float_word+1
  7601   0010F6  C086  F1BA         	movff	powf@y+2,powf@__xc8_float_word+2
  7602   0010FA  C087  F1BB         	movff	powf@y+3,powf@__xc8_float_word+3
  7603   0010FE  C1B8  F17C         	movff	powf@__xc8_float_word,powf@hy
  7604   001102  C1B9  F17D         	movff	powf@__xc8_float_word+1,powf@hy+1
  7605   001106  C1BA  F17E         	movff	powf@__xc8_float_word+2,powf@hy+2
  7606   00110A  C1BB  F17F         	movff	powf@__xc8_float_word+3,powf@hy+3
  7607   00110E  0EFF               	movlw	255
  7608   001110  0101               	movlb	1	; () banked
  7609   001112  1560               	andwf	powf@hx& (0+255),w,b
  7610   001114  6FA8               	movwf	powf@ix& (0+255),b
  7611   001116  0EFF               	movlw	255
  7612   001118  1561               	andwf	(powf@hx+1)& (0+255),w,b
  7613   00111A  6FA9               	movwf	(powf@ix+1)& (0+255),b
  7614   00111C  0EFF               	movlw	255
  7615   00111E  1562               	andwf	(powf@hx+2)& (0+255),w,b
  7616   001120  6FAA               	movwf	(powf@ix+2)& (0+255),b
  7617   001122  0E7F               	movlw	127
  7618   001124  1563               	andwf	(powf@hx+3)& (0+255),w,b
  7619   001126  6FAB               	movwf	(powf@ix+3)& (0+255),b
  7620   001128  0EFF               	movlw	255
  7621   00112A  157C               	andwf	powf@hy& (0+255),w,b
  7622   00112C  6F90               	movwf	powf@iy& (0+255),b
  7623   00112E  0EFF               	movlw	255
  7624   001130  157D               	andwf	(powf@hy+1)& (0+255),w,b
  7625   001132  6F91               	movwf	(powf@iy+1)& (0+255),b
  7626   001134  0EFF               	movlw	255
  7627   001136  157E               	andwf	(powf@hy+2)& (0+255),w,b
  7628   001138  6F92               	movwf	(powf@iy+2)& (0+255),b
  7629   00113A  0E7F               	movlw	127
  7630   00113C  157F               	andwf	(powf@hy+3)& (0+255),w,b
  7631   00113E  6F93               	movwf	(powf@iy+3)& (0+255),b
  7632   001140  5190               	movf	powf@iy& (0+255),w,b
  7633   001142  1191               	iorwf	(powf@iy+1)& (0+255),w,b
  7634   001144  1192               	iorwf	(powf@iy+2)& (0+255),w,b
  7635   001146  1193               	iorwf	(powf@iy+3)& (0+255),w,b
  7636   001148  A4D8               	btfss	status,2,c
  7637   00114A  EFA9  F008         	goto	u15381
  7638   00114E  EFAB  F008         	goto	u15380
  7639   001152                     u15381:
  7640   001152  EFB6  F008         	goto	l12208
  7641   001156                     u15380:
  7642   001156                     
  7643                           ; BSR set to: 1
  7644   001156  0E00               	movlw	0
  7645   001158  0100               	movlb	0	; () banked
  7646   00115A  6F80               	movwf	?_powf& (0+255),b
  7647   00115C  0E00               	movlw	0
  7648   00115E  6F81               	movwf	(?_powf+1)& (0+255),b
  7649   001160  0E80               	movlw	128
  7650   001162  6F82               	movwf	(?_powf+2)& (0+255),b
  7651   001164  0E3F               	movlw	63
  7652   001166  6F83               	movwf	(?_powf+3)& (0+255),b
  7653   001168  EF89  F01D         	goto	l1891
  7654   00116C                     l12208:
  7655                           
  7656                           ; BSR set to: 1
  7657   00116C  0E80               	movlw	128
  7658   00116E  1962               	xorwf	(powf@hx+2)& (0+255),w,b
  7659   001170  E109               	bnz	u15391
  7660   001172  0E3F               	movlw	63
  7661   001174  1963               	xorwf	(powf@hx+3)& (0+255),w,b
  7662   001176  1160               	iorwf	powf@hx& (0+255),w,b
  7663   001178  1161               	iorwf	(powf@hx+1)& (0+255),w,b
  7664   00117A  A4D8               	btfss	status,2,c
  7665   00117C  EFC2  F008         	goto	u15391
  7666   001180  EFC4  F008         	goto	u15390
  7667   001184                     u15391:
  7668   001184  EFCF  F008         	goto	l12214
  7669   001188                     u15390:
  7670   001188                     
  7671                           ; BSR set to: 1
  7672   001188  0E00               	movlw	0
  7673   00118A  0100               	movlb	0	; () banked
  7674   00118C  6F80               	movwf	?_powf& (0+255),b
  7675   00118E  0E00               	movlw	0
  7676   001190  6F81               	movwf	(?_powf+1)& (0+255),b
  7677   001192  0E80               	movlw	128
  7678   001194  6F82               	movwf	(?_powf+2)& (0+255),b
  7679   001196  0E3F               	movlw	63
  7680   001198  6F83               	movwf	(?_powf+3)& (0+255),b
  7681   00119A  EF89  F01D         	goto	l1891
  7682   00119E                     l12214:
  7683                           
  7684                           ; BSR set to: 1
  7685   00119E  BFAB               	btfsc	(powf@ix+3)& (0+255),7,b
  7686   0011A0  EFE0  F008         	goto	u15400
  7687   0011A4  05A8               	decf	powf@ix& (0+255),w,b
  7688   0011A6  0E00               	movlw	0
  7689   0011A8  59A9               	subwfb	(powf@ix+1)& (0+255),w,b
  7690   0011AA  0E80               	movlw	128
  7691   0011AC  59AA               	subwfb	(powf@ix+2)& (0+255),w,b
  7692   0011AE  0E7F               	movlw	127
  7693   0011B0  59AB               	subwfb	(powf@ix+3)& (0+255),w,b
  7694   0011B2  B0D8               	btfsc	status,0,c
  7695   0011B4  EFDE  F008         	goto	u15401
  7696   0011B8  EFE0  F008         	goto	u15400
  7697   0011BC                     u15401:
  7698   0011BC  EFF1  F008         	goto	l12218
  7699   0011C0                     u15400:
  7700   0011C0                     
  7701                           ; BSR set to: 1
  7702   0011C0  BF93               	btfsc	(powf@iy+3)& (0+255),7,b
  7703   0011C2  EFEF  F008         	goto	u15411
  7704   0011C6  0590               	decf	powf@iy& (0+255),w,b
  7705   0011C8  0E00               	movlw	0
  7706   0011CA  5991               	subwfb	(powf@iy+1)& (0+255),w,b
  7707   0011CC  0E80               	movlw	128
  7708   0011CE  5992               	subwfb	(powf@iy+2)& (0+255),w,b
  7709   0011D0  0E7F               	movlw	127
  7710   0011D2  5993               	subwfb	(powf@iy+3)& (0+255),w,b
  7711   0011D4  A0D8               	btfss	status,0,c
  7712   0011D6  EFEF  F008         	goto	u15411
  7713   0011DA  EFF1  F008         	goto	u15410
  7714   0011DE                     u15411:
  7715   0011DE  EF0D  F009         	goto	l12222
  7716   0011E2                     u15410:
  7717   0011E2                     l12218:
  7718                           
  7719                           ; BSR set to: 1
  7720   0011E2  C080  F011         	movff	powf@x,___fladd@b
  7721   0011E6  C081  F012         	movff	powf@x+1,___fladd@b+1
  7722   0011EA  C082  F013         	movff	powf@x+2,___fladd@b+2
  7723   0011EE  C083  F014         	movff	powf@x+3,___fladd@b+3
  7724   0011F2  C084  F015         	movff	powf@y,___fladd@a
  7725   0011F6  C085  F016         	movff	powf@y+1,___fladd@a+1
  7726   0011FA  C086  F017         	movff	powf@y+2,___fladd@a+2
  7727   0011FE  C087  F018         	movff	powf@y+3,___fladd@a+3
  7728   001202  EC00  F02B         	call	___fladd	;wreg free
  7729   001206  C011  F080         	movff	?___fladd,?_powf
  7730   00120A  C012  F081         	movff	?___fladd+1,?_powf+1
  7731   00120E  C013  F082         	movff	?___fladd+2,?_powf+2
  7732   001212  C014  F083         	movff	?___fladd+3,?_powf+3
  7733   001216  EF89  F01D         	goto	l1891
  7734   00121A                     l12222:
  7735                           
  7736                           ; BSR set to: 1
  7737   00121A  0E00               	movlw	0
  7738   00121C  6F50               	movwf	powf@yisint& (0+255),b
  7739   00121E  0E00               	movlw	0
  7740   001220  6F51               	movwf	(powf@yisint+1)& (0+255),b
  7741   001222  0E00               	movlw	0
  7742   001224  6F52               	movwf	(powf@yisint+2)& (0+255),b
  7743   001226  0E00               	movlw	0
  7744   001228  6F53               	movwf	(powf@yisint+3)& (0+255),b
  7745   00122A                     
  7746                           ; BSR set to: 1
  7747   00122A  BF63               	btfsc	(powf@hx+3)& (0+255),7,b
  7748   00122C  EF1C  F009         	goto	u15420
  7749   001230  EF1A  F009         	goto	u15421
  7750   001234                     u15421:
  7751   001234  EFE8  F009         	goto	l1896
  7752   001238                     u15420:
  7753   001238                     
  7754                           ; BSR set to: 1
  7755   001238  BF93               	btfsc	(powf@iy+3)& (0+255),7,b
  7756   00123A  EF28  F009         	goto	u15431
  7757   00123E  0E80               	movlw	128
  7758   001240  5D92               	subwf	(powf@iy+2)& (0+255),w,b
  7759   001242  0E4B               	movlw	75
  7760   001244  5993               	subwfb	(powf@iy+3)& (0+255),w,b
  7761   001246  A0D8               	btfss	status,0,c
  7762   001248  EF28  F009         	goto	u15431
  7763   00124C  EF2A  F009         	goto	u15430
  7764   001250                     u15431:
  7765   001250  EF34  F009         	goto	l12230
  7766   001254                     u15430:
  7767   001254                     
  7768                           ; BSR set to: 1
  7769   001254  0E02               	movlw	2
  7770   001256  6F50               	movwf	powf@yisint& (0+255),b
  7771   001258  0E00               	movlw	0
  7772   00125A  6F51               	movwf	(powf@yisint+1)& (0+255),b
  7773   00125C  0E00               	movlw	0
  7774   00125E  6F52               	movwf	(powf@yisint+2)& (0+255),b
  7775   001260  0E00               	movlw	0
  7776   001262  6F53               	movwf	(powf@yisint+3)& (0+255),b
  7777   001264  EFE8  F009         	goto	l1896
  7778   001268                     l12230:
  7779                           
  7780                           ; BSR set to: 1
  7781   001268  BF93               	btfsc	(powf@iy+3)& (0+255),7,b
  7782   00126A  EF40  F009         	goto	u15441
  7783   00126E  0E80               	movlw	128
  7784   001270  5D92               	subwf	(powf@iy+2)& (0+255),w,b
  7785   001272  0E3F               	movlw	63
  7786   001274  5993               	subwfb	(powf@iy+3)& (0+255),w,b
  7787   001276  A0D8               	btfss	status,0,c
  7788   001278  EF40  F009         	goto	u15441
  7789   00127C  EF42  F009         	goto	u15440
  7790   001280                     u15441:
  7791   001280  EFE8  F009         	goto	l1896
  7792   001284                     u15440:
  7793   001284                     
  7794                           ; BSR set to: 1
  7795   001284  0E17               	movlw	23
  7796   001286  0100               	movlb	0	; () banked
  7797   001288  6F88               	movwf	??_powf& (0+255),b
  7798   00128A  C190  F089         	movff	powf@iy,??_powf+1
  7799   00128E  C191  F08A         	movff	powf@iy+1,??_powf+2
  7800   001292  C192  F08B         	movff	powf@iy+2,??_powf+3
  7801   001296  C193  F08C         	movff	powf@iy+3,??_powf+4
  7802   00129A                     u15455:
  7803   00129A  6788               	tstfsz	??_powf& (0+255),b
  7804   00129C  EF52  F009         	goto	u15456
  7805   0012A0  EF5A  F009         	goto	u15457
  7806   0012A4                     u15456:
  7807   0012A4  358C               	rlcf	(??_powf+4)& (0+255),w,b
  7808   0012A6  338C               	rrcf	(??_powf+4)& (0+255),f,b
  7809   0012A8  338B               	rrcf	(??_powf+3)& (0+255),f,b
  7810   0012AA  338A               	rrcf	(??_powf+2)& (0+255),f,b
  7811   0012AC  3389               	rrcf	(??_powf+1)& (0+255),f,b
  7812   0012AE  2F88               	decfsz	??_powf& (0+255),f,b
  7813   0012B0  EF4D  F009         	goto	u15455
  7814   0012B4                     u15457:
  7815   0012B4  0E81               	movlw	129
  7816   0012B6  0100               	movlb	0	; () banked
  7817   0012B8  2589               	addwf	(??_powf+1)& (0+255),w,b
  7818   0012BA  0101               	movlb	1	; () banked
  7819   0012BC  6FA0               	movwf	powf@k& (0+255),b
  7820   0012BE  0EFF               	movlw	255
  7821   0012C0  0100               	movlb	0	; () banked
  7822   0012C2  218A               	addwfc	(??_powf+2)& (0+255),w,b
  7823   0012C4  0101               	movlb	1	; () banked
  7824   0012C6  6FA1               	movwf	(powf@k+1)& (0+255),b
  7825   0012C8  0EFF               	movlw	255
  7826   0012CA  0100               	movlb	0	; () banked
  7827   0012CC  218B               	addwfc	(??_powf+3)& (0+255),w,b
  7828   0012CE  0101               	movlb	1	; () banked
  7829   0012D0  6FA2               	movwf	(powf@k+2)& (0+255),b
  7830   0012D2  0EFF               	movlw	255
  7831   0012D4  0100               	movlb	0	; () banked
  7832   0012D6  218C               	addwfc	(??_powf+4)& (0+255),w,b
  7833   0012D8  0101               	movlb	1	; () banked
  7834   0012DA  6FA3               	movwf	(powf@k+3)& (0+255),b
  7835   0012DC  51A0               	movf	powf@k& (0+255),w,b
  7836   0012DE  0817               	sublw	23
  7837   0012E0  0100               	movlb	0	; () banked
  7838   0012E2  6F88               	movwf	??_powf& (0+255),b
  7839   0012E4  C190  F089         	movff	powf@iy,??_powf+1
  7840   0012E8  C191  F08A         	movff	powf@iy+1,??_powf+2
  7841   0012EC  C192  F08B         	movff	powf@iy+2,??_powf+3
  7842   0012F0  C193  F08C         	movff	powf@iy+3,??_powf+4
  7843   0012F4                     u15465:
  7844   0012F4  6788               	tstfsz	??_powf& (0+255),b
  7845   0012F6  EF7F  F009         	goto	u15466
  7846   0012FA  EF87  F009         	goto	u15467
  7847   0012FE                     u15466:
  7848   0012FE  358C               	rlcf	(??_powf+4)& (0+255),w,b
  7849   001300  338C               	rrcf	(??_powf+4)& (0+255),f,b
  7850   001302  338B               	rrcf	(??_powf+3)& (0+255),f,b
  7851   001304  338A               	rrcf	(??_powf+2)& (0+255),f,b
  7852   001306  3389               	rrcf	(??_powf+1)& (0+255),f,b
  7853   001308  2F88               	decfsz	??_powf& (0+255),f,b
  7854   00130A  EF7A  F009         	goto	u15465
  7855   00130E                     u15467:
  7856   00130E  C089  F1AC         	movff	??_powf+1,powf@j
  7857   001312  C08A  F1AD         	movff	??_powf+2,powf@j+1
  7858   001316  C08B  F1AE         	movff	??_powf+3,powf@j+2
  7859   00131A  C08C  F1AF         	movff	??_powf+4,powf@j+3
  7860   00131E  0101               	movlb	1	; () banked
  7861   001320  51A0               	movf	powf@k& (0+255),w,b
  7862   001322  0817               	sublw	23
  7863   001324  0100               	movlb	0	; () banked
  7864   001326  6F88               	movwf	??_powf& (0+255),b
  7865   001328  C1AC  F089         	movff	powf@j,??_powf+1
  7866   00132C  C1AD  F08A         	movff	powf@j+1,??_powf+2
  7867   001330  C1AE  F08B         	movff	powf@j+2,??_powf+3
  7868   001334  C1AF  F08C         	movff	powf@j+3,??_powf+4
  7869   001338  2B88               	incf	??_powf& (0+255),f,b
  7870   00133A  EFA4  F009         	goto	u15470
  7871   00133E                     u15475:
  7872   00133E  90D8               	bcf	status,0,c
  7873   001340  3789               	rlcf	(??_powf+1)& (0+255),f,b
  7874   001342  378A               	rlcf	(??_powf+2)& (0+255),f,b
  7875   001344  378B               	rlcf	(??_powf+3)& (0+255),f,b
  7876   001346  378C               	rlcf	(??_powf+4)& (0+255),f,b
  7877   001348                     u15470:
  7878   001348  2F88               	decfsz	??_powf& (0+255),f,b
  7879   00134A  EF9F  F009         	goto	u15475
  7880   00134E  0101               	movlb	1	; () banked
  7881   001350  5190               	movf	powf@iy& (0+255),w,b
  7882   001352  0100               	movlb	0	; () banked
  7883   001354  1989               	xorwf	(??_powf+1)& (0+255),w,b
  7884   001356  E113               	bnz	u15481
  7885   001358  0101               	movlb	1	; () banked
  7886   00135A  5191               	movf	(powf@iy+1)& (0+255),w,b
  7887   00135C  0100               	movlb	0	; () banked
  7888   00135E  198A               	xorwf	(??_powf+2)& (0+255),w,b
  7889   001360  E10E               	bnz	u15481
  7890   001362  0101               	movlb	1	; () banked
  7891   001364  5192               	movf	(powf@iy+2)& (0+255),w,b
  7892   001366  0100               	movlb	0	; () banked
  7893   001368  198B               	xorwf	(??_powf+3)& (0+255),w,b
  7894   00136A  E109               	bnz	u15481
  7895   00136C  0101               	movlb	1	; () banked
  7896   00136E  5193               	movf	(powf@iy+3)& (0+255),w,b
  7897   001370  0100               	movlb	0	; () banked
  7898   001372  198C               	xorwf	(??_powf+4)& (0+255),w,b
  7899   001374  A4D8               	btfss	status,2,c
  7900   001376  EFBF  F009         	goto	u15481
  7901   00137A  EFC1  F009         	goto	u15480
  7902   00137E                     u15481:
  7903   00137E  EFE8  F009         	goto	l1896
  7904   001382                     u15480:
  7905   001382                     
  7906                           ; BSR set to: 0
  7907   001382  0E01               	movlw	1
  7908   001384  0101               	movlb	1	; () banked
  7909   001386  15AC               	andwf	powf@j& (0+255),w,b
  7910   001388  0100               	movlb	0	; () banked
  7911   00138A  6F88               	movwf	??_powf& (0+255),b
  7912   00138C  0E00               	movlw	0
  7913   00138E  0101               	movlb	1	; () banked
  7914   001390  15AD               	andwf	(powf@j+1)& (0+255),w,b
  7915   001392  0100               	movlb	0	; () banked
  7916   001394  6F89               	movwf	(??_powf+1)& (0+255),b
  7917   001396  0E00               	movlw	0
  7918   001398  0101               	movlb	1	; () banked
  7919   00139A  15AE               	andwf	(powf@j+2)& (0+255),w,b
  7920   00139C  0100               	movlb	0	; () banked
  7921   00139E  6F8A               	movwf	(??_powf+2)& (0+255),b
  7922   0013A0  0E00               	movlw	0
  7923   0013A2  0101               	movlb	1	; () banked
  7924   0013A4  15AF               	andwf	(powf@j+3)& (0+255),w,b
  7925   0013A6  0100               	movlb	0	; () banked
  7926   0013A8  6F8B               	movwf	(??_powf+3)& (0+255),b
  7927   0013AA  5188               	movf	??_powf& (0+255),w,b
  7928   0013AC  0802               	sublw	2
  7929   0013AE  0101               	movlb	1	; () banked
  7930   0013B0  6F50               	movwf	powf@yisint& (0+255),b
  7931   0013B2  0E00               	movlw	0
  7932   0013B4  0100               	movlb	0	; () banked
  7933   0013B6  5589               	subfwb	(??_powf+1)& (0+255),w,b
  7934   0013B8  0101               	movlb	1	; () banked
  7935   0013BA  6F51               	movwf	(powf@yisint+1)& (0+255),b
  7936   0013BC  0E00               	movlw	0
  7937   0013BE  0100               	movlb	0	; () banked
  7938   0013C0  558A               	subfwb	(??_powf+2)& (0+255),w,b
  7939   0013C2  0101               	movlb	1	; () banked
  7940   0013C4  6F52               	movwf	(powf@yisint+2)& (0+255),b
  7941   0013C6  0E00               	movlw	0
  7942   0013C8  0100               	movlb	0	; () banked
  7943   0013CA  558B               	subfwb	(??_powf+3)& (0+255),w,b
  7944   0013CC  0101               	movlb	1	; () banked
  7945   0013CE  6F53               	movwf	(powf@yisint+3)& (0+255),b
  7946   0013D0                     l1896:
  7947   0013D0  0E80               	movlw	128
  7948   0013D2  0101               	movlb	1	; () banked
  7949   0013D4  1992               	xorwf	(powf@iy+2)& (0+255),w,b
  7950   0013D6  E109               	bnz	u15491
  7951   0013D8  0E7F               	movlw	127
  7952   0013DA  1993               	xorwf	(powf@iy+3)& (0+255),w,b
  7953   0013DC  1190               	iorwf	powf@iy& (0+255),w,b
  7954   0013DE  1191               	iorwf	(powf@iy+1)& (0+255),w,b
  7955   0013E0  A4D8               	btfss	status,2,c
  7956   0013E2  EFF5  F009         	goto	u15491
  7957   0013E6  EFF7  F009         	goto	u15490
  7958   0013EA                     u15491:
  7959   0013EA  EF63  F00A         	goto	l12260
  7960   0013EE                     u15490:
  7961   0013EE                     
  7962                           ; BSR set to: 1
  7963   0013EE  0E80               	movlw	128
  7964   0013F0  19AA               	xorwf	(powf@ix+2)& (0+255),w,b
  7965   0013F2  E109               	bnz	u15501
  7966   0013F4  0E3F               	movlw	63
  7967   0013F6  19AB               	xorwf	(powf@ix+3)& (0+255),w,b
  7968   0013F8  11A8               	iorwf	powf@ix& (0+255),w,b
  7969   0013FA  11A9               	iorwf	(powf@ix+1)& (0+255),w,b
  7970   0013FC  A4D8               	btfss	status,2,c
  7971   0013FE  EF03  F00A         	goto	u15501
  7972   001402  EF05  F00A         	goto	u15500
  7973   001406                     u15501:
  7974   001406  EF10  F00A         	goto	l12244
  7975   00140A                     u15500:
  7976   00140A                     
  7977                           ; BSR set to: 1
  7978   00140A  0E00               	movlw	0
  7979   00140C  0100               	movlb	0	; () banked
  7980   00140E  6F80               	movwf	?_powf& (0+255),b
  7981   001410  0E00               	movlw	0
  7982   001412  6F81               	movwf	(?_powf+1)& (0+255),b
  7983   001414  0E80               	movlw	128
  7984   001416  6F82               	movwf	(?_powf+2)& (0+255),b
  7985   001418  0E3F               	movlw	63
  7986   00141A  6F83               	movwf	(?_powf+3)& (0+255),b
  7987   00141C  EF89  F01D         	goto	l1891
  7988   001420                     l12244:
  7989                           
  7990                           ; BSR set to: 1
  7991   001420  BFAB               	btfsc	(powf@ix+3)& (0+255),7,b
  7992   001422  EF1F  F00A         	goto	u15511
  7993   001426  05A8               	decf	powf@ix& (0+255),w,b
  7994   001428  0E00               	movlw	0
  7995   00142A  59A9               	subwfb	(powf@ix+1)& (0+255),w,b
  7996   00142C  0E80               	movlw	128
  7997   00142E  59AA               	subwfb	(powf@ix+2)& (0+255),w,b
  7998   001430  0E3F               	movlw	63
  7999   001432  59AB               	subwfb	(powf@ix+3)& (0+255),w,b
  8000   001434  A0D8               	btfss	status,0,c
  8001   001436  EF1F  F00A         	goto	u15511
  8002   00143A  EF21  F00A         	goto	u15510
  8003   00143E                     u15511:
  8004   00143E  EF3D  F00A         	goto	l12252
  8005   001442                     u15510:
  8006   001442                     
  8007                           ; BSR set to: 1
  8008   001442  BF7F               	btfsc	(powf@hy+3)& (0+255),7,b
  8009   001444  EF28  F00A         	goto	u15520
  8010   001448  EF26  F00A         	goto	u15521
  8011   00144C                     u15521:
  8012   00144C  EF33  F00A         	goto	l1906
  8013   001450                     u15520:
  8014   001450                     
  8015                           ; BSR set to: 1
  8016   001450  0E00               	movlw	0
  8017   001452  0100               	movlb	0	; () banked
  8018   001454  6F80               	movwf	?_powf& (0+255),b
  8019   001456  0E00               	movlw	0
  8020   001458  6F81               	movwf	(?_powf+1)& (0+255),b
  8021   00145A  0E00               	movlw	0
  8022   00145C  6F82               	movwf	(?_powf+2)& (0+255),b
  8023   00145E  0E00               	movlw	0
  8024   001460  6F83               	movwf	(?_powf+3)& (0+255),b
  8025   001462  EF89  F01D         	goto	l1891
  8026   001466                     l1906:
  8027                           
  8028                           ; BSR set to: 1
  8029   001466  C084  F080         	movff	powf@y,?_powf
  8030   00146A  C085  F081         	movff	powf@y+1,?_powf+1
  8031   00146E  C086  F082         	movff	powf@y+2,?_powf+2
  8032   001472  C087  F083         	movff	powf@y+3,?_powf+3
  8033   001476  EF89  F01D         	goto	l1891
  8034   00147A                     l12252:
  8035                           
  8036                           ; BSR set to: 1
  8037   00147A  BF7F               	btfsc	(powf@hy+3)& (0+255),7,b
  8038   00147C  EF44  F00A         	goto	u15530
  8039   001480  EF42  F00A         	goto	u15531
  8040   001484                     u15531:
  8041   001484  EF58  F00A         	goto	l12256
  8042   001488                     u15530:
  8043   001488                     
  8044                           ; BSR set to: 1
  8045   001488  C084  F003         	movff	powf@y,___flneg@f1
  8046   00148C  C085  F004         	movff	powf@y+1,___flneg@f1+1
  8047   001490  C086  F005         	movff	powf@y+2,___flneg@f1+2
  8048   001494  C087  F006         	movff	powf@y+3,___flneg@f1+3
  8049   001498  ECBA  F054         	call	___flneg	;wreg free
  8050   00149C  C003  F080         	movff	?___flneg,?_powf
  8051   0014A0  C004  F081         	movff	?___flneg+1,?_powf+1
  8052   0014A4  C005  F082         	movff	?___flneg+2,?_powf+2
  8053   0014A8  C006  F083         	movff	?___flneg+3,?_powf+3
  8054   0014AC  EF89  F01D         	goto	l1891
  8055   0014B0                     l12256:
  8056                           
  8057                           ; BSR set to: 1
  8058   0014B0  0E00               	movlw	0
  8059   0014B2  0100               	movlb	0	; () banked
  8060   0014B4  6F80               	movwf	?_powf& (0+255),b
  8061   0014B6  0E00               	movlw	0
  8062   0014B8  6F81               	movwf	(?_powf+1)& (0+255),b
  8063   0014BA  0E00               	movlw	0
  8064   0014BC  6F82               	movwf	(?_powf+2)& (0+255),b
  8065   0014BE  0E00               	movlw	0
  8066   0014C0  6F83               	movwf	(?_powf+3)& (0+255),b
  8067   0014C2  EF89  F01D         	goto	l1891
  8068   0014C6                     l12260:
  8069                           
  8070                           ; BSR set to: 1
  8071   0014C6  0E80               	movlw	128
  8072   0014C8  1992               	xorwf	(powf@iy+2)& (0+255),w,b
  8073   0014CA  E109               	bnz	u15541
  8074   0014CC  0E3F               	movlw	63
  8075   0014CE  1993               	xorwf	(powf@iy+3)& (0+255),w,b
  8076   0014D0  1190               	iorwf	powf@iy& (0+255),w,b
  8077   0014D2  1191               	iorwf	(powf@iy+1)& (0+255),w,b
  8078   0014D4  A4D8               	btfss	status,2,c
  8079   0014D6  EF6F  F00A         	goto	u15541
  8080   0014DA  EF71  F00A         	goto	u15540
  8081   0014DE                     u15541:
  8082   0014DE  EF9E  F00A         	goto	l12266
  8083   0014E2                     u15540:
  8084   0014E2                     
  8085                           ; BSR set to: 1
  8086   0014E2  BF7F               	btfsc	(powf@hy+3)& (0+255),7,b
  8087   0014E4  EF78  F00A         	goto	u15550
  8088   0014E8  EF76  F00A         	goto	u15551
  8089   0014EC                     u15551:
  8090   0014EC  EF94  F00A         	goto	l1916
  8091   0014F0                     u15550:
  8092   0014F0                     
  8093                           ; BSR set to: 1
  8094   0014F0  0E00               	movlw	0
  8095   0014F2  6E42               	movwf	___fldiv@b^0,c
  8096   0014F4  0E00               	movlw	0
  8097   0014F6  6E43               	movwf	(___fldiv@b+1)^0,c
  8098   0014F8  0E80               	movlw	128
  8099   0014FA  6E44               	movwf	(___fldiv@b+2)^0,c
  8100   0014FC  0E3F               	movlw	63
  8101   0014FE  6E45               	movwf	(___fldiv@b+3)^0,c
  8102   001500  C080  F046         	movff	powf@x,___fldiv@a
  8103   001504  C081  F047         	movff	powf@x+1,___fldiv@a+1
  8104   001508  C082  F048         	movff	powf@x+2,___fldiv@a+2
  8105   00150C  C083  F049         	movff	powf@x+3,___fldiv@a+3
  8106   001510  EC09  F034         	call	___fldiv	;wreg free
  8107   001514  C042  F080         	movff	?___fldiv,?_powf
  8108   001518  C043  F081         	movff	?___fldiv+1,?_powf+1
  8109   00151C  C044  F082         	movff	?___fldiv+2,?_powf+2
  8110   001520  C045  F083         	movff	?___fldiv+3,?_powf+3
  8111   001524  EF89  F01D         	goto	l1891
  8112   001528                     l1916:
  8113                           
  8114                           ; BSR set to: 1
  8115   001528  C080  F080         	movff	powf@x,?_powf
  8116   00152C  C081  F081         	movff	powf@x+1,?_powf+1
  8117   001530  C082  F082         	movff	powf@x+2,?_powf+2
  8118   001534  C083  F083         	movff	powf@x+3,?_powf+3
  8119   001538  EF89  F01D         	goto	l1891
  8120   00153C                     l12266:
  8121                           
  8122                           ; BSR set to: 1
  8123   00153C  0E40               	movlw	64
  8124   00153E  197F               	xorwf	(powf@hy+3)& (0+255),w,b
  8125   001540  117C               	iorwf	powf@hy& (0+255),w,b
  8126   001542  117D               	iorwf	(powf@hy+1)& (0+255),w,b
  8127   001544  117E               	iorwf	(powf@hy+2)& (0+255),w,b
  8128   001546  A4D8               	btfss	status,2,c
  8129   001548  EFA8  F00A         	goto	u15561
  8130   00154C  EFAA  F00A         	goto	u15560
  8131   001550                     u15561:
  8132   001550  EFC6  F00A         	goto	l12272
  8133   001554                     u15560:
  8134   001554                     
  8135                           ; BSR set to: 1
  8136   001554  C080  F021         	movff	powf@x,___flmul@b
  8137   001558  C081  F022         	movff	powf@x+1,___flmul@b+1
  8138   00155C  C082  F023         	movff	powf@x+2,___flmul@b+2
  8139   001560  C083  F024         	movff	powf@x+3,___flmul@b+3
  8140   001564  C080  F025         	movff	powf@x,___flmul@a
  8141   001568  C081  F026         	movff	powf@x+1,___flmul@a+1
  8142   00156C  C082  F027         	movff	powf@x+2,___flmul@a+2
  8143   001570  C083  F028         	movff	powf@x+3,___flmul@a+3
  8144   001574  ECF4  F031         	call	___flmul	;wreg free
  8145   001578  C021  F080         	movff	?___flmul,?_powf
  8146   00157C  C022  F081         	movff	?___flmul+1,?_powf+1
  8147   001580  C023  F082         	movff	?___flmul+2,?_powf+2
  8148   001584  C024  F083         	movff	?___flmul+3,?_powf+3
  8149   001588  EF89  F01D         	goto	l1891
  8150   00158C                     l12272:
  8151                           
  8152                           ; BSR set to: 1
  8153   00158C  0E3F               	movlw	63
  8154   00158E  197F               	xorwf	(powf@hy+3)& (0+255),w,b
  8155   001590  117C               	iorwf	powf@hy& (0+255),w,b
  8156   001592  117D               	iorwf	(powf@hy+1)& (0+255),w,b
  8157   001594  117E               	iorwf	(powf@hy+2)& (0+255),w,b
  8158   001596  A4D8               	btfss	status,2,c
  8159   001598  EFD0  F00A         	goto	u15571
  8160   00159C  EFD2  F00A         	goto	u15570
  8161   0015A0                     u15571:
  8162   0015A0  EFED  F00A         	goto	l12280
  8163   0015A4                     u15570:
  8164   0015A4                     
  8165                           ; BSR set to: 1
  8166   0015A4  BF63               	btfsc	(powf@hx+3)& (0+255),7,b
  8167   0015A6  EFD7  F00A         	goto	u15581
  8168   0015AA  EFD9  F00A         	goto	u15580
  8169   0015AE                     u15581:
  8170   0015AE  EFED  F00A         	goto	l12280
  8171   0015B2                     u15580:
  8172   0015B2                     
  8173                           ; BSR set to: 1
  8174   0015B2  C080  F04E         	movff	powf@x,sqrtf@x
  8175   0015B6  C081  F04F         	movff	powf@x+1,sqrtf@x+1
  8176   0015BA  C082  F050         	movff	powf@x+2,sqrtf@x+2
  8177   0015BE  C083  F051         	movff	powf@x+3,sqrtf@x+3
  8178   0015C2  EC60  F02D         	call	_sqrtf	;wreg free
  8179   0015C6  C04E  F080         	movff	?_sqrtf,?_powf
  8180   0015CA  C04F  F081         	movff	?_sqrtf+1,?_powf+1
  8181   0015CE  C050  F082         	movff	?_sqrtf+2,?_powf+2
  8182   0015D2  C051  F083         	movff	?_sqrtf+3,?_powf+3
  8183   0015D6  EF89  F01D         	goto	l1891
  8184   0015DA                     l12280:
  8185                           
  8186                           ; BSR set to: 1
  8187   0015DA  C080  F003         	movff	powf@x,fabsf@x
  8188   0015DE  C081  F004         	movff	powf@x+1,fabsf@x+1
  8189   0015E2  C082  F005         	movff	powf@x+2,fabsf@x+2
  8190   0015E6  C083  F006         	movff	powf@x+3,fabsf@x+3
  8191   0015EA  EC27  F055         	call	_fabsf	;wreg free
  8192   0015EE  C003  F170         	movff	?_fabsf,powf@ax
  8193   0015F2  C004  F171         	movff	?_fabsf+1,powf@ax+1
  8194   0015F6  C005  F172         	movff	?_fabsf+2,powf@ax+2
  8195   0015FA  C006  F173         	movff	?_fabsf+3,powf@ax+3
  8196   0015FE  0E80               	movlw	128
  8197   001600  0101               	movlb	1	; () banked
  8198   001602  19AA               	xorwf	(powf@ix+2)& (0+255),w,b
  8199   001604  E10B               	bnz	u15590
  8200   001606  0E7F               	movlw	127
  8201   001608  19AB               	xorwf	(powf@ix+3)& (0+255),w,b
  8202   00160A  11A8               	iorwf	powf@ix& (0+255),w,b
  8203   00160C  11A9               	iorwf	(powf@ix+1)& (0+255),w,b
  8204   00160E  B4D8               	btfsc	status,2,c
  8205   001610  EF0C  F00B         	goto	u15591
  8206   001614  EF0E  F00B         	goto	u15590
  8207   001618                     u15591:
  8208   001618  EF27  F00B         	goto	l1924
  8209   00161C                     u15590:
  8210   00161C                     
  8211                           ; BSR set to: 1
  8212   00161C  51A8               	movf	powf@ix& (0+255),w,b
  8213   00161E  11A9               	iorwf	(powf@ix+1)& (0+255),w,b
  8214   001620  11AA               	iorwf	(powf@ix+2)& (0+255),w,b
  8215   001622  11AB               	iorwf	(powf@ix+3)& (0+255),w,b
  8216   001624  B4D8               	btfsc	status,2,c
  8217   001626  EF17  F00B         	goto	u15601
  8218   00162A  EF19  F00B         	goto	u15600
  8219   00162E                     u15601:
  8220   00162E  EF27  F00B         	goto	l1924
  8221   001632                     u15600:
  8222   001632                     
  8223                           ; BSR set to: 1
  8224   001632  0E80               	movlw	128
  8225   001634  19AA               	xorwf	(powf@ix+2)& (0+255),w,b
  8226   001636  E109               	bnz	u15611
  8227   001638  0E3F               	movlw	63
  8228   00163A  19AB               	xorwf	(powf@ix+3)& (0+255),w,b
  8229   00163C  11A8               	iorwf	powf@ix& (0+255),w,b
  8230   00163E  11A9               	iorwf	(powf@ix+1)& (0+255),w,b
  8231   001640  A4D8               	btfss	status,2,c
  8232   001642  EF25  F00B         	goto	u15611
  8233   001646  EF27  F00B         	goto	u15610
  8234   00164A                     u15611:
  8235   00164A  EFF7  F00B         	goto	l12308
  8236   00164E                     u15610:
  8237   00164E                     l1924:
  8238                           
  8239                           ; BSR set to: 1
  8240   00164E  C170  F1B4         	movff	powf@ax,powf@z
  8241   001652  C171  F1B5         	movff	powf@ax+1,powf@z+1
  8242   001656  C172  F1B6         	movff	powf@ax+2,powf@z+2
  8243   00165A  C173  F1B7         	movff	powf@ax+3,powf@z+3
  8244   00165E                     
  8245                           ; BSR set to: 1
  8246   00165E  BF7F               	btfsc	(powf@hy+3)& (0+255),7,b
  8247   001660  EF36  F00B         	goto	u15620
  8248   001664  EF34  F00B         	goto	u15621
  8249   001668                     u15621:
  8250   001668  EF50  F00B         	goto	l12292
  8251   00166C                     u15620:
  8252   00166C                     
  8253                           ; BSR set to: 1
  8254   00166C  0E00               	movlw	0
  8255   00166E  6E42               	movwf	___fldiv@b^0,c
  8256   001670  0E00               	movlw	0
  8257   001672  6E43               	movwf	(___fldiv@b+1)^0,c
  8258   001674  0E80               	movlw	128
  8259   001676  6E44               	movwf	(___fldiv@b+2)^0,c
  8260   001678  0E3F               	movlw	63
  8261   00167A  6E45               	movwf	(___fldiv@b+3)^0,c
  8262   00167C  C1B4  F046         	movff	powf@z,___fldiv@a
  8263   001680  C1B5  F047         	movff	powf@z+1,___fldiv@a+1
  8264   001684  C1B6  F048         	movff	powf@z+2,___fldiv@a+2
  8265   001688  C1B7  F049         	movff	powf@z+3,___fldiv@a+3
  8266   00168C  EC09  F034         	call	___fldiv	;wreg free
  8267   001690  C042  F1B4         	movff	?___fldiv,powf@z
  8268   001694  C043  F1B5         	movff	?___fldiv+1,powf@z+1
  8269   001698  C044  F1B6         	movff	?___fldiv+2,powf@z+2
  8270   00169C  C045  F1B7         	movff	?___fldiv+3,powf@z+3
  8271   0016A0                     l12292:
  8272   0016A0  0101               	movlb	1	; () banked
  8273   0016A2  BF63               	btfsc	(powf@hx+3)& (0+255),7,b
  8274   0016A4  EF58  F00B         	goto	u15630
  8275   0016A8  EF56  F00B         	goto	u15631
  8276   0016AC                     u15631:
  8277   0016AC  EFED  F00B         	goto	l12304
  8278   0016B0                     u15630:
  8279   0016B0                     
  8280                           ; BSR set to: 1
  8281   0016B0  0E00               	movlw	0
  8282   0016B2  25A8               	addwf	powf@ix& (0+255),w,b
  8283   0016B4  0100               	movlb	0	; () banked
  8284   0016B6  6F88               	movwf	??_powf& (0+255),b
  8285   0016B8  0E00               	movlw	0
  8286   0016BA  0101               	movlb	1	; () banked
  8287   0016BC  21A9               	addwfc	(powf@ix+1)& (0+255),w,b
  8288   0016BE  0100               	movlb	0	; () banked
  8289   0016C0  6F89               	movwf	(??_powf+1)& (0+255),b
  8290   0016C2  0E80               	movlw	128
  8291   0016C4  0101               	movlb	1	; () banked
  8292   0016C6  21AA               	addwfc	(powf@ix+2)& (0+255),w,b
  8293   0016C8  0100               	movlb	0	; () banked
  8294   0016CA  6F8A               	movwf	(??_powf+2)& (0+255),b
  8295   0016CC  0EC0               	movlw	192
  8296   0016CE  0101               	movlb	1	; () banked
  8297   0016D0  21AB               	addwfc	(powf@ix+3)& (0+255),w,b
  8298   0016D2  0100               	movlb	0	; () banked
  8299   0016D4  6F8B               	movwf	(??_powf+3)& (0+255),b
  8300   0016D6  0101               	movlb	1	; () banked
  8301   0016D8  5150               	movf	powf@yisint& (0+255),w,b
  8302   0016DA  0100               	movlb	0	; () banked
  8303   0016DC  1188               	iorwf	??_powf& (0+255),w,b
  8304   0016DE  6F8C               	movwf	(??_powf+4)& (0+255),b
  8305   0016E0  0101               	movlb	1	; () banked
  8306   0016E2  5151               	movf	(powf@yisint+1)& (0+255),w,b
  8307   0016E4  0100               	movlb	0	; () banked
  8308   0016E6  1189               	iorwf	(??_powf+1)& (0+255),w,b
  8309   0016E8  6F8D               	movwf	(??_powf+5)& (0+255),b
  8310   0016EA  0101               	movlb	1	; () banked
  8311   0016EC  5152               	movf	(powf@yisint+2)& (0+255),w,b
  8312   0016EE  0100               	movlb	0	; () banked
  8313   0016F0  118A               	iorwf	(??_powf+2)& (0+255),w,b
  8314   0016F2  6F8E               	movwf	(??_powf+6)& (0+255),b
  8315   0016F4  0101               	movlb	1	; () banked
  8316   0016F6  5153               	movf	(powf@yisint+3)& (0+255),w,b
  8317   0016F8  0100               	movlb	0	; () banked
  8318   0016FA  118B               	iorwf	(??_powf+3)& (0+255),w,b
  8319   0016FC  6F8F               	movwf	(??_powf+7)& (0+255),b
  8320   0016FE  518C               	movf	(??_powf+4)& (0+255),w,b
  8321   001700  118D               	iorwf	(??_powf+5)& (0+255),w,b
  8322   001702  118E               	iorwf	(??_powf+6)& (0+255),w,b
  8323   001704  118F               	iorwf	(??_powf+7)& (0+255),w,b
  8324   001706  A4D8               	btfss	status,2,c
  8325   001708  EF88  F00B         	goto	u15641
  8326   00170C  EF8A  F00B         	goto	u15640
  8327   001710                     u15641:
  8328   001710  EFCF  F00B         	goto	l12300
  8329   001714                     u15640:
  8330   001714                     
  8331                           ; BSR set to: 0
  8332   001714  0E00               	movlw	0
  8333   001716  0102               	movlb	2	; () banked
  8334   001718  6F1C               	movwf	(_errno+1)& (0+255),b
  8335   00171A  0E21               	movlw	33
  8336   00171C  6F1B               	movwf	_errno& (0+255),b
  8337   00171E                     
  8338                           ; BSR set to: 2
  8339   00171E  C1B4  F03E         	movff	powf@z,___flsub@a
  8340   001722  C1B5  F03F         	movff	powf@z+1,___flsub@a+1
  8341   001726  C1B6  F040         	movff	powf@z+2,___flsub@a+2
  8342   00172A  C1B7  F041         	movff	powf@z+3,___flsub@a+3
  8343   00172E  C1B4  F03A         	movff	powf@z,___flsub@b
  8344   001732  C1B5  F03B         	movff	powf@z+1,___flsub@b+1
  8345   001736  C1B6  F03C         	movff	powf@z+2,___flsub@b+2
  8346   00173A  C1B7  F03D         	movff	powf@z+3,___flsub@b+3
  8347   00173E  EC8D  F053         	call	___flsub	;wreg free
  8348   001742  C03A  F042         	movff	?___flsub,___fldiv@b
  8349   001746  C03B  F043         	movff	?___flsub+1,___fldiv@b+1
  8350   00174A  C03C  F044         	movff	?___flsub+2,___fldiv@b+2
  8351   00174E  C03D  F045         	movff	?___flsub+3,___fldiv@b+3
  8352   001752  C1B4  F03E         	movff	powf@z,___flsub@a
  8353   001756  C1B5  F03F         	movff	powf@z+1,___flsub@a+1
  8354   00175A  C1B6  F040         	movff	powf@z+2,___flsub@a+2
  8355   00175E  C1B7  F041         	movff	powf@z+3,___flsub@a+3
  8356   001762  C1B4  F03A         	movff	powf@z,___flsub@b
  8357   001766  C1B5  F03B         	movff	powf@z+1,___flsub@b+1
  8358   00176A  C1B6  F03C         	movff	powf@z+2,___flsub@b+2
  8359   00176E  C1B7  F03D         	movff	powf@z+3,___flsub@b+3
  8360   001772  EC8D  F053         	call	___flsub	;wreg free
  8361   001776  C03A  F046         	movff	?___flsub,___fldiv@a
  8362   00177A  C03B  F047         	movff	?___flsub+1,___fldiv@a+1
  8363   00177E  C03C  F048         	movff	?___flsub+2,___fldiv@a+2
  8364   001782  C03D  F049         	movff	?___flsub+3,___fldiv@a+3
  8365   001786  EC09  F034         	call	___fldiv	;wreg free
  8366   00178A  C042  F1B4         	movff	?___fldiv,powf@z
  8367   00178E  C043  F1B5         	movff	?___fldiv+1,powf@z+1
  8368   001792  C044  F1B6         	movff	?___fldiv+2,powf@z+2
  8369   001796  C045  F1B7         	movff	?___fldiv+3,powf@z+3
  8370   00179A  EFED  F00B         	goto	l12304
  8371   00179E                     l12300:
  8372                           
  8373                           ; BSR set to: 0
  8374   00179E  0101               	movlb	1	; () banked
  8375   0017A0  0550               	decf	powf@yisint& (0+255),w,b
  8376   0017A2  1151               	iorwf	(powf@yisint+1)& (0+255),w,b
  8377   0017A4  1152               	iorwf	(powf@yisint+2)& (0+255),w,b
  8378   0017A6  1153               	iorwf	(powf@yisint+3)& (0+255),w,b
  8379   0017A8  A4D8               	btfss	status,2,c
  8380   0017AA  EFD9  F00B         	goto	u15651
  8381   0017AE  EFDB  F00B         	goto	u15650
  8382   0017B2                     u15651:
  8383   0017B2  EFED  F00B         	goto	l12304
  8384   0017B6                     u15650:
  8385   0017B6                     
  8386                           ; BSR set to: 1
  8387   0017B6  C1B4  F003         	movff	powf@z,___flneg@f1
  8388   0017BA  C1B5  F004         	movff	powf@z+1,___flneg@f1+1
  8389   0017BE  C1B6  F005         	movff	powf@z+2,___flneg@f1+2
  8390   0017C2  C1B7  F006         	movff	powf@z+3,___flneg@f1+3
  8391   0017C6  ECBA  F054         	call	___flneg	;wreg free
  8392   0017CA  C003  F1B4         	movff	?___flneg,powf@z
  8393   0017CE  C004  F1B5         	movff	?___flneg+1,powf@z+1
  8394   0017D2  C005  F1B6         	movff	?___flneg+2,powf@z+2
  8395   0017D6  C006  F1B7         	movff	?___flneg+3,powf@z+3
  8396   0017DA                     l12304:
  8397   0017DA  C1B4  F080         	movff	powf@z,?_powf
  8398   0017DE  C1B5  F081         	movff	powf@z+1,?_powf+1
  8399   0017E2  C1B6  F082         	movff	powf@z+2,?_powf+2
  8400   0017E6  C1B7  F083         	movff	powf@z+3,?_powf+3
  8401   0017EA  EF89  F01D         	goto	l1891
  8402   0017EE                     l12308:
  8403                           
  8404                           ; BSR set to: 1
  8405   0017EE  0E00               	movlw	0
  8406   0017F0  6F88               	movwf	powf@sn& (0+255),b
  8407   0017F2  0E00               	movlw	0
  8408   0017F4  6F89               	movwf	(powf@sn+1)& (0+255),b
  8409   0017F6  0E80               	movlw	128
  8410   0017F8  6F8A               	movwf	(powf@sn+2)& (0+255),b
  8411   0017FA  0E3F               	movlw	63
  8412   0017FC  6F8B               	movwf	(powf@sn+3)& (0+255),b
  8413   0017FE                     
  8414                           ; BSR set to: 1
  8415   0017FE  BF63               	btfsc	(powf@hx+3)& (0+255),7,b
  8416   001800  EF06  F00C         	goto	u15660
  8417   001804  EF04  F00C         	goto	u15661
  8418   001808                     u15661:
  8419   001808  EF69  F00C         	goto	l12324
  8420   00180C                     u15660:
  8421   00180C                     
  8422                           ; BSR set to: 1
  8423   00180C  5150               	movf	powf@yisint& (0+255),w,b
  8424   00180E  1151               	iorwf	(powf@yisint+1)& (0+255),w,b
  8425   001810  1152               	iorwf	(powf@yisint+2)& (0+255),w,b
  8426   001812  1153               	iorwf	(powf@yisint+3)& (0+255),w,b
  8427   001814  A4D8               	btfss	status,2,c
  8428   001816  EF0F  F00C         	goto	u15671
  8429   00181A  EF11  F00C         	goto	u15670
  8430   00181E                     u15671:
  8431   00181E  EF56  F00C         	goto	l12320
  8432   001822                     u15670:
  8433   001822                     
  8434                           ; BSR set to: 1
  8435   001822  0E00               	movlw	0
  8436   001824  0102               	movlb	2	; () banked
  8437   001826  6F1C               	movwf	(_errno+1)& (0+255),b
  8438   001828  0E21               	movlw	33
  8439   00182A  6F1B               	movwf	_errno& (0+255),b
  8440   00182C                     
  8441                           ; BSR set to: 2
  8442   00182C  C080  F03E         	movff	powf@x,___flsub@a
  8443   001830  C081  F03F         	movff	powf@x+1,___flsub@a+1
  8444   001834  C082  F040         	movff	powf@x+2,___flsub@a+2
  8445   001838  C083  F041         	movff	powf@x+3,___flsub@a+3
  8446   00183C  C080  F03A         	movff	powf@x,___flsub@b
  8447   001840  C081  F03B         	movff	powf@x+1,___flsub@b+1
  8448   001844  C082  F03C         	movff	powf@x+2,___flsub@b+2
  8449   001848  C083  F03D         	movff	powf@x+3,___flsub@b+3
  8450   00184C  EC8D  F053         	call	___flsub	;wreg free
  8451   001850  C03A  F042         	movff	?___flsub,___fldiv@b
  8452   001854  C03B  F043         	movff	?___flsub+1,___fldiv@b+1
  8453   001858  C03C  F044         	movff	?___flsub+2,___fldiv@b+2
  8454   00185C  C03D  F045         	movff	?___flsub+3,___fldiv@b+3
  8455   001860  C080  F03E         	movff	powf@x,___flsub@a
  8456   001864  C081  F03F         	movff	powf@x+1,___flsub@a+1
  8457   001868  C082  F040         	movff	powf@x+2,___flsub@a+2
  8458   00186C  C083  F041         	movff	powf@x+3,___flsub@a+3
  8459   001870  C080  F03A         	movff	powf@x,___flsub@b
  8460   001874  C081  F03B         	movff	powf@x+1,___flsub@b+1
  8461   001878  C082  F03C         	movff	powf@x+2,___flsub@b+2
  8462   00187C  C083  F03D         	movff	powf@x+3,___flsub@b+3
  8463   001880  EC8D  F053         	call	___flsub	;wreg free
  8464   001884  C03A  F046         	movff	?___flsub,___fldiv@a
  8465   001888  C03B  F047         	movff	?___flsub+1,___fldiv@a+1
  8466   00188C  C03C  F048         	movff	?___flsub+2,___fldiv@a+2
  8467   001890  C03D  F049         	movff	?___flsub+3,___fldiv@a+3
  8468   001894  EC09  F034         	call	___fldiv	;wreg free
  8469   001898  C042  F080         	movff	?___fldiv,?_powf
  8470   00189C  C043  F081         	movff	?___fldiv+1,?_powf+1
  8471   0018A0  C044  F082         	movff	?___fldiv+2,?_powf+2
  8472   0018A4  C045  F083         	movff	?___fldiv+3,?_powf+3
  8473   0018A8  EF89  F01D         	goto	l1891
  8474   0018AC                     l12320:
  8475                           
  8476                           ; BSR set to: 1
  8477   0018AC  0550               	decf	powf@yisint& (0+255),w,b
  8478   0018AE  1151               	iorwf	(powf@yisint+1)& (0+255),w,b
  8479   0018B0  1152               	iorwf	(powf@yisint+2)& (0+255),w,b
  8480   0018B2  1153               	iorwf	(powf@yisint+3)& (0+255),w,b
  8481   0018B4  A4D8               	btfss	status,2,c
  8482   0018B6  EF5F  F00C         	goto	u15681
  8483   0018BA  EF61  F00C         	goto	u15680
  8484   0018BE                     u15681:
  8485   0018BE  EF69  F00C         	goto	l12324
  8486   0018C2                     u15680:
  8487   0018C2                     
  8488                           ; BSR set to: 1
  8489   0018C2  0E00               	movlw	0
  8490   0018C4  6F88               	movwf	powf@sn& (0+255),b
  8491   0018C6  0E00               	movlw	0
  8492   0018C8  6F89               	movwf	(powf@sn+1)& (0+255),b
  8493   0018CA  0E80               	movlw	128
  8494   0018CC  6F8A               	movwf	(powf@sn+2)& (0+255),b
  8495   0018CE  0EBF               	movlw	191
  8496   0018D0  6F8B               	movwf	(powf@sn+3)& (0+255),b
  8497   0018D2                     l12324:
  8498                           
  8499                           ; BSR set to: 1
  8500   0018D2  BF93               	btfsc	(powf@iy+3)& (0+255),7,b
  8501   0018D4  EF78  F00C         	goto	u15691
  8502   0018D8  0590               	decf	powf@iy& (0+255),w,b
  8503   0018DA  0E00               	movlw	0
  8504   0018DC  5991               	subwfb	(powf@iy+1)& (0+255),w,b
  8505   0018DE  0E00               	movlw	0
  8506   0018E0  5992               	subwfb	(powf@iy+2)& (0+255),w,b
  8507   0018E2  0E4D               	movlw	77
  8508   0018E4  5993               	subwfb	(powf@iy+3)& (0+255),w,b
  8509   0018E6  A0D8               	btfss	status,0,c
  8510   0018E8  EF78  F00C         	goto	u15691
  8511   0018EC  EF7A  F00C         	goto	u15690
  8512   0018F0                     u15691:
  8513   0018F0  EFFF  F00E         	goto	l12372
  8514   0018F4                     u15690:
  8515   0018F4                     
  8516                           ; BSR set to: 1
  8517   0018F4  BFAB               	btfsc	(powf@ix+3)& (0+255),7,b
  8518   0018F6  EF8C  F00C         	goto	u15700
  8519   0018FA  0EF8               	movlw	248
  8520   0018FC  5DA8               	subwf	powf@ix& (0+255),w,b
  8521   0018FE  0EFF               	movlw	255
  8522   001900  59A9               	subwfb	(powf@ix+1)& (0+255),w,b
  8523   001902  0E7F               	movlw	127
  8524   001904  59AA               	subwfb	(powf@ix+2)& (0+255),w,b
  8525   001906  0E3F               	movlw	63
  8526   001908  59AB               	subwfb	(powf@ix+3)& (0+255),w,b
  8527   00190A  B0D8               	btfsc	status,0,c
  8528   00190C  EF8A  F00C         	goto	u15701
  8529   001910  EF8C  F00C         	goto	u15700
  8530   001914                     u15701:
  8531   001914  EFFF  F00C         	goto	l12336
  8532   001918                     u15700:
  8533   001918                     
  8534                           ; BSR set to: 1
  8535   001918  BF7F               	btfsc	(powf@hy+3)& (0+255),7,b
  8536   00191A  EF91  F00C         	goto	u15711
  8537   00191E  EF93  F00C         	goto	u15710
  8538   001922                     u15711:
  8539   001922  EFC9  F00C         	goto	l12332
  8540   001926                     u15710:
  8541   001926                     
  8542                           ; BSR set to: 1
  8543   001926  0E60               	movlw	96
  8544   001928  6E25               	movwf	___flmul@a^0,c
  8545   00192A  0E42               	movlw	66
  8546   00192C  6E26               	movwf	(___flmul@a+1)^0,c
  8547   00192E  0EA2               	movlw	162
  8548   001930  6E27               	movwf	(___flmul@a+2)^0,c
  8549   001932  0E0D               	movlw	13
  8550   001934  6E28               	movwf	(___flmul@a+3)^0,c
  8551   001936  C188  F021         	movff	powf@sn,___flmul@b
  8552   00193A  C189  F022         	movff	powf@sn+1,___flmul@b+1
  8553   00193E  C18A  F023         	movff	powf@sn+2,___flmul@b+2
  8554   001942  C18B  F024         	movff	powf@sn+3,___flmul@b+3
  8555   001946  ECF4  F031         	call	___flmul	;wreg free
  8556   00194A  C021  F1A4         	movff	?___flmul,_powf$2921
  8557   00194E  C022  F1A5         	movff	?___flmul+1,_powf$2921+1
  8558   001952  C023  F1A6         	movff	?___flmul+2,_powf$2921+2
  8559   001956  C024  F1A7         	movff	?___flmul+3,_powf$2921+3
  8560   00195A  C1A4  F021         	movff	_powf$2921,___flmul@b
  8561   00195E  C1A5  F022         	movff	_powf$2921+1,___flmul@b+1
  8562   001962  C1A6  F023         	movff	_powf$2921+2,___flmul@b+2
  8563   001966  C1A7  F024         	movff	_powf$2921+3,___flmul@b+3
  8564   00196A  0E60               	movlw	96
  8565   00196C  6E25               	movwf	___flmul@a^0,c
  8566   00196E  0E42               	movlw	66
  8567   001970  6E26               	movwf	(___flmul@a+1)^0,c
  8568   001972  0EA2               	movlw	162
  8569   001974  6E27               	movwf	(___flmul@a+2)^0,c
  8570   001976  0E0D               	movlw	13
  8571   001978  6E28               	movwf	(___flmul@a+3)^0,c
  8572   00197A  ECF4  F031         	call	___flmul	;wreg free
  8573   00197E  C021  F080         	movff	?___flmul,?_powf
  8574   001982  C022  F081         	movff	?___flmul+1,?_powf+1
  8575   001986  C023  F082         	movff	?___flmul+2,?_powf+2
  8576   00198A  C024  F083         	movff	?___flmul+3,?_powf+3
  8577   00198E  EF89  F01D         	goto	l1891
  8578   001992                     l12332:
  8579                           
  8580                           ; BSR set to: 1
  8581   001992  0ECA               	movlw	202
  8582   001994  6E25               	movwf	___flmul@a^0,c
  8583   001996  0EF2               	movlw	242
  8584   001998  6E26               	movwf	(___flmul@a+1)^0,c
  8585   00199A  0E49               	movlw	73
  8586   00199C  6E27               	movwf	(___flmul@a+2)^0,c
  8587   00199E  0E71               	movlw	113
  8588   0019A0  6E28               	movwf	(___flmul@a+3)^0,c
  8589   0019A2  C188  F021         	movff	powf@sn,___flmul@b
  8590   0019A6  C189  F022         	movff	powf@sn+1,___flmul@b+1
  8591   0019AA  C18A  F023         	movff	powf@sn+2,___flmul@b+2
  8592   0019AE  C18B  F024         	movff	powf@sn+3,___flmul@b+3
  8593   0019B2  ECF4  F031         	call	___flmul	;wreg free
  8594   0019B6  C021  F1A4         	movff	?___flmul,_powf$2921
  8595   0019BA  C022  F1A5         	movff	?___flmul+1,_powf$2921+1
  8596   0019BE  C023  F1A6         	movff	?___flmul+2,_powf$2921+2
  8597   0019C2  C024  F1A7         	movff	?___flmul+3,_powf$2921+3
  8598   0019C6  C1A4  F021         	movff	_powf$2921,___flmul@b
  8599   0019CA  C1A5  F022         	movff	_powf$2921+1,___flmul@b+1
  8600   0019CE  C1A6  F023         	movff	_powf$2921+2,___flmul@b+2
  8601   0019D2  C1A7  F024         	movff	_powf$2921+3,___flmul@b+3
  8602   0019D6  0ECA               	movlw	202
  8603   0019D8  6E25               	movwf	___flmul@a^0,c
  8604   0019DA  0EF2               	movlw	242
  8605   0019DC  6E26               	movwf	(___flmul@a+1)^0,c
  8606   0019DE  0E49               	movlw	73
  8607   0019E0  6E27               	movwf	(___flmul@a+2)^0,c
  8608   0019E2  0E71               	movlw	113
  8609   0019E4  6E28               	movwf	(___flmul@a+3)^0,c
  8610   0019E6  ECF4  F031         	call	___flmul	;wreg free
  8611   0019EA  C021  F080         	movff	?___flmul,?_powf
  8612   0019EE  C022  F081         	movff	?___flmul+1,?_powf+1
  8613   0019F2  C023  F082         	movff	?___flmul+2,?_powf+2
  8614   0019F6  C024  F083         	movff	?___flmul+3,?_powf+3
  8615   0019FA  EF89  F01D         	goto	l1891
  8616   0019FE                     l12336:
  8617                           
  8618                           ; BSR set to: 1
  8619   0019FE  BFAB               	btfsc	(powf@ix+3)& (0+255),7,b
  8620   001A00  EF0F  F00D         	goto	u15721
  8621   001A04  0E08               	movlw	8
  8622   001A06  5DA8               	subwf	powf@ix& (0+255),w,b
  8623   001A08  0E00               	movlw	0
  8624   001A0A  59A9               	subwfb	(powf@ix+1)& (0+255),w,b
  8625   001A0C  0E80               	movlw	128
  8626   001A0E  59AA               	subwfb	(powf@ix+2)& (0+255),w,b
  8627   001A10  0E3F               	movlw	63
  8628   001A12  59AB               	subwfb	(powf@ix+3)& (0+255),w,b
  8629   001A14  A0D8               	btfss	status,0,c
  8630   001A16  EF0F  F00D         	goto	u15721
  8631   001A1A  EF11  F00D         	goto	u15720
  8632   001A1E                     u15721:
  8633   001A1E  EF8C  F00D         	goto	l12346
  8634   001A22                     u15720:
  8635   001A22                     
  8636                           ; BSR set to: 1
  8637   001A22  BF7F               	btfsc	(powf@hy+3)& (0+255),7,b
  8638   001A24  EF20  F00D         	goto	u15730
  8639   001A28  517F               	movf	(powf@hy+3)& (0+255),w,b
  8640   001A2A  117E               	iorwf	(powf@hy+2)& (0+255),w,b
  8641   001A2C  117D               	iorwf	(powf@hy+1)& (0+255),w,b
  8642   001A2E  E106               	bnz	u15731
  8643   001A30  057C               	decf	powf@hy& (0+255),w,b
  8644   001A32  B0D8               	btfsc	status,0,c
  8645   001A34  EF1E  F00D         	goto	u15731
  8646   001A38  EF20  F00D         	goto	u15730
  8647   001A3C                     u15731:
  8648   001A3C  EF56  F00D         	goto	l12342
  8649   001A40                     u15730:
  8650   001A40                     
  8651                           ; BSR set to: 1
  8652   001A40  0E60               	movlw	96
  8653   001A42  6E25               	movwf	___flmul@a^0,c
  8654   001A44  0E42               	movlw	66
  8655   001A46  6E26               	movwf	(___flmul@a+1)^0,c
  8656   001A48  0EA2               	movlw	162
  8657   001A4A  6E27               	movwf	(___flmul@a+2)^0,c
  8658   001A4C  0E0D               	movlw	13
  8659   001A4E  6E28               	movwf	(___flmul@a+3)^0,c
  8660   001A50  C188  F021         	movff	powf@sn,___flmul@b
  8661   001A54  C189  F022         	movff	powf@sn+1,___flmul@b+1
  8662   001A58  C18A  F023         	movff	powf@sn+2,___flmul@b+2
  8663   001A5C  C18B  F024         	movff	powf@sn+3,___flmul@b+3
  8664   001A60  ECF4  F031         	call	___flmul	;wreg free
  8665   001A64  C021  F1A4         	movff	?___flmul,_powf$2921
  8666   001A68  C022  F1A5         	movff	?___flmul+1,_powf$2921+1
  8667   001A6C  C023  F1A6         	movff	?___flmul+2,_powf$2921+2
  8668   001A70  C024  F1A7         	movff	?___flmul+3,_powf$2921+3
  8669   001A74  C1A4  F021         	movff	_powf$2921,___flmul@b
  8670   001A78  C1A5  F022         	movff	_powf$2921+1,___flmul@b+1
  8671   001A7C  C1A6  F023         	movff	_powf$2921+2,___flmul@b+2
  8672   001A80  C1A7  F024         	movff	_powf$2921+3,___flmul@b+3
  8673   001A84  0E60               	movlw	96
  8674   001A86  6E25               	movwf	___flmul@a^0,c
  8675   001A88  0E42               	movlw	66
  8676   001A8A  6E26               	movwf	(___flmul@a+1)^0,c
  8677   001A8C  0EA2               	movlw	162
  8678   001A8E  6E27               	movwf	(___flmul@a+2)^0,c
  8679   001A90  0E0D               	movlw	13
  8680   001A92  6E28               	movwf	(___flmul@a+3)^0,c
  8681   001A94  ECF4  F031         	call	___flmul	;wreg free
  8682   001A98  C021  F080         	movff	?___flmul,?_powf
  8683   001A9C  C022  F081         	movff	?___flmul+1,?_powf+1
  8684   001AA0  C023  F082         	movff	?___flmul+2,?_powf+2
  8685   001AA4  C024  F083         	movff	?___flmul+3,?_powf+3
  8686   001AA8  EF89  F01D         	goto	l1891
  8687   001AAC                     l12342:
  8688                           
  8689                           ; BSR set to: 1
  8690   001AAC  0ECA               	movlw	202
  8691   001AAE  6E25               	movwf	___flmul@a^0,c
  8692   001AB0  0EF2               	movlw	242
  8693   001AB2  6E26               	movwf	(___flmul@a+1)^0,c
  8694   001AB4  0E49               	movlw	73
  8695   001AB6  6E27               	movwf	(___flmul@a+2)^0,c
  8696   001AB8  0E71               	movlw	113
  8697   001ABA  6E28               	movwf	(___flmul@a+3)^0,c
  8698   001ABC  C188  F021         	movff	powf@sn,___flmul@b
  8699   001AC0  C189  F022         	movff	powf@sn+1,___flmul@b+1
  8700   001AC4  C18A  F023         	movff	powf@sn+2,___flmul@b+2
  8701   001AC8  C18B  F024         	movff	powf@sn+3,___flmul@b+3
  8702   001ACC  ECF4  F031         	call	___flmul	;wreg free
  8703   001AD0  C021  F1A4         	movff	?___flmul,_powf$2921
  8704   001AD4  C022  F1A5         	movff	?___flmul+1,_powf$2921+1
  8705   001AD8  C023  F1A6         	movff	?___flmul+2,_powf$2921+2
  8706   001ADC  C024  F1A7         	movff	?___flmul+3,_powf$2921+3
  8707   001AE0  C1A4  F021         	movff	_powf$2921,___flmul@b
  8708   001AE4  C1A5  F022         	movff	_powf$2921+1,___flmul@b+1
  8709   001AE8  C1A6  F023         	movff	_powf$2921+2,___flmul@b+2
  8710   001AEC  C1A7  F024         	movff	_powf$2921+3,___flmul@b+3
  8711   001AF0  0ECA               	movlw	202
  8712   001AF2  6E25               	movwf	___flmul@a^0,c
  8713   001AF4  0EF2               	movlw	242
  8714   001AF6  6E26               	movwf	(___flmul@a+1)^0,c
  8715   001AF8  0E49               	movlw	73
  8716   001AFA  6E27               	movwf	(___flmul@a+2)^0,c
  8717   001AFC  0E71               	movlw	113
  8718   001AFE  6E28               	movwf	(___flmul@a+3)^0,c
  8719   001B00  ECF4  F031         	call	___flmul	;wreg free
  8720   001B04  C021  F080         	movff	?___flmul,?_powf
  8721   001B08  C022  F081         	movff	?___flmul+1,?_powf+1
  8722   001B0C  C023  F082         	movff	?___flmul+2,?_powf+2
  8723   001B10  C024  F083         	movff	?___flmul+3,?_powf+3
  8724   001B14  EF89  F01D         	goto	l1891
  8725   001B18                     l12346:
  8726                           
  8727                           ; BSR set to: 1
  8728   001B18  C170  F011         	movff	powf@ax,___fladd@b
  8729   001B1C  C171  F012         	movff	powf@ax+1,___fladd@b+1
  8730   001B20  C172  F013         	movff	powf@ax+2,___fladd@b+2
  8731   001B24  C173  F014         	movff	powf@ax+3,___fladd@b+3
  8732   001B28  0E00               	movlw	0
  8733   001B2A  6E15               	movwf	___fladd@a^0,c
  8734   001B2C  0E00               	movlw	0
  8735   001B2E  6E16               	movwf	(___fladd@a+1)^0,c
  8736   001B30  0E80               	movlw	128
  8737   001B32  6E17               	movwf	(___fladd@a+2)^0,c
  8738   001B34  0EBF               	movlw	191
  8739   001B36  6E18               	movwf	(___fladd@a+3)^0,c
  8740   001B38  EC00  F02B         	call	___fladd	;wreg free
  8741   001B3C  C011  F1B0         	movff	?___fladd,powf@t
  8742   001B40  C012  F1B1         	movff	?___fladd+1,powf@t+1
  8743   001B44  C013  F1B2         	movff	?___fladd+2,powf@t+2
  8744   001B48  C014  F1B3         	movff	?___fladd+3,powf@t+3
  8745   001B4C  0E00               	movlw	0
  8746   001B4E  6E25               	movwf	___flmul@a^0,c
  8747   001B50  0E00               	movlw	0
  8748   001B52  6E26               	movwf	(___flmul@a+1)^0,c
  8749   001B54  0E80               	movlw	128
  8750   001B56  6E27               	movwf	(___flmul@a+2)^0,c
  8751   001B58  0E3E               	movlw	62
  8752   001B5A  6E28               	movwf	(___flmul@a+3)^0,c
  8753   001B5C  C1B0  F021         	movff	powf@t,___flmul@b
  8754   001B60  C1B1  F022         	movff	powf@t+1,___flmul@b+1
  8755   001B64  C1B2  F023         	movff	powf@t+2,___flmul@b+2
  8756   001B68  C1B3  F024         	movff	powf@t+3,___flmul@b+3
  8757   001B6C  ECF4  F031         	call	___flmul	;wreg free
  8758   001B70  C021  F03E         	movff	?___flmul,___flsub@a
  8759   001B74  C022  F03F         	movff	?___flmul+1,___flsub@a+1
  8760   001B78  C023  F040         	movff	?___flmul+2,___flsub@a+2
  8761   001B7C  C024  F041         	movff	?___flmul+3,___flsub@a+3
  8762   001B80  0EAB               	movlw	171
  8763   001B82  6E3A               	movwf	___flsub@b^0,c
  8764   001B84  0EAA               	movlw	170
  8765   001B86  6E3B               	movwf	(___flsub@b+1)^0,c
  8766   001B88  0EAA               	movlw	170
  8767   001B8A  6E3C               	movwf	(___flsub@b+2)^0,c
  8768   001B8C  0E3E               	movlw	62
  8769   001B8E  6E3D               	movwf	(___flsub@b+3)^0,c
  8770   001B90  EC8D  F053         	call	___flsub	;wreg free
  8771   001B94  C03A  F1A4         	movff	?___flsub,_powf$2921
  8772   001B98  C03B  F1A5         	movff	?___flsub+1,_powf$2921+1
  8773   001B9C  C03C  F1A6         	movff	?___flsub+2,_powf$2921+2
  8774   001BA0  C03D  F1A7         	movff	?___flsub+3,_powf$2921+3
  8775   001BA4  C1B0  F025         	movff	powf@t,___flmul@a
  8776   001BA8  C1B1  F026         	movff	powf@t+1,___flmul@a+1
  8777   001BAC  C1B2  F027         	movff	powf@t+2,___flmul@a+2
  8778   001BB0  C1B3  F028         	movff	powf@t+3,___flmul@a+3
  8779   001BB4  C1B0  F021         	movff	powf@t,___flmul@b
  8780   001BB8  C1B1  F022         	movff	powf@t+1,___flmul@b+1
  8781   001BBC  C1B2  F023         	movff	powf@t+2,___flmul@b+2
  8782   001BC0  C1B3  F024         	movff	powf@t+3,___flmul@b+3
  8783   001BC4  ECF4  F031         	call	___flmul	;wreg free
  8784   001BC8  C021  F154         	movff	?___flmul,_powf$2922
  8785   001BCC  C022  F155         	movff	?___flmul+1,_powf$2922+1
  8786   001BD0  C023  F156         	movff	?___flmul+2,_powf$2922+2
  8787   001BD4  C024  F157         	movff	?___flmul+3,_powf$2922+3
  8788   001BD8  C1B0  F025         	movff	powf@t,___flmul@a
  8789   001BDC  C1B1  F026         	movff	powf@t+1,___flmul@a+1
  8790   001BE0  C1B2  F027         	movff	powf@t+2,___flmul@a+2
  8791   001BE4  C1B3  F028         	movff	powf@t+3,___flmul@a+3
  8792   001BE8  C1A4  F021         	movff	_powf$2921,___flmul@b
  8793   001BEC  C1A5  F022         	movff	_powf$2921+1,___flmul@b+1
  8794   001BF0  C1A6  F023         	movff	_powf$2921+2,___flmul@b+2
  8795   001BF4  C1A7  F024         	movff	_powf$2921+3,___flmul@b+3
  8796   001BF8  ECF4  F031         	call	___flmul	;wreg free
  8797   001BFC  C021  F03E         	movff	?___flmul,___flsub@a
  8798   001C00  C022  F03F         	movff	?___flmul+1,___flsub@a+1
  8799   001C04  C023  F040         	movff	?___flmul+2,___flsub@a+2
  8800   001C08  C024  F041         	movff	?___flmul+3,___flsub@a+3
  8801   001C0C  0E00               	movlw	0
  8802   001C0E  6E3A               	movwf	___flsub@b^0,c
  8803   001C10  0E00               	movlw	0
  8804   001C12  6E3B               	movwf	(___flsub@b+1)^0,c
  8805   001C14  0E00               	movlw	0
  8806   001C16  6E3C               	movwf	(___flsub@b+2)^0,c
  8807   001C18  0E3F               	movlw	63
  8808   001C1A  6E3D               	movwf	(___flsub@b+3)^0,c
  8809   001C1C  EC8D  F053         	call	___flsub	;wreg free
  8810   001C20  C03A  F148         	movff	?___flsub,_powf$2923
  8811   001C24  C03B  F149         	movff	?___flsub+1,_powf$2923+1
  8812   001C28  C03C  F14A         	movff	?___flsub+2,_powf$2923+2
  8813   001C2C  C03D  F14B         	movff	?___flsub+3,_powf$2923+3
  8814   001C30  C154  F021         	movff	_powf$2922,___flmul@b
  8815   001C34  C155  F022         	movff	_powf$2922+1,___flmul@b+1
  8816   001C38  C156  F023         	movff	_powf$2922+2,___flmul@b+2
  8817   001C3C  C157  F024         	movff	_powf$2922+3,___flmul@b+3
  8818   001C40  C148  F025         	movff	_powf$2923,___flmul@a
  8819   001C44  C149  F026         	movff	_powf$2923+1,___flmul@a+1
  8820   001C48  C14A  F027         	movff	_powf$2923+2,___flmul@a+2
  8821   001C4C  C14B  F028         	movff	_powf$2923+3,___flmul@a+3
  8822   001C50  ECF4  F031         	call	___flmul	;wreg free
  8823   001C54  C021  F144         	movff	?___flmul,powf@w
  8824   001C58  C022  F145         	movff	?___flmul+1,powf@w+1
  8825   001C5C  C023  F146         	movff	?___flmul+2,powf@w+2
  8826   001C60  C024  F147         	movff	?___flmul+3,powf@w+3
  8827   001C64  C1B0  F021         	movff	powf@t,___flmul@b
  8828   001C68  C1B1  F022         	movff	powf@t+1,___flmul@b+1
  8829   001C6C  C1B2  F023         	movff	powf@t+2,___flmul@b+2
  8830   001C70  C1B3  F024         	movff	powf@t+3,___flmul@b+3
  8831   001C74  0E00               	movlw	0
  8832   001C76  6E25               	movwf	___flmul@a^0,c
  8833   001C78  0EAA               	movlw	170
  8834   001C7A  6E26               	movwf	(___flmul@a+1)^0,c
  8835   001C7C  0EB8               	movlw	184
  8836   001C7E  6E27               	movwf	(___flmul@a+2)^0,c
  8837   001C80  0E3F               	movlw	63
  8838   001C82  6E28               	movwf	(___flmul@a+3)^0,c
  8839   001C84  ECF4  F031         	call	___flmul	;wreg free
  8840   001C88  C021  F174         	movff	?___flmul,powf@u
  8841   001C8C  C022  F175         	movff	?___flmul+1,powf@u+1
  8842   001C90  C023  F176         	movff	?___flmul+2,powf@u+2
  8843   001C94  C024  F177         	movff	?___flmul+3,powf@u+3
  8844   001C98  0E70               	movlw	112
  8845   001C9A  6E25               	movwf	___flmul@a^0,c
  8846   001C9C  0EA5               	movlw	165
  8847   001C9E  6E26               	movwf	(___flmul@a+1)^0,c
  8848   001CA0  0EEC               	movlw	236
  8849   001CA2  6E27               	movwf	(___flmul@a+2)^0,c
  8850   001CA4  0E36               	movlw	54
  8851   001CA6  6E28               	movwf	(___flmul@a+3)^0,c
  8852   001CA8  C1B0  F021         	movff	powf@t,___flmul@b
  8853   001CAC  C1B1  F022         	movff	powf@t+1,___flmul@b+1
  8854   001CB0  C1B2  F023         	movff	powf@t+2,___flmul@b+2
  8855   001CB4  C1B3  F024         	movff	powf@t+3,___flmul@b+3
  8856   001CB8  ECF4  F031         	call	___flmul	;wreg free
  8857   001CBC  C021  F03A         	movff	?___flmul,___flsub@b
  8858   001CC0  C022  F03B         	movff	?___flmul+1,___flsub@b+1
  8859   001CC4  C023  F03C         	movff	?___flmul+2,___flsub@b+2
  8860   001CC8  C024  F03D         	movff	?___flmul+3,___flsub@b+3
  8861   001CCC  0E3B               	movlw	59
  8862   001CCE  6E25               	movwf	___flmul@a^0,c
  8863   001CD0  0EAA               	movlw	170
  8864   001CD2  6E26               	movwf	(___flmul@a+1)^0,c
  8865   001CD4  0EB8               	movlw	184
  8866   001CD6  6E27               	movwf	(___flmul@a+2)^0,c
  8867   001CD8  0E3F               	movlw	63
  8868   001CDA  6E28               	movwf	(___flmul@a+3)^0,c
  8869   001CDC  C144  F021         	movff	powf@w,___flmul@b
  8870   001CE0  C145  F022         	movff	powf@w+1,___flmul@b+1
  8871   001CE4  C146  F023         	movff	powf@w+2,___flmul@b+2
  8872   001CE8  C147  F024         	movff	powf@w+3,___flmul@b+3
  8873   001CEC  ECF4  F031         	call	___flmul	;wreg free
  8874   001CF0  C021  F03E         	movff	?___flmul,___flsub@a
  8875   001CF4  C022  F03F         	movff	?___flmul+1,___flsub@a+1
  8876   001CF8  C023  F040         	movff	?___flmul+2,___flsub@a+2
  8877   001CFC  C024  F041         	movff	?___flmul+3,___flsub@a+3
  8878   001D00  EC8D  F053         	call	___flsub	;wreg free
  8879   001D04  C03A  F178         	movff	?___flsub,powf@v
  8880   001D08  C03B  F179         	movff	?___flsub+1,powf@v+1
  8881   001D0C  C03C  F17A         	movff	?___flsub+2,powf@v+2
  8882   001D10  C03D  F17B         	movff	?___flsub+3,powf@v+3
  8883   001D14  C174  F011         	movff	powf@u,___fladd@b
  8884   001D18  C175  F012         	movff	powf@u+1,___fladd@b+1
  8885   001D1C  C176  F013         	movff	powf@u+2,___fladd@b+2
  8886   001D20  C177  F014         	movff	powf@u+3,___fladd@b+3
  8887   001D24  C178  F015         	movff	powf@v,___fladd@a
  8888   001D28  C179  F016         	movff	powf@v+1,___fladd@a+1
  8889   001D2C  C17A  F017         	movff	powf@v+2,___fladd@a+2
  8890   001D30  C17B  F018         	movff	powf@v+3,___fladd@a+3
  8891   001D34  EC00  F02B         	call	___fladd	;wreg free
  8892   001D38  C011  F184         	movff	?___fladd,powf@t1
  8893   001D3C  C012  F185         	movff	?___fladd+1,powf@t1+1
  8894   001D40  C013  F186         	movff	?___fladd+2,powf@t1+2
  8895   001D44  C014  F187         	movff	?___fladd+3,powf@t1+3
  8896   001D48  C184  F1B8         	movff	powf@t1,powf@__xc8_float_word
  8897   001D4C  C185  F1B9         	movff	powf@t1+1,powf@__xc8_float_word+1
  8898   001D50  C186  F1BA         	movff	powf@t1+2,powf@__xc8_float_word+2
  8899   001D54  C187  F1BB         	movff	powf@t1+3,powf@__xc8_float_word+3
  8900   001D58  C1B8  F194         	movff	powf@__xc8_float_word,powf@is
  8901   001D5C  C1B9  F195         	movff	powf@__xc8_float_word+1,powf@is+1
  8902   001D60  C1BA  F196         	movff	powf@__xc8_float_word+2,powf@is+2
  8903   001D64  C1BB  F197         	movff	powf@__xc8_float_word+3,powf@is+3
  8904   001D68  0E00               	movlw	0
  8905   001D6A  0101               	movlb	1	; () banked
  8906   001D6C  1594               	andwf	powf@is& (0+255),w,b
  8907   001D6E  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
  8908   001D70  0EF0               	movlw	240
  8909   001D72  1595               	andwf	(powf@is+1)& (0+255),w,b
  8910   001D74  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
  8911   001D76  0EFF               	movlw	255
  8912   001D78  1596               	andwf	(powf@is+2)& (0+255),w,b
  8913   001D7A  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
  8914   001D7C  0EFF               	movlw	255
  8915   001D7E  1597               	andwf	(powf@is+3)& (0+255),w,b
  8916   001D80  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
  8917   001D82                     
  8918                           ; BSR set to: 1
  8919   001D82  C1B8  F184         	movff	powf@__xc8_float_word,powf@t1
  8920   001D86  C1B9  F185         	movff	powf@__xc8_float_word+1,powf@t1+1
  8921   001D8A  C1BA  F186         	movff	powf@__xc8_float_word+2,powf@t1+2
  8922   001D8E  C1BB  F187         	movff	powf@__xc8_float_word+3,powf@t1+3
  8923   001D92                     
  8924                           ; BSR set to: 1
  8925   001D92  C174  F03E         	movff	powf@u,___flsub@a
  8926   001D96  C175  F03F         	movff	powf@u+1,___flsub@a+1
  8927   001D9A  C176  F040         	movff	powf@u+2,___flsub@a+2
  8928   001D9E  C177  F041         	movff	powf@u+3,___flsub@a+3
  8929   001DA2  C184  F03A         	movff	powf@t1,___flsub@b
  8930   001DA6  C185  F03B         	movff	powf@t1+1,___flsub@b+1
  8931   001DAA  C186  F03C         	movff	powf@t1+2,___flsub@b+2
  8932   001DAE  C187  F03D         	movff	powf@t1+3,___flsub@b+3
  8933   001DB2  EC8D  F053         	call	___flsub	;wreg free
  8934   001DB6  C03A  F198         	movff	?___flsub,_powf$2924
  8935   001DBA  C03B  F199         	movff	?___flsub+1,_powf$2924+1
  8936   001DBE  C03C  F19A         	movff	?___flsub+2,_powf$2924+2
  8937   001DC2  C03D  F19B         	movff	?___flsub+3,_powf$2924+3
  8938   001DC6  C178  F03A         	movff	powf@v,___flsub@b
  8939   001DCA  C179  F03B         	movff	powf@v+1,___flsub@b+1
  8940   001DCE  C17A  F03C         	movff	powf@v+2,___flsub@b+2
  8941   001DD2  C17B  F03D         	movff	powf@v+3,___flsub@b+3
  8942   001DD6  C198  F03E         	movff	_powf$2924,___flsub@a
  8943   001DDA  C199  F03F         	movff	_powf$2924+1,___flsub@a+1
  8944   001DDE  C19A  F040         	movff	_powf$2924+2,___flsub@a+2
  8945   001DE2  C19B  F041         	movff	_powf$2924+3,___flsub@a+3
  8946   001DE6  EC8D  F053         	call	___flsub	;wreg free
  8947   001DEA  C03A  F11C         	movff	?___flsub,powf@t2
  8948   001DEE  C03B  F11D         	movff	?___flsub+1,powf@t2+1
  8949   001DF2  C03C  F11E         	movff	?___flsub+2,powf@t2+2
  8950   001DF6  C03D  F11F         	movff	?___flsub+3,powf@t2+3
  8951   001DFA  EF7F  F016         	goto	l12528
  8952   001DFE                     l12372:
  8953                           
  8954                           ; BSR set to: 1
  8955   001DFE  0E00               	movlw	0
  8956   001E00  6F80               	movwf	powf@n& (0+255),b
  8957   001E02  0E00               	movlw	0
  8958   001E04  6F81               	movwf	(powf@n+1)& (0+255),b
  8959   001E06  0E00               	movlw	0
  8960   001E08  6F82               	movwf	(powf@n+2)& (0+255),b
  8961   001E0A  0E00               	movlw	0
  8962   001E0C  6F83               	movwf	(powf@n+3)& (0+255),b
  8963   001E0E                     
  8964                           ; BSR set to: 1
  8965   001E0E  BFAB               	btfsc	(powf@ix+3)& (0+255),7,b
  8966   001E10  EF15  F00F         	goto	u15740
  8967   001E14  51AB               	movf	(powf@ix+3)& (0+255),w,b
  8968   001E16  E107               	bnz	u15741
  8969   001E18  0E80               	movlw	128
  8970   001E1A  5DAA               	subwf	(powf@ix+2)& (0+255),w,b
  8971   001E1C  B0D8               	btfsc	status,0,c
  8972   001E1E  EF13  F00F         	goto	u15741
  8973   001E22  EF15  F00F         	goto	u15740
  8974   001E26                     u15741:
  8975   001E26  EF48  F00F         	goto	l12384
  8976   001E2A                     u15740:
  8977   001E2A                     
  8978                           ; BSR set to: 1
  8979   001E2A  C170  F021         	movff	powf@ax,___flmul@b
  8980   001E2E  C171  F022         	movff	powf@ax+1,___flmul@b+1
  8981   001E32  C172  F023         	movff	powf@ax+2,___flmul@b+2
  8982   001E36  C173  F024         	movff	powf@ax+3,___flmul@b+3
  8983   001E3A  0E00               	movlw	0
  8984   001E3C  6E25               	movwf	___flmul@a^0,c
  8985   001E3E  0E00               	movlw	0
  8986   001E40  6E26               	movwf	(___flmul@a+1)^0,c
  8987   001E42  0E80               	movlw	128
  8988   001E44  6E27               	movwf	(___flmul@a+2)^0,c
  8989   001E46  0E4B               	movlw	75
  8990   001E48  6E28               	movwf	(___flmul@a+3)^0,c
  8991   001E4A  ECF4  F031         	call	___flmul	;wreg free
  8992   001E4E  C021  F170         	movff	?___flmul,powf@ax
  8993   001E52  C022  F171         	movff	?___flmul+1,powf@ax+1
  8994   001E56  C023  F172         	movff	?___flmul+2,powf@ax+2
  8995   001E5A  C024  F173         	movff	?___flmul+3,powf@ax+3
  8996   001E5E  0EE8               	movlw	232
  8997   001E60  0101               	movlb	1	; () banked
  8998   001E62  2780               	addwf	powf@n& (0+255),f,b
  8999   001E64  0EFF               	movlw	255
  9000   001E66  2381               	addwfc	(powf@n+1)& (0+255),f,b
  9001   001E68  0EFF               	movlw	255
  9002   001E6A  2382               	addwfc	(powf@n+2)& (0+255),f,b
  9003   001E6C  0EFF               	movlw	255
  9004   001E6E  2383               	addwfc	(powf@n+3)& (0+255),f,b
  9005   001E70                     
  9006                           ; BSR set to: 1
  9007   001E70  C170  F1B8         	movff	powf@ax,powf@__xc8_float_word
  9008   001E74  C171  F1B9         	movff	powf@ax+1,powf@__xc8_float_word+1
  9009   001E78  C172  F1BA         	movff	powf@ax+2,powf@__xc8_float_word+2
  9010   001E7C  C173  F1BB         	movff	powf@ax+3,powf@__xc8_float_word+3
  9011   001E80                     
  9012                           ; BSR set to: 1
  9013   001E80  C1B8  F1A8         	movff	powf@__xc8_float_word,powf@ix
  9014   001E84  C1B9  F1A9         	movff	powf@__xc8_float_word+1,powf@ix+1
  9015   001E88  C1BA  F1AA         	movff	powf@__xc8_float_word+2,powf@ix+2
  9016   001E8C  C1BB  F1AB         	movff	powf@__xc8_float_word+3,powf@ix+3
  9017   001E90                     l12384:
  9018                           
  9019                           ; BSR set to: 1
  9020   001E90  0E17               	movlw	23
  9021   001E92  0100               	movlb	0	; () banked
  9022   001E94  6F88               	movwf	??_powf& (0+255),b
  9023   001E96  C1A8  F089         	movff	powf@ix,??_powf+1
  9024   001E9A  C1A9  F08A         	movff	powf@ix+1,??_powf+2
  9025   001E9E  C1AA  F08B         	movff	powf@ix+2,??_powf+3
  9026   001EA2  C1AB  F08C         	movff	powf@ix+3,??_powf+4
  9027   001EA6                     u15755:
  9028   001EA6  6788               	tstfsz	??_powf& (0+255),b
  9029   001EA8  EF58  F00F         	goto	u15756
  9030   001EAC  EF60  F00F         	goto	u15757
  9031   001EB0                     u15756:
  9032   001EB0  358C               	rlcf	(??_powf+4)& (0+255),w,b
  9033   001EB2  338C               	rrcf	(??_powf+4)& (0+255),f,b
  9034   001EB4  338B               	rrcf	(??_powf+3)& (0+255),f,b
  9035   001EB6  338A               	rrcf	(??_powf+2)& (0+255),f,b
  9036   001EB8  3389               	rrcf	(??_powf+1)& (0+255),f,b
  9037   001EBA  2F88               	decfsz	??_powf& (0+255),f,b
  9038   001EBC  EF53  F00F         	goto	u15755
  9039   001EC0                     u15757:
  9040   001EC0  0E81               	movlw	129
  9041   001EC2  0100               	movlb	0	; () banked
  9042   001EC4  2589               	addwf	(??_powf+1)& (0+255),w,b
  9043   001EC6  6F8D               	movwf	(??_powf+5)& (0+255),b
  9044   001EC8  0EFF               	movlw	255
  9045   001ECA  218A               	addwfc	(??_powf+2)& (0+255),w,b
  9046   001ECC  6F8E               	movwf	(??_powf+6)& (0+255),b
  9047   001ECE  0EFF               	movlw	255
  9048   001ED0  218B               	addwfc	(??_powf+3)& (0+255),w,b
  9049   001ED2  6F8F               	movwf	(??_powf+7)& (0+255),b
  9050   001ED4  0EFF               	movlw	255
  9051   001ED6  218C               	addwfc	(??_powf+4)& (0+255),w,b
  9052   001ED8  6F90               	movwf	(??_powf+8)& (0+255),b
  9053   001EDA  518D               	movf	(??_powf+5)& (0+255),w,b
  9054   001EDC  0101               	movlb	1	; () banked
  9055   001EDE  2780               	addwf	powf@n& (0+255),f,b
  9056   001EE0  0100               	movlb	0	; () banked
  9057   001EE2  518E               	movf	(??_powf+6)& (0+255),w,b
  9058   001EE4  0101               	movlb	1	; () banked
  9059   001EE6  2381               	addwfc	(powf@n+1)& (0+255),f,b
  9060   001EE8  0100               	movlb	0	; () banked
  9061   001EEA  518F               	movf	(??_powf+7)& (0+255),w,b
  9062   001EEC  0101               	movlb	1	; () banked
  9063   001EEE  2382               	addwfc	(powf@n+2)& (0+255),f,b
  9064   001EF0  0100               	movlb	0	; () banked
  9065   001EF2  5190               	movf	(??_powf+8)& (0+255),w,b
  9066   001EF4  0101               	movlb	1	; () banked
  9067   001EF6  2383               	addwfc	(powf@n+3)& (0+255),f,b
  9068   001EF8                     
  9069                           ; BSR set to: 1
  9070   001EF8  0EFF               	movlw	255
  9071   001EFA  15A8               	andwf	powf@ix& (0+255),w,b
  9072   001EFC  6FAC               	movwf	powf@j& (0+255),b
  9073   001EFE  0EFF               	movlw	255
  9074   001F00  15A9               	andwf	(powf@ix+1)& (0+255),w,b
  9075   001F02  6FAD               	movwf	(powf@j+1)& (0+255),b
  9076   001F04  0E7F               	movlw	127
  9077   001F06  15AA               	andwf	(powf@ix+2)& (0+255),w,b
  9078   001F08  6FAE               	movwf	(powf@j+2)& (0+255),b
  9079   001F0A  0E00               	movlw	0
  9080   001F0C  15AB               	andwf	(powf@ix+3)& (0+255),w,b
  9081   001F0E  6FAF               	movwf	(powf@j+3)& (0+255),b
  9082   001F10                     
  9083                           ; BSR set to: 1
  9084   001F10  0E00               	movlw	0
  9085   001F12  11AC               	iorwf	powf@j& (0+255),w,b
  9086   001F14  6FA8               	movwf	powf@ix& (0+255),b
  9087   001F16  0E00               	movlw	0
  9088   001F18  11AD               	iorwf	(powf@j+1)& (0+255),w,b
  9089   001F1A  6FA9               	movwf	(powf@ix+1)& (0+255),b
  9090   001F1C  0E80               	movlw	128
  9091   001F1E  11AE               	iorwf	(powf@j+2)& (0+255),w,b
  9092   001F20  6FAA               	movwf	(powf@ix+2)& (0+255),b
  9093   001F22  0E3F               	movlw	63
  9094   001F24  11AF               	iorwf	(powf@j+3)& (0+255),w,b
  9095   001F26  6FAB               	movwf	(powf@ix+3)& (0+255),b
  9096   001F28                     
  9097                           ; BSR set to: 1
  9098   001F28  BFAF               	btfsc	(powf@j+3)& (0+255),7,b
  9099   001F2A  EFA6  F00F         	goto	u15760
  9100   001F2E  51AF               	movf	(powf@j+3)& (0+255),w,b
  9101   001F30  E10B               	bnz	u15761
  9102   001F32  0E72               	movlw	114
  9103   001F34  5DAC               	subwf	powf@j& (0+255),w,b
  9104   001F36  0EC4               	movlw	196
  9105   001F38  59AD               	subwfb	(powf@j+1)& (0+255),w,b
  9106   001F3A  0E1C               	movlw	28
  9107   001F3C  59AE               	subwfb	(powf@j+2)& (0+255),w,b
  9108   001F3E  B0D8               	btfsc	status,0,c
  9109   001F40  EFA4  F00F         	goto	u15761
  9110   001F44  EFA6  F00F         	goto	u15760
  9111   001F48                     u15761:
  9112   001F48  EFB0  F00F         	goto	l12394
  9113   001F4C                     u15760:
  9114   001F4C                     
  9115                           ; BSR set to: 1
  9116   001F4C  0E00               	movlw	0
  9117   001F4E  6FA0               	movwf	powf@k& (0+255),b
  9118   001F50  0E00               	movlw	0
  9119   001F52  6FA1               	movwf	(powf@k+1)& (0+255),b
  9120   001F54  0E00               	movlw	0
  9121   001F56  6FA2               	movwf	(powf@k+2)& (0+255),b
  9122   001F58  0E00               	movlw	0
  9123   001F5A  6FA3               	movwf	(powf@k+3)& (0+255),b
  9124   001F5C  EFE2  F00F         	goto	l12404
  9125   001F60                     l12394:
  9126                           
  9127                           ; BSR set to: 1
  9128   001F60  BFAF               	btfsc	(powf@j+3)& (0+255),7,b
  9129   001F62  EFC2  F00F         	goto	u15770
  9130   001F66  51AF               	movf	(powf@j+3)& (0+255),w,b
  9131   001F68  E10B               	bnz	u15771
  9132   001F6A  0ED7               	movlw	215
  9133   001F6C  5DAC               	subwf	powf@j& (0+255),w,b
  9134   001F6E  0EB3               	movlw	179
  9135   001F70  59AD               	subwfb	(powf@j+1)& (0+255),w,b
  9136   001F72  0E5D               	movlw	93
  9137   001F74  59AE               	subwfb	(powf@j+2)& (0+255),w,b
  9138   001F76  B0D8               	btfsc	status,0,c
  9139   001F78  EFC0  F00F         	goto	u15771
  9140   001F7C  EFC2  F00F         	goto	u15770
  9141   001F80                     u15771:
  9142   001F80  EFCC  F00F         	goto	l12398
  9143   001F84                     u15770:
  9144   001F84                     
  9145                           ; BSR set to: 1
  9146   001F84  0E01               	movlw	1
  9147   001F86  6FA0               	movwf	powf@k& (0+255),b
  9148   001F88  0E00               	movlw	0
  9149   001F8A  6FA1               	movwf	(powf@k+1)& (0+255),b
  9150   001F8C  0E00               	movlw	0
  9151   001F8E  6FA2               	movwf	(powf@k+2)& (0+255),b
  9152   001F90  0E00               	movlw	0
  9153   001F92  6FA3               	movwf	(powf@k+3)& (0+255),b
  9154   001F94  EFE2  F00F         	goto	l12404
  9155   001F98                     l12398:
  9156                           
  9157                           ; BSR set to: 1
  9158   001F98  0E00               	movlw	0
  9159   001F9A  6FA0               	movwf	powf@k& (0+255),b
  9160   001F9C  0E00               	movlw	0
  9161   001F9E  6FA1               	movwf	(powf@k+1)& (0+255),b
  9162   001FA0  0E00               	movlw	0
  9163   001FA2  6FA2               	movwf	(powf@k+2)& (0+255),b
  9164   001FA4  0E00               	movlw	0
  9165   001FA6  6FA3               	movwf	(powf@k+3)& (0+255),b
  9166   001FA8                     
  9167                           ; BSR set to: 1
  9168   001FA8  0E01               	movlw	1
  9169   001FAA  2780               	addwf	powf@n& (0+255),f,b
  9170   001FAC  0E00               	movlw	0
  9171   001FAE  2381               	addwfc	(powf@n+1)& (0+255),f,b
  9172   001FB0  2382               	addwfc	(powf@n+2)& (0+255),f,b
  9173   001FB2  2383               	addwfc	(powf@n+3)& (0+255),f,b
  9174   001FB4                     
  9175                           ; BSR set to: 1
  9176   001FB4  0E00               	movlw	0
  9177   001FB6  27A8               	addwf	powf@ix& (0+255),f,b
  9178   001FB8  0E00               	movlw	0
  9179   001FBA  23A9               	addwfc	(powf@ix+1)& (0+255),f,b
  9180   001FBC  0E80               	movlw	128
  9181   001FBE  23AA               	addwfc	(powf@ix+2)& (0+255),f,b
  9182   001FC0  0EFF               	movlw	255
  9183   001FC2  23AB               	addwfc	(powf@ix+3)& (0+255),f,b
  9184   001FC4                     l12404:
  9185                           
  9186                           ; BSR set to: 1
  9187   001FC4  C1A8  F1B8         	movff	powf@ix,powf@__xc8_float_word
  9188   001FC8  C1A9  F1B9         	movff	powf@ix+1,powf@__xc8_float_word+1
  9189   001FCC  C1AA  F1BA         	movff	powf@ix+2,powf@__xc8_float_word+2
  9190   001FD0  C1AB  F1BB         	movff	powf@ix+3,powf@__xc8_float_word+3
  9191   001FD4                     
  9192                           ; BSR set to: 1
  9193   001FD4  C1B8  F170         	movff	powf@__xc8_float_word,powf@ax
  9194   001FD8  C1B9  F171         	movff	powf@__xc8_float_word+1,powf@ax+1
  9195   001FDC  C1BA  F172         	movff	powf@__xc8_float_word+2,powf@ax+2
  9196   001FE0  C1BB  F173         	movff	powf@__xc8_float_word+3,powf@ax+3
  9197   001FE4                     
  9198                           ; BSR set to: 1
  9199   001FE4  C170  F03A         	movff	powf@ax,___flsub@b
  9200   001FE8  C171  F03B         	movff	powf@ax+1,___flsub@b+1
  9201   001FEC  C172  F03C         	movff	powf@ax+2,___flsub@b+2
  9202   001FF0  C173  F03D         	movff	powf@ax+3,___flsub@b+3
  9203   001FF4  C1A0  F088         	movff	powf@k,??_powf
  9204   001FF8  C1A1  F089         	movff	powf@k+1,??_powf+1
  9205   001FFC  0100               	movlb	0	; () banked
  9206   001FFE  90D8               	bcf	status,0,c
  9207   002000  3788               	rlcf	??_powf& (0+255),f,b
  9208   002002  3789               	rlcf	(??_powf+1)& (0+255),f,b
  9209   002004  90D8               	bcf	status,0,c
  9210   002006  3788               	rlcf	??_powf& (0+255),f,b
  9211   002008  3789               	rlcf	(??_powf+1)& (0+255),f,b
  9212   00200A  0E79               	movlw	low _bp
  9213   00200C  2588               	addwf	??_powf& (0+255),w,b
  9214   00200E  6EF6               	movwf	tblptrl,c
  9215   002010  0E10               	movlw	high _bp
  9216   002012  2189               	addwfc	(??_powf+1)& (0+255),w,b
  9217   002014  6EF7               	movwf	tblptrh,c
  9218   002016                     	if	1	;There are 3 active tblptr bytes
  9219   002016  6AF8               	clrf	tblptru,c
  9220   002018  0E00               	movlw	low (__mediumconst shr (0+16))
  9221   00201A  22F8               	addwfc	tblptru,f,c
  9222   00201C                     	endif
  9223   00201C  0009               	tblrd		*+
  9224   00201E  CFF5 F03E          	movff	tablat,___flsub@a
  9225   002022  0009               	tblrd		*+
  9226   002024  CFF5 F03F          	movff	tablat,___flsub@a+1
  9227   002028  0009               	tblrd		*+
  9228   00202A  CFF5 F040          	movff	tablat,___flsub@a+2
  9229   00202E  000A               	tblrd		*-
  9230   002030  CFF5 F041          	movff	tablat,___flsub@a+3
  9231   002034  EC8D  F053         	call	___flsub	;wreg free
  9232   002038  C03A  F174         	movff	?___flsub,powf@u
  9233   00203C  C03B  F175         	movff	?___flsub+1,powf@u+1
  9234   002040  C03C  F176         	movff	?___flsub+2,powf@u+2
  9235   002044  C03D  F177         	movff	?___flsub+3,powf@u+3
  9236   002048  0E00               	movlw	0
  9237   00204A  6E42               	movwf	___fldiv@b^0,c
  9238   00204C  0E00               	movlw	0
  9239   00204E  6E43               	movwf	(___fldiv@b+1)^0,c
  9240   002050  0E80               	movlw	128
  9241   002052  6E44               	movwf	(___fldiv@b+2)^0,c
  9242   002054  0E3F               	movlw	63
  9243   002056  6E45               	movwf	(___fldiv@b+3)^0,c
  9244   002058  C170  F015         	movff	powf@ax,___fladd@a
  9245   00205C  C171  F016         	movff	powf@ax+1,___fladd@a+1
  9246   002060  C172  F017         	movff	powf@ax+2,___fladd@a+2
  9247   002064  C173  F018         	movff	powf@ax+3,___fladd@a+3
  9248   002068  C1A0  F088         	movff	powf@k,??_powf
  9249   00206C  C1A1  F089         	movff	powf@k+1,??_powf+1
  9250   002070  0100               	movlb	0	; () banked
  9251   002072  90D8               	bcf	status,0,c
  9252   002074  3788               	rlcf	??_powf& (0+255),f,b
  9253   002076  3789               	rlcf	(??_powf+1)& (0+255),f,b
  9254   002078  90D8               	bcf	status,0,c
  9255   00207A  3788               	rlcf	??_powf& (0+255),f,b
  9256   00207C  3789               	rlcf	(??_powf+1)& (0+255),f,b
  9257   00207E  0E79               	movlw	low _bp
  9258   002080  2588               	addwf	??_powf& (0+255),w,b
  9259   002082  6EF6               	movwf	tblptrl,c
  9260   002084  0E10               	movlw	high _bp
  9261   002086  2189               	addwfc	(??_powf+1)& (0+255),w,b
  9262   002088  6EF7               	movwf	tblptrh,c
  9263   00208A                     	if	1	;There are 3 active tblptr bytes
  9264   00208A  6AF8               	clrf	tblptru,c
  9265   00208C  0E00               	movlw	low (__mediumconst shr (0+16))
  9266   00208E  22F8               	addwfc	tblptru,f,c
  9267   002090                     	endif
  9268   002090  0009               	tblrd		*+
  9269   002092  CFF5 F011          	movff	tablat,___fladd@b
  9270   002096  0009               	tblrd		*+
  9271   002098  CFF5 F012          	movff	tablat,___fladd@b+1
  9272   00209C  0009               	tblrd		*+
  9273   00209E  CFF5 F013          	movff	tablat,___fladd@b+2
  9274   0020A2  000A               	tblrd		*-
  9275   0020A4  CFF5 F014          	movff	tablat,___fladd@b+3
  9276   0020A8  EC00  F02B         	call	___fladd	;wreg free
  9277   0020AC  C011  F046         	movff	?___fladd,___fldiv@a
  9278   0020B0  C012  F047         	movff	?___fladd+1,___fldiv@a+1
  9279   0020B4  C013  F048         	movff	?___fladd+2,___fldiv@a+2
  9280   0020B8  C014  F049         	movff	?___fladd+3,___fldiv@a+3
  9281   0020BC  EC09  F034         	call	___fldiv	;wreg free
  9282   0020C0  C042  F178         	movff	?___fldiv,powf@v
  9283   0020C4  C043  F179         	movff	?___fldiv+1,powf@v+1
  9284   0020C8  C044  F17A         	movff	?___fldiv+2,powf@v+2
  9285   0020CC  C045  F17B         	movff	?___fldiv+3,powf@v+3
  9286   0020D0  C174  F021         	movff	powf@u,___flmul@b
  9287   0020D4  C175  F022         	movff	powf@u+1,___flmul@b+1
  9288   0020D8  C176  F023         	movff	powf@u+2,___flmul@b+2
  9289   0020DC  C177  F024         	movff	powf@u+3,___flmul@b+3
  9290   0020E0  C178  F025         	movff	powf@v,___flmul@a
  9291   0020E4  C179  F026         	movff	powf@v+1,___flmul@a+1
  9292   0020E8  C17A  F027         	movff	powf@v+2,___flmul@a+2
  9293   0020EC  C17B  F028         	movff	powf@v+3,___flmul@a+3
  9294   0020F0  ECF4  F031         	call	___flmul	;wreg free
  9295   0020F4  C021  F15C         	movff	?___flmul,powf@s
  9296   0020F8  C022  F15D         	movff	?___flmul+1,powf@s+1
  9297   0020FC  C023  F15E         	movff	?___flmul+2,powf@s+2
  9298   002100  C024  F15F         	movff	?___flmul+3,powf@s+3
  9299   002104  C15C  F16C         	movff	powf@s,powf@s_h
  9300   002108  C15D  F16D         	movff	powf@s+1,powf@s_h+1
  9301   00210C  C15E  F16E         	movff	powf@s+2,powf@s_h+2
  9302   002110  C15F  F16F         	movff	powf@s+3,powf@s_h+3
  9303   002114  C16C  F1B8         	movff	powf@s_h,powf@__xc8_float_word
  9304   002118  C16D  F1B9         	movff	powf@s_h+1,powf@__xc8_float_word+1
  9305   00211C  C16E  F1BA         	movff	powf@s_h+2,powf@__xc8_float_word+2
  9306   002120  C16F  F1BB         	movff	powf@s_h+3,powf@__xc8_float_word+3
  9307   002124  C1B8  F194         	movff	powf@__xc8_float_word,powf@is
  9308   002128  C1B9  F195         	movff	powf@__xc8_float_word+1,powf@is+1
  9309   00212C  C1BA  F196         	movff	powf@__xc8_float_word+2,powf@is+2
  9310   002130  C1BB  F197         	movff	powf@__xc8_float_word+3,powf@is+3
  9311   002134  0E00               	movlw	0
  9312   002136  0101               	movlb	1	; () banked
  9313   002138  1594               	andwf	powf@is& (0+255),w,b
  9314   00213A  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
  9315   00213C  0EF0               	movlw	240
  9316   00213E  1595               	andwf	(powf@is+1)& (0+255),w,b
  9317   002140  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
  9318   002142  0EFF               	movlw	255
  9319   002144  1596               	andwf	(powf@is+2)& (0+255),w,b
  9320   002146  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
  9321   002148  0EFF               	movlw	255
  9322   00214A  1597               	andwf	(powf@is+3)& (0+255),w,b
  9323   00214C  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
  9324   00214E                     
  9325                           ; BSR set to: 1
  9326   00214E  C1B8  F16C         	movff	powf@__xc8_float_word,powf@s_h
  9327   002152  C1B9  F16D         	movff	powf@__xc8_float_word+1,powf@s_h+1
  9328   002156  C1BA  F16E         	movff	powf@__xc8_float_word+2,powf@s_h+2
  9329   00215A  C1BB  F16F         	movff	powf@__xc8_float_word+3,powf@s_h+3
  9330   00215E                     
  9331                           ; BSR set to: 1
  9332   00215E  C1A8  F088         	movff	powf@ix,??_powf
  9333   002162  C1A9  F089         	movff	powf@ix+1,??_powf+1
  9334   002166  C1AA  F08A         	movff	powf@ix+2,??_powf+2
  9335   00216A  C1AB  F08B         	movff	powf@ix+3,??_powf+3
  9336   00216E  0100               	movlb	0	; () banked
  9337   002170  358B               	rlcf	(??_powf+3)& (0+255),w,b
  9338   002172  338B               	rrcf	(??_powf+3)& (0+255),f,b
  9339   002174  338A               	rrcf	(??_powf+2)& (0+255),f,b
  9340   002176  3389               	rrcf	(??_powf+1)& (0+255),f,b
  9341   002178  3388               	rrcf	??_powf& (0+255),f,b
  9342   00217A  0E00               	movlw	0
  9343   00217C  1588               	andwf	??_powf& (0+255),w,b
  9344   00217E  6F8C               	movwf	(??_powf+4)& (0+255),b
  9345   002180  0EF0               	movlw	240
  9346   002182  1589               	andwf	(??_powf+1)& (0+255),w,b
  9347   002184  6F8D               	movwf	(??_powf+5)& (0+255),b
  9348   002186  0EFF               	movlw	255
  9349   002188  158A               	andwf	(??_powf+2)& (0+255),w,b
  9350   00218A  6F8E               	movwf	(??_powf+6)& (0+255),b
  9351   00218C  0EFF               	movlw	255
  9352   00218E  158B               	andwf	(??_powf+3)& (0+255),w,b
  9353   002190  6F8F               	movwf	(??_powf+7)& (0+255),b
  9354   002192  0E00               	movlw	0
  9355   002194  118C               	iorwf	(??_powf+4)& (0+255),w,b
  9356   002196  0101               	movlb	1	; () banked
  9357   002198  6F94               	movwf	powf@is& (0+255),b
  9358   00219A  0E00               	movlw	0
  9359   00219C  0100               	movlb	0	; () banked
  9360   00219E  118D               	iorwf	(??_powf+5)& (0+255),w,b
  9361   0021A0  0101               	movlb	1	; () banked
  9362   0021A2  6F95               	movwf	(powf@is+1)& (0+255),b
  9363   0021A4  0E00               	movlw	0
  9364   0021A6  0100               	movlb	0	; () banked
  9365   0021A8  118E               	iorwf	(??_powf+6)& (0+255),w,b
  9366   0021AA  0101               	movlb	1	; () banked
  9367   0021AC  6F96               	movwf	(powf@is+2)& (0+255),b
  9368   0021AE  0E20               	movlw	32
  9369   0021B0  0100               	movlb	0	; () banked
  9370   0021B2  118F               	iorwf	(??_powf+7)& (0+255),w,b
  9371   0021B4  0101               	movlb	1	; () banked
  9372   0021B6  6F97               	movwf	(powf@is+3)& (0+255),b
  9373   0021B8                     
  9374                           ; BSR set to: 1
  9375   0021B8  C1A0  F088         	movff	powf@k,??_powf
  9376   0021BC  C1A1  F089         	movff	powf@k+1,??_powf+1
  9377   0021C0  C1A2  F08A         	movff	powf@k+2,??_powf+2
  9378   0021C4  C1A3  F08B         	movff	powf@k+3,??_powf+3
  9379   0021C8  0E15               	movlw	21
  9380   0021CA                     u15785:
  9381   0021CA  90D8               	bcf	status,0,c
  9382   0021CC  0100               	movlb	0	; () banked
  9383   0021CE  3788               	rlcf	??_powf& (0+255),f,b
  9384   0021D0  3789               	rlcf	(??_powf+1)& (0+255),f,b
  9385   0021D2  378A               	rlcf	(??_powf+2)& (0+255),f,b
  9386   0021D4  378B               	rlcf	(??_powf+3)& (0+255),f,b
  9387   0021D6  2EE8               	decfsz	wreg,f,c
  9388   0021D8  EFE5  F010         	goto	u15785
  9389   0021DC  0101               	movlb	1	; () banked
  9390   0021DE  5194               	movf	powf@is& (0+255),w,b
  9391   0021E0  0100               	movlb	0	; () banked
  9392   0021E2  2588               	addwf	??_powf& (0+255),w,b
  9393   0021E4  6F8C               	movwf	(??_powf+4)& (0+255),b
  9394   0021E6  0101               	movlb	1	; () banked
  9395   0021E8  5195               	movf	(powf@is+1)& (0+255),w,b
  9396   0021EA  0100               	movlb	0	; () banked
  9397   0021EC  2189               	addwfc	(??_powf+1)& (0+255),w,b
  9398   0021EE  6F8D               	movwf	(??_powf+5)& (0+255),b
  9399   0021F0  0101               	movlb	1	; () banked
  9400   0021F2  5196               	movf	(powf@is+2)& (0+255),w,b
  9401   0021F4  0100               	movlb	0	; () banked
  9402   0021F6  218A               	addwfc	(??_powf+2)& (0+255),w,b
  9403   0021F8  6F8E               	movwf	(??_powf+6)& (0+255),b
  9404   0021FA  0101               	movlb	1	; () banked
  9405   0021FC  5197               	movf	(powf@is+3)& (0+255),w,b
  9406   0021FE  0100               	movlb	0	; () banked
  9407   002200  218B               	addwfc	(??_powf+3)& (0+255),w,b
  9408   002202  6F8F               	movwf	(??_powf+7)& (0+255),b
  9409   002204  0E00               	movlw	0
  9410   002206  258C               	addwf	(??_powf+4)& (0+255),w,b
  9411   002208  0101               	movlb	1	; () banked
  9412   00220A  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
  9413   00220C  0E00               	movlw	0
  9414   00220E  0100               	movlb	0	; () banked
  9415   002210  218D               	addwfc	(??_powf+5)& (0+255),w,b
  9416   002212  0101               	movlb	1	; () banked
  9417   002214  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
  9418   002216  0E40               	movlw	64
  9419   002218  0100               	movlb	0	; () banked
  9420   00221A  218E               	addwfc	(??_powf+6)& (0+255),w,b
  9421   00221C  0101               	movlb	1	; () banked
  9422   00221E  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
  9423   002220  0E00               	movlw	0
  9424   002222  0100               	movlb	0	; () banked
  9425   002224  218F               	addwfc	(??_powf+7)& (0+255),w,b
  9426   002226  0101               	movlb	1	; () banked
  9427   002228  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
  9428   00222A                     
  9429                           ; BSR set to: 1
  9430   00222A  C1B8  F168         	movff	powf@__xc8_float_word,powf@t_h
  9431   00222E  C1B9  F169         	movff	powf@__xc8_float_word+1,powf@t_h+1
  9432   002232  C1BA  F16A         	movff	powf@__xc8_float_word+2,powf@t_h+2
  9433   002236  C1BB  F16B         	movff	powf@__xc8_float_word+3,powf@t_h+3
  9434   00223A                     
  9435                           ; BSR set to: 1
  9436   00223A  C1A0  F088         	movff	powf@k,??_powf
  9437   00223E  C1A1  F089         	movff	powf@k+1,??_powf+1
  9438   002242  0100               	movlb	0	; () banked
  9439   002244  90D8               	bcf	status,0,c
  9440   002246  3788               	rlcf	??_powf& (0+255),f,b
  9441   002248  3789               	rlcf	(??_powf+1)& (0+255),f,b
  9442   00224A  90D8               	bcf	status,0,c
  9443   00224C  3788               	rlcf	??_powf& (0+255),f,b
  9444   00224E  3789               	rlcf	(??_powf+1)& (0+255),f,b
  9445   002250  0E79               	movlw	low _bp
  9446   002252  2588               	addwf	??_powf& (0+255),w,b
  9447   002254  6EF6               	movwf	tblptrl,c
  9448   002256  0E10               	movlw	high _bp
  9449   002258  2189               	addwfc	(??_powf+1)& (0+255),w,b
  9450   00225A  6EF7               	movwf	tblptrh,c
  9451   00225C                     	if	1	;There are 3 active tblptr bytes
  9452   00225C  6AF8               	clrf	tblptru,c
  9453   00225E  0E00               	movlw	low (__mediumconst shr (0+16))
  9454   002260  22F8               	addwfc	tblptru,f,c
  9455   002262                     	endif
  9456   002262  0009               	tblrd		*+
  9457   002264  CFF5 F03E          	movff	tablat,___flsub@a
  9458   002268  0009               	tblrd		*+
  9459   00226A  CFF5 F03F          	movff	tablat,___flsub@a+1
  9460   00226E  0009               	tblrd		*+
  9461   002270  CFF5 F040          	movff	tablat,___flsub@a+2
  9462   002274  000A               	tblrd		*-
  9463   002276  CFF5 F041          	movff	tablat,___flsub@a+3
  9464   00227A  C168  F03A         	movff	powf@t_h,___flsub@b
  9465   00227E  C169  F03B         	movff	powf@t_h+1,___flsub@b+1
  9466   002282  C16A  F03C         	movff	powf@t_h+2,___flsub@b+2
  9467   002286  C16B  F03D         	movff	powf@t_h+3,___flsub@b+3
  9468   00228A  EC8D  F053         	call	___flsub	;wreg free
  9469   00228E  C03A  F198         	movff	?___flsub,_powf$2924
  9470   002292  C03B  F199         	movff	?___flsub+1,_powf$2924+1
  9471   002296  C03C  F19A         	movff	?___flsub+2,_powf$2924+2
  9472   00229A  C03D  F19B         	movff	?___flsub+3,_powf$2924+3
  9473   00229E  C170  F03A         	movff	powf@ax,___flsub@b
  9474   0022A2  C171  F03B         	movff	powf@ax+1,___flsub@b+1
  9475   0022A6  C172  F03C         	movff	powf@ax+2,___flsub@b+2
  9476   0022AA  C173  F03D         	movff	powf@ax+3,___flsub@b+3
  9477   0022AE  C198  F03E         	movff	_powf$2924,___flsub@a
  9478   0022B2  C199  F03F         	movff	_powf$2924+1,___flsub@a+1
  9479   0022B6  C19A  F040         	movff	_powf$2924+2,___flsub@a+2
  9480   0022BA  C19B  F041         	movff	_powf$2924+3,___flsub@a+3
  9481   0022BE  EC8D  F053         	call	___flsub	;wreg free
  9482   0022C2  C03A  F134         	movff	?___flsub,powf@t_l
  9483   0022C6  C03B  F135         	movff	?___flsub+1,powf@t_l+1
  9484   0022CA  C03C  F136         	movff	?___flsub+2,powf@t_l+2
  9485   0022CE  C03D  F137         	movff	?___flsub+3,powf@t_l+3
  9486   0022D2  C168  F025         	movff	powf@t_h,___flmul@a
  9487   0022D6  C169  F026         	movff	powf@t_h+1,___flmul@a+1
  9488   0022DA  C16A  F027         	movff	powf@t_h+2,___flmul@a+2
  9489   0022DE  C16B  F028         	movff	powf@t_h+3,___flmul@a+3
  9490   0022E2  C16C  F021         	movff	powf@s_h,___flmul@b
  9491   0022E6  C16D  F022         	movff	powf@s_h+1,___flmul@b+1
  9492   0022EA  C16E  F023         	movff	powf@s_h+2,___flmul@b+2
  9493   0022EE  C16F  F024         	movff	powf@s_h+3,___flmul@b+3
  9494   0022F2  ECF4  F031         	call	___flmul	;wreg free
  9495   0022F6  C021  F03E         	movff	?___flmul,___flsub@a
  9496   0022FA  C022  F03F         	movff	?___flmul+1,___flsub@a+1
  9497   0022FE  C023  F040         	movff	?___flmul+2,___flsub@a+2
  9498   002302  C024  F041         	movff	?___flmul+3,___flsub@a+3
  9499   002306  C174  F03A         	movff	powf@u,___flsub@b
  9500   00230A  C175  F03B         	movff	powf@u+1,___flsub@b+1
  9501   00230E  C176  F03C         	movff	powf@u+2,___flsub@b+2
  9502   002312  C177  F03D         	movff	powf@u+3,___flsub@b+3
  9503   002316  EC8D  F053         	call	___flsub	;wreg free
  9504   00231A  C03A  F198         	movff	?___flsub,_powf$2924
  9505   00231E  C03B  F199         	movff	?___flsub+1,_powf$2924+1
  9506   002322  C03C  F19A         	movff	?___flsub+2,_powf$2924+2
  9507   002326  C03D  F19B         	movff	?___flsub+3,_powf$2924+3
  9508   00232A  C134  F025         	movff	powf@t_l,___flmul@a
  9509   00232E  C135  F026         	movff	powf@t_l+1,___flmul@a+1
  9510   002332  C136  F027         	movff	powf@t_l+2,___flmul@a+2
  9511   002336  C137  F028         	movff	powf@t_l+3,___flmul@a+3
  9512   00233A  C16C  F021         	movff	powf@s_h,___flmul@b
  9513   00233E  C16D  F022         	movff	powf@s_h+1,___flmul@b+1
  9514   002342  C16E  F023         	movff	powf@s_h+2,___flmul@b+2
  9515   002346  C16F  F024         	movff	powf@s_h+3,___flmul@b+3
  9516   00234A  ECF4  F031         	call	___flmul	;wreg free
  9517   00234E  C021  F03E         	movff	?___flmul,___flsub@a
  9518   002352  C022  F03F         	movff	?___flmul+1,___flsub@a+1
  9519   002356  C023  F040         	movff	?___flmul+2,___flsub@a+2
  9520   00235A  C024  F041         	movff	?___flmul+3,___flsub@a+3
  9521   00235E  C198  F03A         	movff	_powf$2924,___flsub@b
  9522   002362  C199  F03B         	movff	_powf$2924+1,___flsub@b+1
  9523   002366  C19A  F03C         	movff	_powf$2924+2,___flsub@b+2
  9524   00236A  C19B  F03D         	movff	_powf$2924+3,___flsub@b+3
  9525   00236E  EC8D  F053         	call	___flsub	;wreg free
  9526   002372  C03A  F154         	movff	?___flsub,_powf$2922
  9527   002376  C03B  F155         	movff	?___flsub+1,_powf$2922+1
  9528   00237A  C03C  F156         	movff	?___flsub+2,_powf$2922+2
  9529   00237E  C03D  F157         	movff	?___flsub+3,_powf$2922+3
  9530   002382  C154  F021         	movff	_powf$2922,___flmul@b
  9531   002386  C155  F022         	movff	_powf$2922+1,___flmul@b+1
  9532   00238A  C156  F023         	movff	_powf$2922+2,___flmul@b+2
  9533   00238E  C157  F024         	movff	_powf$2922+3,___flmul@b+3
  9534   002392  C178  F025         	movff	powf@v,___flmul@a
  9535   002396  C179  F026         	movff	powf@v+1,___flmul@a+1
  9536   00239A  C17A  F027         	movff	powf@v+2,___flmul@a+2
  9537   00239E  C17B  F028         	movff	powf@v+3,___flmul@a+3
  9538   0023A2  ECF4  F031         	call	___flmul	;wreg free
  9539   0023A6  C021  F130         	movff	?___flmul,powf@s_l
  9540   0023AA  C022  F131         	movff	?___flmul+1,powf@s_l+1
  9541   0023AE  C023  F132         	movff	?___flmul+2,powf@s_l+2
  9542   0023B2  C024  F133         	movff	?___flmul+3,powf@s_l+3
  9543   0023B6  C15C  F021         	movff	powf@s,___flmul@b
  9544   0023BA  C15D  F022         	movff	powf@s+1,___flmul@b+1
  9545   0023BE  C15E  F023         	movff	powf@s+2,___flmul@b+2
  9546   0023C2  C15F  F024         	movff	powf@s+3,___flmul@b+3
  9547   0023C6  C15C  F025         	movff	powf@s,___flmul@a
  9548   0023CA  C15D  F026         	movff	powf@s+1,___flmul@a+1
  9549   0023CE  C15E  F027         	movff	powf@s+2,___flmul@a+2
  9550   0023D2  C15F  F028         	movff	powf@s+3,___flmul@a+3
  9551   0023D6  ECF4  F031         	call	___flmul	;wreg free
  9552   0023DA  C021  F18C         	movff	?___flmul,powf@s2
  9553   0023DE  C022  F18D         	movff	?___flmul+1,powf@s2+1
  9554   0023E2  C023  F18E         	movff	?___flmul+2,powf@s2+2
  9555   0023E6  C024  F18F         	movff	?___flmul+3,powf@s2+3
  9556   0023EA  0E55               	movlw	85
  9557   0023EC  6E15               	movwf	___fladd@a^0,c
  9558   0023EE  0E32               	movlw	50
  9559   0023F0  6E16               	movwf	(___fladd@a+1)^0,c
  9560   0023F2  0E6C               	movlw	108
  9561   0023F4  6E17               	movwf	(___fladd@a+2)^0,c
  9562   0023F6  0E3E               	movlw	62
  9563   0023F8  6E18               	movwf	(___fladd@a+3)^0,c
  9564   0023FA  0E42               	movlw	66
  9565   0023FC  6E25               	movwf	___flmul@a^0,c
  9566   0023FE  0EF1               	movlw	241
  9567   002400  6E26               	movwf	(___flmul@a+1)^0,c
  9568   002402  0E53               	movlw	83
  9569   002404  6E27               	movwf	(___flmul@a+2)^0,c
  9570   002406  0E3E               	movlw	62
  9571   002408  6E28               	movwf	(___flmul@a+3)^0,c
  9572   00240A  C18C  F021         	movff	powf@s2,___flmul@b
  9573   00240E  C18D  F022         	movff	powf@s2+1,___flmul@b+1
  9574   002412  C18E  F023         	movff	powf@s2+2,___flmul@b+2
  9575   002416  C18F  F024         	movff	powf@s2+3,___flmul@b+3
  9576   00241A  ECF4  F031         	call	___flmul	;wreg free
  9577   00241E  C021  F011         	movff	?___flmul,___fladd@b
  9578   002422  C022  F012         	movff	?___flmul+1,___fladd@b+1
  9579   002426  C023  F013         	movff	?___flmul+2,___fladd@b+2
  9580   00242A  C024  F014         	movff	?___flmul+3,___fladd@b+3
  9581   00242E  EC00  F02B         	call	___fladd	;wreg free
  9582   002432  C011  F1A4         	movff	?___fladd,_powf$2921
  9583   002436  C012  F1A5         	movff	?___fladd+1,_powf$2921+1
  9584   00243A  C013  F1A6         	movff	?___fladd+2,_powf$2921+2
  9585   00243E  C014  F1A7         	movff	?___fladd+3,_powf$2921+3
  9586   002442  0E05               	movlw	5
  9587   002444  6E15               	movwf	___fladd@a^0,c
  9588   002446  0EA3               	movlw	163
  9589   002448  6E16               	movwf	(___fladd@a+1)^0,c
  9590   00244A  0E8B               	movlw	139
  9591   00244C  6E17               	movwf	(___fladd@a+2)^0,c
  9592   00244E  0E3E               	movlw	62
  9593   002450  6E18               	movwf	(___fladd@a+3)^0,c
  9594   002452  C18C  F025         	movff	powf@s2,___flmul@a
  9595   002456  C18D  F026         	movff	powf@s2+1,___flmul@a+1
  9596   00245A  C18E  F027         	movff	powf@s2+2,___flmul@a+2
  9597   00245E  C18F  F028         	movff	powf@s2+3,___flmul@a+3
  9598   002462  C1A4  F021         	movff	_powf$2921,___flmul@b
  9599   002466  C1A5  F022         	movff	_powf$2921+1,___flmul@b+1
  9600   00246A  C1A6  F023         	movff	_powf$2921+2,___flmul@b+2
  9601   00246E  C1A7  F024         	movff	_powf$2921+3,___flmul@b+3
  9602   002472  ECF4  F031         	call	___flmul	;wreg free
  9603   002476  C021  F011         	movff	?___flmul,___fladd@b
  9604   00247A  C022  F012         	movff	?___flmul+1,___fladd@b+1
  9605   00247E  C023  F013         	movff	?___flmul+2,___fladd@b+2
  9606   002482  C024  F014         	movff	?___flmul+3,___fladd@b+3
  9607   002486  EC00  F02B         	call	___fladd	;wreg free
  9608   00248A  C011  F154         	movff	?___fladd,_powf$2922
  9609   00248E  C012  F155         	movff	?___fladd+1,_powf$2922+1
  9610   002492  C013  F156         	movff	?___fladd+2,_powf$2922+2
  9611   002496  C014  F157         	movff	?___fladd+3,_powf$2922+3
  9612   00249A  0EAB               	movlw	171
  9613   00249C  6E15               	movwf	___fladd@a^0,c
  9614   00249E  0EAA               	movlw	170
  9615   0024A0  6E16               	movwf	(___fladd@a+1)^0,c
  9616   0024A2  0EAA               	movlw	170
  9617   0024A4  6E17               	movwf	(___fladd@a+2)^0,c
  9618   0024A6  0E3E               	movlw	62
  9619   0024A8  6E18               	movwf	(___fladd@a+3)^0,c
  9620   0024AA  C18C  F025         	movff	powf@s2,___flmul@a
  9621   0024AE  C18D  F026         	movff	powf@s2+1,___flmul@a+1
  9622   0024B2  C18E  F027         	movff	powf@s2+2,___flmul@a+2
  9623   0024B6  C18F  F028         	movff	powf@s2+3,___flmul@a+3
  9624   0024BA  C154  F021         	movff	_powf$2922,___flmul@b
  9625   0024BE  C155  F022         	movff	_powf$2922+1,___flmul@b+1
  9626   0024C2  C156  F023         	movff	_powf$2922+2,___flmul@b+2
  9627   0024C6  C157  F024         	movff	_powf$2922+3,___flmul@b+3
  9628   0024CA  ECF4  F031         	call	___flmul	;wreg free
  9629   0024CE  C021  F011         	movff	?___flmul,___fladd@b
  9630   0024D2  C022  F012         	movff	?___flmul+1,___fladd@b+1
  9631   0024D6  C023  F013         	movff	?___flmul+2,___fladd@b+2
  9632   0024DA  C024  F014         	movff	?___flmul+3,___fladd@b+3
  9633   0024DE  EC00  F02B         	call	___fladd	;wreg free
  9634   0024E2  C011  F148         	movff	?___fladd,_powf$2923
  9635   0024E6  C012  F149         	movff	?___fladd+1,_powf$2923+1
  9636   0024EA  C013  F14A         	movff	?___fladd+2,_powf$2923+2
  9637   0024EE  C014  F14B         	movff	?___fladd+3,_powf$2923+3
  9638   0024F2  0EB7               	movlw	183
  9639   0024F4  6E15               	movwf	___fladd@a^0,c
  9640   0024F6  0E6D               	movlw	109
  9641   0024F8  6E16               	movwf	(___fladd@a+1)^0,c
  9642   0024FA  0EDB               	movlw	219
  9643   0024FC  6E17               	movwf	(___fladd@a+2)^0,c
  9644   0024FE  0E3E               	movlw	62
  9645   002500  6E18               	movwf	(___fladd@a+3)^0,c
  9646   002502  C18C  F025         	movff	powf@s2,___flmul@a
  9647   002506  C18D  F026         	movff	powf@s2+1,___flmul@a+1
  9648   00250A  C18E  F027         	movff	powf@s2+2,___flmul@a+2
  9649   00250E  C18F  F028         	movff	powf@s2+3,___flmul@a+3
  9650   002512  C148  F021         	movff	_powf$2923,___flmul@b
  9651   002516  C149  F022         	movff	_powf$2923+1,___flmul@b+1
  9652   00251A  C14A  F023         	movff	_powf$2923+2,___flmul@b+2
  9653   00251E  C14B  F024         	movff	_powf$2923+3,___flmul@b+3
  9654   002522  ECF4  F031         	call	___flmul	;wreg free
  9655   002526  C021  F011         	movff	?___flmul,___fladd@b
  9656   00252A  C022  F012         	movff	?___flmul+1,___fladd@b+1
  9657   00252E  C023  F013         	movff	?___flmul+2,___fladd@b+2
  9658   002532  C024  F014         	movff	?___flmul+3,___fladd@b+3
  9659   002536  EC00  F02B         	call	___fladd	;wreg free
  9660   00253A  C011  F138         	movff	?___fladd,_powf$2925
  9661   00253E  C012  F139         	movff	?___fladd+1,_powf$2925+1
  9662   002542  C013  F13A         	movff	?___fladd+2,_powf$2925+2
  9663   002546  C014  F13B         	movff	?___fladd+3,_powf$2925+3
  9664   00254A  0E9A               	movlw	154
  9665   00254C  6E15               	movwf	___fladd@a^0,c
  9666   00254E  0E99               	movlw	153
  9667   002550  6E16               	movwf	(___fladd@a+1)^0,c
  9668   002552  0E19               	movlw	25
  9669   002554  6E17               	movwf	(___fladd@a+2)^0,c
  9670   002556  0E3F               	movlw	63
  9671   002558  6E18               	movwf	(___fladd@a+3)^0,c
  9672   00255A  C18C  F025         	movff	powf@s2,___flmul@a
  9673   00255E  C18D  F026         	movff	powf@s2+1,___flmul@a+1
  9674   002562  C18E  F027         	movff	powf@s2+2,___flmul@a+2
  9675   002566  C18F  F028         	movff	powf@s2+3,___flmul@a+3
  9676   00256A  C138  F021         	movff	_powf$2925,___flmul@b
  9677   00256E  C139  F022         	movff	_powf$2925+1,___flmul@b+1
  9678   002572  C13A  F023         	movff	_powf$2925+2,___flmul@b+2
  9679   002576  C13B  F024         	movff	_powf$2925+3,___flmul@b+3
  9680   00257A  ECF4  F031         	call	___flmul	;wreg free
  9681   00257E  C021  F011         	movff	?___flmul,___fladd@b
  9682   002582  C022  F012         	movff	?___flmul+1,___fladd@b+1
  9683   002586  C023  F013         	movff	?___flmul+2,___fladd@b+2
  9684   00258A  C024  F014         	movff	?___flmul+3,___fladd@b+3
  9685   00258E  EC00  F02B         	call	___fladd	;wreg free
  9686   002592  C011  F100         	movff	?___fladd,_powf$2926
  9687   002596  C012  F101         	movff	?___fladd+1,_powf$2926+1
  9688   00259A  C013  F102         	movff	?___fladd+2,_powf$2926+2
  9689   00259E  C014  F103         	movff	?___fladd+3,_powf$2926+3
  9690   0025A2  C18C  F025         	movff	powf@s2,___flmul@a
  9691   0025A6  C18D  F026         	movff	powf@s2+1,___flmul@a+1
  9692   0025AA  C18E  F027         	movff	powf@s2+2,___flmul@a+2
  9693   0025AE  C18F  F028         	movff	powf@s2+3,___flmul@a+3
  9694   0025B2  C18C  F021         	movff	powf@s2,___flmul@b
  9695   0025B6  C18D  F022         	movff	powf@s2+1,___flmul@b+1
  9696   0025BA  C18E  F023         	movff	powf@s2+2,___flmul@b+2
  9697   0025BE  C18F  F024         	movff	powf@s2+3,___flmul@b+3
  9698   0025C2  ECF4  F031         	call	___flmul	;wreg free
  9699   0025C6  C021  F104         	movff	?___flmul,_powf$2927
  9700   0025CA  C022  F105         	movff	?___flmul+1,_powf$2927+1
  9701   0025CE  C023  F106         	movff	?___flmul+2,_powf$2927+2
  9702   0025D2  C024  F107         	movff	?___flmul+3,_powf$2927+3
  9703   0025D6  C100  F021         	movff	_powf$2926,___flmul@b
  9704   0025DA  C101  F022         	movff	_powf$2926+1,___flmul@b+1
  9705   0025DE  C102  F023         	movff	_powf$2926+2,___flmul@b+2
  9706   0025E2  C103  F024         	movff	_powf$2926+3,___flmul@b+3
  9707   0025E6  C104  F025         	movff	_powf$2927,___flmul@a
  9708   0025EA  C105  F026         	movff	_powf$2927+1,___flmul@a+1
  9709   0025EE  C106  F027         	movff	_powf$2927+2,___flmul@a+2
  9710   0025F2  C107  F028         	movff	_powf$2927+3,___flmul@a+3
  9711   0025F6  ECF4  F031         	call	___flmul	;wreg free
  9712   0025FA  C021  F14C         	movff	?___flmul,powf@r
  9713   0025FE  C022  F14D         	movff	?___flmul+1,powf@r+1
  9714   002602  C023  F14E         	movff	?___flmul+2,powf@r+2
  9715   002606  C024  F14F         	movff	?___flmul+3,powf@r+3
  9716   00260A  C130  F025         	movff	powf@s_l,___flmul@a
  9717   00260E  C131  F026         	movff	powf@s_l+1,___flmul@a+1
  9718   002612  C132  F027         	movff	powf@s_l+2,___flmul@a+2
  9719   002616  C133  F028         	movff	powf@s_l+3,___flmul@a+3
  9720   00261A  C15C  F015         	movff	powf@s,___fladd@a
  9721   00261E  C15D  F016         	movff	powf@s+1,___fladd@a+1
  9722   002622  C15E  F017         	movff	powf@s+2,___fladd@a+2
  9723   002626  C15F  F018         	movff	powf@s+3,___fladd@a+3
  9724   00262A  C16C  F011         	movff	powf@s_h,___fladd@b
  9725   00262E  C16D  F012         	movff	powf@s_h+1,___fladd@b+1
  9726   002632  C16E  F013         	movff	powf@s_h+2,___fladd@b+2
  9727   002636  C16F  F014         	movff	powf@s_h+3,___fladd@b+3
  9728   00263A  EC00  F02B         	call	___fladd	;wreg free
  9729   00263E  C011  F021         	movff	?___fladd,___flmul@b
  9730   002642  C012  F022         	movff	?___fladd+1,___flmul@b+1
  9731   002646  C013  F023         	movff	?___fladd+2,___flmul@b+2
  9732   00264A  C014  F024         	movff	?___fladd+3,___flmul@b+3
  9733   00264E  ECF4  F031         	call	___flmul	;wreg free
  9734   002652  C021  F158         	movff	?___flmul,_powf$2928
  9735   002656  C022  F159         	movff	?___flmul+1,_powf$2928+1
  9736   00265A  C023  F15A         	movff	?___flmul+2,_powf$2928+2
  9737   00265E  C024  F15B         	movff	?___flmul+3,_powf$2928+3
  9738   002662  C14C  F011         	movff	powf@r,___fladd@b
  9739   002666  C14D  F012         	movff	powf@r+1,___fladd@b+1
  9740   00266A  C14E  F013         	movff	powf@r+2,___fladd@b+2
  9741   00266E  C14F  F014         	movff	powf@r+3,___fladd@b+3
  9742   002672  C158  F015         	movff	_powf$2928,___fladd@a
  9743   002676  C159  F016         	movff	_powf$2928+1,___fladd@a+1
  9744   00267A  C15A  F017         	movff	_powf$2928+2,___fladd@a+2
  9745   00267E  C15B  F018         	movff	_powf$2928+3,___fladd@a+3
  9746   002682  EC00  F02B         	call	___fladd	;wreg free
  9747   002686  C011  F14C         	movff	?___fladd,powf@r
  9748   00268A  C012  F14D         	movff	?___fladd+1,powf@r+1
  9749   00268E  C013  F14E         	movff	?___fladd+2,powf@r+2
  9750   002692  C014  F14F         	movff	?___fladd+3,powf@r+3
  9751   002696  C16C  F021         	movff	powf@s_h,___flmul@b
  9752   00269A  C16D  F022         	movff	powf@s_h+1,___flmul@b+1
  9753   00269E  C16E  F023         	movff	powf@s_h+2,___flmul@b+2
  9754   0026A2  C16F  F024         	movff	powf@s_h+3,___flmul@b+3
  9755   0026A6  C16C  F025         	movff	powf@s_h,___flmul@a
  9756   0026AA  C16D  F026         	movff	powf@s_h+1,___flmul@a+1
  9757   0026AE  C16E  F027         	movff	powf@s_h+2,___flmul@a+2
  9758   0026B2  C16F  F028         	movff	powf@s_h+3,___flmul@a+3
  9759   0026B6  ECF4  F031         	call	___flmul	;wreg free
  9760   0026BA  C021  F18C         	movff	?___flmul,powf@s2
  9761   0026BE  C022  F18D         	movff	?___flmul+1,powf@s2+1
  9762   0026C2  C023  F18E         	movff	?___flmul+2,powf@s2+2
  9763   0026C6  C024  F18F         	movff	?___flmul+3,powf@s2+3
  9764   0026CA  0E00               	movlw	0
  9765   0026CC  6E15               	movwf	___fladd@a^0,c
  9766   0026CE  0E00               	movlw	0
  9767   0026D0  6E16               	movwf	(___fladd@a+1)^0,c
  9768   0026D2  0E40               	movlw	64
  9769   0026D4  6E17               	movwf	(___fladd@a+2)^0,c
  9770   0026D6  0E40               	movlw	64
  9771   0026D8  6E18               	movwf	(___fladd@a+3)^0,c
  9772   0026DA  C18C  F011         	movff	powf@s2,___fladd@b
  9773   0026DE  C18D  F012         	movff	powf@s2+1,___fladd@b+1
  9774   0026E2  C18E  F013         	movff	powf@s2+2,___fladd@b+2
  9775   0026E6  C18F  F014         	movff	powf@s2+3,___fladd@b+3
  9776   0026EA  EC00  F02B         	call	___fladd	;wreg free
  9777   0026EE  C011  F158         	movff	?___fladd,_powf$2928
  9778   0026F2  C012  F159         	movff	?___fladd+1,_powf$2928+1
  9779   0026F6  C013  F15A         	movff	?___fladd+2,_powf$2928+2
  9780   0026FA  C014  F15B         	movff	?___fladd+3,_powf$2928+3
  9781   0026FE  C158  F011         	movff	_powf$2928,___fladd@b
  9782   002702  C159  F012         	movff	_powf$2928+1,___fladd@b+1
  9783   002706  C15A  F013         	movff	_powf$2928+2,___fladd@b+2
  9784   00270A  C15B  F014         	movff	_powf$2928+3,___fladd@b+3
  9785   00270E  C14C  F015         	movff	powf@r,___fladd@a
  9786   002712  C14D  F016         	movff	powf@r+1,___fladd@a+1
  9787   002716  C14E  F017         	movff	powf@r+2,___fladd@a+2
  9788   00271A  C14F  F018         	movff	powf@r+3,___fladd@a+3
  9789   00271E  EC00  F02B         	call	___fladd	;wreg free
  9790   002722  C011  F168         	movff	?___fladd,powf@t_h
  9791   002726  C012  F169         	movff	?___fladd+1,powf@t_h+1
  9792   00272A  C013  F16A         	movff	?___fladd+2,powf@t_h+2
  9793   00272E  C014  F16B         	movff	?___fladd+3,powf@t_h+3
  9794   002732  C168  F1B8         	movff	powf@t_h,powf@__xc8_float_word
  9795   002736  C169  F1B9         	movff	powf@t_h+1,powf@__xc8_float_word+1
  9796   00273A  C16A  F1BA         	movff	powf@t_h+2,powf@__xc8_float_word+2
  9797   00273E  C16B  F1BB         	movff	powf@t_h+3,powf@__xc8_float_word+3
  9798   002742  C1B8  F194         	movff	powf@__xc8_float_word,powf@is
  9799   002746  C1B9  F195         	movff	powf@__xc8_float_word+1,powf@is+1
  9800   00274A  C1BA  F196         	movff	powf@__xc8_float_word+2,powf@is+2
  9801   00274E  C1BB  F197         	movff	powf@__xc8_float_word+3,powf@is+3
  9802   002752  0E00               	movlw	0
  9803   002754  0101               	movlb	1	; () banked
  9804   002756  1594               	andwf	powf@is& (0+255),w,b
  9805   002758  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
  9806   00275A  0EF0               	movlw	240
  9807   00275C  1595               	andwf	(powf@is+1)& (0+255),w,b
  9808   00275E  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
  9809   002760  0EFF               	movlw	255
  9810   002762  1596               	andwf	(powf@is+2)& (0+255),w,b
  9811   002764  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
  9812   002766  0EFF               	movlw	255
  9813   002768  1597               	andwf	(powf@is+3)& (0+255),w,b
  9814   00276A  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
  9815   00276C                     
  9816                           ; BSR set to: 1
  9817   00276C  C1B8  F168         	movff	powf@__xc8_float_word,powf@t_h
  9818   002770  C1B9  F169         	movff	powf@__xc8_float_word+1,powf@t_h+1
  9819   002774  C1BA  F16A         	movff	powf@__xc8_float_word+2,powf@t_h+2
  9820   002778  C1BB  F16B         	movff	powf@__xc8_float_word+3,powf@t_h+3
  9821   00277C                     
  9822                           ; BSR set to: 1
  9823   00277C  0E00               	movlw	0
  9824   00277E  6E15               	movwf	___fladd@a^0,c
  9825   002780  0E00               	movlw	0
  9826   002782  6E16               	movwf	(___fladd@a+1)^0,c
  9827   002784  0E40               	movlw	64
  9828   002786  6E17               	movwf	(___fladd@a+2)^0,c
  9829   002788  0EC0               	movlw	192
  9830   00278A  6E18               	movwf	(___fladd@a+3)^0,c
  9831   00278C  C168  F011         	movff	powf@t_h,___fladd@b
  9832   002790  C169  F012         	movff	powf@t_h+1,___fladd@b+1
  9833   002794  C16A  F013         	movff	powf@t_h+2,___fladd@b+2
  9834   002798  C16B  F014         	movff	powf@t_h+3,___fladd@b+3
  9835   00279C  EC00  F02B         	call	___fladd	;wreg free
  9836   0027A0  C011  F13C         	movff	?___fladd,_powf$2929
  9837   0027A4  C012  F13D         	movff	?___fladd+1,_powf$2929+1
  9838   0027A8  C013  F13E         	movff	?___fladd+2,_powf$2929+2
  9839   0027AC  C014  F13F         	movff	?___fladd+3,_powf$2929+3
  9840   0027B0  C18C  F03E         	movff	powf@s2,___flsub@a
  9841   0027B4  C18D  F03F         	movff	powf@s2+1,___flsub@a+1
  9842   0027B8  C18E  F040         	movff	powf@s2+2,___flsub@a+2
  9843   0027BC  C18F  F041         	movff	powf@s2+3,___flsub@a+3
  9844   0027C0  C13C  F03A         	movff	_powf$2929,___flsub@b
  9845   0027C4  C13D  F03B         	movff	_powf$2929+1,___flsub@b+1
  9846   0027C8  C13E  F03C         	movff	_powf$2929+2,___flsub@b+2
  9847   0027CC  C13F  F03D         	movff	_powf$2929+3,___flsub@b+3
  9848   0027D0  EC8D  F053         	call	___flsub	;wreg free
  9849   0027D4  C03A  F140         	movff	?___flsub,_powf$2930
  9850   0027D8  C03B  F141         	movff	?___flsub+1,_powf$2930+1
  9851   0027DC  C03C  F142         	movff	?___flsub+2,_powf$2930+2
  9852   0027E0  C03D  F143         	movff	?___flsub+3,_powf$2930+3
  9853   0027E4  C14C  F03A         	movff	powf@r,___flsub@b
  9854   0027E8  C14D  F03B         	movff	powf@r+1,___flsub@b+1
  9855   0027EC  C14E  F03C         	movff	powf@r+2,___flsub@b+2
  9856   0027F0  C14F  F03D         	movff	powf@r+3,___flsub@b+3
  9857   0027F4  C140  F03E         	movff	_powf$2930,___flsub@a
  9858   0027F8  C141  F03F         	movff	_powf$2930+1,___flsub@a+1
  9859   0027FC  C142  F040         	movff	_powf$2930+2,___flsub@a+2
  9860   002800  C143  F041         	movff	_powf$2930+3,___flsub@a+3
  9861   002804  EC8D  F053         	call	___flsub	;wreg free
  9862   002808  C03A  F134         	movff	?___flsub,powf@t_l
  9863   00280C  C03B  F135         	movff	?___flsub+1,powf@t_l+1
  9864   002810  C03C  F136         	movff	?___flsub+2,powf@t_l+2
  9865   002814  C03D  F137         	movff	?___flsub+3,powf@t_l+3
  9866   002818  C16C  F021         	movff	powf@s_h,___flmul@b
  9867   00281C  C16D  F022         	movff	powf@s_h+1,___flmul@b+1
  9868   002820  C16E  F023         	movff	powf@s_h+2,___flmul@b+2
  9869   002824  C16F  F024         	movff	powf@s_h+3,___flmul@b+3
  9870   002828  C168  F025         	movff	powf@t_h,___flmul@a
  9871   00282C  C169  F026         	movff	powf@t_h+1,___flmul@a+1
  9872   002830  C16A  F027         	movff	powf@t_h+2,___flmul@a+2
  9873   002834  C16B  F028         	movff	powf@t_h+3,___flmul@a+3
  9874   002838  ECF4  F031         	call	___flmul	;wreg free
  9875   00283C  C021  F174         	movff	?___flmul,powf@u
  9876   002840  C022  F175         	movff	?___flmul+1,powf@u+1
  9877   002844  C023  F176         	movff	?___flmul+2,powf@u+2
  9878   002848  C024  F177         	movff	?___flmul+3,powf@u+3
  9879   00284C  C168  F025         	movff	powf@t_h,___flmul@a
  9880   002850  C169  F026         	movff	powf@t_h+1,___flmul@a+1
  9881   002854  C16A  F027         	movff	powf@t_h+2,___flmul@a+2
  9882   002858  C16B  F028         	movff	powf@t_h+3,___flmul@a+3
  9883   00285C  C130  F021         	movff	powf@s_l,___flmul@b
  9884   002860  C131  F022         	movff	powf@s_l+1,___flmul@b+1
  9885   002864  C132  F023         	movff	powf@s_l+2,___flmul@b+2
  9886   002868  C133  F024         	movff	powf@s_l+3,___flmul@b+3
  9887   00286C  ECF4  F031         	call	___flmul	;wreg free
  9888   002870  C021  F011         	movff	?___flmul,___fladd@b
  9889   002874  C022  F012         	movff	?___flmul+1,___fladd@b+1
  9890   002878  C023  F013         	movff	?___flmul+2,___fladd@b+2
  9891   00287C  C024  F014         	movff	?___flmul+3,___fladd@b+3
  9892   002880  C15C  F025         	movff	powf@s,___flmul@a
  9893   002884  C15D  F026         	movff	powf@s+1,___flmul@a+1
  9894   002888  C15E  F027         	movff	powf@s+2,___flmul@a+2
  9895   00288C  C15F  F028         	movff	powf@s+3,___flmul@a+3
  9896   002890  C134  F021         	movff	powf@t_l,___flmul@b
  9897   002894  C135  F022         	movff	powf@t_l+1,___flmul@b+1
  9898   002898  C136  F023         	movff	powf@t_l+2,___flmul@b+2
  9899   00289C  C137  F024         	movff	powf@t_l+3,___flmul@b+3
  9900   0028A0  ECF4  F031         	call	___flmul	;wreg free
  9901   0028A4  C021  F015         	movff	?___flmul,___fladd@a
  9902   0028A8  C022  F016         	movff	?___flmul+1,___fladd@a+1
  9903   0028AC  C023  F017         	movff	?___flmul+2,___fladd@a+2
  9904   0028B0  C024  F018         	movff	?___flmul+3,___fladd@a+3
  9905   0028B4  EC00  F02B         	call	___fladd	;wreg free
  9906   0028B8  C011  F178         	movff	?___fladd,powf@v
  9907   0028BC  C012  F179         	movff	?___fladd+1,powf@v+1
  9908   0028C0  C013  F17A         	movff	?___fladd+2,powf@v+2
  9909   0028C4  C014  F17B         	movff	?___fladd+3,powf@v+3
  9910   0028C8  C174  F011         	movff	powf@u,___fladd@b
  9911   0028CC  C175  F012         	movff	powf@u+1,___fladd@b+1
  9912   0028D0  C176  F013         	movff	powf@u+2,___fladd@b+2
  9913   0028D4  C177  F014         	movff	powf@u+3,___fladd@b+3
  9914   0028D8  C178  F015         	movff	powf@v,___fladd@a
  9915   0028DC  C179  F016         	movff	powf@v+1,___fladd@a+1
  9916   0028E0  C17A  F017         	movff	powf@v+2,___fladd@a+2
  9917   0028E4  C17B  F018         	movff	powf@v+3,___fladd@a+3
  9918   0028E8  EC00  F02B         	call	___fladd	;wreg free
  9919   0028EC  C011  F19C         	movff	?___fladd,powf@p_h
  9920   0028F0  C012  F19D         	movff	?___fladd+1,powf@p_h+1
  9921   0028F4  C013  F19E         	movff	?___fladd+2,powf@p_h+2
  9922   0028F8  C014  F19F         	movff	?___fladd+3,powf@p_h+3
  9923   0028FC  C19C  F1B8         	movff	powf@p_h,powf@__xc8_float_word
  9924   002900  C19D  F1B9         	movff	powf@p_h+1,powf@__xc8_float_word+1
  9925   002904  C19E  F1BA         	movff	powf@p_h+2,powf@__xc8_float_word+2
  9926   002908  C19F  F1BB         	movff	powf@p_h+3,powf@__xc8_float_word+3
  9927   00290C  C1B8  F194         	movff	powf@__xc8_float_word,powf@is
  9928   002910  C1B9  F195         	movff	powf@__xc8_float_word+1,powf@is+1
  9929   002914  C1BA  F196         	movff	powf@__xc8_float_word+2,powf@is+2
  9930   002918  C1BB  F197         	movff	powf@__xc8_float_word+3,powf@is+3
  9931   00291C  0E00               	movlw	0
  9932   00291E  0101               	movlb	1	; () banked
  9933   002920  1594               	andwf	powf@is& (0+255),w,b
  9934   002922  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
  9935   002924  0EF0               	movlw	240
  9936   002926  1595               	andwf	(powf@is+1)& (0+255),w,b
  9937   002928  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
  9938   00292A  0EFF               	movlw	255
  9939   00292C  1596               	andwf	(powf@is+2)& (0+255),w,b
  9940   00292E  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
  9941   002930  0EFF               	movlw	255
  9942   002932  1597               	andwf	(powf@is+3)& (0+255),w,b
  9943   002934  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
  9944   002936                     
  9945                           ; BSR set to: 1
  9946   002936  C1B8  F19C         	movff	powf@__xc8_float_word,powf@p_h
  9947   00293A  C1B9  F19D         	movff	powf@__xc8_float_word+1,powf@p_h+1
  9948   00293E  C1BA  F19E         	movff	powf@__xc8_float_word+2,powf@p_h+2
  9949   002942  C1BB  F19F         	movff	powf@__xc8_float_word+3,powf@p_h+3
  9950   002946                     
  9951                           ; BSR set to: 1
  9952   002946  C174  F03E         	movff	powf@u,___flsub@a
  9953   00294A  C175  F03F         	movff	powf@u+1,___flsub@a+1
  9954   00294E  C176  F040         	movff	powf@u+2,___flsub@a+2
  9955   002952  C177  F041         	movff	powf@u+3,___flsub@a+3
  9956   002956  C19C  F03A         	movff	powf@p_h,___flsub@b
  9957   00295A  C19D  F03B         	movff	powf@p_h+1,___flsub@b+1
  9958   00295E  C19E  F03C         	movff	powf@p_h+2,___flsub@b+2
  9959   002962  C19F  F03D         	movff	powf@p_h+3,___flsub@b+3
  9960   002966  EC8D  F053         	call	___flsub	;wreg free
  9961   00296A  C03A  F198         	movff	?___flsub,_powf$2924
  9962   00296E  C03B  F199         	movff	?___flsub+1,_powf$2924+1
  9963   002972  C03C  F19A         	movff	?___flsub+2,_powf$2924+2
  9964   002976  C03D  F19B         	movff	?___flsub+3,_powf$2924+3
  9965   00297A  C178  F03A         	movff	powf@v,___flsub@b
  9966   00297E  C179  F03B         	movff	powf@v+1,___flsub@b+1
  9967   002982  C17A  F03C         	movff	powf@v+2,___flsub@b+2
  9968   002986  C17B  F03D         	movff	powf@v+3,___flsub@b+3
  9969   00298A  C198  F03E         	movff	_powf$2924,___flsub@a
  9970   00298E  C199  F03F         	movff	_powf$2924+1,___flsub@a+1
  9971   002992  C19A  F040         	movff	_powf$2924+2,___flsub@a+2
  9972   002996  C19B  F041         	movff	_powf$2924+3,___flsub@a+3
  9973   00299A  EC8D  F053         	call	___flsub	;wreg free
  9974   00299E  C03A  F164         	movff	?___flsub,powf@p_l
  9975   0029A2  C03B  F165         	movff	?___flsub+1,powf@p_l+1
  9976   0029A6  C03C  F166         	movff	?___flsub+2,powf@p_l+2
  9977   0029AA  C03D  F167         	movff	?___flsub+3,powf@p_l+3
  9978   0029AE  C19C  F021         	movff	powf@p_h,___flmul@b
  9979   0029B2  C19D  F022         	movff	powf@p_h+1,___flmul@b+1
  9980   0029B6  C19E  F023         	movff	powf@p_h+2,___flmul@b+2
  9981   0029BA  C19F  F024         	movff	powf@p_h+3,___flmul@b+3
  9982   0029BE  0E00               	movlw	0
  9983   0029C0  6E25               	movwf	___flmul@a^0,c
  9984   0029C2  0E40               	movlw	64
  9985   0029C4  6E26               	movwf	(___flmul@a+1)^0,c
  9986   0029C6  0E76               	movlw	118
  9987   0029C8  6E27               	movwf	(___flmul@a+2)^0,c
  9988   0029CA  0E3F               	movlw	63
  9989   0029CC  6E28               	movwf	(___flmul@a+3)^0,c
  9990   0029CE  ECF4  F031         	call	___flmul	;wreg free
  9991   0029D2  C021  F120         	movff	?___flmul,powf@z_h
  9992   0029D6  C022  F121         	movff	?___flmul+1,powf@z_h+1
  9993   0029DA  C023  F122         	movff	?___flmul+2,powf@z_h+2
  9994   0029DE  C024  F123         	movff	?___flmul+3,powf@z_h+3
  9995   0029E2  0E4F               	movlw	79
  9996   0029E4  6E25               	movwf	___flmul@a^0,c
  9997   0029E6  0E38               	movlw	56
  9998   0029E8  6E26               	movwf	(___flmul@a+1)^0,c
  9999   0029EA  0E76               	movlw	118
 10000   0029EC  6E27               	movwf	(___flmul@a+2)^0,c
 10001   0029EE  0E3F               	movlw	63
 10002   0029F0  6E28               	movwf	(___flmul@a+3)^0,c
 10003   0029F2  C164  F021         	movff	powf@p_l,___flmul@b
 10004   0029F6  C165  F022         	movff	powf@p_l+1,___flmul@b+1
 10005   0029FA  C166  F023         	movff	powf@p_l+2,___flmul@b+2
 10006   0029FE  C167  F024         	movff	powf@p_l+3,___flmul@b+3
 10007   002A02  ECF4  F031         	call	___flmul	;wreg free
 10008   002A06  C021  F015         	movff	?___flmul,___fladd@a
 10009   002A0A  C022  F016         	movff	?___flmul+1,___fladd@a+1
 10010   002A0E  C023  F017         	movff	?___flmul+2,___fladd@a+2
 10011   002A12  C024  F018         	movff	?___flmul+3,___fladd@a+3
 10012   002A16  0EC6               	movlw	198
 10013   002A18  6E25               	movwf	___flmul@a^0,c
 10014   002A1A  0E23               	movlw	35
 10015   002A1C  6E26               	movwf	(___flmul@a+1)^0,c
 10016   002A1E  0EF6               	movlw	246
 10017   002A20  6E27               	movwf	(___flmul@a+2)^0,c
 10018   002A22  0EB8               	movlw	184
 10019   002A24  6E28               	movwf	(___flmul@a+3)^0,c
 10020   002A26  C19C  F021         	movff	powf@p_h,___flmul@b
 10021   002A2A  C19D  F022         	movff	powf@p_h+1,___flmul@b+1
 10022   002A2E  C19E  F023         	movff	powf@p_h+2,___flmul@b+2
 10023   002A32  C19F  F024         	movff	powf@p_h+3,___flmul@b+3
 10024   002A36  ECF4  F031         	call	___flmul	;wreg free
 10025   002A3A  C021  F011         	movff	?___flmul,___fladd@b
 10026   002A3E  C022  F012         	movff	?___flmul+1,___fladd@b+1
 10027   002A42  C023  F013         	movff	?___flmul+2,___fladd@b+2
 10028   002A46  C024  F014         	movff	?___flmul+3,___fladd@b+3
 10029   002A4A  EC00  F02B         	call	___fladd	;wreg free
 10030   002A4E  C011  F158         	movff	?___fladd,_powf$2928
 10031   002A52  C012  F159         	movff	?___fladd+1,_powf$2928+1
 10032   002A56  C013  F15A         	movff	?___fladd+2,_powf$2928+2
 10033   002A5A  C014  F15B         	movff	?___fladd+3,_powf$2928+3
 10034   002A5E  C158  F011         	movff	_powf$2928,___fladd@b
 10035   002A62  C159  F012         	movff	_powf$2928+1,___fladd@b+1
 10036   002A66  C15A  F013         	movff	_powf$2928+2,___fladd@b+2
 10037   002A6A  C15B  F014         	movff	_powf$2928+3,___fladd@b+3
 10038   002A6E  C1A0  F088         	movff	powf@k,??_powf
 10039   002A72  C1A1  F089         	movff	powf@k+1,??_powf+1
 10040   002A76  0100               	movlb	0	; () banked
 10041   002A78  90D8               	bcf	status,0,c
 10042   002A7A  3788               	rlcf	??_powf& (0+255),f,b
 10043   002A7C  3789               	rlcf	(??_powf+1)& (0+255),f,b
 10044   002A7E  90D8               	bcf	status,0,c
 10045   002A80  3788               	rlcf	??_powf& (0+255),f,b
 10046   002A82  3789               	rlcf	(??_powf+1)& (0+255),f,b
 10047   002A84  0E11               	movlw	low _dp_l
 10048   002A86  2588               	addwf	??_powf& (0+255),w,b
 10049   002A88  6EF6               	movwf	tblptrl,c
 10050   002A8A  0E10               	movlw	high _dp_l
 10051   002A8C  2189               	addwfc	(??_powf+1)& (0+255),w,b
 10052   002A8E  6EF7               	movwf	tblptrh,c
 10053   002A90                     	if	1	;There are 3 active tblptr bytes
 10054   002A90  6AF8               	clrf	tblptru,c
 10055   002A92  0E00               	movlw	low (__mediumconst shr (0+16))
 10056   002A94  22F8               	addwfc	tblptru,f,c
 10057   002A96                     	endif
 10058   002A96  0009               	tblrd		*+
 10059   002A98  CFF5 F015          	movff	tablat,___fladd@a
 10060   002A9C  0009               	tblrd		*+
 10061   002A9E  CFF5 F016          	movff	tablat,___fladd@a+1
 10062   002AA2  0009               	tblrd		*+
 10063   002AA4  CFF5 F017          	movff	tablat,___fladd@a+2
 10064   002AA8  000A               	tblrd		*-
 10065   002AAA  CFF5 F018          	movff	tablat,___fladd@a+3
 10066   002AAE  EC00  F02B         	call	___fladd	;wreg free
 10067   002AB2  C011  F124         	movff	?___fladd,powf@z_l
 10068   002AB6  C012  F125         	movff	?___fladd+1,powf@z_l+1
 10069   002ABA  C013  F126         	movff	?___fladd+2,powf@z_l+2
 10070   002ABE  C014  F127         	movff	?___fladd+3,powf@z_l+3
 10071   002AC2  C180  F003         	movff	powf@n,___xxtofl@val
 10072   002AC6  C181  F004         	movff	powf@n+1,___xxtofl@val+1
 10073   002ACA  C182  F005         	movff	powf@n+2,___xxtofl@val+2
 10074   002ACE  C183  F006         	movff	powf@n+3,___xxtofl@val+3
 10075   002AD2  0E01               	movlw	1
 10076   002AD4  EC01  F040         	call	___xxtofl
 10077   002AD8  C003  F1B0         	movff	?___xxtofl,powf@t
 10078   002ADC  C004  F1B1         	movff	?___xxtofl+1,powf@t+1
 10079   002AE0  C005  F1B2         	movff	?___xxtofl+2,powf@t+2
 10080   002AE4  C006  F1B3         	movff	?___xxtofl+3,powf@t+3
 10081   002AE8  C124  F015         	movff	powf@z_l,___fladd@a
 10082   002AEC  C125  F016         	movff	powf@z_l+1,___fladd@a+1
 10083   002AF0  C126  F017         	movff	powf@z_l+2,___fladd@a+2
 10084   002AF4  C127  F018         	movff	powf@z_l+3,___fladd@a+3
 10085   002AF8  C120  F011         	movff	powf@z_h,___fladd@b
 10086   002AFC  C121  F012         	movff	powf@z_h+1,___fladd@b+1
 10087   002B00  C122  F013         	movff	powf@z_h+2,___fladd@b+2
 10088   002B04  C123  F014         	movff	powf@z_h+3,___fladd@b+3
 10089   002B08  EC00  F02B         	call	___fladd	;wreg free
 10090   002B0C  C011  F158         	movff	?___fladd,_powf$2928
 10091   002B10  C012  F159         	movff	?___fladd+1,_powf$2928+1
 10092   002B14  C013  F15A         	movff	?___fladd+2,_powf$2928+2
 10093   002B18  C014  F15B         	movff	?___fladd+3,_powf$2928+3
 10094   002B1C  C1A0  F088         	movff	powf@k,??_powf
 10095   002B20  C1A1  F089         	movff	powf@k+1,??_powf+1
 10096   002B24  0100               	movlb	0	; () banked
 10097   002B26  90D8               	bcf	status,0,c
 10098   002B28  3788               	rlcf	??_powf& (0+255),f,b
 10099   002B2A  3789               	rlcf	(??_powf+1)& (0+255),f,b
 10100   002B2C  90D8               	bcf	status,0,c
 10101   002B2E  3788               	rlcf	??_powf& (0+255),f,b
 10102   002B30  3789               	rlcf	(??_powf+1)& (0+255),f,b
 10103   002B32  0E19               	movlw	low _dp_h
 10104   002B34  2588               	addwf	??_powf& (0+255),w,b
 10105   002B36  6EF6               	movwf	tblptrl,c
 10106   002B38  0E10               	movlw	high _dp_h
 10107   002B3A  2189               	addwfc	(??_powf+1)& (0+255),w,b
 10108   002B3C  6EF7               	movwf	tblptrh,c
 10109   002B3E                     	if	1	;There are 3 active tblptr bytes
 10110   002B3E  6AF8               	clrf	tblptru,c
 10111   002B40  0E00               	movlw	low (__mediumconst shr (0+16))
 10112   002B42  22F8               	addwfc	tblptru,f,c
 10113   002B44                     	endif
 10114   002B44  0009               	tblrd		*+
 10115   002B46  CFF5 F015          	movff	tablat,___fladd@a
 10116   002B4A  0009               	tblrd		*+
 10117   002B4C  CFF5 F016          	movff	tablat,___fladd@a+1
 10118   002B50  0009               	tblrd		*+
 10119   002B52  CFF5 F017          	movff	tablat,___fladd@a+2
 10120   002B56  000A               	tblrd		*-
 10121   002B58  CFF5 F018          	movff	tablat,___fladd@a+3
 10122   002B5C  C158  F011         	movff	_powf$2928,___fladd@b
 10123   002B60  C159  F012         	movff	_powf$2928+1,___fladd@b+1
 10124   002B64  C15A  F013         	movff	_powf$2928+2,___fladd@b+2
 10125   002B68  C15B  F014         	movff	_powf$2928+3,___fladd@b+3
 10126   002B6C  EC00  F02B         	call	___fladd	;wreg free
 10127   002B70  C011  F108         	movff	?___fladd,_powf$2931
 10128   002B74  C012  F109         	movff	?___fladd+1,_powf$2931+1
 10129   002B78  C013  F10A         	movff	?___fladd+2,_powf$2931+2
 10130   002B7C  C014  F10B         	movff	?___fladd+3,_powf$2931+3
 10131   002B80  C108  F011         	movff	_powf$2931,___fladd@b
 10132   002B84  C109  F012         	movff	_powf$2931+1,___fladd@b+1
 10133   002B88  C10A  F013         	movff	_powf$2931+2,___fladd@b+2
 10134   002B8C  C10B  F014         	movff	_powf$2931+3,___fladd@b+3
 10135   002B90  C1B0  F015         	movff	powf@t,___fladd@a
 10136   002B94  C1B1  F016         	movff	powf@t+1,___fladd@a+1
 10137   002B98  C1B2  F017         	movff	powf@t+2,___fladd@a+2
 10138   002B9C  C1B3  F018         	movff	powf@t+3,___fladd@a+3
 10139   002BA0  EC00  F02B         	call	___fladd	;wreg free
 10140   002BA4  C011  F184         	movff	?___fladd,powf@t1
 10141   002BA8  C012  F185         	movff	?___fladd+1,powf@t1+1
 10142   002BAC  C013  F186         	movff	?___fladd+2,powf@t1+2
 10143   002BB0  C014  F187         	movff	?___fladd+3,powf@t1+3
 10144   002BB4  C184  F1B8         	movff	powf@t1,powf@__xc8_float_word
 10145   002BB8  C185  F1B9         	movff	powf@t1+1,powf@__xc8_float_word+1
 10146   002BBC  C186  F1BA         	movff	powf@t1+2,powf@__xc8_float_word+2
 10147   002BC0  C187  F1BB         	movff	powf@t1+3,powf@__xc8_float_word+3
 10148   002BC4  C1B8  F194         	movff	powf@__xc8_float_word,powf@is
 10149   002BC8  C1B9  F195         	movff	powf@__xc8_float_word+1,powf@is+1
 10150   002BCC  C1BA  F196         	movff	powf@__xc8_float_word+2,powf@is+2
 10151   002BD0  C1BB  F197         	movff	powf@__xc8_float_word+3,powf@is+3
 10152   002BD4  0E00               	movlw	0
 10153   002BD6  0101               	movlb	1	; () banked
 10154   002BD8  1594               	andwf	powf@is& (0+255),w,b
 10155   002BDA  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
 10156   002BDC  0EF0               	movlw	240
 10157   002BDE  1595               	andwf	(powf@is+1)& (0+255),w,b
 10158   002BE0  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
 10159   002BE2  0EFF               	movlw	255
 10160   002BE4  1596               	andwf	(powf@is+2)& (0+255),w,b
 10161   002BE6  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
 10162   002BE8  0EFF               	movlw	255
 10163   002BEA  1597               	andwf	(powf@is+3)& (0+255),w,b
 10164   002BEC  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
 10165   002BEE                     
 10166                           ; BSR set to: 1
 10167   002BEE  C1B8  F184         	movff	powf@__xc8_float_word,powf@t1
 10168   002BF2  C1B9  F185         	movff	powf@__xc8_float_word+1,powf@t1+1
 10169   002BF6  C1BA  F186         	movff	powf@__xc8_float_word+2,powf@t1+2
 10170   002BFA  C1BB  F187         	movff	powf@__xc8_float_word+3,powf@t1+3
 10171   002BFE                     
 10172                           ; BSR set to: 1
 10173   002BFE  C1B0  F03E         	movff	powf@t,___flsub@a
 10174   002C02  C1B1  F03F         	movff	powf@t+1,___flsub@a+1
 10175   002C06  C1B2  F040         	movff	powf@t+2,___flsub@a+2
 10176   002C0A  C1B3  F041         	movff	powf@t+3,___flsub@a+3
 10177   002C0E  C184  F03A         	movff	powf@t1,___flsub@b
 10178   002C12  C185  F03B         	movff	powf@t1+1,___flsub@b+1
 10179   002C16  C186  F03C         	movff	powf@t1+2,___flsub@b+2
 10180   002C1A  C187  F03D         	movff	powf@t1+3,___flsub@b+3
 10181   002C1E  EC8D  F053         	call	___flsub	;wreg free
 10182   002C22  C03A  F198         	movff	?___flsub,_powf$2924
 10183   002C26  C03B  F199         	movff	?___flsub+1,_powf$2924+1
 10184   002C2A  C03C  F19A         	movff	?___flsub+2,_powf$2924+2
 10185   002C2E  C03D  F19B         	movff	?___flsub+3,_powf$2924+3
 10186   002C32  C1A0  F088         	movff	powf@k,??_powf
 10187   002C36  C1A1  F089         	movff	powf@k+1,??_powf+1
 10188   002C3A  0100               	movlb	0	; () banked
 10189   002C3C  90D8               	bcf	status,0,c
 10190   002C3E  3788               	rlcf	??_powf& (0+255),f,b
 10191   002C40  3789               	rlcf	(??_powf+1)& (0+255),f,b
 10192   002C42  90D8               	bcf	status,0,c
 10193   002C44  3788               	rlcf	??_powf& (0+255),f,b
 10194   002C46  3789               	rlcf	(??_powf+1)& (0+255),f,b
 10195   002C48  0E19               	movlw	low _dp_h
 10196   002C4A  2588               	addwf	??_powf& (0+255),w,b
 10197   002C4C  6EF6               	movwf	tblptrl,c
 10198   002C4E  0E10               	movlw	high _dp_h
 10199   002C50  2189               	addwfc	(??_powf+1)& (0+255),w,b
 10200   002C52  6EF7               	movwf	tblptrh,c
 10201   002C54                     	if	1	;There are 3 active tblptr bytes
 10202   002C54  6AF8               	clrf	tblptru,c
 10203   002C56  0E00               	movlw	low (__mediumconst shr (0+16))
 10204   002C58  22F8               	addwfc	tblptru,f,c
 10205   002C5A                     	endif
 10206   002C5A  0009               	tblrd		*+
 10207   002C5C  CFF5 F03E          	movff	tablat,___flsub@a
 10208   002C60  0009               	tblrd		*+
 10209   002C62  CFF5 F03F          	movff	tablat,___flsub@a+1
 10210   002C66  0009               	tblrd		*+
 10211   002C68  CFF5 F040          	movff	tablat,___flsub@a+2
 10212   002C6C  000A               	tblrd		*-
 10213   002C6E  CFF5 F041          	movff	tablat,___flsub@a+3
 10214   002C72  C198  F03A         	movff	_powf$2924,___flsub@b
 10215   002C76  C199  F03B         	movff	_powf$2924+1,___flsub@b+1
 10216   002C7A  C19A  F03C         	movff	_powf$2924+2,___flsub@b+2
 10217   002C7E  C19B  F03D         	movff	_powf$2924+3,___flsub@b+3
 10218   002C82  EC8D  F053         	call	___flsub	;wreg free
 10219   002C86  C03A  F140         	movff	?___flsub,_powf$2930
 10220   002C8A  C03B  F141         	movff	?___flsub+1,_powf$2930+1
 10221   002C8E  C03C  F142         	movff	?___flsub+2,_powf$2930+2
 10222   002C92  C03D  F143         	movff	?___flsub+3,_powf$2930+3
 10223   002C96  C120  F03E         	movff	powf@z_h,___flsub@a
 10224   002C9A  C121  F03F         	movff	powf@z_h+1,___flsub@a+1
 10225   002C9E  C122  F040         	movff	powf@z_h+2,___flsub@a+2
 10226   002CA2  C123  F041         	movff	powf@z_h+3,___flsub@a+3
 10227   002CA6  C140  F03A         	movff	_powf$2930,___flsub@b
 10228   002CAA  C141  F03B         	movff	_powf$2930+1,___flsub@b+1
 10229   002CAE  C142  F03C         	movff	_powf$2930+2,___flsub@b+2
 10230   002CB2  C143  F03D         	movff	_powf$2930+3,___flsub@b+3
 10231   002CB6  EC8D  F053         	call	___flsub	;wreg free
 10232   002CBA  C03A  F10C         	movff	?___flsub,_powf$2932
 10233   002CBE  C03B  F10D         	movff	?___flsub+1,_powf$2932+1
 10234   002CC2  C03C  F10E         	movff	?___flsub+2,_powf$2932+2
 10235   002CC6  C03D  F10F         	movff	?___flsub+3,_powf$2932+3
 10236   002CCA  C124  F03A         	movff	powf@z_l,___flsub@b
 10237   002CCE  C125  F03B         	movff	powf@z_l+1,___flsub@b+1
 10238   002CD2  C126  F03C         	movff	powf@z_l+2,___flsub@b+2
 10239   002CD6  C127  F03D         	movff	powf@z_l+3,___flsub@b+3
 10240   002CDA  C10C  F03E         	movff	_powf$2932,___flsub@a
 10241   002CDE  C10D  F03F         	movff	_powf$2932+1,___flsub@a+1
 10242   002CE2  C10E  F040         	movff	_powf$2932+2,___flsub@a+2
 10243   002CE6  C10F  F041         	movff	_powf$2932+3,___flsub@a+3
 10244   002CEA  EC8D  F053         	call	___flsub	;wreg free
 10245   002CEE  C03A  F11C         	movff	?___flsub,powf@t2
 10246   002CF2  C03B  F11D         	movff	?___flsub+1,powf@t2+1
 10247   002CF6  C03C  F11E         	movff	?___flsub+2,powf@t2+2
 10248   002CFA  C03D  F11F         	movff	?___flsub+3,powf@t2+3
 10249   002CFE                     l12528:
 10250   002CFE  C084  F1B8         	movff	powf@y,powf@__xc8_float_word
 10251   002D02  C085  F1B9         	movff	powf@y+1,powf@__xc8_float_word+1
 10252   002D06  C086  F1BA         	movff	powf@y+2,powf@__xc8_float_word+2
 10253   002D0A  C087  F1BB         	movff	powf@y+3,powf@__xc8_float_word+3
 10254   002D0E  C1B8  F194         	movff	powf@__xc8_float_word,powf@is
 10255   002D12  C1B9  F195         	movff	powf@__xc8_float_word+1,powf@is+1
 10256   002D16  C1BA  F196         	movff	powf@__xc8_float_word+2,powf@is+2
 10257   002D1A  C1BB  F197         	movff	powf@__xc8_float_word+3,powf@is+3
 10258   002D1E  0E00               	movlw	0
 10259   002D20  0101               	movlb	1	; () banked
 10260   002D22  1594               	andwf	powf@is& (0+255),w,b
 10261   002D24  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
 10262   002D26  0EF0               	movlw	240
 10263   002D28  1595               	andwf	(powf@is+1)& (0+255),w,b
 10264   002D2A  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
 10265   002D2C  0EFF               	movlw	255
 10266   002D2E  1596               	andwf	(powf@is+2)& (0+255),w,b
 10267   002D30  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
 10268   002D32  0EFF               	movlw	255
 10269   002D34  1597               	andwf	(powf@is+3)& (0+255),w,b
 10270   002D36  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
 10271   002D38                     
 10272                           ; BSR set to: 1
 10273   002D38  C1B8  F128         	movff	powf@__xc8_float_word,powf@y1
 10274   002D3C  C1B9  F129         	movff	powf@__xc8_float_word+1,powf@y1+1
 10275   002D40  C1BA  F12A         	movff	powf@__xc8_float_word+2,powf@y1+2
 10276   002D44  C1BB  F12B         	movff	powf@__xc8_float_word+3,powf@y1+3
 10277   002D48                     
 10278                           ; BSR set to: 1
 10279   002D48  C184  F025         	movff	powf@t1,___flmul@a
 10280   002D4C  C185  F026         	movff	powf@t1+1,___flmul@a+1
 10281   002D50  C186  F027         	movff	powf@t1+2,___flmul@a+2
 10282   002D54  C187  F028         	movff	powf@t1+3,___flmul@a+3
 10283   002D58  C128  F03E         	movff	powf@y1,___flsub@a
 10284   002D5C  C129  F03F         	movff	powf@y1+1,___flsub@a+1
 10285   002D60  C12A  F040         	movff	powf@y1+2,___flsub@a+2
 10286   002D64  C12B  F041         	movff	powf@y1+3,___flsub@a+3
 10287   002D68  C084  F03A         	movff	powf@y,___flsub@b
 10288   002D6C  C085  F03B         	movff	powf@y+1,___flsub@b+1
 10289   002D70  C086  F03C         	movff	powf@y+2,___flsub@b+2
 10290   002D74  C087  F03D         	movff	powf@y+3,___flsub@b+3
 10291   002D78  EC8D  F053         	call	___flsub	;wreg free
 10292   002D7C  C03A  F021         	movff	?___flsub,___flmul@b
 10293   002D80  C03B  F022         	movff	?___flsub+1,___flmul@b+1
 10294   002D84  C03C  F023         	movff	?___flsub+2,___flmul@b+2
 10295   002D88  C03D  F024         	movff	?___flsub+3,___flmul@b+3
 10296   002D8C  ECF4  F031         	call	___flmul	;wreg free
 10297   002D90  C021  F110         	movff	?___flmul,_powf$2933
 10298   002D94  C022  F111         	movff	?___flmul+1,_powf$2933+1
 10299   002D98  C023  F112         	movff	?___flmul+2,_powf$2933+2
 10300   002D9C  C024  F113         	movff	?___flmul+3,_powf$2933+3
 10301   002DA0  C110  F011         	movff	_powf$2933,___fladd@b
 10302   002DA4  C111  F012         	movff	_powf$2933+1,___fladd@b+1
 10303   002DA8  C112  F013         	movff	_powf$2933+2,___fladd@b+2
 10304   002DAC  C113  F014         	movff	_powf$2933+3,___fladd@b+3
 10305   002DB0  C11C  F025         	movff	powf@t2,___flmul@a
 10306   002DB4  C11D  F026         	movff	powf@t2+1,___flmul@a+1
 10307   002DB8  C11E  F027         	movff	powf@t2+2,___flmul@a+2
 10308   002DBC  C11F  F028         	movff	powf@t2+3,___flmul@a+3
 10309   002DC0  C084  F021         	movff	powf@y,___flmul@b
 10310   002DC4  C085  F022         	movff	powf@y+1,___flmul@b+1
 10311   002DC8  C086  F023         	movff	powf@y+2,___flmul@b+2
 10312   002DCC  C087  F024         	movff	powf@y+3,___flmul@b+3
 10313   002DD0  ECF4  F031         	call	___flmul	;wreg free
 10314   002DD4  C021  F015         	movff	?___flmul,___fladd@a
 10315   002DD8  C022  F016         	movff	?___flmul+1,___fladd@a+1
 10316   002DDC  C023  F017         	movff	?___flmul+2,___fladd@a+2
 10317   002DE0  C024  F018         	movff	?___flmul+3,___fladd@a+3
 10318   002DE4  EC00  F02B         	call	___fladd	;wreg free
 10319   002DE8  C011  F164         	movff	?___fladd,powf@p_l
 10320   002DEC  C012  F165         	movff	?___fladd+1,powf@p_l+1
 10321   002DF0  C013  F166         	movff	?___fladd+2,powf@p_l+2
 10322   002DF4  C014  F167         	movff	?___fladd+3,powf@p_l+3
 10323   002DF8  C128  F021         	movff	powf@y1,___flmul@b
 10324   002DFC  C129  F022         	movff	powf@y1+1,___flmul@b+1
 10325   002E00  C12A  F023         	movff	powf@y1+2,___flmul@b+2
 10326   002E04  C12B  F024         	movff	powf@y1+3,___flmul@b+3
 10327   002E08  C184  F025         	movff	powf@t1,___flmul@a
 10328   002E0C  C185  F026         	movff	powf@t1+1,___flmul@a+1
 10329   002E10  C186  F027         	movff	powf@t1+2,___flmul@a+2
 10330   002E14  C187  F028         	movff	powf@t1+3,___flmul@a+3
 10331   002E18  ECF4  F031         	call	___flmul	;wreg free
 10332   002E1C  C021  F19C         	movff	?___flmul,powf@p_h
 10333   002E20  C022  F19D         	movff	?___flmul+1,powf@p_h+1
 10334   002E24  C023  F19E         	movff	?___flmul+2,powf@p_h+2
 10335   002E28  C024  F19F         	movff	?___flmul+3,powf@p_h+3
 10336   002E2C  C164  F011         	movff	powf@p_l,___fladd@b
 10337   002E30  C165  F012         	movff	powf@p_l+1,___fladd@b+1
 10338   002E34  C166  F013         	movff	powf@p_l+2,___fladd@b+2
 10339   002E38  C167  F014         	movff	powf@p_l+3,___fladd@b+3
 10340   002E3C  C19C  F015         	movff	powf@p_h,___fladd@a
 10341   002E40  C19D  F016         	movff	powf@p_h+1,___fladd@a+1
 10342   002E44  C19E  F017         	movff	powf@p_h+2,___fladd@a+2
 10343   002E48  C19F  F018         	movff	powf@p_h+3,___fladd@a+3
 10344   002E4C  EC00  F02B         	call	___fladd	;wreg free
 10345   002E50  C011  F1B4         	movff	?___fladd,powf@z
 10346   002E54  C012  F1B5         	movff	?___fladd+1,powf@z+1
 10347   002E58  C013  F1B6         	movff	?___fladd+2,powf@z+2
 10348   002E5C  C014  F1B7         	movff	?___fladd+3,powf@z+3
 10349   002E60  C1B4  F1B8         	movff	powf@z,powf@__xc8_float_word
 10350   002E64  C1B5  F1B9         	movff	powf@z+1,powf@__xc8_float_word+1
 10351   002E68  C1B6  F1BA         	movff	powf@z+2,powf@__xc8_float_word+2
 10352   002E6C  C1B7  F1BB         	movff	powf@z+3,powf@__xc8_float_word+3
 10353   002E70  C1B8  F1AC         	movff	powf@__xc8_float_word,powf@j
 10354   002E74  C1B9  F1AD         	movff	powf@__xc8_float_word+1,powf@j+1
 10355   002E78  C1BA  F1AE         	movff	powf@__xc8_float_word+2,powf@j+2
 10356   002E7C  C1BB  F1AF         	movff	powf@__xc8_float_word+3,powf@j+3
 10357   002E80  0101               	movlb	1	; () banked
 10358   002E82  BFAF               	btfsc	(powf@j+3)& (0+255),7,b
 10359   002E84  EF50  F017         	goto	u15791
 10360   002E88  05AC               	decf	powf@j& (0+255),w,b
 10361   002E8A  0E00               	movlw	0
 10362   002E8C  59AD               	subwfb	(powf@j+1)& (0+255),w,b
 10363   002E8E  0E00               	movlw	0
 10364   002E90  59AE               	subwfb	(powf@j+2)& (0+255),w,b
 10365   002E92  0E43               	movlw	67
 10366   002E94  59AF               	subwfb	(powf@j+3)& (0+255),w,b
 10367   002E96  A0D8               	btfss	status,0,c
 10368   002E98  EF50  F017         	goto	u15791
 10369   002E9C  EF52  F017         	goto	u15790
 10370   002EA0                     u15791:
 10371   002EA0  EF88  F017         	goto	l12556
 10372   002EA4                     u15790:
 10373   002EA4                     
 10374                           ; BSR set to: 1
 10375   002EA4  0ECA               	movlw	202
 10376   002EA6  6E25               	movwf	___flmul@a^0,c
 10377   002EA8  0EF2               	movlw	242
 10378   002EAA  6E26               	movwf	(___flmul@a+1)^0,c
 10379   002EAC  0E49               	movlw	73
 10380   002EAE  6E27               	movwf	(___flmul@a+2)^0,c
 10381   002EB0  0E71               	movlw	113
 10382   002EB2  6E28               	movwf	(___flmul@a+3)^0,c
 10383   002EB4  C188  F021         	movff	powf@sn,___flmul@b
 10384   002EB8  C189  F022         	movff	powf@sn+1,___flmul@b+1
 10385   002EBC  C18A  F023         	movff	powf@sn+2,___flmul@b+2
 10386   002EC0  C18B  F024         	movff	powf@sn+3,___flmul@b+3
 10387   002EC4  ECF4  F031         	call	___flmul	;wreg free
 10388   002EC8  C021  F1A4         	movff	?___flmul,_powf$2921
 10389   002ECC  C022  F1A5         	movff	?___flmul+1,_powf$2921+1
 10390   002ED0  C023  F1A6         	movff	?___flmul+2,_powf$2921+2
 10391   002ED4  C024  F1A7         	movff	?___flmul+3,_powf$2921+3
 10392   002ED8  C1A4  F021         	movff	_powf$2921,___flmul@b
 10393   002EDC  C1A5  F022         	movff	_powf$2921+1,___flmul@b+1
 10394   002EE0  C1A6  F023         	movff	_powf$2921+2,___flmul@b+2
 10395   002EE4  C1A7  F024         	movff	_powf$2921+3,___flmul@b+3
 10396   002EE8  0ECA               	movlw	202
 10397   002EEA  6E25               	movwf	___flmul@a^0,c
 10398   002EEC  0EF2               	movlw	242
 10399   002EEE  6E26               	movwf	(___flmul@a+1)^0,c
 10400   002EF0  0E49               	movlw	73
 10401   002EF2  6E27               	movwf	(___flmul@a+2)^0,c
 10402   002EF4  0E71               	movlw	113
 10403   002EF6  6E28               	movwf	(___flmul@a+3)^0,c
 10404   002EF8  ECF4  F031         	call	___flmul	;wreg free
 10405   002EFC  C021  F080         	movff	?___flmul,?_powf
 10406   002F00  C022  F081         	movff	?___flmul+1,?_powf+1
 10407   002F04  C023  F082         	movff	?___flmul+2,?_powf+2
 10408   002F08  C024  F083         	movff	?___flmul+3,?_powf+3
 10409   002F0C  EF89  F01D         	goto	l1891
 10410   002F10                     l12556:
 10411                           
 10412                           ; BSR set to: 1
 10413   002F10  0E43               	movlw	67
 10414   002F12  19AF               	xorwf	(powf@j+3)& (0+255),w,b
 10415   002F14  11AC               	iorwf	powf@j& (0+255),w,b
 10416   002F16  11AD               	iorwf	(powf@j+1)& (0+255),w,b
 10417   002F18  11AE               	iorwf	(powf@j+2)& (0+255),w,b
 10418   002F1A  A4D8               	btfss	status,2,c
 10419   002F1C  EF92  F017         	goto	u15801
 10420   002F20  EF94  F017         	goto	u15800
 10421   002F24                     u15801:
 10422   002F24  EF07  F018         	goto	l12564
 10423   002F28                     u15800:
 10424   002F28                     
 10425                           ; BSR set to: 1
 10426   002F28  C19C  F03E         	movff	powf@p_h,___flsub@a
 10427   002F2C  C19D  F03F         	movff	powf@p_h+1,___flsub@a+1
 10428   002F30  C19E  F040         	movff	powf@p_h+2,___flsub@a+2
 10429   002F34  C19F  F041         	movff	powf@p_h+3,___flsub@a+3
 10430   002F38  C1B4  F03A         	movff	powf@z,___flsub@b
 10431   002F3C  C1B5  F03B         	movff	powf@z+1,___flsub@b+1
 10432   002F40  C1B6  F03C         	movff	powf@z+2,___flsub@b+2
 10433   002F44  C1B7  F03D         	movff	powf@z+3,___flsub@b+3
 10434   002F48  EC8D  F053         	call	___flsub	;wreg free
 10435   002F4C  C03A  F042         	movff	?___flsub,___flge@ff1
 10436   002F50  C03B  F043         	movff	?___flsub+1,___flge@ff1+1
 10437   002F54  C03C  F044         	movff	?___flsub+2,___flge@ff1+2
 10438   002F58  C03D  F045         	movff	?___flsub+3,___flge@ff1+3
 10439   002F5C  0E3C               	movlw	60
 10440   002F5E  6E15               	movwf	___fladd@a^0,c
 10441   002F60  0EAA               	movlw	170
 10442   002F62  6E16               	movwf	(___fladd@a+1)^0,c
 10443   002F64  0E38               	movlw	56
 10444   002F66  6E17               	movwf	(___fladd@a+2)^0,c
 10445   002F68  0E33               	movlw	51
 10446   002F6A  6E18               	movwf	(___fladd@a+3)^0,c
 10447   002F6C  C164  F011         	movff	powf@p_l,___fladd@b
 10448   002F70  C165  F012         	movff	powf@p_l+1,___fladd@b+1
 10449   002F74  C166  F013         	movff	powf@p_l+2,___fladd@b+2
 10450   002F78  C167  F014         	movff	powf@p_l+3,___fladd@b+3
 10451   002F7C  EC00  F02B         	call	___fladd	;wreg free
 10452   002F80  C011  F046         	movff	?___fladd,___flge@ff2
 10453   002F84  C012  F047         	movff	?___fladd+1,___flge@ff2+1
 10454   002F88  C013  F048         	movff	?___fladd+2,___flge@ff2+2
 10455   002F8C  C014  F049         	movff	?___fladd+3,___flge@ff2+3
 10456   002F90  ECE3  F048         	call	___flge	;wreg free
 10457   002F94  B0D8               	btfsc	status,0,c
 10458   002F96  EFCF  F017         	goto	u15811
 10459   002F9A  EFD1  F017         	goto	u15810
 10460   002F9E                     u15811:
 10461   002F9E  EFD1  F018         	goto	l12580
 10462   002FA2                     u15810:
 10463   002FA2  0ECA               	movlw	202
 10464   002FA4  6E25               	movwf	___flmul@a^0,c
 10465   002FA6  0EF2               	movlw	242
 10466   002FA8  6E26               	movwf	(___flmul@a+1)^0,c
 10467   002FAA  0E49               	movlw	73
 10468   002FAC  6E27               	movwf	(___flmul@a+2)^0,c
 10469   002FAE  0E71               	movlw	113
 10470   002FB0  6E28               	movwf	(___flmul@a+3)^0,c
 10471   002FB2  C188  F021         	movff	powf@sn,___flmul@b
 10472   002FB6  C189  F022         	movff	powf@sn+1,___flmul@b+1
 10473   002FBA  C18A  F023         	movff	powf@sn+2,___flmul@b+2
 10474   002FBE  C18B  F024         	movff	powf@sn+3,___flmul@b+3
 10475   002FC2  ECF4  F031         	call	___flmul	;wreg free
 10476   002FC6  C021  F1A4         	movff	?___flmul,_powf$2921
 10477   002FCA  C022  F1A5         	movff	?___flmul+1,_powf$2921+1
 10478   002FCE  C023  F1A6         	movff	?___flmul+2,_powf$2921+2
 10479   002FD2  C024  F1A7         	movff	?___flmul+3,_powf$2921+3
 10480   002FD6  C1A4  F021         	movff	_powf$2921,___flmul@b
 10481   002FDA  C1A5  F022         	movff	_powf$2921+1,___flmul@b+1
 10482   002FDE  C1A6  F023         	movff	_powf$2921+2,___flmul@b+2
 10483   002FE2  C1A7  F024         	movff	_powf$2921+3,___flmul@b+3
 10484   002FE6  0ECA               	movlw	202
 10485   002FE8  6E25               	movwf	___flmul@a^0,c
 10486   002FEA  0EF2               	movlw	242
 10487   002FEC  6E26               	movwf	(___flmul@a+1)^0,c
 10488   002FEE  0E49               	movlw	73
 10489   002FF0  6E27               	movwf	(___flmul@a+2)^0,c
 10490   002FF2  0E71               	movlw	113
 10491   002FF4  6E28               	movwf	(___flmul@a+3)^0,c
 10492   002FF6  ECF4  F031         	call	___flmul	;wreg free
 10493   002FFA  C021  F080         	movff	?___flmul,?_powf
 10494   002FFE  C022  F081         	movff	?___flmul+1,?_powf+1
 10495   003002  C023  F082         	movff	?___flmul+2,?_powf+2
 10496   003006  C024  F083         	movff	?___flmul+3,?_powf+3
 10497   00300A  EF89  F01D         	goto	l1891
 10498   00300E                     l12564:
 10499                           
 10500                           ; BSR set to: 1
 10501   00300E  0EFF               	movlw	255
 10502   003010  15AC               	andwf	powf@j& (0+255),w,b
 10503   003012  0100               	movlb	0	; () banked
 10504   003014  6F88               	movwf	??_powf& (0+255),b
 10505   003016  0EFF               	movlw	255
 10506   003018  0101               	movlb	1	; () banked
 10507   00301A  15AD               	andwf	(powf@j+1)& (0+255),w,b
 10508   00301C  0100               	movlb	0	; () banked
 10509   00301E  6F89               	movwf	(??_powf+1)& (0+255),b
 10510   003020  0EFF               	movlw	255
 10511   003022  0101               	movlb	1	; () banked
 10512   003024  15AE               	andwf	(powf@j+2)& (0+255),w,b
 10513   003026  0100               	movlb	0	; () banked
 10514   003028  6F8A               	movwf	(??_powf+2)& (0+255),b
 10515   00302A  0E7F               	movlw	127
 10516   00302C  0101               	movlb	1	; () banked
 10517   00302E  15AF               	andwf	(powf@j+3)& (0+255),w,b
 10518   003030  0100               	movlb	0	; () banked
 10519   003032  6F8B               	movwf	(??_powf+3)& (0+255),b
 10520   003034  BF8B               	btfsc	(??_powf+3)& (0+255),7,b
 10521   003036  EF29  F018         	goto	u15821
 10522   00303A  0588               	decf	??_powf& (0+255),w,b
 10523   00303C  0E00               	movlw	0
 10524   00303E  5989               	subwfb	(??_powf+1)& (0+255),w,b
 10525   003040  0E16               	movlw	22
 10526   003042  598A               	subwfb	(??_powf+2)& (0+255),w,b
 10527   003044  0E43               	movlw	67
 10528   003046  598B               	subwfb	(??_powf+3)& (0+255),w,b
 10529   003048  A0D8               	btfss	status,0,c
 10530   00304A  EF29  F018         	goto	u15821
 10531   00304E  EF2B  F018         	goto	u15820
 10532   003052                     u15821:
 10533   003052  EF61  F018         	goto	l12572
 10534   003056                     u15820:
 10535   003056                     
 10536                           ; BSR set to: 0
 10537   003056  0E60               	movlw	96
 10538   003058  6E25               	movwf	___flmul@a^0,c
 10539   00305A  0E42               	movlw	66
 10540   00305C  6E26               	movwf	(___flmul@a+1)^0,c
 10541   00305E  0EA2               	movlw	162
 10542   003060  6E27               	movwf	(___flmul@a+2)^0,c
 10543   003062  0E0D               	movlw	13
 10544   003064  6E28               	movwf	(___flmul@a+3)^0,c
 10545   003066  C188  F021         	movff	powf@sn,___flmul@b
 10546   00306A  C189  F022         	movff	powf@sn+1,___flmul@b+1
 10547   00306E  C18A  F023         	movff	powf@sn+2,___flmul@b+2
 10548   003072  C18B  F024         	movff	powf@sn+3,___flmul@b+3
 10549   003076  ECF4  F031         	call	___flmul	;wreg free
 10550   00307A  C021  F1A4         	movff	?___flmul,_powf$2921
 10551   00307E  C022  F1A5         	movff	?___flmul+1,_powf$2921+1
 10552   003082  C023  F1A6         	movff	?___flmul+2,_powf$2921+2
 10553   003086  C024  F1A7         	movff	?___flmul+3,_powf$2921+3
 10554   00308A  C1A4  F021         	movff	_powf$2921,___flmul@b
 10555   00308E  C1A5  F022         	movff	_powf$2921+1,___flmul@b+1
 10556   003092  C1A6  F023         	movff	_powf$2921+2,___flmul@b+2
 10557   003096  C1A7  F024         	movff	_powf$2921+3,___flmul@b+3
 10558   00309A  0E60               	movlw	96
 10559   00309C  6E25               	movwf	___flmul@a^0,c
 10560   00309E  0E42               	movlw	66
 10561   0030A0  6E26               	movwf	(___flmul@a+1)^0,c
 10562   0030A2  0EA2               	movlw	162
 10563   0030A4  6E27               	movwf	(___flmul@a+2)^0,c
 10564   0030A6  0E0D               	movlw	13
 10565   0030A8  6E28               	movwf	(___flmul@a+3)^0,c
 10566   0030AA  ECF4  F031         	call	___flmul	;wreg free
 10567   0030AE  C021  F080         	movff	?___flmul,?_powf
 10568   0030B2  C022  F081         	movff	?___flmul+1,?_powf+1
 10569   0030B6  C023  F082         	movff	?___flmul+2,?_powf+2
 10570   0030BA  C024  F083         	movff	?___flmul+3,?_powf+3
 10571   0030BE  EF89  F01D         	goto	l1891
 10572   0030C2                     l12572:
 10573                           
 10574                           ; BSR set to: 0
 10575   0030C2  0E16               	movlw	22
 10576   0030C4  0101               	movlb	1	; () banked
 10577   0030C6  19AE               	xorwf	(powf@j+2)& (0+255),w,b
 10578   0030C8  E109               	bnz	u15831
 10579   0030CA  0EC3               	movlw	195
 10580   0030CC  19AF               	xorwf	(powf@j+3)& (0+255),w,b
 10581   0030CE  11AC               	iorwf	powf@j& (0+255),w,b
 10582   0030D0  11AD               	iorwf	(powf@j+1)& (0+255),w,b
 10583   0030D2  A4D8               	btfss	status,2,c
 10584   0030D4  EF6E  F018         	goto	u15831
 10585   0030D8  EF70  F018         	goto	u15830
 10586   0030DC                     u15831:
 10587   0030DC  EFD1  F018         	goto	l12580
 10588   0030E0                     u15830:
 10589   0030E0                     
 10590                           ; BSR set to: 1
 10591   0030E0  C19C  F03E         	movff	powf@p_h,___flsub@a
 10592   0030E4  C19D  F03F         	movff	powf@p_h+1,___flsub@a+1
 10593   0030E8  C19E  F040         	movff	powf@p_h+2,___flsub@a+2
 10594   0030EC  C19F  F041         	movff	powf@p_h+3,___flsub@a+3
 10595   0030F0  C1B4  F03A         	movff	powf@z,___flsub@b
 10596   0030F4  C1B5  F03B         	movff	powf@z+1,___flsub@b+1
 10597   0030F8  C1B6  F03C         	movff	powf@z+2,___flsub@b+2
 10598   0030FC  C1B7  F03D         	movff	powf@z+3,___flsub@b+3
 10599   003100  EC8D  F053         	call	___flsub	;wreg free
 10600   003104  C03A  F042         	movff	?___flsub,___flge@ff1
 10601   003108  C03B  F043         	movff	?___flsub+1,___flge@ff1+1
 10602   00310C  C03C  F044         	movff	?___flsub+2,___flge@ff1+2
 10603   003110  C03D  F045         	movff	?___flsub+3,___flge@ff1+3
 10604   003114  C164  F046         	movff	powf@p_l,___flge@ff2
 10605   003118  C165  F047         	movff	powf@p_l+1,___flge@ff2+1
 10606   00311C  C166  F048         	movff	powf@p_l+2,___flge@ff2+2
 10607   003120  C167  F049         	movff	powf@p_l+3,___flge@ff2+3
 10608   003124  ECE3  F048         	call	___flge	;wreg free
 10609   003128  A0D8               	btfss	status,0,c
 10610   00312A  EF99  F018         	goto	u15841
 10611   00312E  EF9B  F018         	goto	u15840
 10612   003132                     u15841:
 10613   003132  EFD1  F018         	goto	l12580
 10614   003136                     u15840:
 10615   003136  0E60               	movlw	96
 10616   003138  6E25               	movwf	___flmul@a^0,c
 10617   00313A  0E42               	movlw	66
 10618   00313C  6E26               	movwf	(___flmul@a+1)^0,c
 10619   00313E  0EA2               	movlw	162
 10620   003140  6E27               	movwf	(___flmul@a+2)^0,c
 10621   003142  0E0D               	movlw	13
 10622   003144  6E28               	movwf	(___flmul@a+3)^0,c
 10623   003146  C188  F021         	movff	powf@sn,___flmul@b
 10624   00314A  C189  F022         	movff	powf@sn+1,___flmul@b+1
 10625   00314E  C18A  F023         	movff	powf@sn+2,___flmul@b+2
 10626   003152  C18B  F024         	movff	powf@sn+3,___flmul@b+3
 10627   003156  ECF4  F031         	call	___flmul	;wreg free
 10628   00315A  C021  F1A4         	movff	?___flmul,_powf$2921
 10629   00315E  C022  F1A5         	movff	?___flmul+1,_powf$2921+1
 10630   003162  C023  F1A6         	movff	?___flmul+2,_powf$2921+2
 10631   003166  C024  F1A7         	movff	?___flmul+3,_powf$2921+3
 10632   00316A  C1A4  F021         	movff	_powf$2921,___flmul@b
 10633   00316E  C1A5  F022         	movff	_powf$2921+1,___flmul@b+1
 10634   003172  C1A6  F023         	movff	_powf$2921+2,___flmul@b+2
 10635   003176  C1A7  F024         	movff	_powf$2921+3,___flmul@b+3
 10636   00317A  0E60               	movlw	96
 10637   00317C  6E25               	movwf	___flmul@a^0,c
 10638   00317E  0E42               	movlw	66
 10639   003180  6E26               	movwf	(___flmul@a+1)^0,c
 10640   003182  0EA2               	movlw	162
 10641   003184  6E27               	movwf	(___flmul@a+2)^0,c
 10642   003186  0E0D               	movlw	13
 10643   003188  6E28               	movwf	(___flmul@a+3)^0,c
 10644   00318A  ECF4  F031         	call	___flmul	;wreg free
 10645   00318E  C021  F080         	movff	?___flmul,?_powf
 10646   003192  C022  F081         	movff	?___flmul+1,?_powf+1
 10647   003196  C023  F082         	movff	?___flmul+2,?_powf+2
 10648   00319A  C024  F083         	movff	?___flmul+3,?_powf+3
 10649   00319E  EF89  F01D         	goto	l1891
 10650   0031A2                     l12580:
 10651   0031A2  0EFF               	movlw	255
 10652   0031A4  0101               	movlb	1	; () banked
 10653   0031A6  15AC               	andwf	powf@j& (0+255),w,b
 10654   0031A8  6F2C               	movwf	powf@i& (0+255),b
 10655   0031AA  0EFF               	movlw	255
 10656   0031AC  15AD               	andwf	(powf@j+1)& (0+255),w,b
 10657   0031AE  6F2D               	movwf	(powf@i+1)& (0+255),b
 10658   0031B0  0EFF               	movlw	255
 10659   0031B2  15AE               	andwf	(powf@j+2)& (0+255),w,b
 10660   0031B4  6F2E               	movwf	(powf@i+2)& (0+255),b
 10661   0031B6  0E7F               	movlw	127
 10662   0031B8  15AF               	andwf	(powf@j+3)& (0+255),w,b
 10663   0031BA  6F2F               	movwf	(powf@i+3)& (0+255),b
 10664   0031BC  0E17               	movlw	23
 10665   0031BE  0100               	movlb	0	; () banked
 10666   0031C0  6F88               	movwf	??_powf& (0+255),b
 10667   0031C2  C12C  F089         	movff	powf@i,??_powf+1
 10668   0031C6  C12D  F08A         	movff	powf@i+1,??_powf+2
 10669   0031CA  C12E  F08B         	movff	powf@i+2,??_powf+3
 10670   0031CE  C12F  F08C         	movff	powf@i+3,??_powf+4
 10671   0031D2                     u15855:
 10672   0031D2  6788               	tstfsz	??_powf& (0+255),b
 10673   0031D4  EFEE  F018         	goto	u15856
 10674   0031D8  EFF6  F018         	goto	u15857
 10675   0031DC                     u15856:
 10676   0031DC  358C               	rlcf	(??_powf+4)& (0+255),w,b
 10677   0031DE  338C               	rrcf	(??_powf+4)& (0+255),f,b
 10678   0031E0  338B               	rrcf	(??_powf+3)& (0+255),f,b
 10679   0031E2  338A               	rrcf	(??_powf+2)& (0+255),f,b
 10680   0031E4  3389               	rrcf	(??_powf+1)& (0+255),f,b
 10681   0031E6  2F88               	decfsz	??_powf& (0+255),f,b
 10682   0031E8  EFE9  F018         	goto	u15855
 10683   0031EC                     u15857:
 10684   0031EC  0E81               	movlw	129
 10685   0031EE  0100               	movlb	0	; () banked
 10686   0031F0  2589               	addwf	(??_powf+1)& (0+255),w,b
 10687   0031F2  0101               	movlb	1	; () banked
 10688   0031F4  6FA0               	movwf	powf@k& (0+255),b
 10689   0031F6  0EFF               	movlw	255
 10690   0031F8  0100               	movlb	0	; () banked
 10691   0031FA  218A               	addwfc	(??_powf+2)& (0+255),w,b
 10692   0031FC  0101               	movlb	1	; () banked
 10693   0031FE  6FA1               	movwf	(powf@k+1)& (0+255),b
 10694   003200  0EFF               	movlw	255
 10695   003202  0100               	movlb	0	; () banked
 10696   003204  218B               	addwfc	(??_powf+3)& (0+255),w,b
 10697   003206  0101               	movlb	1	; () banked
 10698   003208  6FA2               	movwf	(powf@k+2)& (0+255),b
 10699   00320A  0EFF               	movlw	255
 10700   00320C  0100               	movlb	0	; () banked
 10701   00320E  218C               	addwfc	(??_powf+4)& (0+255),w,b
 10702   003210  0101               	movlb	1	; () banked
 10703   003212  6FA3               	movwf	(powf@k+3)& (0+255),b
 10704   003214                     
 10705                           ; BSR set to: 1
 10706   003214  0E00               	movlw	0
 10707   003216  6F80               	movwf	powf@n& (0+255),b
 10708   003218  0E00               	movlw	0
 10709   00321A  6F81               	movwf	(powf@n+1)& (0+255),b
 10710   00321C  0E00               	movlw	0
 10711   00321E  6F82               	movwf	(powf@n+2)& (0+255),b
 10712   003220  0E00               	movlw	0
 10713   003222  6F83               	movwf	(powf@n+3)& (0+255),b
 10714   003224                     
 10715                           ; BSR set to: 1
 10716   003224  BF2F               	btfsc	(powf@i+3)& (0+255),7,b
 10717   003226  EF21  F019         	goto	u15861
 10718   00322A  052C               	decf	powf@i& (0+255),w,b
 10719   00322C  0E00               	movlw	0
 10720   00322E  592D               	subwfb	(powf@i+1)& (0+255),w,b
 10721   003230  0E00               	movlw	0
 10722   003232  592E               	subwfb	(powf@i+2)& (0+255),w,b
 10723   003234  0E3F               	movlw	63
 10724   003236  592F               	subwfb	(powf@i+3)& (0+255),w,b
 10725   003238  A0D8               	btfss	status,0,c
 10726   00323A  EF21  F019         	goto	u15861
 10727   00323E  EF23  F019         	goto	u15860
 10728   003242                     u15861:
 10729   003242  EF27  F01A         	goto	l12594
 10730   003246                     u15860:
 10731   003246                     
 10732                           ; BSR set to: 1
 10733   003246  C1A0  F088         	movff	powf@k,??_powf
 10734   00324A  0E01               	movlw	1
 10735   00324C  0100               	movlb	0	; () banked
 10736   00324E  2788               	addwf	??_powf& (0+255),f,b
 10737   003250  0E00               	movlw	0
 10738   003252  6F89               	movwf	(??_powf+1)& (0+255),b
 10739   003254  0E00               	movlw	0
 10740   003256  6F8A               	movwf	(??_powf+2)& (0+255),b
 10741   003258  0E80               	movlw	128
 10742   00325A  6F8B               	movwf	(??_powf+3)& (0+255),b
 10743   00325C  0E00               	movlw	0
 10744   00325E  6F8C               	movwf	(??_powf+4)& (0+255),b
 10745   003260                     u15875:
 10746   003260  6788               	tstfsz	??_powf& (0+255),b
 10747   003262  EF35  F019         	goto	u15876
 10748   003266  EF3D  F019         	goto	u15877
 10749   00326A                     u15876:
 10750   00326A  358C               	rlcf	(??_powf+4)& (0+255),w,b
 10751   00326C  338C               	rrcf	(??_powf+4)& (0+255),f,b
 10752   00326E  338B               	rrcf	(??_powf+3)& (0+255),f,b
 10753   003270  338A               	rrcf	(??_powf+2)& (0+255),f,b
 10754   003272  3389               	rrcf	(??_powf+1)& (0+255),f,b
 10755   003274  2F88               	decfsz	??_powf& (0+255),f,b
 10756   003276  EF30  F019         	goto	u15875
 10757   00327A                     u15877:
 10758   00327A  0101               	movlb	1	; () banked
 10759   00327C  51AC               	movf	powf@j& (0+255),w,b
 10760   00327E  0100               	movlb	0	; () banked
 10761   003280  2589               	addwf	(??_powf+1)& (0+255),w,b
 10762   003282  0101               	movlb	1	; () banked
 10763   003284  6F80               	movwf	powf@n& (0+255),b
 10764   003286  51AD               	movf	(powf@j+1)& (0+255),w,b
 10765   003288  0100               	movlb	0	; () banked
 10766   00328A  218A               	addwfc	(??_powf+2)& (0+255),w,b
 10767   00328C  0101               	movlb	1	; () banked
 10768   00328E  6F81               	movwf	(powf@n+1)& (0+255),b
 10769   003290  51AE               	movf	(powf@j+2)& (0+255),w,b
 10770   003292  0100               	movlb	0	; () banked
 10771   003294  218B               	addwfc	(??_powf+3)& (0+255),w,b
 10772   003296  0101               	movlb	1	; () banked
 10773   003298  6F82               	movwf	(powf@n+2)& (0+255),b
 10774   00329A  51AF               	movf	(powf@j+3)& (0+255),w,b
 10775   00329C  0100               	movlb	0	; () banked
 10776   00329E  218C               	addwfc	(??_powf+4)& (0+255),w,b
 10777   0032A0  0101               	movlb	1	; () banked
 10778   0032A2  6F83               	movwf	(powf@n+3)& (0+255),b
 10779   0032A4  0E81               	movlw	129
 10780   0032A6  0100               	movlb	0	; () banked
 10781   0032A8  6F88               	movwf	??_powf& (0+255),b
 10782   0032AA  0EFF               	movlw	255
 10783   0032AC  6F89               	movwf	(??_powf+1)& (0+255),b
 10784   0032AE  0EFF               	movlw	255
 10785   0032B0  6F8A               	movwf	(??_powf+2)& (0+255),b
 10786   0032B2  0EFF               	movlw	255
 10787   0032B4  6F8B               	movwf	(??_powf+3)& (0+255),b
 10788   0032B6  0E17               	movlw	23
 10789   0032B8  6F8C               	movwf	(??_powf+4)& (0+255),b
 10790   0032BA  C180  F08D         	movff	powf@n,??_powf+5
 10791   0032BE  C181  F08E         	movff	powf@n+1,??_powf+6
 10792   0032C2  C182  F08F         	movff	powf@n+2,??_powf+7
 10793   0032C6  C183  F090         	movff	powf@n+3,??_powf+8
 10794   0032CA                     u15885:
 10795   0032CA  678C               	tstfsz	(??_powf+4)& (0+255),b
 10796   0032CC  EF6A  F019         	goto	u15886
 10797   0032D0  EF72  F019         	goto	u15887
 10798   0032D4                     u15886:
 10799   0032D4  3590               	rlcf	(??_powf+8)& (0+255),w,b
 10800   0032D6  3390               	rrcf	(??_powf+8)& (0+255),f,b
 10801   0032D8  338F               	rrcf	(??_powf+7)& (0+255),f,b
 10802   0032DA  338E               	rrcf	(??_powf+6)& (0+255),f,b
 10803   0032DC  338D               	rrcf	(??_powf+5)& (0+255),f,b
 10804   0032DE  2F8C               	decfsz	(??_powf+4)& (0+255),f,b
 10805   0032E0  EF65  F019         	goto	u15885
 10806   0032E4                     u15887:
 10807   0032E4  0100               	movlb	0	; () banked
 10808   0032E6  518D               	movf	(??_powf+5)& (0+255),w,b
 10809   0032E8  2588               	addwf	??_powf& (0+255),w,b
 10810   0032EA  0101               	movlb	1	; () banked
 10811   0032EC  6FA0               	movwf	powf@k& (0+255),b
 10812   0032EE  0E00               	movlw	0
 10813   0032F0  0100               	movlb	0	; () banked
 10814   0032F2  2189               	addwfc	(??_powf+1)& (0+255),w,b
 10815   0032F4  0101               	movlb	1	; () banked
 10816   0032F6  6FA1               	movwf	(powf@k+1)& (0+255),b
 10817   0032F8  0E00               	movlw	0
 10818   0032FA  0100               	movlb	0	; () banked
 10819   0032FC  218A               	addwfc	(??_powf+2)& (0+255),w,b
 10820   0032FE  0101               	movlb	1	; () banked
 10821   003300  6FA2               	movwf	(powf@k+2)& (0+255),b
 10822   003302  0E00               	movlw	0
 10823   003304  0100               	movlb	0	; () banked
 10824   003306  218B               	addwfc	(??_powf+3)& (0+255),w,b
 10825   003308  0101               	movlb	1	; () banked
 10826   00330A  6FA3               	movwf	(powf@k+3)& (0+255),b
 10827   00330C                     
 10828                           ; BSR set to: 1
 10829   00330C  C1A0  F088         	movff	powf@k,??_powf
 10830   003310  0EFF               	movlw	255
 10831   003312  0100               	movlb	0	; () banked
 10832   003314  6F89               	movwf	(??_powf+1)& (0+255),b
 10833   003316  0EFF               	movlw	255
 10834   003318  6F8A               	movwf	(??_powf+2)& (0+255),b
 10835   00331A  0E7F               	movlw	127
 10836   00331C  6F8B               	movwf	(??_powf+3)& (0+255),b
 10837   00331E  0E00               	movlw	0
 10838   003320  6F8C               	movwf	(??_powf+4)& (0+255),b
 10839   003322                     u15895:
 10840   003322  6788               	tstfsz	??_powf& (0+255),b
 10841   003324  EF96  F019         	goto	u15896
 10842   003328  EF9E  F019         	goto	u15897
 10843   00332C                     u15896:
 10844   00332C  358C               	rlcf	(??_powf+4)& (0+255),w,b
 10845   00332E  338C               	rrcf	(??_powf+4)& (0+255),f,b
 10846   003330  338B               	rrcf	(??_powf+3)& (0+255),f,b
 10847   003332  338A               	rrcf	(??_powf+2)& (0+255),f,b
 10848   003334  3389               	rrcf	(??_powf+1)& (0+255),f,b
 10849   003336  2F88               	decfsz	??_powf& (0+255),f,b
 10850   003338  EF91  F019         	goto	u15895
 10851   00333C                     u15897:
 10852   00333C  0100               	movlb	0	; () banked
 10853   00333E  1D89               	comf	(??_powf+1)& (0+255),w,b
 10854   003340  6F8D               	movwf	(??_powf+5)& (0+255),b
 10855   003342  1D8A               	comf	(??_powf+2)& (0+255),w,b
 10856   003344  6F8E               	movwf	(??_powf+6)& (0+255),b
 10857   003346  1D8B               	comf	(??_powf+3)& (0+255),w,b
 10858   003348  6F8F               	movwf	(??_powf+7)& (0+255),b
 10859   00334A  1D8C               	comf	(??_powf+4)& (0+255),w,b
 10860   00334C  6F90               	movwf	(??_powf+8)& (0+255),b
 10861   00334E  0101               	movlb	1	; () banked
 10862   003350  5180               	movf	powf@n& (0+255),w,b
 10863   003352  0100               	movlb	0	; () banked
 10864   003354  158D               	andwf	(??_powf+5)& (0+255),w,b
 10865   003356  0101               	movlb	1	; () banked
 10866   003358  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
 10867   00335A  5181               	movf	(powf@n+1)& (0+255),w,b
 10868   00335C  0100               	movlb	0	; () banked
 10869   00335E  158E               	andwf	(??_powf+6)& (0+255),w,b
 10870   003360  0101               	movlb	1	; () banked
 10871   003362  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
 10872   003364  5182               	movf	(powf@n+2)& (0+255),w,b
 10873   003366  0100               	movlb	0	; () banked
 10874   003368  158F               	andwf	(??_powf+7)& (0+255),w,b
 10875   00336A  0101               	movlb	1	; () banked
 10876   00336C  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
 10877   00336E  5183               	movf	(powf@n+3)& (0+255),w,b
 10878   003370  0100               	movlb	0	; () banked
 10879   003372  1590               	andwf	(??_powf+8)& (0+255),w,b
 10880   003374  0101               	movlb	1	; () banked
 10881   003376  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
 10882   003378                     
 10883                           ; BSR set to: 1
 10884   003378  C1B8  F1B0         	movff	powf@__xc8_float_word,powf@t
 10885   00337C  C1B9  F1B1         	movff	powf@__xc8_float_word+1,powf@t+1
 10886   003380  C1BA  F1B2         	movff	powf@__xc8_float_word+2,powf@t+2
 10887   003384  C1BB  F1B3         	movff	powf@__xc8_float_word+3,powf@t+3
 10888   003388                     
 10889                           ; BSR set to: 1
 10890   003388  51A0               	movf	powf@k& (0+255),w,b
 10891   00338A  0817               	sublw	23
 10892   00338C  0100               	movlb	0	; () banked
 10893   00338E  6F88               	movwf	??_powf& (0+255),b
 10894   003390  0EFF               	movlw	255
 10895   003392  0101               	movlb	1	; () banked
 10896   003394  1580               	andwf	powf@n& (0+255),w,b
 10897   003396  0100               	movlb	0	; () banked
 10898   003398  6F89               	movwf	(??_powf+1)& (0+255),b
 10899   00339A  0EFF               	movlw	255
 10900   00339C  0101               	movlb	1	; () banked
 10901   00339E  1581               	andwf	(powf@n+1)& (0+255),w,b
 10902   0033A0  0100               	movlb	0	; () banked
 10903   0033A2  6F8A               	movwf	(??_powf+2)& (0+255),b
 10904   0033A4  0E7F               	movlw	127
 10905   0033A6  0101               	movlb	1	; () banked
 10906   0033A8  1582               	andwf	(powf@n+2)& (0+255),w,b
 10907   0033AA  0100               	movlb	0	; () banked
 10908   0033AC  6F8B               	movwf	(??_powf+3)& (0+255),b
 10909   0033AE  0E00               	movlw	0
 10910   0033B0  0101               	movlb	1	; () banked
 10911   0033B2  1583               	andwf	(powf@n+3)& (0+255),w,b
 10912   0033B4  0100               	movlb	0	; () banked
 10913   0033B6  6F8C               	movwf	(??_powf+4)& (0+255),b
 10914   0033B8  0E00               	movlw	0
 10915   0033BA  1189               	iorwf	(??_powf+1)& (0+255),w,b
 10916   0033BC  6F8D               	movwf	(??_powf+5)& (0+255),b
 10917   0033BE  0E00               	movlw	0
 10918   0033C0  118A               	iorwf	(??_powf+2)& (0+255),w,b
 10919   0033C2  6F8E               	movwf	(??_powf+6)& (0+255),b
 10920   0033C4  0E80               	movlw	128
 10921   0033C6  118B               	iorwf	(??_powf+3)& (0+255),w,b
 10922   0033C8  6F8F               	movwf	(??_powf+7)& (0+255),b
 10923   0033CA  0E00               	movlw	0
 10924   0033CC  118C               	iorwf	(??_powf+4)& (0+255),w,b
 10925   0033CE  6F90               	movwf	(??_powf+8)& (0+255),b
 10926   0033D0                     u15905:
 10927   0033D0  6788               	tstfsz	??_powf& (0+255),b
 10928   0033D2  EFED  F019         	goto	u15906
 10929   0033D6  EFF5  F019         	goto	u15907
 10930   0033DA                     u15906:
 10931   0033DA  3590               	rlcf	(??_powf+8)& (0+255),w,b
 10932   0033DC  3390               	rrcf	(??_powf+8)& (0+255),f,b
 10933   0033DE  338F               	rrcf	(??_powf+7)& (0+255),f,b
 10934   0033E0  338E               	rrcf	(??_powf+6)& (0+255),f,b
 10935   0033E2  338D               	rrcf	(??_powf+5)& (0+255),f,b
 10936   0033E4  2F88               	decfsz	??_powf& (0+255),f,b
 10937   0033E6  EFE8  F019         	goto	u15905
 10938   0033EA                     u15907:
 10939   0033EA  C08D  F180         	movff	??_powf+5,powf@n
 10940   0033EE  C08E  F181         	movff	??_powf+6,powf@n+1
 10941   0033F2  C08F  F182         	movff	??_powf+7,powf@n+2
 10942   0033F6  C090  F183         	movff	??_powf+8,powf@n+3
 10943   0033FA  0101               	movlb	1	; () banked
 10944   0033FC  BFAF               	btfsc	(powf@j+3)& (0+255),7,b
 10945   0033FE  EF05  F01A         	goto	u15910
 10946   003402  EF03  F01A         	goto	u15911
 10947   003406                     u15911:
 10948   003406  EF0D  F01A         	goto	l12592
 10949   00340A                     u15910:
 10950   00340A                     
 10951                           ; BSR set to: 1
 10952   00340A  1F83               	comf	(powf@n+3)& (0+255),f,b
 10953   00340C  1F82               	comf	(powf@n+2)& (0+255),f,b
 10954   00340E  1F81               	comf	(powf@n+1)& (0+255),f,b
 10955   003410  6D80               	negf	powf@n& (0+255),b
 10956   003412  0E00               	movlw	0
 10957   003414  2381               	addwfc	(powf@n+1)& (0+255),f,b
 10958   003416  2382               	addwfc	(powf@n+2)& (0+255),f,b
 10959   003418  2383               	addwfc	(powf@n+3)& (0+255),f,b
 10960   00341A                     l12592:
 10961                           
 10962                           ; BSR set to: 1
 10963   00341A  C19C  F03A         	movff	powf@p_h,___flsub@b
 10964   00341E  C19D  F03B         	movff	powf@p_h+1,___flsub@b+1
 10965   003422  C19E  F03C         	movff	powf@p_h+2,___flsub@b+2
 10966   003426  C19F  F03D         	movff	powf@p_h+3,___flsub@b+3
 10967   00342A  C1B0  F03E         	movff	powf@t,___flsub@a
 10968   00342E  C1B1  F03F         	movff	powf@t+1,___flsub@a+1
 10969   003432  C1B2  F040         	movff	powf@t+2,___flsub@a+2
 10970   003436  C1B3  F041         	movff	powf@t+3,___flsub@a+3
 10971   00343A  EC8D  F053         	call	___flsub	;wreg free
 10972   00343E  C03A  F19C         	movff	?___flsub,powf@p_h
 10973   003442  C03B  F19D         	movff	?___flsub+1,powf@p_h+1
 10974   003446  C03C  F19E         	movff	?___flsub+2,powf@p_h+2
 10975   00344A  C03D  F19F         	movff	?___flsub+3,powf@p_h+3
 10976   00344E                     l12594:
 10977   00344E  C164  F011         	movff	powf@p_l,___fladd@b
 10978   003452  C165  F012         	movff	powf@p_l+1,___fladd@b+1
 10979   003456  C166  F013         	movff	powf@p_l+2,___fladd@b+2
 10980   00345A  C167  F014         	movff	powf@p_l+3,___fladd@b+3
 10981   00345E  C19C  F015         	movff	powf@p_h,___fladd@a
 10982   003462  C19D  F016         	movff	powf@p_h+1,___fladd@a+1
 10983   003466  C19E  F017         	movff	powf@p_h+2,___fladd@a+2
 10984   00346A  C19F  F018         	movff	powf@p_h+3,___fladd@a+3
 10985   00346E  EC00  F02B         	call	___fladd	;wreg free
 10986   003472  C011  F1B0         	movff	?___fladd,powf@t
 10987   003476  C012  F1B1         	movff	?___fladd+1,powf@t+1
 10988   00347A  C013  F1B2         	movff	?___fladd+2,powf@t+2
 10989   00347E  C014  F1B3         	movff	?___fladd+3,powf@t+3
 10990   003482  C1B0  F1B8         	movff	powf@t,powf@__xc8_float_word
 10991   003486  C1B1  F1B9         	movff	powf@t+1,powf@__xc8_float_word+1
 10992   00348A  C1B2  F1BA         	movff	powf@t+2,powf@__xc8_float_word+2
 10993   00348E  C1B3  F1BB         	movff	powf@t+3,powf@__xc8_float_word+3
 10994   003492  C1B8  F194         	movff	powf@__xc8_float_word,powf@is
 10995   003496  C1B9  F195         	movff	powf@__xc8_float_word+1,powf@is+1
 10996   00349A  C1BA  F196         	movff	powf@__xc8_float_word+2,powf@is+2
 10997   00349E  C1BB  F197         	movff	powf@__xc8_float_word+3,powf@is+3
 10998   0034A2  0E00               	movlw	0
 10999   0034A4  0101               	movlb	1	; () banked
 11000   0034A6  1594               	andwf	powf@is& (0+255),w,b
 11001   0034A8  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
 11002   0034AA  0E80               	movlw	128
 11003   0034AC  1595               	andwf	(powf@is+1)& (0+255),w,b
 11004   0034AE  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
 11005   0034B0  0EFF               	movlw	255
 11006   0034B2  1596               	andwf	(powf@is+2)& (0+255),w,b
 11007   0034B4  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
 11008   0034B6  0EFF               	movlw	255
 11009   0034B8  1597               	andwf	(powf@is+3)& (0+255),w,b
 11010   0034BA  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
 11011   0034BC                     
 11012                           ; BSR set to: 1
 11013   0034BC  C1B8  F1B0         	movff	powf@__xc8_float_word,powf@t
 11014   0034C0  C1B9  F1B1         	movff	powf@__xc8_float_word+1,powf@t+1
 11015   0034C4  C1BA  F1B2         	movff	powf@__xc8_float_word+2,powf@t+2
 11016   0034C8  C1BB  F1B3         	movff	powf@__xc8_float_word+3,powf@t+3
 11017   0034CC                     
 11018                           ; BSR set to: 1
 11019   0034CC  C1B0  F021         	movff	powf@t,___flmul@b
 11020   0034D0  C1B1  F022         	movff	powf@t+1,___flmul@b+1
 11021   0034D4  C1B2  F023         	movff	powf@t+2,___flmul@b+2
 11022   0034D8  C1B3  F024         	movff	powf@t+3,___flmul@b+3
 11023   0034DC  0E00               	movlw	0
 11024   0034DE  6E25               	movwf	___flmul@a^0,c
 11025   0034E0  0E72               	movlw	114
 11026   0034E2  6E26               	movwf	(___flmul@a+1)^0,c
 11027   0034E4  0E31               	movlw	49
 11028   0034E6  6E27               	movwf	(___flmul@a+2)^0,c
 11029   0034E8  0E3F               	movlw	63
 11030   0034EA  6E28               	movwf	(___flmul@a+3)^0,c
 11031   0034EC  ECF4  F031         	call	___flmul	;wreg free
 11032   0034F0  C021  F174         	movff	?___flmul,powf@u
 11033   0034F4  C022  F175         	movff	?___flmul+1,powf@u+1
 11034   0034F8  C023  F176         	movff	?___flmul+2,powf@u+2
 11035   0034FC  C024  F177         	movff	?___flmul+3,powf@u+3
 11036   003500  C19C  F03E         	movff	powf@p_h,___flsub@a
 11037   003504  C19D  F03F         	movff	powf@p_h+1,___flsub@a+1
 11038   003508  C19E  F040         	movff	powf@p_h+2,___flsub@a+2
 11039   00350C  C19F  F041         	movff	powf@p_h+3,___flsub@a+3
 11040   003510  C1B0  F03A         	movff	powf@t,___flsub@b
 11041   003514  C1B1  F03B         	movff	powf@t+1,___flsub@b+1
 11042   003518  C1B2  F03C         	movff	powf@t+2,___flsub@b+2
 11043   00351C  C1B3  F03D         	movff	powf@t+3,___flsub@b+3
 11044   003520  EC8D  F053         	call	___flsub	;wreg free
 11045   003524  C03A  F198         	movff	?___flsub,_powf$2924
 11046   003528  C03B  F199         	movff	?___flsub+1,_powf$2924+1
 11047   00352C  C03C  F19A         	movff	?___flsub+2,_powf$2924+2
 11048   003530  C03D  F19B         	movff	?___flsub+3,_powf$2924+3
 11049   003534  0E18               	movlw	24
 11050   003536  6E25               	movwf	___flmul@a^0,c
 11051   003538  0E72               	movlw	114
 11052   00353A  6E26               	movwf	(___flmul@a+1)^0,c
 11053   00353C  0E31               	movlw	49
 11054   00353E  6E27               	movwf	(___flmul@a+2)^0,c
 11055   003540  0E3F               	movlw	63
 11056   003542  6E28               	movwf	(___flmul@a+3)^0,c
 11057   003544  C198  F03E         	movff	_powf$2924,___flsub@a
 11058   003548  C199  F03F         	movff	_powf$2924+1,___flsub@a+1
 11059   00354C  C19A  F040         	movff	_powf$2924+2,___flsub@a+2
 11060   003550  C19B  F041         	movff	_powf$2924+3,___flsub@a+3
 11061   003554  C164  F03A         	movff	powf@p_l,___flsub@b
 11062   003558  C165  F03B         	movff	powf@p_l+1,___flsub@b+1
 11063   00355C  C166  F03C         	movff	powf@p_l+2,___flsub@b+2
 11064   003560  C167  F03D         	movff	powf@p_l+3,___flsub@b+3
 11065   003564  EC8D  F053         	call	___flsub	;wreg free
 11066   003568  C03A  F021         	movff	?___flsub,___flmul@b
 11067   00356C  C03B  F022         	movff	?___flsub+1,___flmul@b+1
 11068   003570  C03C  F023         	movff	?___flsub+2,___flmul@b+2
 11069   003574  C03D  F024         	movff	?___flsub+3,___flmul@b+3
 11070   003578  ECF4  F031         	call	___flmul	;wreg free
 11071   00357C  C021  F114         	movff	?___flmul,_powf$2934
 11072   003580  C022  F115         	movff	?___flmul+1,_powf$2934+1
 11073   003584  C023  F116         	movff	?___flmul+2,_powf$2934+2
 11074   003588  C024  F117         	movff	?___flmul+3,_powf$2934+3
 11075   00358C  C114  F011         	movff	_powf$2934,___fladd@b
 11076   003590  C115  F012         	movff	_powf$2934+1,___fladd@b+1
 11077   003594  C116  F013         	movff	_powf$2934+2,___fladd@b+2
 11078   003598  C117  F014         	movff	_powf$2934+3,___fladd@b+3
 11079   00359C  0E8C               	movlw	140
 11080   00359E  6E25               	movwf	___flmul@a^0,c
 11081   0035A0  0EBE               	movlw	190
 11082   0035A2  6E26               	movwf	(___flmul@a+1)^0,c
 11083   0035A4  0EBF               	movlw	191
 11084   0035A6  6E27               	movwf	(___flmul@a+2)^0,c
 11085   0035A8  0E35               	movlw	53
 11086   0035AA  6E28               	movwf	(___flmul@a+3)^0,c
 11087   0035AC  C1B0  F021         	movff	powf@t,___flmul@b
 11088   0035B0  C1B1  F022         	movff	powf@t+1,___flmul@b+1
 11089   0035B4  C1B2  F023         	movff	powf@t+2,___flmul@b+2
 11090   0035B8  C1B3  F024         	movff	powf@t+3,___flmul@b+3
 11091   0035BC  ECF4  F031         	call	___flmul	;wreg free
 11092   0035C0  C021  F015         	movff	?___flmul,___fladd@a
 11093   0035C4  C022  F016         	movff	?___flmul+1,___fladd@a+1
 11094   0035C8  C023  F017         	movff	?___flmul+2,___fladd@a+2
 11095   0035CC  C024  F018         	movff	?___flmul+3,___fladd@a+3
 11096   0035D0  EC00  F02B         	call	___fladd	;wreg free
 11097   0035D4  C011  F178         	movff	?___fladd,powf@v
 11098   0035D8  C012  F179         	movff	?___fladd+1,powf@v+1
 11099   0035DC  C013  F17A         	movff	?___fladd+2,powf@v+2
 11100   0035E0  C014  F17B         	movff	?___fladd+3,powf@v+3
 11101   0035E4  C174  F011         	movff	powf@u,___fladd@b
 11102   0035E8  C175  F012         	movff	powf@u+1,___fladd@b+1
 11103   0035EC  C176  F013         	movff	powf@u+2,___fladd@b+2
 11104   0035F0  C177  F014         	movff	powf@u+3,___fladd@b+3
 11105   0035F4  C178  F015         	movff	powf@v,___fladd@a
 11106   0035F8  C179  F016         	movff	powf@v+1,___fladd@a+1
 11107   0035FC  C17A  F017         	movff	powf@v+2,___fladd@a+2
 11108   003600  C17B  F018         	movff	powf@v+3,___fladd@a+3
 11109   003604  EC00  F02B         	call	___fladd	;wreg free
 11110   003608  C011  F1B4         	movff	?___fladd,powf@z
 11111   00360C  C012  F1B5         	movff	?___fladd+1,powf@z+1
 11112   003610  C013  F1B6         	movff	?___fladd+2,powf@z+2
 11113   003614  C014  F1B7         	movff	?___fladd+3,powf@z+3
 11114   003618  C174  F03E         	movff	powf@u,___flsub@a
 11115   00361C  C175  F03F         	movff	powf@u+1,___flsub@a+1
 11116   003620  C176  F040         	movff	powf@u+2,___flsub@a+2
 11117   003624  C177  F041         	movff	powf@u+3,___flsub@a+3
 11118   003628  C1B4  F03A         	movff	powf@z,___flsub@b
 11119   00362C  C1B5  F03B         	movff	powf@z+1,___flsub@b+1
 11120   003630  C1B6  F03C         	movff	powf@z+2,___flsub@b+2
 11121   003634  C1B7  F03D         	movff	powf@z+3,___flsub@b+3
 11122   003638  EC8D  F053         	call	___flsub	;wreg free
 11123   00363C  C03A  F198         	movff	?___flsub,_powf$2924
 11124   003640  C03B  F199         	movff	?___flsub+1,_powf$2924+1
 11125   003644  C03C  F19A         	movff	?___flsub+2,_powf$2924+2
 11126   003648  C03D  F19B         	movff	?___flsub+3,_powf$2924+3
 11127   00364C  C178  F03A         	movff	powf@v,___flsub@b
 11128   003650  C179  F03B         	movff	powf@v+1,___flsub@b+1
 11129   003654  C17A  F03C         	movff	powf@v+2,___flsub@b+2
 11130   003658  C17B  F03D         	movff	powf@v+3,___flsub@b+3
 11131   00365C  C198  F03E         	movff	_powf$2924,___flsub@a
 11132   003660  C199  F03F         	movff	_powf$2924+1,___flsub@a+1
 11133   003664  C19A  F040         	movff	_powf$2924+2,___flsub@a+2
 11134   003668  C19B  F041         	movff	_powf$2924+3,___flsub@a+3
 11135   00366C  EC8D  F053         	call	___flsub	;wreg free
 11136   003670  C03A  F144         	movff	?___flsub,powf@w
 11137   003674  C03B  F145         	movff	?___flsub+1,powf@w+1
 11138   003678  C03C  F146         	movff	?___flsub+2,powf@w+2
 11139   00367C  C03D  F147         	movff	?___flsub+3,powf@w+3
 11140   003680  C1B4  F021         	movff	powf@z,___flmul@b
 11141   003684  C1B5  F022         	movff	powf@z+1,___flmul@b+1
 11142   003688  C1B6  F023         	movff	powf@z+2,___flmul@b+2
 11143   00368C  C1B7  F024         	movff	powf@z+3,___flmul@b+3
 11144   003690  C1B4  F025         	movff	powf@z,___flmul@a
 11145   003694  C1B5  F026         	movff	powf@z+1,___flmul@a+1
 11146   003698  C1B6  F027         	movff	powf@z+2,___flmul@a+2
 11147   00369C  C1B7  F028         	movff	powf@z+3,___flmul@a+3
 11148   0036A0  ECF4  F031         	call	___flmul	;wreg free
 11149   0036A4  C021  F1B0         	movff	?___flmul,powf@t
 11150   0036A8  C022  F1B1         	movff	?___flmul+1,powf@t+1
 11151   0036AC  C023  F1B2         	movff	?___flmul+2,powf@t+2
 11152   0036B0  C024  F1B3         	movff	?___flmul+3,powf@t+3
 11153   0036B4  0E0E               	movlw	14
 11154   0036B6  6E15               	movwf	___fladd@a^0,c
 11155   0036B8  0EEA               	movlw	234
 11156   0036BA  6E16               	movwf	(___fladd@a+1)^0,c
 11157   0036BC  0EDD               	movlw	221
 11158   0036BE  6E17               	movwf	(___fladd@a+2)^0,c
 11159   0036C0  0EB5               	movlw	181
 11160   0036C2  6E18               	movwf	(___fladd@a+3)^0,c
 11161   0036C4  0E4C               	movlw	76
 11162   0036C6  6E25               	movwf	___flmul@a^0,c
 11163   0036C8  0EBB               	movlw	187
 11164   0036CA  6E26               	movwf	(___flmul@a+1)^0,c
 11165   0036CC  0E31               	movlw	49
 11166   0036CE  6E27               	movwf	(___flmul@a+2)^0,c
 11167   0036D0  0E33               	movlw	51
 11168   0036D2  6E28               	movwf	(___flmul@a+3)^0,c
 11169   0036D4  C1B0  F021         	movff	powf@t,___flmul@b
 11170   0036D8  C1B1  F022         	movff	powf@t+1,___flmul@b+1
 11171   0036DC  C1B2  F023         	movff	powf@t+2,___flmul@b+2
 11172   0036E0  C1B3  F024         	movff	powf@t+3,___flmul@b+3
 11173   0036E4  ECF4  F031         	call	___flmul	;wreg free
 11174   0036E8  C021  F011         	movff	?___flmul,___fladd@b
 11175   0036EC  C022  F012         	movff	?___flmul+1,___fladd@b+1
 11176   0036F0  C023  F013         	movff	?___flmul+2,___fladd@b+2
 11177   0036F4  C024  F014         	movff	?___flmul+3,___fladd@b+3
 11178   0036F8  EC00  F02B         	call	___fladd	;wreg free
 11179   0036FC  C011  F1A4         	movff	?___fladd,_powf$2921
 11180   003700  C012  F1A5         	movff	?___fladd+1,_powf$2921+1
 11181   003704  C013  F1A6         	movff	?___fladd+2,_powf$2921+2
 11182   003708  C014  F1A7         	movff	?___fladd+3,_powf$2921+3
 11183   00370C  0E55               	movlw	85
 11184   00370E  6E15               	movwf	___fladd@a^0,c
 11185   003710  0EB3               	movlw	179
 11186   003712  6E16               	movwf	(___fladd@a+1)^0,c
 11187   003714  0E8A               	movlw	138
 11188   003716  6E17               	movwf	(___fladd@a+2)^0,c
 11189   003718  0E38               	movlw	56
 11190   00371A  6E18               	movwf	(___fladd@a+3)^0,c
 11191   00371C  C1B0  F025         	movff	powf@t,___flmul@a
 11192   003720  C1B1  F026         	movff	powf@t+1,___flmul@a+1
 11193   003724  C1B2  F027         	movff	powf@t+2,___flmul@a+2
 11194   003728  C1B3  F028         	movff	powf@t+3,___flmul@a+3
 11195   00372C  C1A4  F021         	movff	_powf$2921,___flmul@b
 11196   003730  C1A5  F022         	movff	_powf$2921+1,___flmul@b+1
 11197   003734  C1A6  F023         	movff	_powf$2921+2,___flmul@b+2
 11198   003738  C1A7  F024         	movff	_powf$2921+3,___flmul@b+3
 11199   00373C  ECF4  F031         	call	___flmul	;wreg free
 11200   003740  C021  F011         	movff	?___flmul,___fladd@b
 11201   003744  C022  F012         	movff	?___flmul+1,___fladd@b+1
 11202   003748  C023  F013         	movff	?___flmul+2,___fladd@b+2
 11203   00374C  C024  F014         	movff	?___flmul+3,___fladd@b+3
 11204   003750  EC00  F02B         	call	___fladd	;wreg free
 11205   003754  C011  F154         	movff	?___fladd,_powf$2922
 11206   003758  C012  F155         	movff	?___fladd+1,_powf$2922+1
 11207   00375C  C013  F156         	movff	?___fladd+2,_powf$2922+2
 11208   003760  C014  F157         	movff	?___fladd+3,_powf$2922+3
 11209   003764  0E61               	movlw	97
 11210   003766  6E15               	movwf	___fladd@a^0,c
 11211   003768  0E0B               	movlw	11
 11212   00376A  6E16               	movwf	(___fladd@a+1)^0,c
 11213   00376C  0E36               	movlw	54
 11214   00376E  6E17               	movwf	(___fladd@a+2)^0,c
 11215   003770  0EBB               	movlw	187
 11216   003772  6E18               	movwf	(___fladd@a+3)^0,c
 11217   003774  C1B0  F025         	movff	powf@t,___flmul@a
 11218   003778  C1B1  F026         	movff	powf@t+1,___flmul@a+1
 11219   00377C  C1B2  F027         	movff	powf@t+2,___flmul@a+2
 11220   003780  C1B3  F028         	movff	powf@t+3,___flmul@a+3
 11221   003784  C154  F021         	movff	_powf$2922,___flmul@b
 11222   003788  C155  F022         	movff	_powf$2922+1,___flmul@b+1
 11223   00378C  C156  F023         	movff	_powf$2922+2,___flmul@b+2
 11224   003790  C157  F024         	movff	_powf$2922+3,___flmul@b+3
 11225   003794  ECF4  F031         	call	___flmul	;wreg free
 11226   003798  C021  F011         	movff	?___flmul,___fladd@b
 11227   00379C  C022  F012         	movff	?___flmul+1,___fladd@b+1
 11228   0037A0  C023  F013         	movff	?___flmul+2,___fladd@b+2
 11229   0037A4  C024  F014         	movff	?___flmul+3,___fladd@b+3
 11230   0037A8  EC00  F02B         	call	___fladd	;wreg free
 11231   0037AC  C011  F148         	movff	?___fladd,_powf$2923
 11232   0037B0  C012  F149         	movff	?___fladd+1,_powf$2923+1
 11233   0037B4  C013  F14A         	movff	?___fladd+2,_powf$2923+2
 11234   0037B8  C014  F14B         	movff	?___fladd+3,_powf$2923+3
 11235   0037BC  0EAB               	movlw	171
 11236   0037BE  6E15               	movwf	___fladd@a^0,c
 11237   0037C0  0EAA               	movlw	170
 11238   0037C2  6E16               	movwf	(___fladd@a+1)^0,c
 11239   0037C4  0E2A               	movlw	42
 11240   0037C6  6E17               	movwf	(___fladd@a+2)^0,c
 11241   0037C8  0E3E               	movlw	62
 11242   0037CA  6E18               	movwf	(___fladd@a+3)^0,c
 11243   0037CC  C1B0  F025         	movff	powf@t,___flmul@a
 11244   0037D0  C1B1  F026         	movff	powf@t+1,___flmul@a+1
 11245   0037D4  C1B2  F027         	movff	powf@t+2,___flmul@a+2
 11246   0037D8  C1B3  F028         	movff	powf@t+3,___flmul@a+3
 11247   0037DC  C148  F021         	movff	_powf$2923,___flmul@b
 11248   0037E0  C149  F022         	movff	_powf$2923+1,___flmul@b+1
 11249   0037E4  C14A  F023         	movff	_powf$2923+2,___flmul@b+2
 11250   0037E8  C14B  F024         	movff	_powf$2923+3,___flmul@b+3
 11251   0037EC  ECF4  F031         	call	___flmul	;wreg free
 11252   0037F0  C021  F011         	movff	?___flmul,___fladd@b
 11253   0037F4  C022  F012         	movff	?___flmul+1,___fladd@b+1
 11254   0037F8  C023  F013         	movff	?___flmul+2,___fladd@b+2
 11255   0037FC  C024  F014         	movff	?___flmul+3,___fladd@b+3
 11256   003800  EC00  F02B         	call	___fladd	;wreg free
 11257   003804  C011  F138         	movff	?___fladd,_powf$2925
 11258   003808  C012  F139         	movff	?___fladd+1,_powf$2925+1
 11259   00380C  C013  F13A         	movff	?___fladd+2,_powf$2925+2
 11260   003810  C014  F13B         	movff	?___fladd+3,_powf$2925+3
 11261   003814  C1B4  F03A         	movff	powf@z,___flsub@b
 11262   003818  C1B5  F03B         	movff	powf@z+1,___flsub@b+1
 11263   00381C  C1B6  F03C         	movff	powf@z+2,___flsub@b+2
 11264   003820  C1B7  F03D         	movff	powf@z+3,___flsub@b+3
 11265   003824  C1B0  F025         	movff	powf@t,___flmul@a
 11266   003828  C1B1  F026         	movff	powf@t+1,___flmul@a+1
 11267   00382C  C1B2  F027         	movff	powf@t+2,___flmul@a+2
 11268   003830  C1B3  F028         	movff	powf@t+3,___flmul@a+3
 11269   003834  C138  F021         	movff	_powf$2925,___flmul@b
 11270   003838  C139  F022         	movff	_powf$2925+1,___flmul@b+1
 11271   00383C  C13A  F023         	movff	_powf$2925+2,___flmul@b+2
 11272   003840  C13B  F024         	movff	_powf$2925+3,___flmul@b+3
 11273   003844  ECF4  F031         	call	___flmul	;wreg free
 11274   003848  C021  F03E         	movff	?___flmul,___flsub@a
 11275   00384C  C022  F03F         	movff	?___flmul+1,___flsub@a+1
 11276   003850  C023  F040         	movff	?___flmul+2,___flsub@a+2
 11277   003854  C024  F041         	movff	?___flmul+3,___flsub@a+3
 11278   003858  EC8D  F053         	call	___flsub	;wreg free
 11279   00385C  C03A  F184         	movff	?___flsub,powf@t1
 11280   003860  C03B  F185         	movff	?___flsub+1,powf@t1+1
 11281   003864  C03C  F186         	movff	?___flsub+2,powf@t1+2
 11282   003868  C03D  F187         	movff	?___flsub+3,powf@t1+3
 11283   00386C  0E00               	movlw	0
 11284   00386E  6E15               	movwf	___fladd@a^0,c
 11285   003870  0E00               	movlw	0
 11286   003872  6E16               	movwf	(___fladd@a+1)^0,c
 11287   003874  0E00               	movlw	0
 11288   003876  6E17               	movwf	(___fladd@a+2)^0,c
 11289   003878  0EC0               	movlw	192
 11290   00387A  6E18               	movwf	(___fladd@a+3)^0,c
 11291   00387C  C184  F011         	movff	powf@t1,___fladd@b
 11292   003880  C185  F012         	movff	powf@t1+1,___fladd@b+1
 11293   003884  C186  F013         	movff	powf@t1+2,___fladd@b+2
 11294   003888  C187  F014         	movff	powf@t1+3,___fladd@b+3
 11295   00388C  EC00  F02B         	call	___fladd	;wreg free
 11296   003890  C011  F046         	movff	?___fladd,___fldiv@a
 11297   003894  C012  F047         	movff	?___fladd+1,___fldiv@a+1
 11298   003898  C013  F048         	movff	?___fladd+2,___fldiv@a+2
 11299   00389C  C014  F049         	movff	?___fladd+3,___fldiv@a+3
 11300   0038A0  C184  F025         	movff	powf@t1,___flmul@a
 11301   0038A4  C185  F026         	movff	powf@t1+1,___flmul@a+1
 11302   0038A8  C186  F027         	movff	powf@t1+2,___flmul@a+2
 11303   0038AC  C187  F028         	movff	powf@t1+3,___flmul@a+3
 11304   0038B0  C1B4  F021         	movff	powf@z,___flmul@b
 11305   0038B4  C1B5  F022         	movff	powf@z+1,___flmul@b+1
 11306   0038B8  C1B6  F023         	movff	powf@z+2,___flmul@b+2
 11307   0038BC  C1B7  F024         	movff	powf@z+3,___flmul@b+3
 11308   0038C0  ECF4  F031         	call	___flmul	;wreg free
 11309   0038C4  C021  F042         	movff	?___flmul,___fldiv@b
 11310   0038C8  C022  F043         	movff	?___flmul+1,___fldiv@b+1
 11311   0038CC  C023  F044         	movff	?___flmul+2,___fldiv@b+2
 11312   0038D0  C024  F045         	movff	?___flmul+3,___fldiv@b+3
 11313   0038D4  EC09  F034         	call	___fldiv	;wreg free
 11314   0038D8  C042  F13C         	movff	?___fldiv,_powf$2929
 11315   0038DC  C043  F13D         	movff	?___fldiv+1,_powf$2929+1
 11316   0038E0  C044  F13E         	movff	?___fldiv+2,_powf$2929+2
 11317   0038E4  C045  F13F         	movff	?___fldiv+3,_powf$2929+3
 11318   0038E8  C144  F015         	movff	powf@w,___fladd@a
 11319   0038EC  C145  F016         	movff	powf@w+1,___fladd@a+1
 11320   0038F0  C146  F017         	movff	powf@w+2,___fladd@a+2
 11321   0038F4  C147  F018         	movff	powf@w+3,___fladd@a+3
 11322   0038F8  C144  F025         	movff	powf@w,___flmul@a
 11323   0038FC  C145  F026         	movff	powf@w+1,___flmul@a+1
 11324   003900  C146  F027         	movff	powf@w+2,___flmul@a+2
 11325   003904  C147  F028         	movff	powf@w+3,___flmul@a+3
 11326   003908  C1B4  F021         	movff	powf@z,___flmul@b
 11327   00390C  C1B5  F022         	movff	powf@z+1,___flmul@b+1
 11328   003910  C1B6  F023         	movff	powf@z+2,___flmul@b+2
 11329   003914  C1B7  F024         	movff	powf@z+3,___flmul@b+3
 11330   003918  ECF4  F031         	call	___flmul	;wreg free
 11331   00391C  C021  F011         	movff	?___flmul,___fladd@b
 11332   003920  C022  F012         	movff	?___flmul+1,___fladd@b+1
 11333   003924  C023  F013         	movff	?___flmul+2,___fladd@b+2
 11334   003928  C024  F014         	movff	?___flmul+3,___fladd@b+3
 11335   00392C  EC00  F02B         	call	___fladd	;wreg free
 11336   003930  C011  F118         	movff	?___fladd,_powf$2935
 11337   003934  C012  F119         	movff	?___fladd+1,_powf$2935+1
 11338   003938  C013  F11A         	movff	?___fladd+2,_powf$2935+2
 11339   00393C  C014  F11B         	movff	?___fladd+3,_powf$2935+3
 11340   003940  C13C  F03A         	movff	_powf$2929,___flsub@b
 11341   003944  C13D  F03B         	movff	_powf$2929+1,___flsub@b+1
 11342   003948  C13E  F03C         	movff	_powf$2929+2,___flsub@b+2
 11343   00394C  C13F  F03D         	movff	_powf$2929+3,___flsub@b+3
 11344   003950  C118  F03E         	movff	_powf$2935,___flsub@a
 11345   003954  C119  F03F         	movff	_powf$2935+1,___flsub@a+1
 11346   003958  C11A  F040         	movff	_powf$2935+2,___flsub@a+2
 11347   00395C  C11B  F041         	movff	_powf$2935+3,___flsub@a+3
 11348   003960  EC8D  F053         	call	___flsub	;wreg free
 11349   003964  C03A  F14C         	movff	?___flsub,powf@r
 11350   003968  C03B  F14D         	movff	?___flsub+1,powf@r+1
 11351   00396C  C03C  F14E         	movff	?___flsub+2,powf@r+2
 11352   003970  C03D  F14F         	movff	?___flsub+3,powf@r+3
 11353   003974  C1B4  F03E         	movff	powf@z,___flsub@a
 11354   003978  C1B5  F03F         	movff	powf@z+1,___flsub@a+1
 11355   00397C  C1B6  F040         	movff	powf@z+2,___flsub@a+2
 11356   003980  C1B7  F041         	movff	powf@z+3,___flsub@a+3
 11357   003984  C14C  F03A         	movff	powf@r,___flsub@b
 11358   003988  C14D  F03B         	movff	powf@r+1,___flsub@b+1
 11359   00398C  C14E  F03C         	movff	powf@r+2,___flsub@b+2
 11360   003990  C14F  F03D         	movff	powf@r+3,___flsub@b+3
 11361   003994  EC8D  F053         	call	___flsub	;wreg free
 11362   003998  C03A  F198         	movff	?___flsub,_powf$2924
 11363   00399C  C03B  F199         	movff	?___flsub+1,_powf$2924+1
 11364   0039A0  C03C  F19A         	movff	?___flsub+2,_powf$2924+2
 11365   0039A4  C03D  F19B         	movff	?___flsub+3,_powf$2924+3
 11366   0039A8  0E00               	movlw	0
 11367   0039AA  6E3A               	movwf	___flsub@b^0,c
 11368   0039AC  0E00               	movlw	0
 11369   0039AE  6E3B               	movwf	(___flsub@b+1)^0,c
 11370   0039B0  0E80               	movlw	128
 11371   0039B2  6E3C               	movwf	(___flsub@b+2)^0,c
 11372   0039B4  0E3F               	movlw	63
 11373   0039B6  6E3D               	movwf	(___flsub@b+3)^0,c
 11374   0039B8  C198  F03E         	movff	_powf$2924,___flsub@a
 11375   0039BC  C199  F03F         	movff	_powf$2924+1,___flsub@a+1
 11376   0039C0  C19A  F040         	movff	_powf$2924+2,___flsub@a+2
 11377   0039C4  C19B  F041         	movff	_powf$2924+3,___flsub@a+3
 11378   0039C8  EC8D  F053         	call	___flsub	;wreg free
 11379   0039CC  C03A  F1B4         	movff	?___flsub,powf@z
 11380   0039D0  C03B  F1B5         	movff	?___flsub+1,powf@z+1
 11381   0039D4  C03C  F1B6         	movff	?___flsub+2,powf@z+2
 11382   0039D8  C03D  F1B7         	movff	?___flsub+3,powf@z+3
 11383   0039DC  C1B4  F1B8         	movff	powf@z,powf@__xc8_float_word
 11384   0039E0  C1B5  F1B9         	movff	powf@z+1,powf@__xc8_float_word+1
 11385   0039E4  C1B6  F1BA         	movff	powf@z+2,powf@__xc8_float_word+2
 11386   0039E8  C1B7  F1BB         	movff	powf@z+3,powf@__xc8_float_word+3
 11387   0039EC  C1B8  F1AC         	movff	powf@__xc8_float_word,powf@j
 11388   0039F0  C1B9  F1AD         	movff	powf@__xc8_float_word+1,powf@j+1
 11389   0039F4  C1BA  F1AE         	movff	powf@__xc8_float_word+2,powf@j+2
 11390   0039F8  C1BB  F1AF         	movff	powf@__xc8_float_word+3,powf@j+3
 11391   0039FC  C180  F088         	movff	powf@n,??_powf
 11392   003A00  C181  F089         	movff	powf@n+1,??_powf+1
 11393   003A04  C182  F08A         	movff	powf@n+2,??_powf+2
 11394   003A08  C183  F08B         	movff	powf@n+3,??_powf+3
 11395   003A0C  0E17               	movlw	23
 11396   003A0E                     u15925:
 11397   003A0E  90D8               	bcf	status,0,c
 11398   003A10  0100               	movlb	0	; () banked
 11399   003A12  3788               	rlcf	??_powf& (0+255),f,b
 11400   003A14  3789               	rlcf	(??_powf+1)& (0+255),f,b
 11401   003A16  378A               	rlcf	(??_powf+2)& (0+255),f,b
 11402   003A18  378B               	rlcf	(??_powf+3)& (0+255),f,b
 11403   003A1A  2EE8               	decfsz	wreg,f,c
 11404   003A1C  EF07  F01D         	goto	u15925
 11405   003A20  5188               	movf	??_powf& (0+255),w,b
 11406   003A22  0101               	movlb	1	; () banked
 11407   003A24  27AC               	addwf	powf@j& (0+255),f,b
 11408   003A26  0100               	movlb	0	; () banked
 11409   003A28  5189               	movf	(??_powf+1)& (0+255),w,b
 11410   003A2A  0101               	movlb	1	; () banked
 11411   003A2C  23AD               	addwfc	(powf@j+1)& (0+255),f,b
 11412   003A2E  0100               	movlb	0	; () banked
 11413   003A30  518A               	movf	(??_powf+2)& (0+255),w,b
 11414   003A32  0101               	movlb	1	; () banked
 11415   003A34  23AE               	addwfc	(powf@j+2)& (0+255),f,b
 11416   003A36  0100               	movlb	0	; () banked
 11417   003A38  518B               	movf	(??_powf+3)& (0+255),w,b
 11418   003A3A  0101               	movlb	1	; () banked
 11419   003A3C  23AF               	addwfc	(powf@j+3)& (0+255),f,b
 11420   003A3E                     
 11421                           ; BSR set to: 1
 11422   003A3E  0E17               	movlw	23
 11423   003A40  0100               	movlb	0	; () banked
 11424   003A42  6F88               	movwf	??_powf& (0+255),b
 11425   003A44  C1AC  F089         	movff	powf@j,??_powf+1
 11426   003A48  C1AD  F08A         	movff	powf@j+1,??_powf+2
 11427   003A4C  C1AE  F08B         	movff	powf@j+2,??_powf+3
 11428   003A50  C1AF  F08C         	movff	powf@j+3,??_powf+4
 11429   003A54                     u15935:
 11430   003A54  6788               	tstfsz	??_powf& (0+255),b
 11431   003A56  EF2F  F01D         	goto	u15936
 11432   003A5A  EF37  F01D         	goto	u15937
 11433   003A5E                     u15936:
 11434   003A5E  358C               	rlcf	(??_powf+4)& (0+255),w,b
 11435   003A60  338C               	rrcf	(??_powf+4)& (0+255),f,b
 11436   003A62  338B               	rrcf	(??_powf+3)& (0+255),f,b
 11437   003A64  338A               	rrcf	(??_powf+2)& (0+255),f,b
 11438   003A66  3389               	rrcf	(??_powf+1)& (0+255),f,b
 11439   003A68  2F88               	decfsz	??_powf& (0+255),f,b
 11440   003A6A  EF2A  F01D         	goto	u15935
 11441   003A6E                     u15937:
 11442   003A6E  0100               	movlb	0	; () banked
 11443   003A70  BF8C               	btfsc	(??_powf+4)& (0+255),7,b
 11444   003A72  EF47  F01D         	goto	u15940
 11445   003A76  518C               	movf	(??_powf+4)& (0+255),w,b
 11446   003A78  118B               	iorwf	(??_powf+3)& (0+255),w,b
 11447   003A7A  118A               	iorwf	(??_powf+2)& (0+255),w,b
 11448   003A7C  E106               	bnz	u15941
 11449   003A7E  0589               	decf	(??_powf+1)& (0+255),w,b
 11450   003A80  B0D8               	btfsc	status,0,c
 11451   003A82  EF45  F01D         	goto	u15941
 11452   003A86  EF47  F01D         	goto	u15940
 11453   003A8A                     u15941:
 11454   003A8A  EF5F  F01D         	goto	l2003
 11455   003A8E                     u15940:
 11456   003A8E                     
 11457                           ; BSR set to: 0
 11458   003A8E  C1B4  F03A         	movff	powf@z,scalbnf@x
 11459   003A92  C1B5  F03B         	movff	powf@z+1,scalbnf@x+1
 11460   003A96  C1B6  F03C         	movff	powf@z+2,scalbnf@x+2
 11461   003A9A  C1B7  F03D         	movff	powf@z+3,scalbnf@x+3
 11462   003A9E  C180  F03E         	movff	powf@n,scalbnf@n
 11463   003AA2  C181  F03F         	movff	powf@n+1,scalbnf@n+1
 11464   003AA6  ECF7  F03B         	call	_scalbnf	;wreg free
 11465   003AAA  C03A  F1B4         	movff	?_scalbnf,powf@z
 11466   003AAE  C03B  F1B5         	movff	?_scalbnf+1,powf@z+1
 11467   003AB2  C03C  F1B6         	movff	?_scalbnf+2,powf@z+2
 11468   003AB6  C03D  F1B7         	movff	?_scalbnf+3,powf@z+3
 11469   003ABA  EF6F  F01D         	goto	l12650
 11470   003ABE                     l2003:
 11471                           
 11472                           ; BSR set to: 0
 11473   003ABE  C1AC  F1B8         	movff	powf@j,powf@__xc8_float_word
 11474   003AC2  C1AD  F1B9         	movff	powf@j+1,powf@__xc8_float_word+1
 11475   003AC6  C1AE  F1BA         	movff	powf@j+2,powf@__xc8_float_word+2
 11476   003ACA  C1AF  F1BB         	movff	powf@j+3,powf@__xc8_float_word+3
 11477   003ACE  C1B8  F1B4         	movff	powf@__xc8_float_word,powf@z
 11478   003AD2  C1B9  F1B5         	movff	powf@__xc8_float_word+1,powf@z+1
 11479   003AD6  C1BA  F1B6         	movff	powf@__xc8_float_word+2,powf@z+2
 11480   003ADA  C1BB  F1B7         	movff	powf@__xc8_float_word+3,powf@z+3
 11481   003ADE                     l12650:
 11482   003ADE  C188  F021         	movff	powf@sn,___flmul@b
 11483   003AE2  C189  F022         	movff	powf@sn+1,___flmul@b+1
 11484   003AE6  C18A  F023         	movff	powf@sn+2,___flmul@b+2
 11485   003AEA  C18B  F024         	movff	powf@sn+3,___flmul@b+3
 11486   003AEE  C1B4  F025         	movff	powf@z,___flmul@a
 11487   003AF2  C1B5  F026         	movff	powf@z+1,___flmul@a+1
 11488   003AF6  C1B6  F027         	movff	powf@z+2,___flmul@a+2
 11489   003AFA  C1B7  F028         	movff	powf@z+3,___flmul@a+3
 11490   003AFE  ECF4  F031         	call	___flmul	;wreg free
 11491   003B02  C021  F080         	movff	?___flmul,?_powf
 11492   003B06  C022  F081         	movff	?___flmul+1,?_powf+1
 11493   003B0A  C023  F082         	movff	?___flmul+2,?_powf+2
 11494   003B0E  C024  F083         	movff	?___flmul+3,?_powf+3
 11495   003B12                     l1891:
 11496   003B12  0012               	return		;funcret
 11497   003B14                     __end_of_powf:
 11498                           	callstack 0
 11499                           
 11500 ;; *************** function _sqrtf *****************
 11501 ;; Defined at:
 11502 ;;		line 22 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sqrtf.c"
 11503 ;; Parameters:    Size  Location     Type
 11504 ;;  x               4   77[COMRAM] float 
 11505 ;; Auto vars:     Size  Location     Type
 11506 ;;  ix              4  118[COMRAM] long 
 11507 ;;  r               4  114[COMRAM] unsigned long 
 11508 ;;  m               4  110[COMRAM] long 
 11509 ;;  z               4  106[COMRAM] float 
 11510 ;;  t               4  102[COMRAM] long 
 11511 ;;  q               4   98[COMRAM] long 
 11512 ;;  __xc8_float_    4   94[COMRAM] struct .
 11513 ;;  i               4   90[COMRAM] long 
 11514 ;;  s               4   86[COMRAM] long 
 11515 ;;  sign            4    0        long 
 11516 ;; Return value:  Size  Location     Type
 11517 ;;                  4   77[COMRAM] float 
 11518 ;; Registers used:
 11519 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11520 ;; Tracked objects:
 11521 ;;		On entry : 0/0
 11522 ;;		On exit  : 0/0
 11523 ;;		Unchanged: 0/0
 11524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11525 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11526 ;;      Locals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11527 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11528 ;;      Totals:        45       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11529 ;;Total ram usage:       45 bytes
 11530 ;; Hardware stack levels used: 1
 11531 ;; Hardware stack levels required when called: 4
 11532 ;; This function calls:
 11533 ;;		___fladd
 11534 ;;		___flge
 11535 ;;		___flmul
 11536 ;;		_nanf
 11537 ;; This function is called by:
 11538 ;;		_powf
 11539 ;; This function uses a non-reentrant model
 11540 ;;
 11541                           
 11542                           	psect	text21
 11543   005AC0                     __ptext21:
 11544                           	callstack 0
 11545   005AC0                     _sqrtf:
 11546                           	callstack 23
 11547   005AC0  C04E  F05F         	movff	sqrtf@x,sqrtf@__xc8_float_word
 11548   005AC4  C04F  F060         	movff	sqrtf@x+1,sqrtf@__xc8_float_word+1
 11549   005AC8  C050  F061         	movff	sqrtf@x+2,sqrtf@__xc8_float_word+2
 11550   005ACC  C051  F062         	movff	sqrtf@x+3,sqrtf@__xc8_float_word+3
 11551   005AD0  C05F  F077         	movff	sqrtf@__xc8_float_word,sqrtf@ix
 11552   005AD4  C060  F078         	movff	sqrtf@__xc8_float_word+1,sqrtf@ix+1
 11553   005AD8  C061  F079         	movff	sqrtf@__xc8_float_word+2,sqrtf@ix+2
 11554   005ADC  C062  F07A         	movff	sqrtf@__xc8_float_word+3,sqrtf@ix+3
 11555   005AE0  0E00               	movlw	0
 11556   005AE2  1477               	andwf	sqrtf@ix^0,w,c
 11557   005AE4  6E52               	movwf	??_sqrtf^0,c
 11558   005AE6  0E00               	movlw	0
 11559   005AE8  1478               	andwf	(sqrtf@ix+1)^0,w,c
 11560   005AEA  6E53               	movwf	(??_sqrtf+1)^0,c
 11561   005AEC  0E80               	movlw	128
 11562   005AEE  1479               	andwf	(sqrtf@ix+2)^0,w,c
 11563   005AF0  6E54               	movwf	(??_sqrtf+2)^0,c
 11564   005AF2  0E7F               	movlw	127
 11565   005AF4  147A               	andwf	(sqrtf@ix+3)^0,w,c
 11566   005AF6  6E55               	movwf	(??_sqrtf+3)^0,c
 11567   005AF8  0E80               	movlw	128
 11568   005AFA  1854               	xorwf	(??_sqrtf+2)^0,w,c
 11569   005AFC  E109               	bnz	u15151
 11570   005AFE  0E7F               	movlw	127
 11571   005B00  1855               	xorwf	(??_sqrtf+3)^0,w,c
 11572   005B02  1052               	iorwf	??_sqrtf^0,w,c
 11573   005B04  1053               	iorwf	(??_sqrtf+1)^0,w,c
 11574   005B06  A4D8               	btfss	status,2,c
 11575   005B08  EF88  F02D         	goto	u15151
 11576   005B0C  EF8A  F02D         	goto	u15150
 11577   005B10                     u15151:
 11578   005B10  EFB8  F02D         	goto	l12078
 11579   005B14                     u15150:
 11580   005B14  C04E  F025         	movff	sqrtf@x,___flmul@a
 11581   005B18  C04F  F026         	movff	sqrtf@x+1,___flmul@a+1
 11582   005B1C  C050  F027         	movff	sqrtf@x+2,___flmul@a+2
 11583   005B20  C051  F028         	movff	sqrtf@x+3,___flmul@a+3
 11584   005B24  C04E  F021         	movff	sqrtf@x,___flmul@b
 11585   005B28  C04F  F022         	movff	sqrtf@x+1,___flmul@b+1
 11586   005B2C  C050  F023         	movff	sqrtf@x+2,___flmul@b+2
 11587   005B30  C051  F024         	movff	sqrtf@x+3,___flmul@b+3
 11588   005B34  ECF4  F031         	call	___flmul	;wreg free
 11589   005B38  C021  F011         	movff	?___flmul,___fladd@b
 11590   005B3C  C022  F012         	movff	?___flmul+1,___fladd@b+1
 11591   005B40  C023  F013         	movff	?___flmul+2,___fladd@b+2
 11592   005B44  C024  F014         	movff	?___flmul+3,___fladd@b+3
 11593   005B48  C04E  F015         	movff	sqrtf@x,___fladd@a
 11594   005B4C  C04F  F016         	movff	sqrtf@x+1,___fladd@a+1
 11595   005B50  C050  F017         	movff	sqrtf@x+2,___fladd@a+2
 11596   005B54  C051  F018         	movff	sqrtf@x+3,___fladd@a+3
 11597   005B58  EC00  F02B         	call	___fladd	;wreg free
 11598   005B5C  C011  F04E         	movff	?___fladd,?_sqrtf
 11599   005B60  C012  F04F         	movff	?___fladd+1,?_sqrtf+1
 11600   005B64  C013  F050         	movff	?___fladd+2,?_sqrtf+2
 11601   005B68  C014  F051         	movff	?___fladd+3,?_sqrtf+3
 11602   005B6C  EFBA  F02F         	goto	l2036
 11603   005B70                     l12078:
 11604   005B70  BE7A               	btfsc	(sqrtf@ix+3)^0,7,c
 11605   005B72  EFC7  F02D         	goto	u15160
 11606   005B76  507A               	movf	(sqrtf@ix+3)^0,w,c
 11607   005B78  1079               	iorwf	(sqrtf@ix+2)^0,w,c
 11608   005B7A  1078               	iorwf	(sqrtf@ix+1)^0,w,c
 11609   005B7C  E106               	bnz	u15161
 11610   005B7E  0477               	decf	sqrtf@ix^0,w,c
 11611   005B80  B0D8               	btfsc	status,0,c
 11612   005B82  EFC5  F02D         	goto	u15161
 11613   005B86  EFC7  F02D         	goto	u15160
 11614   005B8A                     u15161:
 11615   005B8A  EF04  F02E         	goto	l12092
 11616   005B8E                     u15160:
 11617   005B8E  0EFF               	movlw	255
 11618   005B90  1477               	andwf	sqrtf@ix^0,w,c
 11619   005B92  6E52               	movwf	??_sqrtf^0,c
 11620   005B94  0EFF               	movlw	255
 11621   005B96  1478               	andwf	(sqrtf@ix+1)^0,w,c
 11622   005B98  6E53               	movwf	(??_sqrtf+1)^0,c
 11623   005B9A  0EFF               	movlw	255
 11624   005B9C  1479               	andwf	(sqrtf@ix+2)^0,w,c
 11625   005B9E  6E54               	movwf	(??_sqrtf+2)^0,c
 11626   005BA0  0E7F               	movlw	127
 11627   005BA2  147A               	andwf	(sqrtf@ix+3)^0,w,c
 11628   005BA4  6E55               	movwf	(??_sqrtf+3)^0,c
 11629   005BA6  5052               	movf	??_sqrtf^0,w,c
 11630   005BA8  1053               	iorwf	(??_sqrtf+1)^0,w,c
 11631   005BAA  1054               	iorwf	(??_sqrtf+2)^0,w,c
 11632   005BAC  1055               	iorwf	(??_sqrtf+3)^0,w,c
 11633   005BAE  A4D8               	btfss	status,2,c
 11634   005BB0  EFDC  F02D         	goto	u15171
 11635   005BB4  EFDE  F02D         	goto	u15170
 11636   005BB8                     u15171:
 11637   005BB8  EFE8  F02D         	goto	l12084
 11638   005BBC                     u15170:
 11639   005BBC  C04E  F04E         	movff	sqrtf@x,?_sqrtf
 11640   005BC0  C04F  F04F         	movff	sqrtf@x+1,?_sqrtf+1
 11641   005BC4  C050  F050         	movff	sqrtf@x+2,?_sqrtf+2
 11642   005BC8  C051  F051         	movff	sqrtf@x+3,?_sqrtf+3
 11643   005BCC  EFBA  F02F         	goto	l2036
 11644   005BD0                     l12084:
 11645   005BD0  BE7A               	btfsc	(sqrtf@ix+3)^0,7,c
 11646   005BD2  EFEF  F02D         	goto	u15180
 11647   005BD6  EFED  F02D         	goto	u15181
 11648   005BDA                     u15181:
 11649   005BDA  EF04  F02E         	goto	l12092
 11650   005BDE                     u15180:
 11651   005BDE  0E00               	movlw	0
 11652   005BE0  0102               	movlb	2	; () banked
 11653   005BE2  6F1C               	movwf	(_errno+1)& (0+255),b
 11654   005BE4  0E21               	movlw	33
 11655   005BE6  6F1B               	movwf	_errno& (0+255),b
 11656   005BE8                     
 11657                           ; BSR set to: 2
 11658   005BE8  0EC0               	movlw	low (STR_20+3)
 11659   005BEA  6E03               	movwf	nanf@s^0,c
 11660   005BEC  0E10               	movlw	high (STR_20+3)
 11661   005BEE  6E04               	movwf	(nanf@s+1)^0,c
 11662   005BF0  EC13  F056         	call	_nanf	;wreg free
 11663   005BF4  C003  F04E         	movff	?_nanf,?_sqrtf
 11664   005BF8  C004  F04F         	movff	?_nanf+1,?_sqrtf+1
 11665   005BFC  C005  F050         	movff	?_nanf+2,?_sqrtf+2
 11666   005C00  C006  F051         	movff	?_nanf+3,?_sqrtf+3
 11667   005C04  EFBA  F02F         	goto	l2036
 11668   005C08                     l12092:
 11669   005C08  0E17               	movlw	23
 11670   005C0A  6E52               	movwf	??_sqrtf^0,c
 11671   005C0C  C077  F053         	movff	sqrtf@ix,??_sqrtf+1
 11672   005C10  C078  F054         	movff	sqrtf@ix+1,??_sqrtf+2
 11673   005C14  C079  F055         	movff	sqrtf@ix+2,??_sqrtf+3
 11674   005C18  C07A  F056         	movff	sqrtf@ix+3,??_sqrtf+4
 11675   005C1C                     u15195:
 11676   005C1C  6652               	tstfsz	??_sqrtf^0,c
 11677   005C1E  EF13  F02E         	goto	u15196
 11678   005C22  EF1B  F02E         	goto	u15197
 11679   005C26                     u15196:
 11680   005C26  3456               	rlcf	(??_sqrtf+4)^0,w,c
 11681   005C28  3256               	rrcf	(??_sqrtf+4)^0,f,c
 11682   005C2A  3255               	rrcf	(??_sqrtf+3)^0,f,c
 11683   005C2C  3254               	rrcf	(??_sqrtf+2)^0,f,c
 11684   005C2E  3253               	rrcf	(??_sqrtf+1)^0,f,c
 11685   005C30  2E52               	decfsz	??_sqrtf^0,f,c
 11686   005C32  EF0E  F02E         	goto	u15195
 11687   005C36                     u15197:
 11688   005C36  C053  F06F         	movff	??_sqrtf+1,sqrtf@m
 11689   005C3A  C054  F070         	movff	??_sqrtf+2,sqrtf@m+1
 11690   005C3E  C055  F071         	movff	??_sqrtf+3,sqrtf@m+2
 11691   005C42  C056  F072         	movff	??_sqrtf+4,sqrtf@m+3
 11692   005C46  506F               	movf	sqrtf@m^0,w,c
 11693   005C48  1070               	iorwf	(sqrtf@m+1)^0,w,c
 11694   005C4A  1071               	iorwf	(sqrtf@m+2)^0,w,c
 11695   005C4C  1072               	iorwf	(sqrtf@m+3)^0,w,c
 11696   005C4E  A4D8               	btfss	status,2,c
 11697   005C50  EF2C  F02E         	goto	u15201
 11698   005C54  EF2E  F02E         	goto	u15200
 11699   005C58                     u15201:
 11700   005C58  EF5E  F02E         	goto	l2040
 11701   005C5C                     u15200:
 11702   005C5C  0E00               	movlw	0
 11703   005C5E  6E5B               	movwf	sqrtf@i^0,c
 11704   005C60  0E00               	movlw	0
 11705   005C62  6E5C               	movwf	(sqrtf@i+1)^0,c
 11706   005C64  0E00               	movlw	0
 11707   005C66  6E5D               	movwf	(sqrtf@i+2)^0,c
 11708   005C68  0E00               	movlw	0
 11709   005C6A  6E5E               	movwf	(sqrtf@i+3)^0,c
 11710   005C6C  EF43  F02E         	goto	l12100
 11711   005C70                     l12096:
 11712   005C70  90D8               	bcf	status,0,c
 11713   005C72  3677               	rlcf	sqrtf@ix^0,f,c
 11714   005C74  3678               	rlcf	(sqrtf@ix+1)^0,f,c
 11715   005C76  3679               	rlcf	(sqrtf@ix+2)^0,f,c
 11716   005C78  367A               	rlcf	(sqrtf@ix+3)^0,f,c
 11717   005C7A  0E01               	movlw	1
 11718   005C7C  265B               	addwf	sqrtf@i^0,f,c
 11719   005C7E  0E00               	movlw	0
 11720   005C80  225C               	addwfc	(sqrtf@i+1)^0,f,c
 11721   005C82  225D               	addwfc	(sqrtf@i+2)^0,f,c
 11722   005C84  225E               	addwfc	(sqrtf@i+3)^0,f,c
 11723   005C86                     l12100:
 11724   005C86  AE79               	btfss	(sqrtf@ix+2)^0,7,c
 11725   005C88  EF48  F02E         	goto	u15211
 11726   005C8C  EF4A  F02E         	goto	u15210
 11727   005C90                     u15211:
 11728   005C90  EF38  F02E         	goto	l12096
 11729   005C94                     u15210:
 11730   005C94  0EFF               	movlw	255
 11731   005C96  245B               	addwf	sqrtf@i^0,w,c
 11732   005C98  6E52               	movwf	??_sqrtf^0,c
 11733   005C9A  0EFF               	movlw	255
 11734   005C9C  205C               	addwfc	(sqrtf@i+1)^0,w,c
 11735   005C9E  6E53               	movwf	(??_sqrtf+1)^0,c
 11736   005CA0  0EFF               	movlw	255
 11737   005CA2  205D               	addwfc	(sqrtf@i+2)^0,w,c
 11738   005CA4  6E54               	movwf	(??_sqrtf+2)^0,c
 11739   005CA6  0EFF               	movlw	255
 11740   005CA8  205E               	addwfc	(sqrtf@i+3)^0,w,c
 11741   005CAA  6E55               	movwf	(??_sqrtf+3)^0,c
 11742   005CAC  5052               	movf	??_sqrtf^0,w,c
 11743   005CAE  5E6F               	subwf	sqrtf@m^0,f,c
 11744   005CB0  5053               	movf	(??_sqrtf+1)^0,w,c
 11745   005CB2  5A70               	subwfb	(sqrtf@m+1)^0,f,c
 11746   005CB4  5054               	movf	(??_sqrtf+2)^0,w,c
 11747   005CB6  5A71               	subwfb	(sqrtf@m+2)^0,f,c
 11748   005CB8  5055               	movf	(??_sqrtf+3)^0,w,c
 11749   005CBA  5A72               	subwfb	(sqrtf@m+3)^0,f,c
 11750   005CBC                     l2040:
 11751   005CBC  0E81               	movlw	129
 11752   005CBE  266F               	addwf	sqrtf@m^0,f,c
 11753   005CC0  0EFF               	movlw	255
 11754   005CC2  2270               	addwfc	(sqrtf@m+1)^0,f,c
 11755   005CC4  0EFF               	movlw	255
 11756   005CC6  2271               	addwfc	(sqrtf@m+2)^0,f,c
 11757   005CC8  0EFF               	movlw	255
 11758   005CCA  2272               	addwfc	(sqrtf@m+3)^0,f,c
 11759   005CCC  0EFF               	movlw	255
 11760   005CCE  1477               	andwf	sqrtf@ix^0,w,c
 11761   005CD0  6E52               	movwf	??_sqrtf^0,c
 11762   005CD2  0EFF               	movlw	255
 11763   005CD4  1478               	andwf	(sqrtf@ix+1)^0,w,c
 11764   005CD6  6E53               	movwf	(??_sqrtf+1)^0,c
 11765   005CD8  0E7F               	movlw	127
 11766   005CDA  1479               	andwf	(sqrtf@ix+2)^0,w,c
 11767   005CDC  6E54               	movwf	(??_sqrtf+2)^0,c
 11768   005CDE  0E00               	movlw	0
 11769   005CE0  147A               	andwf	(sqrtf@ix+3)^0,w,c
 11770   005CE2  6E55               	movwf	(??_sqrtf+3)^0,c
 11771   005CE4  0E00               	movlw	0
 11772   005CE6  1052               	iorwf	??_sqrtf^0,w,c
 11773   005CE8  6E77               	movwf	sqrtf@ix^0,c
 11774   005CEA  0E00               	movlw	0
 11775   005CEC  1053               	iorwf	(??_sqrtf+1)^0,w,c
 11776   005CEE  6E78               	movwf	(sqrtf@ix+1)^0,c
 11777   005CF0  0E80               	movlw	128
 11778   005CF2  1054               	iorwf	(??_sqrtf+2)^0,w,c
 11779   005CF4  6E79               	movwf	(sqrtf@ix+2)^0,c
 11780   005CF6  0E00               	movlw	0
 11781   005CF8  1055               	iorwf	(??_sqrtf+3)^0,w,c
 11782   005CFA  6E7A               	movwf	(sqrtf@ix+3)^0,c
 11783   005CFC  A06F               	btfss	sqrtf@m^0,0,c
 11784   005CFE  EF83  F02E         	goto	u15221
 11785   005D02  EF85  F02E         	goto	u15220
 11786   005D06                     u15221:
 11787   005D06  EF8D  F02E         	goto	l2044
 11788   005D0A                     u15220:
 11789   005D0A  5077               	movf	sqrtf@ix^0,w,c
 11790   005D0C  2677               	addwf	sqrtf@ix^0,f,c
 11791   005D0E  5078               	movf	(sqrtf@ix+1)^0,w,c
 11792   005D10  2278               	addwfc	(sqrtf@ix+1)^0,f,c
 11793   005D12  5079               	movf	(sqrtf@ix+2)^0,w,c
 11794   005D14  2279               	addwfc	(sqrtf@ix+2)^0,f,c
 11795   005D16  507A               	movf	(sqrtf@ix+3)^0,w,c
 11796   005D18  227A               	addwfc	(sqrtf@ix+3)^0,f,c
 11797   005D1A                     l2044:
 11798   005D1A  3472               	rlcf	(sqrtf@m+3)^0,w,c
 11799   005D1C  3272               	rrcf	(sqrtf@m+3)^0,f,c
 11800   005D1E  3271               	rrcf	(sqrtf@m+2)^0,f,c
 11801   005D20  3270               	rrcf	(sqrtf@m+1)^0,f,c
 11802   005D22  326F               	rrcf	sqrtf@m^0,f,c
 11803   005D24  5077               	movf	sqrtf@ix^0,w,c
 11804   005D26  2677               	addwf	sqrtf@ix^0,f,c
 11805   005D28  5078               	movf	(sqrtf@ix+1)^0,w,c
 11806   005D2A  2278               	addwfc	(sqrtf@ix+1)^0,f,c
 11807   005D2C  5079               	movf	(sqrtf@ix+2)^0,w,c
 11808   005D2E  2279               	addwfc	(sqrtf@ix+2)^0,f,c
 11809   005D30  507A               	movf	(sqrtf@ix+3)^0,w,c
 11810   005D32  227A               	addwfc	(sqrtf@ix+3)^0,f,c
 11811   005D34  0E00               	movlw	0
 11812   005D36  6E57               	movwf	sqrtf@s^0,c
 11813   005D38  0E00               	movlw	0
 11814   005D3A  6E58               	movwf	(sqrtf@s+1)^0,c
 11815   005D3C  0E00               	movlw	0
 11816   005D3E  6E59               	movwf	(sqrtf@s+2)^0,c
 11817   005D40  0E00               	movlw	0
 11818   005D42  6E5A               	movwf	(sqrtf@s+3)^0,c
 11819   005D44  C057  F063         	movff	sqrtf@s,sqrtf@q
 11820   005D48  C058  F064         	movff	sqrtf@s+1,sqrtf@q+1
 11821   005D4C  C059  F065         	movff	sqrtf@s+2,sqrtf@q+2
 11822   005D50  C05A  F066         	movff	sqrtf@s+3,sqrtf@q+3
 11823   005D54  0E00               	movlw	0
 11824   005D56  6E73               	movwf	sqrtf@r^0,c
 11825   005D58  0E00               	movlw	0
 11826   005D5A  6E74               	movwf	(sqrtf@r+1)^0,c
 11827   005D5C  0E00               	movlw	0
 11828   005D5E  6E75               	movwf	(sqrtf@r+2)^0,c
 11829   005D60  0E01               	movlw	1
 11830   005D62  6E76               	movwf	(sqrtf@r+3)^0,c
 11831   005D64  EFFC  F02E         	goto	l12118
 11832   005D68                     l12112:
 11833   005D68  5057               	movf	sqrtf@s^0,w,c
 11834   005D6A  2473               	addwf	sqrtf@r^0,w,c
 11835   005D6C  6E67               	movwf	sqrtf@t^0,c
 11836   005D6E  5058               	movf	(sqrtf@s+1)^0,w,c
 11837   005D70  2074               	addwfc	(sqrtf@r+1)^0,w,c
 11838   005D72  6E68               	movwf	(sqrtf@t+1)^0,c
 11839   005D74  5059               	movf	(sqrtf@s+2)^0,w,c
 11840   005D76  2075               	addwfc	(sqrtf@r+2)^0,w,c
 11841   005D78  6E69               	movwf	(sqrtf@t+2)^0,c
 11842   005D7A  505A               	movf	(sqrtf@s+3)^0,w,c
 11843   005D7C  2076               	addwfc	(sqrtf@r+3)^0,w,c
 11844   005D7E  6E6A               	movwf	(sqrtf@t+3)^0,c
 11845   005D80  5067               	movf	sqrtf@t^0,w,c
 11846   005D82  5C77               	subwf	sqrtf@ix^0,w,c
 11847   005D84  5068               	movf	(sqrtf@t+1)^0,w,c
 11848   005D86  5878               	subwfb	(sqrtf@ix+1)^0,w,c
 11849   005D88  5069               	movf	(sqrtf@t+2)^0,w,c
 11850   005D8A  5879               	subwfb	(sqrtf@ix+2)^0,w,c
 11851   005D8C  507A               	movf	(sqrtf@ix+3)^0,w,c
 11852   005D8E  0A80               	xorlw	128
 11853   005D90  6E52               	movwf	??_sqrtf^0,c
 11854   005D92  506A               	movf	(sqrtf@t+3)^0,w,c
 11855   005D94  0A80               	xorlw	128
 11856   005D96  5852               	subwfb	??_sqrtf^0,w,c
 11857   005D98  A0D8               	btfss	status,0,c
 11858   005D9A  EFD1  F02E         	goto	u15231
 11859   005D9E  EFD3  F02E         	goto	u15230
 11860   005DA2                     u15231:
 11861   005DA2  EFEF  F02E         	goto	l2047
 11862   005DA6                     u15230:
 11863   005DA6  5067               	movf	sqrtf@t^0,w,c
 11864   005DA8  2473               	addwf	sqrtf@r^0,w,c
 11865   005DAA  6E57               	movwf	sqrtf@s^0,c
 11866   005DAC  5068               	movf	(sqrtf@t+1)^0,w,c
 11867   005DAE  2074               	addwfc	(sqrtf@r+1)^0,w,c
 11868   005DB0  6E58               	movwf	(sqrtf@s+1)^0,c
 11869   005DB2  5069               	movf	(sqrtf@t+2)^0,w,c
 11870   005DB4  2075               	addwfc	(sqrtf@r+2)^0,w,c
 11871   005DB6  6E59               	movwf	(sqrtf@s+2)^0,c
 11872   005DB8  506A               	movf	(sqrtf@t+3)^0,w,c
 11873   005DBA  2076               	addwfc	(sqrtf@r+3)^0,w,c
 11874   005DBC  6E5A               	movwf	(sqrtf@s+3)^0,c
 11875   005DBE  5067               	movf	sqrtf@t^0,w,c
 11876   005DC0  5E77               	subwf	sqrtf@ix^0,f,c
 11877   005DC2  5068               	movf	(sqrtf@t+1)^0,w,c
 11878   005DC4  5A78               	subwfb	(sqrtf@ix+1)^0,f,c
 11879   005DC6  5069               	movf	(sqrtf@t+2)^0,w,c
 11880   005DC8  5A79               	subwfb	(sqrtf@ix+2)^0,f,c
 11881   005DCA  506A               	movf	(sqrtf@t+3)^0,w,c
 11882   005DCC  5A7A               	subwfb	(sqrtf@ix+3)^0,f,c
 11883   005DCE  5073               	movf	sqrtf@r^0,w,c
 11884   005DD0  2663               	addwf	sqrtf@q^0,f,c
 11885   005DD2  5074               	movf	(sqrtf@r+1)^0,w,c
 11886   005DD4  2264               	addwfc	(sqrtf@q+1)^0,f,c
 11887   005DD6  5075               	movf	(sqrtf@r+2)^0,w,c
 11888   005DD8  2265               	addwfc	(sqrtf@q+2)^0,f,c
 11889   005DDA  5076               	movf	(sqrtf@r+3)^0,w,c
 11890   005DDC  2266               	addwfc	(sqrtf@q+3)^0,f,c
 11891   005DDE                     l2047:
 11892   005DDE  5077               	movf	sqrtf@ix^0,w,c
 11893   005DE0  2677               	addwf	sqrtf@ix^0,f,c
 11894   005DE2  5078               	movf	(sqrtf@ix+1)^0,w,c
 11895   005DE4  2278               	addwfc	(sqrtf@ix+1)^0,f,c
 11896   005DE6  5079               	movf	(sqrtf@ix+2)^0,w,c
 11897   005DE8  2279               	addwfc	(sqrtf@ix+2)^0,f,c
 11898   005DEA  507A               	movf	(sqrtf@ix+3)^0,w,c
 11899   005DEC  227A               	addwfc	(sqrtf@ix+3)^0,f,c
 11900   005DEE  90D8               	bcf	status,0,c
 11901   005DF0  3276               	rrcf	(sqrtf@r+3)^0,f,c
 11902   005DF2  3275               	rrcf	(sqrtf@r+2)^0,f,c
 11903   005DF4  3274               	rrcf	(sqrtf@r+1)^0,f,c
 11904   005DF6  3273               	rrcf	sqrtf@r^0,f,c
 11905   005DF8                     l12118:
 11906   005DF8  5073               	movf	sqrtf@r^0,w,c
 11907   005DFA  1074               	iorwf	(sqrtf@r+1)^0,w,c
 11908   005DFC  1075               	iorwf	(sqrtf@r+2)^0,w,c
 11909   005DFE  1076               	iorwf	(sqrtf@r+3)^0,w,c
 11910   005E00  A4D8               	btfss	status,2,c
 11911   005E02  EF05  F02F         	goto	u15241
 11912   005E06  EF07  F02F         	goto	u15240
 11913   005E0A                     u15241:
 11914   005E0A  EFB4  F02E         	goto	l12112
 11915   005E0E                     u15240:
 11916   005E0E  5077               	movf	sqrtf@ix^0,w,c
 11917   005E10  1078               	iorwf	(sqrtf@ix+1)^0,w,c
 11918   005E12  1079               	iorwf	(sqrtf@ix+2)^0,w,c
 11919   005E14  107A               	iorwf	(sqrtf@ix+3)^0,w,c
 11920   005E16  B4D8               	btfsc	status,2,c
 11921   005E18  EF10  F02F         	goto	u15251
 11922   005E1C  EF12  F02F         	goto	u15250
 11923   005E20                     u15251:
 11924   005E20  EF70  F02F         	goto	l2049
 11925   005E24                     u15250:
 11926   005E24  0E00               	movlw	0
 11927   005E26  6E6B               	movwf	sqrtf@z^0,c
 11928   005E28  0E00               	movlw	0
 11929   005E2A  6E6C               	movwf	(sqrtf@z+1)^0,c
 11930   005E2C  0E80               	movlw	128
 11931   005E2E  6E6D               	movwf	(sqrtf@z+2)^0,c
 11932   005E30  0E3F               	movlw	63
 11933   005E32  6E6E               	movwf	(sqrtf@z+3)^0,c
 11934   005E34  C06B  F042         	movff	sqrtf@z,___flge@ff1
 11935   005E38  C06C  F043         	movff	sqrtf@z+1,___flge@ff1+1
 11936   005E3C  C06D  F044         	movff	sqrtf@z+2,___flge@ff1+2
 11937   005E40  C06E  F045         	movff	sqrtf@z+3,___flge@ff1+3
 11938   005E44  0E00               	movlw	0
 11939   005E46  6E46               	movwf	___flge@ff2^0,c
 11940   005E48  0E00               	movlw	0
 11941   005E4A  6E47               	movwf	(___flge@ff2+1)^0,c
 11942   005E4C  0E80               	movlw	128
 11943   005E4E  6E48               	movwf	(___flge@ff2+2)^0,c
 11944   005E50  0E3F               	movlw	63
 11945   005E52  6E49               	movwf	(___flge@ff2+3)^0,c
 11946   005E54  ECE3  F048         	call	___flge	;wreg free
 11947   005E58  A0D8               	btfss	status,0,c
 11948   005E5A  EF31  F02F         	goto	u15261
 11949   005E5E  EF33  F02F         	goto	u15260
 11950   005E62                     u15261:
 11951   005E62  EF70  F02F         	goto	l2049
 11952   005E66                     u15260:
 11953   005E66  0E00               	movlw	0
 11954   005E68  6E6B               	movwf	sqrtf@z^0,c
 11955   005E6A  0E00               	movlw	0
 11956   005E6C  6E6C               	movwf	(sqrtf@z+1)^0,c
 11957   005E6E  0E80               	movlw	128
 11958   005E70  6E6D               	movwf	(sqrtf@z+2)^0,c
 11959   005E72  0E3F               	movlw	63
 11960   005E74  6E6E               	movwf	(sqrtf@z+3)^0,c
 11961   005E76  0E00               	movlw	0
 11962   005E78  6E42               	movwf	___flge@ff1^0,c
 11963   005E7A  0E00               	movlw	0
 11964   005E7C  6E43               	movwf	(___flge@ff1+1)^0,c
 11965   005E7E  0E80               	movlw	128
 11966   005E80  6E44               	movwf	(___flge@ff1+2)^0,c
 11967   005E82  0E3F               	movlw	63
 11968   005E84  6E45               	movwf	(___flge@ff1+3)^0,c
 11969   005E86  C06B  F046         	movff	sqrtf@z,___flge@ff2
 11970   005E8A  C06C  F047         	movff	sqrtf@z+1,___flge@ff2+1
 11971   005E8E  C06D  F048         	movff	sqrtf@z+2,___flge@ff2+2
 11972   005E92  C06E  F049         	movff	sqrtf@z+3,___flge@ff2+3
 11973   005E96  ECE3  F048         	call	___flge	;wreg free
 11974   005E9A  B0D8               	btfsc	status,0,c
 11975   005E9C  EF52  F02F         	goto	u15271
 11976   005EA0  EF54  F02F         	goto	u15270
 11977   005EA4                     u15271:
 11978   005EA4  EF5C  F02F         	goto	l12132
 11979   005EA8                     u15270:
 11980   005EA8  0E02               	movlw	2
 11981   005EAA  2663               	addwf	sqrtf@q^0,f,c
 11982   005EAC  0E00               	movlw	0
 11983   005EAE  2264               	addwfc	(sqrtf@q+1)^0,f,c
 11984   005EB0  2265               	addwfc	(sqrtf@q+2)^0,f,c
 11985   005EB2  2266               	addwfc	(sqrtf@q+3)^0,f,c
 11986   005EB4  EF70  F02F         	goto	l2049
 11987   005EB8                     l12132:
 11988   005EB8  0E01               	movlw	1
 11989   005EBA  1463               	andwf	sqrtf@q^0,w,c
 11990   005EBC  6E52               	movwf	??_sqrtf^0,c
 11991   005EBE  0E00               	movlw	0
 11992   005EC0  1464               	andwf	(sqrtf@q+1)^0,w,c
 11993   005EC2  6E53               	movwf	(??_sqrtf+1)^0,c
 11994   005EC4  0E00               	movlw	0
 11995   005EC6  1465               	andwf	(sqrtf@q+2)^0,w,c
 11996   005EC8  6E54               	movwf	(??_sqrtf+2)^0,c
 11997   005ECA  0E00               	movlw	0
 11998   005ECC  1466               	andwf	(sqrtf@q+3)^0,w,c
 11999   005ECE  6E55               	movwf	(??_sqrtf+3)^0,c
 12000   005ED0  5052               	movf	??_sqrtf^0,w,c
 12001   005ED2  2663               	addwf	sqrtf@q^0,f,c
 12002   005ED4  5053               	movf	(??_sqrtf+1)^0,w,c
 12003   005ED6  2264               	addwfc	(sqrtf@q+1)^0,f,c
 12004   005ED8  5054               	movf	(??_sqrtf+2)^0,w,c
 12005   005EDA  2265               	addwfc	(sqrtf@q+2)^0,f,c
 12006   005EDC  5055               	movf	(??_sqrtf+3)^0,w,c
 12007   005EDE  2266               	addwfc	(sqrtf@q+3)^0,f,c
 12008   005EE0                     l2049:
 12009   005EE0  C063  F052         	movff	sqrtf@q,??_sqrtf
 12010   005EE4  C064  F053         	movff	sqrtf@q+1,??_sqrtf+1
 12011   005EE8  C065  F054         	movff	sqrtf@q+2,??_sqrtf+2
 12012   005EEC  C066  F055         	movff	sqrtf@q+3,??_sqrtf+3
 12013   005EF0  3455               	rlcf	(??_sqrtf+3)^0,w,c
 12014   005EF2  3255               	rrcf	(??_sqrtf+3)^0,f,c
 12015   005EF4  3254               	rrcf	(??_sqrtf+2)^0,f,c
 12016   005EF6  3253               	rrcf	(??_sqrtf+1)^0,f,c
 12017   005EF8  3252               	rrcf	??_sqrtf^0,f,c
 12018   005EFA  0E00               	movlw	0
 12019   005EFC  2452               	addwf	??_sqrtf^0,w,c
 12020   005EFE  6E77               	movwf	sqrtf@ix^0,c
 12021   005F00  0E00               	movlw	0
 12022   005F02  2053               	addwfc	(??_sqrtf+1)^0,w,c
 12023   005F04  6E78               	movwf	(sqrtf@ix+1)^0,c
 12024   005F06  0E00               	movlw	0
 12025   005F08  2054               	addwfc	(??_sqrtf+2)^0,w,c
 12026   005F0A  6E79               	movwf	(sqrtf@ix+2)^0,c
 12027   005F0C  0E3F               	movlw	63
 12028   005F0E  2055               	addwfc	(??_sqrtf+3)^0,w,c
 12029   005F10  6E7A               	movwf	(sqrtf@ix+3)^0,c
 12030   005F12  C06F  F052         	movff	sqrtf@m,??_sqrtf
 12031   005F16  C070  F053         	movff	sqrtf@m+1,??_sqrtf+1
 12032   005F1A  C071  F054         	movff	sqrtf@m+2,??_sqrtf+2
 12033   005F1E  C072  F055         	movff	sqrtf@m+3,??_sqrtf+3
 12034   005F22  0E17               	movlw	23
 12035   005F24                     u15285:
 12036   005F24  90D8               	bcf	status,0,c
 12037   005F26  3652               	rlcf	??_sqrtf^0,f,c
 12038   005F28  3653               	rlcf	(??_sqrtf+1)^0,f,c
 12039   005F2A  3654               	rlcf	(??_sqrtf+2)^0,f,c
 12040   005F2C  3655               	rlcf	(??_sqrtf+3)^0,f,c
 12041   005F2E  2EE8               	decfsz	wreg,f,c
 12042   005F30  EF92  F02F         	goto	u15285
 12043   005F34  5052               	movf	??_sqrtf^0,w,c
 12044   005F36  2677               	addwf	sqrtf@ix^0,f,c
 12045   005F38  5053               	movf	(??_sqrtf+1)^0,w,c
 12046   005F3A  2278               	addwfc	(sqrtf@ix+1)^0,f,c
 12047   005F3C  5054               	movf	(??_sqrtf+2)^0,w,c
 12048   005F3E  2279               	addwfc	(sqrtf@ix+2)^0,f,c
 12049   005F40  5055               	movf	(??_sqrtf+3)^0,w,c
 12050   005F42  227A               	addwfc	(sqrtf@ix+3)^0,f,c
 12051   005F44  C077  F05F         	movff	sqrtf@ix,sqrtf@__xc8_float_word
 12052   005F48  C078  F060         	movff	sqrtf@ix+1,sqrtf@__xc8_float_word+1
 12053   005F4C  C079  F061         	movff	sqrtf@ix+2,sqrtf@__xc8_float_word+2
 12054   005F50  C07A  F062         	movff	sqrtf@ix+3,sqrtf@__xc8_float_word+3
 12055   005F54  C05F  F06B         	movff	sqrtf@__xc8_float_word,sqrtf@z
 12056   005F58  C060  F06C         	movff	sqrtf@__xc8_float_word+1,sqrtf@z+1
 12057   005F5C  C061  F06D         	movff	sqrtf@__xc8_float_word+2,sqrtf@z+2
 12058   005F60  C062  F06E         	movff	sqrtf@__xc8_float_word+3,sqrtf@z+3
 12059   005F64  C06B  F04E         	movff	sqrtf@z,?_sqrtf
 12060   005F68  C06C  F04F         	movff	sqrtf@z+1,?_sqrtf+1
 12061   005F6C  C06D  F050         	movff	sqrtf@z+2,?_sqrtf+2
 12062   005F70  C06E  F051         	movff	sqrtf@z+3,?_sqrtf+3
 12063   005F74                     l2036:
 12064   005F74  0012               	return		;funcret
 12065   005F76                     __end_of_sqrtf:
 12066                           	callstack 0
 12067                           
 12068 ;; *************** function _nanf *****************
 12069 ;; Defined at:
 12070 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nanf.c"
 12071 ;; Parameters:    Size  Location     Type
 12072 ;;  s               2    2[COMRAM] PTR const unsigned char 
 12073 ;;		 -> STR_22(1), STR_13(1), 
 12074 ;; Auto vars:     Size  Location     Type
 12075 ;;  u               4    6[COMRAM] struct .
 12076 ;; Return value:  Size  Location     Type
 12077 ;;                  4    2[COMRAM] float 
 12078 ;; Registers used:
 12079 ;;		wreg, status,2
 12080 ;; Tracked objects:
 12081 ;;		On entry : 0/0
 12082 ;;		On exit  : 0/0
 12083 ;;		Unchanged: 0/0
 12084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12085 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12086 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12088 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12089 ;;Total ram usage:        8 bytes
 12090 ;; Hardware stack levels used: 1
 12091 ;; Hardware stack levels required when called: 3
 12092 ;; This function calls:
 12093 ;;		Nothing
 12094 ;; This function is called by:
 12095 ;;		_sqrtf
 12096 ;;		_strtof
 12097 ;; This function uses a non-reentrant model
 12098 ;;
 12099                           
 12100                           	psect	text22
 12101   00AC26                     __ptext22:
 12102                           	callstack 0
 12103   00AC26                     _nanf:
 12104                           	callstack 24
 12105   00AC26  0EFF               	movlw	255
 12106   00AC28  6E07               	movwf	nanf@u^0,c
 12107   00AC2A  0EFF               	movlw	255
 12108   00AC2C  6E08               	movwf	(nanf@u+1)^0,c
 12109   00AC2E  0EFF               	movlw	255
 12110   00AC30  6E09               	movwf	(nanf@u+2)^0,c
 12111   00AC32  0E7F               	movlw	127
 12112   00AC34  6E0A               	movwf	(nanf@u+3)^0,c
 12113   00AC36  C007  F003         	movff	nanf@u,?_nanf
 12114   00AC3A  C008  F004         	movff	nanf@u+1,?_nanf+1
 12115   00AC3E  C009  F005         	movff	nanf@u+2,?_nanf+2
 12116   00AC42  C00A  F006         	movff	nanf@u+3,?_nanf+3
 12117   00AC46  0012               	return		;funcret
 12118   00AC48                     __end_of_nanf:
 12119                           	callstack 0
 12120                           
 12121 ;; *************** function _scalbnf *****************
 12122 ;; Defined at:
 12123 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\scalbnf.c"
 12124 ;; Parameters:    Size  Location     Type
 12125 ;;  x               4   57[COMRAM] float 
 12126 ;;  n               2   61[COMRAM] int 
 12127 ;; Auto vars:     Size  Location     Type
 12128 ;;  y               4   71[COMRAM] float 
 12129 ;;  u               4   67[COMRAM] struct .
 12130 ;; Return value:  Size  Location     Type
 12131 ;;                  4   57[COMRAM] float 
 12132 ;; Registers used:
 12133 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12134 ;; Tracked objects:
 12135 ;;		On entry : 0/0
 12136 ;;		On exit  : 0/0
 12137 ;;		Unchanged: 0/0
 12138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12139 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12140 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12141 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12142 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12143 ;;Total ram usage:       18 bytes
 12144 ;; Hardware stack levels used: 1
 12145 ;; Hardware stack levels required when called: 4
 12146 ;; This function calls:
 12147 ;;		___flmul
 12148 ;; This function is called by:
 12149 ;;		_powf
 12150 ;; This function uses a non-reentrant model
 12151 ;;
 12152                           
 12153                           	psect	text23
 12154   0077EE                     __ptext23:
 12155                           	callstack 0
 12156   0077EE                     _scalbnf:
 12157                           	callstack 23
 12158   0077EE  C03A  F048         	movff	scalbnf@x,scalbnf@y
 12159   0077F2  C03B  F049         	movff	scalbnf@x+1,scalbnf@y+1
 12160   0077F6  C03C  F04A         	movff	scalbnf@x+2,scalbnf@y+2
 12161   0077FA  C03D  F04B         	movff	scalbnf@x+3,scalbnf@y+3
 12162   0077FE  BE3F               	btfsc	(scalbnf@n+1)^0,7,c
 12163   007800  EF0B  F03C         	goto	u15291
 12164   007804  503F               	movf	(scalbnf@n+1)^0,w,c
 12165   007806  E109               	bnz	u15290
 12166   007808  0E80               	movlw	128
 12167   00780A  5C3E               	subwf	scalbnf@n^0,w,c
 12168   00780C  A0D8               	btfss	status,0,c
 12169   00780E  EF0B  F03C         	goto	u15291
 12170   007812  EF0D  F03C         	goto	u15290
 12171   007816                     u15291:
 12172   007816  EF6B  F03C         	goto	l12160
 12173   00781A                     u15290:
 12174   00781A  C048  F021         	movff	scalbnf@y,___flmul@b
 12175   00781E  C049  F022         	movff	scalbnf@y+1,___flmul@b+1
 12176   007822  C04A  F023         	movff	scalbnf@y+2,___flmul@b+2
 12177   007826  C04B  F024         	movff	scalbnf@y+3,___flmul@b+3
 12178   00782A  0E00               	movlw	0
 12179   00782C  6E25               	movwf	___flmul@a^0,c
 12180   00782E  0E00               	movlw	0
 12181   007830  6E26               	movwf	(___flmul@a+1)^0,c
 12182   007832  0E00               	movlw	0
 12183   007834  6E27               	movwf	(___flmul@a+2)^0,c
 12184   007836  0E7F               	movlw	127
 12185   007838  6E28               	movwf	(___flmul@a+3)^0,c
 12186   00783A  ECF4  F031         	call	___flmul	;wreg free
 12187   00783E  C021  F048         	movff	?___flmul,scalbnf@y
 12188   007842  C022  F049         	movff	?___flmul+1,scalbnf@y+1
 12189   007846  C023  F04A         	movff	?___flmul+2,scalbnf@y+2
 12190   00784A  C024  F04B         	movff	?___flmul+3,scalbnf@y+3
 12191   00784E  0E81               	movlw	129
 12192   007850  263E               	addwf	scalbnf@n^0,f,c
 12193   007852  0EFF               	movlw	255
 12194   007854  223F               	addwfc	(scalbnf@n+1)^0,f,c
 12195   007856  BE3F               	btfsc	(scalbnf@n+1)^0,7,c
 12196   007858  EF37  F03C         	goto	u15301
 12197   00785C  503F               	movf	(scalbnf@n+1)^0,w,c
 12198   00785E  E109               	bnz	u15300
 12199   007860  0E80               	movlw	128
 12200   007862  5C3E               	subwf	scalbnf@n^0,w,c
 12201   007864  A0D8               	btfss	status,0,c
 12202   007866  EF37  F03C         	goto	u15301
 12203   00786A  EF39  F03C         	goto	u15300
 12204   00786E                     u15301:
 12205   00786E  EFD5  F03C         	goto	l12176
 12206   007872                     u15300:
 12207   007872  C048  F021         	movff	scalbnf@y,___flmul@b
 12208   007876  C049  F022         	movff	scalbnf@y+1,___flmul@b+1
 12209   00787A  C04A  F023         	movff	scalbnf@y+2,___flmul@b+2
 12210   00787E  C04B  F024         	movff	scalbnf@y+3,___flmul@b+3
 12211   007882  0E00               	movlw	0
 12212   007884  6E25               	movwf	___flmul@a^0,c
 12213   007886  0E00               	movlw	0
 12214   007888  6E26               	movwf	(___flmul@a+1)^0,c
 12215   00788A  0E00               	movlw	0
 12216   00788C  6E27               	movwf	(___flmul@a+2)^0,c
 12217   00788E  0E7F               	movlw	127
 12218   007890  6E28               	movwf	(___flmul@a+3)^0,c
 12219   007892  ECF4  F031         	call	___flmul	;wreg free
 12220   007896  C021  F048         	movff	?___flmul,scalbnf@y
 12221   00789A  C022  F049         	movff	?___flmul+1,scalbnf@y+1
 12222   00789E  C023  F04A         	movff	?___flmul+2,scalbnf@y+2
 12223   0078A2  C024  F04B         	movff	?___flmul+3,scalbnf@y+3
 12224   0078A6  0E81               	movlw	129
 12225   0078A8  263E               	addwf	scalbnf@n^0,f,c
 12226   0078AA  0EFF               	movlw	255
 12227   0078AC  223F               	addwfc	(scalbnf@n+1)^0,f,c
 12228   0078AE  BE3F               	btfsc	(scalbnf@n+1)^0,7,c
 12229   0078B0  EF63  F03C         	goto	u15311
 12230   0078B4  503F               	movf	(scalbnf@n+1)^0,w,c
 12231   0078B6  E109               	bnz	u15310
 12232   0078B8  0E80               	movlw	128
 12233   0078BA  5C3E               	subwf	scalbnf@n^0,w,c
 12234   0078BC  A0D8               	btfss	status,0,c
 12235   0078BE  EF63  F03C         	goto	u15311
 12236   0078C2  EF65  F03C         	goto	u15310
 12237   0078C6                     u15311:
 12238   0078C6  EFD5  F03C         	goto	l12176
 12239   0078CA                     u15310:
 12240   0078CA  0E00               	movlw	0
 12241   0078CC  6E3F               	movwf	(scalbnf@n+1)^0,c
 12242   0078CE  0E7F               	movlw	127
 12243   0078D0  6E3E               	movwf	scalbnf@n^0,c
 12244   0078D2  EFD5  F03C         	goto	l12176
 12245   0078D6                     l12160:
 12246   0078D6  AE3F               	btfss	(scalbnf@n+1)^0,7,c
 12247   0078D8  EF77  F03C         	goto	u15321
 12248   0078DC  0E82               	movlw	130
 12249   0078DE  5C3E               	subwf	scalbnf@n^0,w,c
 12250   0078E0  0EFF               	movlw	255
 12251   0078E2  583F               	subwfb	(scalbnf@n+1)^0,w,c
 12252   0078E4  B0D8               	btfsc	status,0,c
 12253   0078E6  EF77  F03C         	goto	u15321
 12254   0078EA  EF79  F03C         	goto	u15320
 12255   0078EE                     u15321:
 12256   0078EE  EFD5  F03C         	goto	l12176
 12257   0078F2                     u15320:
 12258   0078F2  C048  F021         	movff	scalbnf@y,___flmul@b
 12259   0078F6  C049  F022         	movff	scalbnf@y+1,___flmul@b+1
 12260   0078FA  C04A  F023         	movff	scalbnf@y+2,___flmul@b+2
 12261   0078FE  C04B  F024         	movff	scalbnf@y+3,___flmul@b+3
 12262   007902  0E00               	movlw	0
 12263   007904  6E25               	movwf	___flmul@a^0,c
 12264   007906  0E00               	movlw	0
 12265   007908  6E26               	movwf	(___flmul@a+1)^0,c
 12266   00790A  0E80               	movlw	128
 12267   00790C  6E27               	movwf	(___flmul@a+2)^0,c
 12268   00790E  0E0C               	movlw	12
 12269   007910  6E28               	movwf	(___flmul@a+3)^0,c
 12270   007912  ECF4  F031         	call	___flmul	;wreg free
 12271   007916  C021  F048         	movff	?___flmul,scalbnf@y
 12272   00791A  C022  F049         	movff	?___flmul+1,scalbnf@y+1
 12273   00791E  C023  F04A         	movff	?___flmul+2,scalbnf@y+2
 12274   007922  C024  F04B         	movff	?___flmul+3,scalbnf@y+3
 12275   007926  0E66               	movlw	102
 12276   007928  263E               	addwf	scalbnf@n^0,f,c
 12277   00792A  0E00               	movlw	0
 12278   00792C  223F               	addwfc	(scalbnf@n+1)^0,f,c
 12279   00792E  AE3F               	btfss	(scalbnf@n+1)^0,7,c
 12280   007930  EFA3  F03C         	goto	u15331
 12281   007934  0E82               	movlw	130
 12282   007936  5C3E               	subwf	scalbnf@n^0,w,c
 12283   007938  0EFF               	movlw	255
 12284   00793A  583F               	subwfb	(scalbnf@n+1)^0,w,c
 12285   00793C  B0D8               	btfsc	status,0,c
 12286   00793E  EFA3  F03C         	goto	u15331
 12287   007942  EFA5  F03C         	goto	u15330
 12288   007946                     u15331:
 12289   007946  EFD5  F03C         	goto	l12176
 12290   00794A                     u15330:
 12291   00794A  C048  F021         	movff	scalbnf@y,___flmul@b
 12292   00794E  C049  F022         	movff	scalbnf@y+1,___flmul@b+1
 12293   007952  C04A  F023         	movff	scalbnf@y+2,___flmul@b+2
 12294   007956  C04B  F024         	movff	scalbnf@y+3,___flmul@b+3
 12295   00795A  0E00               	movlw	0
 12296   00795C  6E25               	movwf	___flmul@a^0,c
 12297   00795E  0E00               	movlw	0
 12298   007960  6E26               	movwf	(___flmul@a+1)^0,c
 12299   007962  0E80               	movlw	128
 12300   007964  6E27               	movwf	(___flmul@a+2)^0,c
 12301   007966  0E0C               	movlw	12
 12302   007968  6E28               	movwf	(___flmul@a+3)^0,c
 12303   00796A  ECF4  F031         	call	___flmul	;wreg free
 12304   00796E  C021  F048         	movff	?___flmul,scalbnf@y
 12305   007972  C022  F049         	movff	?___flmul+1,scalbnf@y+1
 12306   007976  C023  F04A         	movff	?___flmul+2,scalbnf@y+2
 12307   00797A  C024  F04B         	movff	?___flmul+3,scalbnf@y+3
 12308   00797E  0E66               	movlw	102
 12309   007980  263E               	addwf	scalbnf@n^0,f,c
 12310   007982  0E00               	movlw	0
 12311   007984  223F               	addwfc	(scalbnf@n+1)^0,f,c
 12312   007986  AE3F               	btfss	(scalbnf@n+1)^0,7,c
 12313   007988  EFCF  F03C         	goto	u15341
 12314   00798C  0E82               	movlw	130
 12315   00798E  5C3E               	subwf	scalbnf@n^0,w,c
 12316   007990  0EFF               	movlw	255
 12317   007992  583F               	subwfb	(scalbnf@n+1)^0,w,c
 12318   007994  B0D8               	btfsc	status,0,c
 12319   007996  EFCF  F03C         	goto	u15341
 12320   00799A  EFD1  F03C         	goto	u15340
 12321   00799E                     u15341:
 12322   00799E  EFD5  F03C         	goto	l12176
 12323   0079A2                     u15340:
 12324   0079A2  0EFF               	movlw	255
 12325   0079A4  6E3F               	movwf	(scalbnf@n+1)^0,c
 12326   0079A6  0E82               	movlw	130
 12327   0079A8  6E3E               	movwf	scalbnf@n^0,c
 12328   0079AA                     l12176:
 12329   0079AA  0E7F               	movlw	127
 12330   0079AC  243E               	addwf	scalbnf@n^0,w,c
 12331   0079AE  6E40               	movwf	??_scalbnf^0,c
 12332   0079B0  0E00               	movlw	0
 12333   0079B2  203F               	addwfc	(scalbnf@n+1)^0,w,c
 12334   0079B4  6E41               	movwf	(??_scalbnf+1)^0,c
 12335   0079B6  6A42               	clrf	(??_scalbnf+2)^0,c
 12336   0079B8  6A43               	clrf	(??_scalbnf+3)^0,c
 12337   0079BA  0E17               	movlw	23
 12338   0079BC                     u15355:
 12339   0079BC  90D8               	bcf	status,0,c
 12340   0079BE  3640               	rlcf	??_scalbnf^0,f,c
 12341   0079C0  3641               	rlcf	(??_scalbnf+1)^0,f,c
 12342   0079C2  3642               	rlcf	(??_scalbnf+2)^0,f,c
 12343   0079C4  3643               	rlcf	(??_scalbnf+3)^0,f,c
 12344   0079C6  2EE8               	decfsz	wreg,f,c
 12345   0079C8  EFDE  F03C         	goto	u15355
 12346   0079CC  C040  F044         	movff	??_scalbnf,scalbnf@u
 12347   0079D0  C041  F045         	movff	??_scalbnf+1,scalbnf@u+1
 12348   0079D4  C042  F046         	movff	??_scalbnf+2,scalbnf@u+2
 12349   0079D8  C043  F047         	movff	??_scalbnf+3,scalbnf@u+3
 12350   0079DC  C044  F021         	movff	scalbnf@u,___flmul@b
 12351   0079E0  C045  F022         	movff	scalbnf@u+1,___flmul@b+1
 12352   0079E4  C046  F023         	movff	scalbnf@u+2,___flmul@b+2
 12353   0079E8  C047  F024         	movff	scalbnf@u+3,___flmul@b+3
 12354   0079EC  C048  F025         	movff	scalbnf@y,___flmul@a
 12355   0079F0  C049  F026         	movff	scalbnf@y+1,___flmul@a+1
 12356   0079F4  C04A  F027         	movff	scalbnf@y+2,___flmul@a+2
 12357   0079F8  C04B  F028         	movff	scalbnf@y+3,___flmul@a+3
 12358   0079FC  ECF4  F031         	call	___flmul	;wreg free
 12359   007A00  C021  F03A         	movff	?___flmul,scalbnf@x
 12360   007A04  C022  F03B         	movff	?___flmul+1,scalbnf@x+1
 12361   007A08  C023  F03C         	movff	?___flmul+2,scalbnf@x+2
 12362   007A0C  C024  F03D         	movff	?___flmul+3,scalbnf@x+3
 12363   007A10  C03A  F03A         	movff	scalbnf@x,?_scalbnf
 12364   007A14  C03B  F03B         	movff	scalbnf@x+1,?_scalbnf+1
 12365   007A18  C03C  F03C         	movff	scalbnf@x+2,?_scalbnf+2
 12366   007A1C  C03D  F03D         	movff	scalbnf@x+3,?_scalbnf+3
 12367   007A20  0012               	return		;funcret
 12368   007A22                     __end_of_scalbnf:
 12369                           	callstack 0
 12370                           
 12371 ;; *************** function _fabsf *****************
 12372 ;; Defined at:
 12373 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fabsf.c"
 12374 ;; Parameters:    Size  Location     Type
 12375 ;;  x               4    2[COMRAM] float 
 12376 ;; Auto vars:     Size  Location     Type
 12377 ;;  u               4    6[COMRAM] struct .
 12378 ;; Return value:  Size  Location     Type
 12379 ;;                  4    2[COMRAM] float 
 12380 ;; Registers used:
 12381 ;;		status,2, status,0
 12382 ;; Tracked objects:
 12383 ;;		On entry : 0/0
 12384 ;;		On exit  : 0/0
 12385 ;;		Unchanged: 0/0
 12386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12387 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12388 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12390 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12391 ;;Total ram usage:        8 bytes
 12392 ;; Hardware stack levels used: 1
 12393 ;; Hardware stack levels required when called: 3
 12394 ;; This function calls:
 12395 ;;		Nothing
 12396 ;; This function is called by:
 12397 ;;		_powf
 12398 ;; This function uses a non-reentrant model
 12399 ;;
 12400                           
 12401                           	psect	text24
 12402   00AA4E                     __ptext24:
 12403                           	callstack 0
 12404   00AA4E                     _fabsf:
 12405                           	callstack 24
 12406   00AA4E  C20B  F007         	movff	fabsf@F465,fabsf@u
 12407   00AA52  C20C  F008         	movff	fabsf@F465+1,fabsf@u+1
 12408   00AA56  C20D  F009         	movff	fabsf@F465+2,fabsf@u+2
 12409   00AA5A  C20E  F00A         	movff	fabsf@F465+3,fabsf@u+3
 12410   00AA5E  C003  F007         	movff	fabsf@x,fabsf@u
 12411   00AA62  C004  F008         	movff	fabsf@x+1,fabsf@u+1
 12412   00AA66  C005  F009         	movff	fabsf@x+2,fabsf@u+2
 12413   00AA6A  C006  F00A         	movff	fabsf@x+3,fabsf@u+3
 12414   00AA6E  9E0A               	bcf	(fabsf@u+3)^0,7,c
 12415   00AA70  C007  F003         	movff	fabsf@u,?_fabsf
 12416   00AA74  C008  F004         	movff	fabsf@u+1,?_fabsf+1
 12417   00AA78  C009  F005         	movff	fabsf@u+2,?_fabsf+2
 12418   00AA7C  C00A  F006         	movff	fabsf@u+3,?_fabsf+3
 12419   00AA80  0012               	return		;funcret
 12420   00AA82                     __end_of_fabsf:
 12421                           	callstack 0
 12422                           
 12423 ;; *************** function _Calculator_display_result *****************
 12424 ;; Defined at:
 12425 ;;		line 145 in file "Calculator.c"
 12426 ;; Parameters:    Size  Location     Type
 12427 ;;  Res             4   17[BANK1 ] float 
 12428 ;; Auto vars:     Size  Location     Type
 12429 ;;  result_str     20   21[BANK1 ] unsigned char [20]
 12430 ;; Return value:  Size  Location     Type
 12431 ;;                  1    wreg      void 
 12432 ;; Registers used:
 12433 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12434 ;; Tracked objects:
 12435 ;;		On entry : 0/0
 12436 ;;		On exit  : 0/0
 12437 ;;		Unchanged: 0/0
 12438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12439 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12440 ;;      Locals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12442 ;;      Totals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12443 ;;Total ram usage:       28 bytes
 12444 ;; Hardware stack levels used: 1
 12445 ;; Hardware stack levels required when called: 12
 12446 ;; This function calls:
 12447 ;;		___fleq
 12448 ;;		___flge
 12449 ;;		___fltol
 12450 ;;		_ceilf
 12451 ;;		_convert_float_to_string
 12452 ;;		_convert_int32_to_string
 12453 ;;		_floorf
 12454 ;;		_lcd_send_data
 12455 ;; This function is called by:
 12456 ;;		_main
 12457 ;; This function uses a non-reentrant model
 12458 ;;
 12459                           
 12460                           	psect	text25
 12461   008D28                     __ptext25:
 12462                           	callstack 0
 12463   008D28                     _Calculator_display_result:
 12464                           	callstack 18
 12465   008D28                     
 12466                           ;Calculator.c: 147:     uint8 result_str[20];;Calculator.c: 148:     if(
 12467   008D28  C111  F003         	movff	Calculator_display_result@Res,ceilf@x
 12468   008D2C  C112  F004         	movff	Calculator_display_result@Res+1,ceilf@x+1
 12469   008D30  C113  F005         	movff	Calculator_display_result@Res+2,ceilf@x+2
 12470   008D34  C114  F006         	movff	Calculator_display_result@Res+3,ceilf@x+3
 12471   008D38  EC1A  F03E         	call	_ceilf	;wreg free
 12472   008D3C  C003  F06F         	movff	?_ceilf,___fleq@ff1
 12473   008D40  C004  F070         	movff	?_ceilf+1,___fleq@ff1+1
 12474   008D44  C005  F071         	movff	?_ceilf+2,___fleq@ff1+2
 12475   008D48  C006  F072         	movff	?_ceilf+3,___fleq@ff1+3
 12476   008D4C  C111  F05B         	movff	Calculator_display_result@Res,floorf@x
 12477   008D50  C112  F05C         	movff	Calculator_display_result@Res+1,floorf@x+1
 12478   008D54  C113  F05D         	movff	Calculator_display_result@Res+2,floorf@x+2
 12479   008D58  C114  F05E         	movff	Calculator_display_result@Res+3,floorf@x+3
 12480   008D5C  EC11  F03D         	call	_floorf	;wreg free
 12481   008D60  C05B  F073         	movff	?_floorf,___fleq@ff2
 12482   008D64  C05C  F074         	movff	?_floorf+1,___fleq@ff2+1
 12483   008D68  C05D  F075         	movff	?_floorf+2,___fleq@ff2+2
 12484   008D6C  C05E  F076         	movff	?_floorf+3,___fleq@ff2+3
 12485   008D70  EC85  F04D         	call	___fleq	;wreg free
 12486   008D74  A0D8               	btfss	status,0,c
 12487   008D76  EFBF  F046         	goto	u17311
 12488   008D7A  EFC1  F046         	goto	u17310
 12489   008D7E                     u17311:
 12490   008D7E  EF16  F047         	goto	l13400
 12491   008D82                     u17310:
 12492   008D82  C111  F042         	movff	Calculator_display_result@Res,___flge@ff1
 12493   008D86  C112  F043         	movff	Calculator_display_result@Res+1,___flge@ff1+1
 12494   008D8A  C113  F044         	movff	Calculator_display_result@Res+2,___flge@ff1+2
 12495   008D8E  C114  F045         	movff	Calculator_display_result@Res+3,___flge@ff1+3
 12496   008D92  0E00               	movlw	0
 12497   008D94  6E46               	movwf	___flge@ff2^0,c
 12498   008D96  0E00               	movlw	0
 12499   008D98  6E47               	movwf	(___flge@ff2+1)^0,c
 12500   008D9A  0E00               	movlw	0
 12501   008D9C  6E48               	movwf	(___flge@ff2+2)^0,c
 12502   008D9E  0E4F               	movlw	79
 12503   008DA0  6E49               	movwf	(___flge@ff2+3)^0,c
 12504   008DA2  ECE3  F048         	call	___flge	;wreg free
 12505   008DA6  B0D8               	btfsc	status,0,c
 12506   008DA8  EFD8  F046         	goto	u17321
 12507   008DAC  EFDA  F046         	goto	u17320
 12508   008DB0                     u17321:
 12509   008DB0  EF16  F047         	goto	l13400
 12510   008DB4                     u17320:
 12511   008DB4  0E00               	movlw	0
 12512   008DB6  6E42               	movwf	___flge@ff1^0,c
 12513   008DB8  0E00               	movlw	0
 12514   008DBA  6E43               	movwf	(___flge@ff1+1)^0,c
 12515   008DBC  0E00               	movlw	0
 12516   008DBE  6E44               	movwf	(___flge@ff1+2)^0,c
 12517   008DC0  0ECF               	movlw	207
 12518   008DC2  6E45               	movwf	(___flge@ff1+3)^0,c
 12519   008DC4  C111  F046         	movff	Calculator_display_result@Res,___flge@ff2
 12520   008DC8  C112  F047         	movff	Calculator_display_result@Res+1,___flge@ff2+1
 12521   008DCC  C113  F048         	movff	Calculator_display_result@Res+2,___flge@ff2+2
 12522   008DD0  C114  F049         	movff	Calculator_display_result@Res+3,___flge@ff2+3
 12523   008DD4  ECE3  F048         	call	___flge	;wreg free
 12524   008DD8  B0D8               	btfsc	status,0,c
 12525   008DDA  EFF1  F046         	goto	u17331
 12526   008DDE  EFF3  F046         	goto	u17330
 12527   008DE2                     u17331:
 12528   008DE2  EF16  F047         	goto	l13400
 12529   008DE6                     u17330:
 12530   008DE6                     
 12531                           ;Calculator.c: 153:     {;Calculator.c: 154:         convert_int32_to_string(Res,result_
      +                          str);
 12532   008DE6  C111  F05B         	movff	Calculator_display_result@Res,___fltol@f1
 12533   008DEA  C112  F05C         	movff	Calculator_display_result@Res+1,___fltol@f1+1
 12534   008DEE  C113  F05D         	movff	Calculator_display_result@Res+2,___fltol@f1+2
 12535   008DF2  C114  F05E         	movff	Calculator_display_result@Res+3,___fltol@f1+3
 12536   008DF6  EC60  F048         	call	___fltol	;wreg free
 12537   008DFA  C05B  F129         	movff	?___fltol,_Calculator_display_result$2920
 12538   008DFE  C05C  F12A         	movff	?___fltol+1,_Calculator_display_result$2920+1
 12539   008E02  C05D  F12B         	movff	?___fltol+2,_Calculator_display_result$2920+2
 12540   008E06  C05E  F12C         	movff	?___fltol+3,_Calculator_display_result$2920+3
 12541   008E0A                     
 12542                           ;Calculator.c: 153:     {;Calculator.c: 154:         convert_int32_to_string(Res,result_
      +                          str);
 12543   008E0A  C129  F0E8         	movff	_Calculator_display_result$2920,convert_int32_to_string@value
 12544   008E0E  C12A  F0E9         	movff	_Calculator_display_result$2920+1,convert_int32_to_string@value+1
 12545   008E12  C12B  F0EA         	movff	_Calculator_display_result$2920+2,convert_int32_to_string@value+2
 12546   008E16  C12C  F0EB         	movff	_Calculator_display_result$2920+3,convert_int32_to_string@value+3
 12547   008E1A  0E15               	movlw	low Calculator_display_result@result_str
 12548   008E1C  0100               	movlb	0	; () banked
 12549   008E1E  6FEC               	movwf	convert_int32_to_string@str& (0+255),b
 12550   008E20  0E01               	movlw	high Calculator_display_result@result_str
 12551   008E22  6FED               	movwf	(convert_int32_to_string@str+1)& (0+255),b
 12552   008E24  ECCD  F04C         	call	_convert_int32_to_string	;wreg free
 12553                           
 12554                           ;Calculator.c: 155:     }
 12555   008E28  EF25  F047         	goto	l13402
 12556   008E2C                     l13400:
 12557                           
 12558                           ;Calculator.c: 157:         convert_float_to_string(Res,result_str);
 12559   008E2C  C111  F0E8         	movff	Calculator_display_result@Res,convert_float_to_string@value
 12560   008E30  C112  F0E9         	movff	Calculator_display_result@Res+1,convert_float_to_string@value+1
 12561   008E34  C113  F0EA         	movff	Calculator_display_result@Res+2,convert_float_to_string@value+2
 12562   008E38  C114  F0EB         	movff	Calculator_display_result@Res+3,convert_float_to_string@value+3
 12563   008E3C  0E15               	movlw	low Calculator_display_result@result_str
 12564   008E3E  0100               	movlb	0	; () banked
 12565   008E40  6FEC               	movwf	convert_float_to_string@str& (0+255),b
 12566   008E42  0E01               	movlw	high Calculator_display_result@result_str
 12567   008E44  6FED               	movwf	(convert_float_to_string@str+1)& (0+255),b
 12568   008E46  ECA5  F04B         	call	_convert_float_to_string	;wreg free
 12569   008E4A                     l13402:
 12570                           
 12571                           ;Calculator.c: 159:     lcd_send_data(&lcd,4,1,result_str);
 12572   008E4A  0E85               	movlw	low _lcd
 12573   008E4C  6E2D               	movwf	lcd_send_data@lcd^0,c
 12574   008E4E  0E02               	movlw	high _lcd
 12575   008E50  6E2E               	movwf	(lcd_send_data@lcd+1)^0,c
 12576   008E52  0E04               	movlw	4
 12577   008E54  6E2F               	movwf	lcd_send_data@row^0,c
 12578   008E56  0E01               	movlw	1
 12579   008E58  6E30               	movwf	lcd_send_data@column^0,c
 12580   008E5A  0E15               	movlw	low Calculator_display_result@result_str
 12581   008E5C  6E31               	movwf	lcd_send_data@str^0,c
 12582   008E5E  0E01               	movlw	high Calculator_display_result@result_str
 12583   008E60  6E32               	movwf	(lcd_send_data@str+1)^0,c
 12584   008E62  EC65  F049         	call	_lcd_send_data	;wreg free
 12585   008E66  0012               	return		;funcret
 12586   008E68                     __end_of_Calculator_display_result:
 12587                           	callstack 0
 12588                           
 12589 ;; *************** function _lcd_send_data *****************
 12590 ;; Defined at:
 12591 ;;		line 262 in file "ECU_Layer/ECU_LCD/ECU_LCD.c"
 12592 ;; Parameters:    Size  Location     Type
 12593 ;;  lcd             2   44[COMRAM] PTR const struct .
 12594 ;;		 -> lcd(8), 
 12595 ;;  row             1   46[COMRAM] unsigned char 
 12596 ;;  column          1   47[COMRAM] unsigned char 
 12597 ;;  str             2   48[COMRAM] PTR unsigned char 
 12598 ;;		 -> Calculator_display_result@result_str(20), STR_6(13), STR_5(11), main@MATH_STR(60), 
 12599 ;; Auto vars:     Size  Location     Type
 12600 ;;  ret             1   50[COMRAM] unsigned char 
 12601 ;; Return value:  Size  Location     Type
 12602 ;;                  1    wreg      unsigned char 
 12603 ;; Registers used:
 12604 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12605 ;; Tracked objects:
 12606 ;;		On entry : 0/0
 12607 ;;		On exit  : 0/0
 12608 ;;		Unchanged: 0/0
 12609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12610 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12611 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12613 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12614 ;;Total ram usage:        7 bytes
 12615 ;; Hardware stack levels used: 1
 12616 ;; Hardware stack levels required when called: 10
 12617 ;; This function calls:
 12618 ;;		_lcd_send_char_at
 12619 ;; This function is called by:
 12620 ;;		_main
 12621 ;;		_Calculator_display_result
 12622 ;; This function uses a non-reentrant model
 12623 ;;
 12624                           
 12625                           	psect	text26
 12626   0092CA                     __ptext26:
 12627                           	callstack 0
 12628   0092CA                     _lcd_send_data:
 12629                           	callstack 20
 12630   0092CA                     
 12631                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 265:     if((((void*)0)!=lcd)&&(((void*)0)!=str))
 12632   0092CA  502D               	movf	lcd_send_data@lcd^0,w,c
 12633   0092CC  102E               	iorwf	(lcd_send_data@lcd+1)^0,w,c
 12634   0092CE  B4D8               	btfsc	status,2,c
 12635   0092D0  EF6C  F049         	goto	u11431
 12636   0092D4  EF6E  F049         	goto	u11430
 12637   0092D8                     u11431:
 12638   0092D8  EFE3  F049         	goto	l241
 12639   0092DC                     u11430:
 12640   0092DC  5031               	movf	lcd_send_data@str^0,w,c
 12641   0092DE  1032               	iorwf	(lcd_send_data@str+1)^0,w,c
 12642   0092E0  B4D8               	btfsc	status,2,c
 12643   0092E2  EF75  F049         	goto	u11441
 12644   0092E6  EF77  F049         	goto	u11440
 12645   0092EA                     u11441:
 12646   0092EA  EFE3  F049         	goto	l241
 12647   0092EE                     u11440:
 12648   0092EE                     
 12649                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 266:     {;ECU_Layer/ECU_LCD/ECU_LCD.c: 267:         ret =
      +                           ((Std_ReturnType)0X01);
 12650   0092EE  0E01               	movlw	1
 12651   0092F0  6E33               	movwf	lcd_send_data@ret^0,c
 12652                           
 12653                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 268:         if((row>0)&&(column>=0)&&(row<=((4)))&&(colum
      +                          n<=((20))))
 12654   0092F2  502F               	movf	lcd_send_data@row^0,w,c
 12655   0092F4  B4D8               	btfsc	status,2,c
 12656   0092F6  EF7F  F049         	goto	u11451
 12657   0092FA  EF81  F049         	goto	u11450
 12658   0092FE                     u11451:
 12659   0092FE  EFE3  F049         	goto	l241
 12660   009302                     u11450:
 12661   009302  0E05               	movlw	5
 12662   009304  602F               	cpfslt	lcd_send_data@row^0,c
 12663   009306  EF87  F049         	goto	u11461
 12664   00930A  EF89  F049         	goto	u11460
 12665   00930E                     u11461:
 12666   00930E  EFE3  F049         	goto	l241
 12667   009312                     u11460:
 12668   009312  0E15               	movlw	21
 12669   009314  6030               	cpfslt	lcd_send_data@column^0,c
 12670   009316  EF8F  F049         	goto	u11471
 12671   00931A  EF91  F049         	goto	u11470
 12672   00931E                     u11471:
 12673   00931E  EFE3  F049         	goto	l241
 12674   009322                     u11470:
 12675   009322  EFCA  F049         	goto	l9626
 12676   009326                     l9610:
 12677                           
 12678                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 271:             {;ECU_Layer/ECU_LCD/ECU_LCD.c: 272:      
      +                                     ret &= lcd_send_char_at(lcd,row,column,*str++);
 12679   009326  C02D  F027         	movff	lcd_send_data@lcd,lcd_send_char_at@lcd
 12680   00932A  C02E  F028         	movff	lcd_send_data@lcd+1,lcd_send_char_at@lcd+1
 12681   00932E  C02F  F029         	movff	lcd_send_data@row,lcd_send_char_at@row
 12682   009332  C030  F02A         	movff	lcd_send_data@column,lcd_send_char_at@column
 12683   009336  C031  FFF6         	movff	lcd_send_data@str,tblptrl
 12684   00933A  C032  FFF7         	movff	lcd_send_data@str+1,tblptrh
 12685   00933E  0E00               	movlw	low (__smallconst shr (0+16))
 12686   009340  6EF8               	movwf	tblptru,c
 12687   009342  0E0F               	movlw	(high __ramtop+-1)
 12688   009344  64F7               	cpfsgt	tblptrh,c
 12689   009346  D003               	bra	u11487
 12690   009348  0008               	tblrd		*
 12691   00934A  50F5               	movf	tablat,w,c
 12692   00934C  D005               	bra	u11480
 12693   00934E                     u11487:
 12694   00934E  CFF6 FFE9          	movff	tblptrl,fsr0l
 12695   009352  CFF7 FFEA          	movff	tblptrh,fsr0h
 12696   009356  50EF               	movf	indf0,w,c
 12697   009358                     u11480:
 12698   009358  6E2B               	movwf	lcd_send_char_at@data^0,c
 12699   00935A  EC04  F04F         	call	_lcd_send_char_at	;wreg free
 12700   00935E  1633               	andwf	lcd_send_data@ret^0,f,c
 12701   009360  4A31               	infsnz	lcd_send_data@str^0,f,c
 12702   009362  2A32               	incf	(lcd_send_data@str+1)^0,f,c
 12703   009364                     
 12704                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 273:                 column++;
 12705   009364  2A30               	incf	lcd_send_data@column^0,f,c
 12706   009366                     
 12707                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 274:                 if(column >(20)){
 12708   009366  0E14               	movlw	20
 12709   009368  6430               	cpfsgt	lcd_send_data@column^0,c
 12710   00936A  EFB9  F049         	goto	u11491
 12711   00936E  EFBB  F049         	goto	u11490
 12712   009372                     u11491:
 12713   009372  EFCA  F049         	goto	l9626
 12714   009376                     u11490:
 12715   009376                     
 12716                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 275:                     column = 1;
 12717   009376  0E01               	movlw	1
 12718   009378  6E30               	movwf	lcd_send_data@column^0,c
 12719   00937A                     
 12720                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 276:                     if(row < ((4))){
 12721   00937A  0E04               	movlw	4
 12722   00937C  602F               	cpfslt	lcd_send_data@row^0,c
 12723   00937E  EFC3  F049         	goto	u11501
 12724   009382  EFC5  F049         	goto	u11500
 12725   009386                     u11501:
 12726   009386  EFC8  F049         	goto	l9624
 12727   00938A                     u11500:
 12728   00938A                     
 12729                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 277:                         row ++;
 12730   00938A  2A2F               	incf	lcd_send_data@row^0,f,c
 12731                           
 12732                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 278:                     }
 12733   00938C  EFCA  F049         	goto	l9626
 12734   009390                     l9624:
 12735                           
 12736                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 280:                         row = 1;
 12737   009390  0E01               	movlw	1
 12738   009392  6E2F               	movwf	lcd_send_data@row^0,c
 12739   009394                     l9626:
 12740                           
 12741                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 270:             while(*str)
 12742   009394  C031  FFF6         	movff	lcd_send_data@str,tblptrl
 12743   009398  C032  FFF7         	movff	lcd_send_data@str+1,tblptrh
 12744   00939C  0E00               	movlw	low (__smallconst shr (0+16))
 12745   00939E  6EF8               	movwf	tblptru,c
 12746   0093A0  0E0F               	movlw	(high __ramtop+-1)
 12747   0093A2  64F7               	cpfsgt	tblptrh,c
 12748   0093A4  D003               	bra	u11517
 12749   0093A6  0008               	tblrd		*
 12750   0093A8  50F5               	movf	tablat,w,c
 12751   0093AA  D005               	bra	u11510
 12752   0093AC                     u11517:
 12753   0093AC  CFF6 FFE9          	movff	tblptrl,fsr0l
 12754   0093B0  CFF7 FFEA          	movff	tblptrh,fsr0h
 12755   0093B4  50EF               	movf	indf0,w,c
 12756   0093B6                     u11510:
 12757   0093B6  0900               	iorlw	0
 12758   0093B8  A4D8               	btfss	status,2,c
 12759   0093BA  EFE1  F049         	goto	u11521
 12760   0093BE  EFE3  F049         	goto	u11520
 12761   0093C2                     u11521:
 12762   0093C2  EF93  F049         	goto	l9610
 12763   0093C6                     u11520:
 12764   0093C6                     l241:
 12765   0093C6  0012               	return		;funcret
 12766   0093C8                     __end_of_lcd_send_data:
 12767                           	callstack 0
 12768                           
 12769 ;; *************** function _lcd_send_char_at *****************
 12770 ;; Defined at:
 12771 ;;		line 216 in file "ECU_Layer/ECU_LCD/ECU_LCD.c"
 12772 ;; Parameters:    Size  Location     Type
 12773 ;;  lcd             2   38[COMRAM] PTR const struct .
 12774 ;;		 -> lcd(8), 
 12775 ;;  row             1   40[COMRAM] unsigned char 
 12776 ;;  column          1   41[COMRAM] unsigned char 
 12777 ;;  data            1   42[COMRAM] unsigned char 
 12778 ;; Auto vars:     Size  Location     Type
 12779 ;;  ret             1   43[COMRAM] unsigned char 
 12780 ;; Return value:  Size  Location     Type
 12781 ;;                  1    wreg      unsigned char 
 12782 ;; Registers used:
 12783 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12784 ;; Tracked objects:
 12785 ;;		On entry : 0/0
 12786 ;;		On exit  : 0/0
 12787 ;;		Unchanged: 0/0
 12788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12789 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12790 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12792 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12793 ;;Total ram usage:        6 bytes
 12794 ;; Hardware stack levels used: 1
 12795 ;; Hardware stack levels required when called: 9
 12796 ;; This function calls:
 12797 ;;		_lcd_send_char
 12798 ;;		_lcd_set_cursor
 12799 ;; This function is called by:
 12800 ;;		_lcd_send_data
 12801 ;;		_lcd_send_custom_char
 12802 ;; This function uses a non-reentrant model
 12803 ;;
 12804                           
 12805                           	psect	text27
 12806   009E08                     __ptext27:
 12807                           	callstack 0
 12808   009E08                     _lcd_send_char_at:
 12809                           	callstack 20
 12810   009E08                     
 12811                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 216: Std_ReturnType lcd_send_char_at(const chr_lcd_t *lcd,
      +                          uint8 row, uint8 column, uint8 data);ECU_Layer/ECU_LCD/ECU_LCD.c: 217: {;ECU_Layer/ECU_L
      +                          CD/ECU_LCD.c: 218:     column--;
 12812   009E08  062A               	decf	lcd_send_char_at@column^0,f,c
 12813   009E0A                     
 12814                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 219:     Std_ReturnType ret = ((Std_ReturnType)0X00);
 12815   009E0A  0E00               	movlw	0
 12816   009E0C  6E2C               	movwf	lcd_send_char_at@ret^0,c
 12817   009E0E                     
 12818                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 220:     if(((void*)0)!=lcd)
 12819   009E0E  5027               	movf	lcd_send_char_at@lcd^0,w,c
 12820   009E10  1028               	iorwf	(lcd_send_char_at@lcd+1)^0,w,c
 12821   009E12  B4D8               	btfsc	status,2,c
 12822   009E14  EF0E  F04F         	goto	u10091
 12823   009E18  EF10  F04F         	goto	u10090
 12824   009E1C                     u10091:
 12825   009E1C  EF40  F04F         	goto	l220
 12826   009E20                     u10090:
 12827   009E20                     
 12828                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 221:     {;ECU_Layer/ECU_LCD/ECU_LCD.c: 222:         if((r
      +                          ow>0)&&(column>=0)&&(row<=((4)))&&(column<((20))))
 12829   009E20  5029               	movf	lcd_send_char_at@row^0,w,c
 12830   009E22  B4D8               	btfsc	status,2,c
 12831   009E24  EF16  F04F         	goto	u10101
 12832   009E28  EF18  F04F         	goto	u10100
 12833   009E2C                     u10101:
 12834   009E2C  EF40  F04F         	goto	l220
 12835   009E30                     u10100:
 12836   009E30  0E05               	movlw	5
 12837   009E32  6029               	cpfslt	lcd_send_char_at@row^0,c
 12838   009E34  EF1E  F04F         	goto	u10111
 12839   009E38  EF20  F04F         	goto	u10110
 12840   009E3C                     u10111:
 12841   009E3C  EF40  F04F         	goto	l220
 12842   009E40                     u10110:
 12843   009E40  0E14               	movlw	20
 12844   009E42  602A               	cpfslt	lcd_send_char_at@column^0,c
 12845   009E44  EF26  F04F         	goto	u10121
 12846   009E48  EF28  F04F         	goto	u10120
 12847   009E4C                     u10121:
 12848   009E4C  EF40  F04F         	goto	l220
 12849   009E50                     u10120:
 12850   009E50                     
 12851                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 223:         {;ECU_Layer/ECU_LCD/ECU_LCD.c: 224:         r
      +                          et = ((Std_ReturnType)0X01);
 12852   009E50  0E01               	movlw	1
 12853   009E52  6E2C               	movwf	lcd_send_char_at@ret^0,c
 12854   009E54                     
 12855                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 225:         ret = ret & (lcd_set_cursor(lcd,row,column));
 12856   009E54  C027  F020         	movff	lcd_send_char_at@lcd,lcd_set_cursor@lcd
 12857   009E58  C028  F021         	movff	lcd_send_char_at@lcd+1,lcd_set_cursor@lcd+1
 12858   009E5C  C029  F022         	movff	lcd_send_char_at@row,lcd_set_cursor@row
 12859   009E60  C02A  F023         	movff	lcd_send_char_at@column,lcd_set_cursor@column
 12860   009E64  EC63  F04A         	call	_lcd_set_cursor	;wreg free
 12861   009E68  142C               	andwf	lcd_send_char_at@ret^0,w,c
 12862   009E6A  6E2C               	movwf	lcd_send_char_at@ret^0,c
 12863   009E6C                     
 12864                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 226:         ret = ret & ( lcd_send_char(lcd,data));
 12865   009E6C  C027  F01C         	movff	lcd_send_char_at@lcd,lcd_send_char@lcd
 12866   009E70  C028  F01D         	movff	lcd_send_char_at@lcd+1,lcd_send_char@lcd+1
 12867   009E74  C02B  F01E         	movff	lcd_send_char_at@data,lcd_send_char@data
 12868   009E78  EC43  F053         	call	_lcd_send_char	;wreg free
 12869   009E7C  142C               	andwf	lcd_send_char_at@ret^0,w,c
 12870   009E7E  6E2C               	movwf	lcd_send_char_at@ret^0,c
 12871   009E80                     l220:
 12872                           
 12873                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 229:     return ret;
 12874   009E80  502C               	movf	lcd_send_char_at@ret^0,w,c
 12875   009E82  0012               	return		;funcret
 12876   009E84                     __end_of_lcd_send_char_at:
 12877                           	callstack 0
 12878                           
 12879 ;; *************** function _lcd_set_cursor *****************
 12880 ;; Defined at:
 12881 ;;		line 487 in file "ECU_Layer/ECU_LCD/ECU_LCD.c"
 12882 ;; Parameters:    Size  Location     Type
 12883 ;;  lcd             2   31[COMRAM] PTR const struct .
 12884 ;;		 -> lcd(8), 
 12885 ;;  row             1   33[COMRAM] unsigned char 
 12886 ;;  column          1   34[COMRAM] unsigned char 
 12887 ;; Auto vars:     Size  Location     Type
 12888 ;;  ret             1   37[COMRAM] unsigned char 
 12889 ;; Return value:  Size  Location     Type
 12890 ;;                  1    wreg      unsigned char 
 12891 ;; Registers used:
 12892 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12893 ;; Tracked objects:
 12894 ;;		On entry : 0/0
 12895 ;;		On exit  : 0/0
 12896 ;;		Unchanged: 0/0
 12897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12898 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12899 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12900 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12901 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12902 ;;Total ram usage:        7 bytes
 12903 ;; Hardware stack levels used: 1
 12904 ;; Hardware stack levels required when called: 8
 12905 ;; This function calls:
 12906 ;;		_lcd_send_command
 12907 ;; This function is called by:
 12908 ;;		_lcd_send_char_at
 12909 ;; This function uses a non-reentrant model
 12910 ;;
 12911                           
 12912                           	psect	text28
 12913   0094C6                     __ptext28:
 12914                           	callstack 0
 12915   0094C6                     _lcd_set_cursor:
 12916                           	callstack 20
 12917   0094C6                     
 12918                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 487: static Std_ReturnType lcd_set_cursor(const chr_lcd_t 
      +                          *lcd, uint8 row, uint8 column);ECU_Layer/ECU_LCD/ECU_LCD.c: 488: {;ECU_Layer/ECU_LCD/ECU
      +                          _LCD.c: 489:     Std_ReturnType ret = ((Std_ReturnType)0X00);
 12919   0094C6  0E00               	movlw	0
 12920   0094C8  6E26               	movwf	lcd_set_cursor@ret^0,c
 12921   0094CA                     
 12922                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 490:     if((((void*)0)!=lcd)&&(((4)) >= row)&&(((20))>=co
      +                          lumn)&&((column>=0))&&(row > 0))
 12923   0094CA  5020               	movf	lcd_set_cursor@lcd^0,w,c
 12924   0094CC  1021               	iorwf	(lcd_set_cursor@lcd+1)^0,w,c
 12925   0094CE  B4D8               	btfsc	status,2,c
 12926   0094D0  EF6C  F04A         	goto	u9081
 12927   0094D4  EF6E  F04A         	goto	u9080
 12928   0094D8                     u9081:
 12929   0094D8  EFD5  F04A         	goto	l8066
 12930   0094DC                     u9080:
 12931   0094DC  0E05               	movlw	5
 12932   0094DE  6022               	cpfslt	lcd_set_cursor@row^0,c
 12933   0094E0  EF74  F04A         	goto	u9091
 12934   0094E4  EF76  F04A         	goto	u9090
 12935   0094E8                     u9091:
 12936   0094E8  EFD5  F04A         	goto	l8066
 12937   0094EC                     u9090:
 12938   0094EC  0E15               	movlw	21
 12939   0094EE  6023               	cpfslt	lcd_set_cursor@column^0,c
 12940   0094F0  EF7C  F04A         	goto	u9101
 12941   0094F4  EF7E  F04A         	goto	u9100
 12942   0094F8                     u9101:
 12943   0094F8  EFD5  F04A         	goto	l8066
 12944   0094FC                     u9100:
 12945   0094FC  5022               	movf	lcd_set_cursor@row^0,w,c
 12946   0094FE  B4D8               	btfsc	status,2,c
 12947   009500  EF84  F04A         	goto	u9111
 12948   009504  EF86  F04A         	goto	u9110
 12949   009508                     u9111:
 12950   009508  EFD5  F04A         	goto	l8066
 12951   00950C                     u9110:
 12952   00950C  EFB8  F04A         	goto	l8064
 12953   009510                     l8056:
 12954   009510  C020  F01C         	movff	lcd_set_cursor@lcd,lcd_send_command@lcd
 12955   009514  C021  F01D         	movff	lcd_set_cursor@lcd+1,lcd_send_command@lcd+1
 12956   009518  5023               	movf	lcd_set_cursor@column^0,w,c
 12957   00951A  0F80               	addlw	128
 12958   00951C  6E1E               	movwf	lcd_send_command@command^0,c
 12959   00951E  EC68  F053         	call	_lcd_send_command	;wreg free
 12960   009522  6E26               	movwf	lcd_set_cursor@ret^0,c
 12961   009524  EFD5  F04A         	goto	l8066
 12962   009528                     l8058:
 12963   009528  C020  F01C         	movff	lcd_set_cursor@lcd,lcd_send_command@lcd
 12964   00952C  C021  F01D         	movff	lcd_set_cursor@lcd+1,lcd_send_command@lcd+1
 12965   009530  5023               	movf	lcd_set_cursor@column^0,w,c
 12966   009532  0FC0               	addlw	192
 12967   009534  6E1E               	movwf	lcd_send_command@command^0,c
 12968   009536  EC68  F053         	call	_lcd_send_command	;wreg free
 12969   00953A  6E26               	movwf	lcd_set_cursor@ret^0,c
 12970   00953C  EFD5  F04A         	goto	l8066
 12971   009540                     l8060:
 12972   009540  C020  F01C         	movff	lcd_set_cursor@lcd,lcd_send_command@lcd
 12973   009544  C021  F01D         	movff	lcd_set_cursor@lcd+1,lcd_send_command@lcd+1
 12974   009548  5023               	movf	lcd_set_cursor@column^0,w,c
 12975   00954A  0F94               	addlw	148
 12976   00954C  6E1E               	movwf	lcd_send_command@command^0,c
 12977   00954E  EC68  F053         	call	_lcd_send_command	;wreg free
 12978   009552  6E26               	movwf	lcd_set_cursor@ret^0,c
 12979   009554  EFD5  F04A         	goto	l8066
 12980   009558                     l8062:
 12981   009558  C020  F01C         	movff	lcd_set_cursor@lcd,lcd_send_command@lcd
 12982   00955C  C021  F01D         	movff	lcd_set_cursor@lcd+1,lcd_send_command@lcd+1
 12983   009560  5023               	movf	lcd_set_cursor@column^0,w,c
 12984   009562  0FD4               	addlw	212
 12985   009564  6E1E               	movwf	lcd_send_command@command^0,c
 12986   009566  EC68  F053         	call	_lcd_send_command	;wreg free
 12987   00956A  6E26               	movwf	lcd_set_cursor@ret^0,c
 12988   00956C  EFD5  F04A         	goto	l8066
 12989   009570                     l8064:
 12990   009570  5022               	movf	lcd_set_cursor@row^0,w,c
 12991   009572  6E24               	movwf	??_lcd_set_cursor^0,c
 12992   009574  6A25               	clrf	(??_lcd_set_cursor+1)^0,c
 12993                           
 12994                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12995                           ; Switch size 1, requested type "simple"
 12996                           ; Number of cases is 1, Range of values is 0 to 0
 12997                           ; switch strategies available:
 12998                           ; Name         Instructions Cycles
 12999                           ; simple_byte            4     3 (average)
 13000                           ;	Chosen strategy is simple_byte
 13001   009576  5025               	movf	(??_lcd_set_cursor+1)^0,w,c
 13002   009578  0A00               	xorlw	0	; case 0
 13003   00957A  B4D8               	btfsc	status,2,c
 13004   00957C  EFC2  F04A         	goto	l13842
 13005   009580  EFD5  F04A         	goto	l8066
 13006   009584                     l13842:
 13007                           
 13008                           ; Switch size 1, requested type "simple"
 13009                           ; Number of cases is 4, Range of values is 1 to 4
 13010                           ; switch strategies available:
 13011                           ; Name         Instructions Cycles
 13012                           ; simple_byte           13     7 (average)
 13013                           ;	Chosen strategy is simple_byte
 13014   009584  5024               	movf	??_lcd_set_cursor^0,w,c
 13015   009586  0A01               	xorlw	1	; case 1
 13016   009588  B4D8               	btfsc	status,2,c
 13017   00958A  EF88  F04A         	goto	l8056
 13018   00958E  0A03               	xorlw	3	; case 2
 13019   009590  B4D8               	btfsc	status,2,c
 13020   009592  EF94  F04A         	goto	l8058
 13021   009596  0A01               	xorlw	1	; case 3
 13022   009598  B4D8               	btfsc	status,2,c
 13023   00959A  EFA0  F04A         	goto	l8060
 13024   00959E  0A07               	xorlw	7	; case 4
 13025   0095A0  B4D8               	btfsc	status,2,c
 13026   0095A2  EFAC  F04A         	goto	l8062
 13027   0095A6  EFD5  F04A         	goto	l8066
 13028   0095AA                     l8066:
 13029                           
 13030                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 508:     return ret;
 13031   0095AA  5026               	movf	lcd_set_cursor@ret^0,w,c
 13032   0095AC  0012               	return		;funcret
 13033   0095AE                     __end_of_lcd_set_cursor:
 13034                           	callstack 0
 13035                           
 13036 ;; *************** function _lcd_send_char *****************
 13037 ;; Defined at:
 13038 ;;		line 171 in file "ECU_Layer/ECU_LCD/ECU_LCD.c"
 13039 ;; Parameters:    Size  Location     Type
 13040 ;;  lcd             2   27[COMRAM] PTR const struct .
 13041 ;;		 -> lcd(8), 
 13042 ;;  data            1   29[COMRAM] unsigned char 
 13043 ;; Auto vars:     Size  Location     Type
 13044 ;;  ret             1   30[COMRAM] unsigned char 
 13045 ;; Return value:  Size  Location     Type
 13046 ;;                  1    wreg      unsigned char 
 13047 ;; Registers used:
 13048 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13049 ;; Tracked objects:
 13050 ;;		On entry : 0/0
 13051 ;;		On exit  : 0/0
 13052 ;;		Unchanged: 0/0
 13053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13054 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13055 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13057 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13058 ;;Total ram usage:        4 bytes
 13059 ;; Hardware stack levels used: 1
 13060 ;; Hardware stack levels required when called: 7
 13061 ;; This function calls:
 13062 ;;		_lcd_send_4bits
 13063 ;; This function is called by:
 13064 ;;		_lcd_send_char_at
 13065 ;;		_lcd_send_string
 13066 ;;		_lcd_send_custom_char
 13067 ;; This function uses a non-reentrant model
 13068 ;;
 13069                           
 13070                           	psect	text29
 13071   00A686                     __ptext29:
 13072                           	callstack 0
 13073   00A686                     _lcd_send_char:
 13074                           	callstack 21
 13075   00A686                     
 13076                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 171: Std_ReturnType lcd_send_char(const chr_lcd_t *lcd, ui
      +                          nt8 data);ECU_Layer/ECU_LCD/ECU_LCD.c: 172: {;ECU_Layer/ECU_LCD/ECU_LCD.c: 173:     Std_
      +                          ReturnType ret = ((Std_ReturnType)0X00);
 13077   00A686  0E00               	movlw	0
 13078   00A688  6E1F               	movwf	lcd_send_char@ret^0,c
 13079   00A68A                     
 13080                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 174:     if(((void*)0)!=lcd)
 13081   00A68A  501C               	movf	lcd_send_char@lcd^0,w,c
 13082   00A68C  101D               	iorwf	(lcd_send_char@lcd+1)^0,w,c
 13083   00A68E  B4D8               	btfsc	status,2,c
 13084   00A690  EF4C  F053         	goto	u9071
 13085   00A694  EF4E  F053         	goto	u9070
 13086   00A698                     u9071:
 13087   00A698  EF66  F053         	goto	l216
 13088   00A69C                     u9070:
 13089   00A69C                     
 13090                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 175:     {;ECU_Layer/ECU_LCD/ECU_LCD.c: 199:     RS=1;
 13091   00A69C  0E01               	movlw	1
 13092   00A69E  0100               	movlb	0	; () banked
 13093   00A6A0  6FFC               	movwf	_RS& (0+255),b
 13094   00A6A2                     
 13095                           ; BSR set to: 0
 13096                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 200:     ret &= lcd_send_4bits(lcd,data & 0xf0);
 13097   00A6A2  C01C  F019         	movff	lcd_send_char@lcd,lcd_send_4bits@lcd
 13098   00A6A6  C01D  F01A         	movff	lcd_send_char@lcd+1,lcd_send_4bits@lcd+1
 13099   00A6AA  501E               	movf	lcd_send_char@data^0,w,c
 13100   00A6AC  0BF0               	andlw	240
 13101   00A6AE  6E1B               	movwf	lcd_send_4bits@_data_command^0,c
 13102   00A6B0  EC0C  F055         	call	_lcd_send_4bits	;wreg free
 13103   00A6B4  161F               	andwf	lcd_send_char@ret^0,f,c
 13104   00A6B6                     
 13105                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 201:     ret &= lcd_send_4bits(lcd,(data << 4) & ( 0xf0 ))
      +                          ;
 13106   00A6B6  C01C  F019         	movff	lcd_send_char@lcd,lcd_send_4bits@lcd
 13107   00A6BA  C01D  F01A         	movff	lcd_send_char@lcd+1,lcd_send_4bits@lcd+1
 13108   00A6BE  381E               	swapf	lcd_send_char@data^0,w,c
 13109   00A6C0  0BF0               	andlw	240
 13110   00A6C2  0BF0               	andlw	240
 13111   00A6C4  6E1B               	movwf	lcd_send_4bits@_data_command^0,c
 13112   00A6C6  EC0C  F055         	call	_lcd_send_4bits	;wreg free
 13113   00A6CA  161F               	andwf	lcd_send_char@ret^0,f,c
 13114   00A6CC                     l216:
 13115                           
 13116                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 204:     return ret;
 13117   00A6CC  501F               	movf	lcd_send_char@ret^0,w,c
 13118   00A6CE  0012               	return		;funcret
 13119   00A6D0                     __end_of_lcd_send_char:
 13120                           	callstack 0
 13121                           
 13122 ;; *************** function _convert_int32_to_string *****************
 13123 ;; Defined at:
 13124 ;;		line 380 in file "ECU_Layer/ECU_LCD/ECU_LCD.c"
 13125 ;; Parameters:    Size  Location     Type
 13126 ;;  value           4  104[BANK0 ] long 
 13127 ;;  str             2  108[BANK0 ] PTR unsigned char 
 13128 ;;		 -> Calculator_display_result@result_str(20), 
 13129 ;; Auto vars:     Size  Location     Type
 13130 ;;  Temp_String    12  110[BANK0 ] unsigned char [12]
 13131 ;;  DataCounter     1  122[BANK0 ] unsigned char 
 13132 ;;  ret             1    0        unsigned char 
 13133 ;; Return value:  Size  Location     Type
 13134 ;;                  1    wreg      unsigned char 
 13135 ;; Registers used:
 13136 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13137 ;; Tracked objects:
 13138 ;;		On entry : 0/0
 13139 ;;		On exit  : 0/0
 13140 ;;		Unchanged: 0/0
 13141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13142 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13143 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13145 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13146 ;;Total ram usage:       19 bytes
 13147 ;; Hardware stack levels used: 1
 13148 ;; Hardware stack levels required when called: 11
 13149 ;; This function calls:
 13150 ;;		_memset
 13151 ;;		_sprintf
 13152 ;; This function is called by:
 13153 ;;		_Calculator_display_result
 13154 ;; This function uses a non-reentrant model
 13155 ;;
 13156                           
 13157                           	psect	text30
 13158   00999A                     __ptext30:
 13159                           	callstack 0
 13160   00999A                     _convert_int32_to_string:
 13161                           	callstack 18
 13162   00999A                     
 13163                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 383:     uint8 Temp_String[12] = {' '};
 13164   00999A  EE22  F09D         	lfsr	2,convert_int32_to_string@F3611
 13165   00999E  EE10  F0EE         	lfsr	1,convert_int32_to_string@Temp_String
 13166   0099A2  0E0B               	movlw	11
 13167   0099A4                     u16931:
 13168   0099A4  CFDB FFE3          	movff	plusw2,plusw1
 13169   0099A8  06E8               	decf	wreg,f,c
 13170   0099AA  E2FC               	bc	u16931
 13171   0099AC                     
 13172                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 384:     uint8 DataCounter = 0;
 13173   0099AC  0E00               	movlw	0
 13174   0099AE  0100               	movlb	0	; () banked
 13175   0099B0  6FFA               	movwf	convert_int32_to_string@DataCounter& (0+255),b
 13176   0099B2                     
 13177                           ; BSR set to: 0
 13178                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 385:     if(((void*)0) != str)
 13179   0099B2  51EC               	movf	convert_int32_to_string@str& (0+255),w,b
 13180   0099B4  11ED               	iorwf	(convert_int32_to_string@str+1)& (0+255),w,b
 13181   0099B6  B4D8               	btfsc	status,2,c
 13182   0099B8  EFE0  F04C         	goto	u16941
 13183   0099BC  EFE2  F04C         	goto	u16940
 13184   0099C0                     u16941:
 13185   0099C0  EF2B  F04D         	goto	l274
 13186   0099C4                     u16940:
 13187   0099C4                     
 13188                           ; BSR set to: 0
 13189                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 388:             memset((uint8 *)str, ' ', 11);
 13190   0099C4  C0EC  F003         	movff	convert_int32_to_string@str,memset@dest
 13191   0099C8  C0ED  F004         	movff	convert_int32_to_string@str+1,memset@dest+1
 13192   0099CC  0E00               	movlw	0
 13193   0099CE  6E06               	movwf	(memset@c+1)^0,c
 13194   0099D0  0E20               	movlw	32
 13195   0099D2  6E05               	movwf	memset@c^0,c
 13196   0099D4  0E00               	movlw	0
 13197   0099D6  6E08               	movwf	(memset@n+1)^0,c
 13198   0099D8  0E0B               	movlw	11
 13199   0099DA  6E07               	movwf	memset@n^0,c
 13200   0099DC  EC70  F042         	call	_memset	;wreg free
 13201   0099E0                     
 13202                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 389:             str[11]='\0';
 13203   0099E0  0100               	movlb	0	; () banked
 13204   0099E2  EE20 F00B          	lfsr	2,11
 13205   0099E6  51EC               	movf	convert_int32_to_string@str& (0+255),w,b
 13206   0099E8  26D9               	addwf	fsr2l,f,c
 13207   0099EA  51ED               	movf	(convert_int32_to_string@str+1)& (0+255),w,b
 13208   0099EC  22DA               	addwfc	fsr2h,f,c
 13209   0099EE  0E00               	movlw	0
 13210   0099F0  6EDF               	movwf	indf2,c
 13211   0099F2                     
 13212                           ; BSR set to: 0
 13213                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 390:             sprintf((char *)Temp_String, "%i", value)
      +                          ;
 13214   0099F2  0EEE               	movlw	low convert_int32_to_string@Temp_String
 13215   0099F4  6FD3               	movwf	sprintf@s& (0+255),b
 13216   0099F6  0E00               	movlw	high convert_int32_to_string@Temp_String
 13217   0099F8  6FD4               	movwf	(sprintf@s+1)& (0+255),b
 13218   0099FA  0EC9               	movlw	low STR_1
 13219   0099FC  6FD5               	movwf	sprintf@fmt& (0+255),b
 13220   0099FE  0E10               	movlw	high STR_1
 13221   009A00  6FD6               	movwf	(sprintf@fmt+1)& (0+255),b
 13222   009A02  C0E8  F0D7         	movff	convert_int32_to_string@value,?_sprintf+4
 13223   009A06  C0E9  F0D8         	movff	convert_int32_to_string@value+1,?_sprintf+5
 13224   009A0A  C0EA  F0D9         	movff	convert_int32_to_string@value+2,?_sprintf+6
 13225   009A0E  C0EB  F0DA         	movff	convert_int32_to_string@value+3,?_sprintf+7
 13226   009A12  ECCB  F052         	call	_sprintf	;wreg free
 13227                           
 13228                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 391:             while(Temp_String[DataCounter] != '\0')
 13229   009A16  EF1C  F04D         	goto	l13194
 13230   009A1A                     l13190:
 13231                           
 13232                           ; BSR set to: 0
 13233                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 392:             {;ECU_Layer/ECU_LCD/ECU_LCD.c: 393:      
      +                                     str[DataCounter] = Temp_String[DataCounter];
 13234   009A1A  0EEE               	movlw	low convert_int32_to_string@Temp_String
 13235   009A1C  25FA               	addwf	convert_int32_to_string@DataCounter& (0+255),w,b
 13236   009A1E  6ED9               	movwf	fsr2l,c
 13237   009A20  6ADA               	clrf	fsr2h,c
 13238   009A22  0E00               	movlw	high convert_int32_to_string@Temp_String
 13239   009A24  22DA               	addwfc	fsr2h,f,c
 13240   009A26  51FA               	movf	convert_int32_to_string@DataCounter& (0+255),w,b
 13241   009A28  25EC               	addwf	convert_int32_to_string@str& (0+255),w,b
 13242   009A2A  6EE1               	movwf	fsr1l,c
 13243   009A2C  0E00               	movlw	0
 13244   009A2E  21ED               	addwfc	(convert_int32_to_string@str+1)& (0+255),w,b
 13245   009A30  6EE2               	movwf	fsr1h,c
 13246   009A32  CFDF FFE7          	movff	indf2,indf1
 13247   009A36                     
 13248                           ; BSR set to: 0
 13249                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 394:                 DataCounter++;
 13250   009A36  2BFA               	incf	convert_int32_to_string@DataCounter& (0+255),f,b
 13251   009A38                     l13194:
 13252                           
 13253                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 391:             while(Temp_String[DataCounter] != '\0')
 13254   009A38  0EEE               	movlw	low convert_int32_to_string@Temp_String
 13255   009A3A  0100               	movlb	0	; () banked
 13256   009A3C  25FA               	addwf	convert_int32_to_string@DataCounter& (0+255),w,b
 13257   009A3E  6ED9               	movwf	fsr2l,c
 13258   009A40  6ADA               	clrf	fsr2h,c
 13259   009A42  0E00               	movlw	high convert_int32_to_string@Temp_String
 13260   009A44  22DA               	addwfc	fsr2h,f,c
 13261   009A46  50DF               	movf	indf2,w,c
 13262   009A48  A4D8               	btfss	status,2,c
 13263   009A4A  EF29  F04D         	goto	u16951
 13264   009A4E  EF2B  F04D         	goto	u16950
 13265   009A52                     u16951:
 13266   009A52  EF0D  F04D         	goto	l13190
 13267   009A56                     u16950:
 13268   009A56                     l274:
 13269                           
 13270                           ; BSR set to: 0
 13271   009A56  0012               	return		;funcret
 13272   009A58                     __end_of_convert_int32_to_string:
 13273                           	callstack 0
 13274                           
 13275 ;; *************** function _convert_float_to_string *****************
 13276 ;; Defined at:
 13277 ;;		line 410 in file "ECU_Layer/ECU_LCD/ECU_LCD.c"
 13278 ;; Parameters:    Size  Location     Type
 13279 ;;  value           4  104[BANK0 ] float 
 13280 ;;  str             2  108[BANK0 ] PTR unsigned char 
 13281 ;;		 -> Calculator_display_result@result_str(20), 
 13282 ;; Auto vars:     Size  Location     Type
 13283 ;;  Temp_String    16    0[BANK1 ] unsigned char [16]
 13284 ;;  DataCounter     1   16[BANK1 ] unsigned char 
 13285 ;;  ret             1    0        unsigned char 
 13286 ;; Return value:  Size  Location     Type
 13287 ;;                  1    wreg      unsigned char 
 13288 ;; Registers used:
 13289 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13290 ;; Tracked objects:
 13291 ;;		On entry : 0/0
 13292 ;;		On exit  : 0/0
 13293 ;;		Unchanged: 0/0
 13294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13295 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13296 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13298 ;;      Totals:         0       6      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13299 ;;Total ram usage:       23 bytes
 13300 ;; Hardware stack levels used: 1
 13301 ;; Hardware stack levels required when called: 11
 13302 ;; This function calls:
 13303 ;;		_memset
 13304 ;;		_sprintf
 13305 ;; This function is called by:
 13306 ;;		_Calculator_display_result
 13307 ;; This function uses a non-reentrant model
 13308 ;;
 13309                           
 13310                           	psect	text31
 13311   00974A                     __ptext31:
 13312                           	callstack 0
 13313   00974A                     _convert_float_to_string:
 13314                           	callstack 18
 13315   00974A                     
 13316                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 413:     uint8 Temp_String[16] = {' '};
 13317   00974A  EE22  F08D         	lfsr	2,convert_float_to_string@F3618
 13318   00974E  EE11  F000         	lfsr	1,convert_float_to_string@Temp_String
 13319   009752  0E0F               	movlw	15
 13320   009754                     u16961:
 13321   009754  CFDB FFE3          	movff	plusw2,plusw1
 13322   009758  06E8               	decf	wreg,f,c
 13323   00975A  E2FC               	bc	u16961
 13324   00975C                     
 13325                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 414:     uint8 DataCounter = 0;
 13326   00975C  0E00               	movlw	0
 13327   00975E  0101               	movlb	1	; () banked
 13328   009760  6F10               	movwf	convert_float_to_string@DataCounter& (0+255),b
 13329   009762                     
 13330                           ; BSR set to: 1
 13331                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 415:     if(((void*)0) != str)
 13332   009762  0100               	movlb	0	; () banked
 13333   009764  51EC               	movf	convert_float_to_string@str& (0+255),w,b
 13334   009766  11ED               	iorwf	(convert_float_to_string@str+1)& (0+255),w,b
 13335   009768  B4D8               	btfsc	status,2,c
 13336   00976A  EFB9  F04B         	goto	u16971
 13337   00976E  EFBB  F04B         	goto	u16970
 13338   009772                     u16971:
 13339   009772  EF08  F04C         	goto	l283
 13340   009776                     u16970:
 13341   009776                     
 13342                           ; BSR set to: 0
 13343                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 418:             memset((char *)str, ' ', 15);
 13344   009776  C0EC  F003         	movff	convert_float_to_string@str,memset@dest
 13345   00977A  C0ED  F004         	movff	convert_float_to_string@str+1,memset@dest+1
 13346   00977E  0E00               	movlw	0
 13347   009780  6E06               	movwf	(memset@c+1)^0,c
 13348   009782  0E20               	movlw	32
 13349   009784  6E05               	movwf	memset@c^0,c
 13350   009786  0E00               	movlw	0
 13351   009788  6E08               	movwf	(memset@n+1)^0,c
 13352   00978A  0E0F               	movlw	15
 13353   00978C  6E07               	movwf	memset@n^0,c
 13354   00978E  EC70  F042         	call	_memset	;wreg free
 13355   009792                     
 13356                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 419:             str[15]='\0';
 13357   009792  0100               	movlb	0	; () banked
 13358   009794  EE20 F00F          	lfsr	2,15
 13359   009798  51EC               	movf	convert_float_to_string@str& (0+255),w,b
 13360   00979A  26D9               	addwf	fsr2l,f,c
 13361   00979C  51ED               	movf	(convert_float_to_string@str+1)& (0+255),w,b
 13362   00979E  22DA               	addwfc	fsr2h,f,c
 13363   0097A0  0E00               	movlw	0
 13364   0097A2  6EDF               	movwf	indf2,c
 13365   0097A4                     
 13366                           ; BSR set to: 0
 13367                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 420:             sprintf((char *)Temp_String, "%0.3f", val
      +                          ue);
 13368   0097A4  0E00               	movlw	low convert_float_to_string@Temp_String
 13369   0097A6  6FD3               	movwf	sprintf@s& (0+255),b
 13370   0097A8  0E01               	movlw	high convert_float_to_string@Temp_String
 13371   0097AA  6FD4               	movwf	(sprintf@s+1)& (0+255),b
 13372   0097AC  0EB7               	movlw	low STR_4
 13373   0097AE  6FD5               	movwf	sprintf@fmt& (0+255),b
 13374   0097B0  0E10               	movlw	high STR_4
 13375   0097B2  6FD6               	movwf	(sprintf@fmt+1)& (0+255),b
 13376   0097B4  C0E8  F0D7         	movff	convert_float_to_string@value,?_sprintf+4
 13377   0097B8  C0E9  F0D8         	movff	convert_float_to_string@value+1,?_sprintf+5
 13378   0097BC  C0EA  F0D9         	movff	convert_float_to_string@value+2,?_sprintf+6
 13379   0097C0  C0EB  F0DA         	movff	convert_float_to_string@value+3,?_sprintf+7
 13380   0097C4  ECCB  F052         	call	_sprintf	;wreg free
 13381                           
 13382                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 421:             while(Temp_String[DataCounter] != '\0')
 13383   0097C8  EFF9  F04B         	goto	l13216
 13384   0097CC                     l13212:
 13385                           
 13386                           ; BSR set to: 1
 13387                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 422:             {;ECU_Layer/ECU_LCD/ECU_LCD.c: 423:      
      +                                     str[DataCounter] = Temp_String[DataCounter];
 13388   0097CC  0E00               	movlw	low convert_float_to_string@Temp_String
 13389   0097CE  2510               	addwf	convert_float_to_string@DataCounter& (0+255),w,b
 13390   0097D0  6ED9               	movwf	fsr2l,c
 13391   0097D2  6ADA               	clrf	fsr2h,c
 13392   0097D4  0E01               	movlw	high convert_float_to_string@Temp_String
 13393   0097D6  22DA               	addwfc	fsr2h,f,c
 13394   0097D8  5110               	movf	convert_float_to_string@DataCounter& (0+255),w,b
 13395   0097DA  0100               	movlb	0	; () banked
 13396   0097DC  25EC               	addwf	convert_float_to_string@str& (0+255),w,b
 13397   0097DE  6EE1               	movwf	fsr1l,c
 13398   0097E0  0101               	movlb	1	; () banked
 13399   0097E2  0E00               	movlw	0
 13400   0097E4  0100               	movlb	0	; () banked
 13401   0097E6  21ED               	addwfc	(convert_float_to_string@str+1)& (0+255),w,b
 13402   0097E8  6EE2               	movwf	fsr1h,c
 13403   0097EA  CFDF FFE7          	movff	indf2,indf1
 13404   0097EE                     
 13405                           ; BSR set to: 0
 13406                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 424:                 DataCounter++;
 13407   0097EE  0101               	movlb	1	; () banked
 13408   0097F0  2B10               	incf	convert_float_to_string@DataCounter& (0+255),f,b
 13409   0097F2                     l13216:
 13410                           
 13411                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 421:             while(Temp_String[DataCounter] != '\0')
 13412   0097F2  0E00               	movlw	low convert_float_to_string@Temp_String
 13413   0097F4  0101               	movlb	1	; () banked
 13414   0097F6  2510               	addwf	convert_float_to_string@DataCounter& (0+255),w,b
 13415   0097F8  6ED9               	movwf	fsr2l,c
 13416   0097FA  6ADA               	clrf	fsr2h,c
 13417   0097FC  0E01               	movlw	high convert_float_to_string@Temp_String
 13418   0097FE  22DA               	addwfc	fsr2h,f,c
 13419   009800  50DF               	movf	indf2,w,c
 13420   009802  A4D8               	btfss	status,2,c
 13421   009804  EF06  F04C         	goto	u16981
 13422   009808  EF08  F04C         	goto	u16980
 13423   00980C                     u16981:
 13424   00980C  EFE6  F04B         	goto	l13212
 13425   009810                     u16980:
 13426   009810                     l283:
 13427   009810  0012               	return		;funcret
 13428   009812                     __end_of_convert_float_to_string:
 13429                           	callstack 0
 13430                           
 13431 ;; *************** function _sprintf *****************
 13432 ;; Defined at:
 13433 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
 13434 ;; Parameters:    Size  Location     Type
 13435 ;;  s               2   83[BANK0 ] PTR unsigned char 
 13436 ;;		 -> convert_float_to_string@Temp_String(16), convert_int32_to_string@Temp_String(12), convert_uint16_to_string@Temp_
      +String(6), convert_uint8_to_string@Temp_String(5), 
 13437 ;;  fmt             2   85[BANK0 ] PTR const unsigned char 
 13438 ;;		 -> STR_4(6), STR_3(3), STR_2(3), STR_1(3), 
 13439 ;; Auto vars:     Size  Location     Type
 13440 ;;  f              11   93[BANK0 ] struct _IO_FILE
 13441 ;;  ap              2   91[BANK0 ] PTR void [1]
 13442 ;;		 -> ?_sprintf(2), 
 13443 ;;  ret             2    0        int 
 13444 ;; Return value:  Size  Location     Type
 13445 ;;                  2   83[BANK0 ] int 
 13446 ;; Registers used:
 13447 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13448 ;; Tracked objects:
 13449 ;;		On entry : 0/0
 13450 ;;		On exit  : 0/0
 13451 ;;		Unchanged: 0/0
 13452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13453 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13454 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13456 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13457 ;;Total ram usage:       21 bytes
 13458 ;; Hardware stack levels used: 1
 13459 ;; Hardware stack levels required when called: 10
 13460 ;; This function calls:
 13461 ;;		_vfprintf
 13462 ;; This function is called by:
 13463 ;;		_convert_int32_to_string
 13464 ;;		_convert_float_to_string
 13465 ;;		_convert_uint8_to_string
 13466 ;;		_convert_uint16_to_string
 13467 ;; This function uses a non-reentrant model
 13468 ;;
 13469                           
 13470                           	psect	text32
 13471   00A596                     __ptext32:
 13472                           	callstack 0
 13473   00A596                     _sprintf:
 13474                           	callstack 18
 13475   00A596  0ED7               	movlw	low (?_sprintf+4)
 13476   00A598  0100               	movlb	0	; () banked
 13477   00A59A  6FDB               	movwf	sprintf@ap& (0+255),b
 13478   00A59C  0E00               	movlw	high (?_sprintf+4)
 13479   00A59E  6FDC               	movwf	(sprintf@ap+1)& (0+255),b
 13480   00A5A0  C0D3  F0DD         	movff	sprintf@s,sprintf@f
 13481   00A5A4  C0D4  F0DE         	movff	sprintf@s+1,sprintf@f+1
 13482   00A5A8                     
 13483                           ; BSR set to: 0
 13484   00A5A8  0E00               	movlw	0
 13485   00A5AA  6FE1               	movwf	(sprintf@f+4)& (0+255),b
 13486   00A5AC  0E00               	movlw	0
 13487   00A5AE  6FE0               	movwf	(sprintf@f+3)& (0+255),b
 13488   00A5B0                     
 13489                           ; BSR set to: 0
 13490   00A5B0  0E00               	movlw	0
 13491   00A5B2  6FE7               	movwf	(sprintf@f+10)& (0+255),b
 13492   00A5B4  0E00               	movlw	0
 13493   00A5B6  6FE6               	movwf	(sprintf@f+9)& (0+255),b
 13494   00A5B8                     
 13495                           ; BSR set to: 0
 13496   00A5B8  0EDD               	movlw	low sprintf@f
 13497   00A5BA  6FCB               	movwf	vfprintf@fp& (0+255),b
 13498   00A5BC  0E00               	movlw	high sprintf@f
 13499   00A5BE  6FCC               	movwf	(vfprintf@fp+1)& (0+255),b
 13500   00A5C0  C0D5  F0CD         	movff	sprintf@fmt,vfprintf@fmt
 13501   00A5C4  C0D6  F0CE         	movff	sprintf@fmt+1,vfprintf@fmt+1
 13502   00A5C8  0EDB               	movlw	low sprintf@ap
 13503   00A5CA  6FCF               	movwf	vfprintf@ap& (0+255),b
 13504   00A5CC  0E00               	movlw	high sprintf@ap
 13505   00A5CE  6FD0               	movwf	(vfprintf@ap+1)& (0+255),b
 13506   00A5D0  ECA1  F052         	call	_vfprintf	;wreg free
 13507   00A5D4  0100               	movlb	0	; () banked
 13508   00A5D6  51E0               	movf	(sprintf@f+3)& (0+255),w,b
 13509   00A5D8  25D3               	addwf	sprintf@s& (0+255),w,b
 13510   00A5DA  6ED9               	movwf	fsr2l,c
 13511   00A5DC  51E1               	movf	(sprintf@f+4)& (0+255),w,b
 13512   00A5DE  21D4               	addwfc	(sprintf@s+1)& (0+255),w,b
 13513   00A5E0  6EDA               	movwf	fsr2h,c
 13514   00A5E2  0E00               	movlw	0
 13515   00A5E4  6EDF               	movwf	indf2,c
 13516   00A5E6                     
 13517                           ; BSR set to: 0
 13518   00A5E6  0012               	return		;funcret
 13519   00A5E8                     __end_of_sprintf:
 13520                           	callstack 0
 13521                           
 13522 ;; *************** function _vfprintf *****************
 13523 ;; Defined at:
 13524 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
 13525 ;; Parameters:    Size  Location     Type
 13526 ;;  fp              2   75[BANK0 ] PTR struct _IO_FILE
 13527 ;;		 -> sprintf@f(11), 
 13528 ;;  fmt             2   77[BANK0 ] PTR const unsigned char 
 13529 ;;		 -> STR_4(6), STR_3(3), STR_2(3), STR_1(3), 
 13530 ;;  ap              2   79[BANK0 ] PTR PTR void 
 13531 ;;		 -> sprintf@ap(2), 
 13532 ;; Auto vars:     Size  Location     Type
 13533 ;;  cfmt            2   81[BANK0 ] PTR unsigned char 
 13534 ;;		 -> STR_4(6), STR_3(3), STR_2(3), STR_1(3), 
 13535 ;; Return value:  Size  Location     Type
 13536 ;;                  2   75[BANK0 ] int 
 13537 ;; Registers used:
 13538 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13539 ;; Tracked objects:
 13540 ;;		On entry : 0/0
 13541 ;;		On exit  : 0/0
 13542 ;;		Unchanged: 0/0
 13543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13544 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13545 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13547 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13548 ;;Total ram usage:        8 bytes
 13549 ;; Hardware stack levels used: 1
 13550 ;; Hardware stack levels required when called: 9
 13551 ;; This function calls:
 13552 ;;		_vfpfcnvrt
 13553 ;; This function is called by:
 13554 ;;		_sprintf
 13555 ;; This function uses a non-reentrant model
 13556 ;;
 13557                           
 13558                           	psect	text33
 13559   00A542                     __ptext33:
 13560                           	callstack 0
 13561   00A542                     _vfprintf:
 13562                           	callstack 18
 13563   00A542                     
 13564                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
 13565   00A542  C0CD  F0D1         	movff	vfprintf@fmt,vfprintf@cfmt
 13566   00A546  C0CE  F0D2         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 13567                           
 13568                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
 13569   00A54A  EFB6  F052         	goto	l12060
 13570   00A54E                     l12058:
 13571                           
 13572                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
 13573   00A54E  C0CB  F0B5         	movff	vfprintf@fp,vfpfcnvrt@fp
 13574   00A552  C0CC  F0B6         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 13575   00A556  0ED1               	movlw	low vfprintf@cfmt
 13576   00A558  0100               	movlb	0	; () banked
 13577   00A55A  6FB7               	movwf	vfpfcnvrt@fmt& (0+255),b
 13578   00A55C  0E00               	movlw	high vfprintf@cfmt
 13579   00A55E  6FB8               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
 13580   00A560  C0CF  F0B9         	movff	vfprintf@ap,vfpfcnvrt@ap
 13581   00A564  C0D0  F0BA         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 13582   00A568  ECBB  F02F         	call	_vfpfcnvrt	;wreg free
 13583   00A56C                     l12060:
 13584                           
 13585                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
 13586   00A56C  C0D1  FFF6         	movff	vfprintf@cfmt,tblptrl
 13587   00A570  C0D2  FFF7         	movff	vfprintf@cfmt+1,tblptrh
 13588   00A574                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13589   00A574  6AF8               	clrf	tblptru,c
 13590   00A576                     	endif
 13591   00A576                     	if	0	;tblptru may be non-zero
 13592   00A576                     	endif
 13593   00A576  0008               	tblrd		*
 13594   00A578  50F5               	movf	tablat,w,c
 13595   00A57A  0900               	iorlw	0
 13596   00A57C  A4D8               	btfss	status,2,c
 13597   00A57E  EFC3  F052         	goto	u15141
 13598   00A582  EFC5  F052         	goto	u15140
 13599   00A586                     u15141:
 13600   00A586  EFA7  F052         	goto	l12058
 13601   00A58A                     u15140:
 13602   00A58A                     
 13603                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
 13604   00A58A  0E00               	movlw	0
 13605   00A58C  0100               	movlb	0	; () banked
 13606   00A58E  6FCC               	movwf	(?_vfprintf+1)& (0+255),b
 13607   00A590  0E00               	movlw	0
 13608   00A592  6FCB               	movwf	?_vfprintf& (0+255),b
 13609   00A594                     
 13610                           ; BSR set to: 0
 13611   00A594  0012               	return		;funcret
 13612   00A596                     __end_of_vfprintf:
 13613                           	callstack 0
 13614                           
 13615 ;; *************** function _vfpfcnvrt *****************
 13616 ;; Defined at:
 13617 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
 13618 ;; Parameters:    Size  Location     Type
 13619 ;;  fp              2   53[BANK0 ] PTR struct _IO_FILE
 13620 ;;		 -> sprintf@f(11), 
 13621 ;;  fmt             2   55[BANK0 ] PTR PTR unsigned char 
 13622 ;;		 -> vfprintf@cfmt(2), 
 13623 ;;  ap              2   57[BANK0 ] PTR PTR void 
 13624 ;;		 -> sprintf@ap(2), 
 13625 ;; Auto vars:     Size  Location     Type
 13626 ;;  convarg         8   64[BANK0 ] struct .
 13627 ;;  cp              2   73[BANK0 ] PTR unsigned char 
 13628 ;;		 -> STR_4(6), STR_3(3), STR_2(3), STR_1(3), 
 13629 ;;  done            2   62[BANK0 ] int 
 13630 ;;  i               2    0        int 
 13631 ;;  c               1   72[BANK0 ] unsigned char 
 13632 ;; Return value:  Size  Location     Type
 13633 ;;                  1    wreg      void 
 13634 ;; Registers used:
 13635 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13636 ;; Tracked objects:
 13637 ;;		On entry : 0/0
 13638 ;;		On exit  : 0/0
 13639 ;;		Unchanged: 0/0
 13640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13641 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13642 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13643 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13644 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13645 ;;Total ram usage:       22 bytes
 13646 ;; Hardware stack levels used: 1
 13647 ;; Hardware stack levels required when called: 8
 13648 ;; This function calls:
 13649 ;;		_atoi
 13650 ;;		_dtoa
 13651 ;;		_efgtoa
 13652 ;;		_fputc
 13653 ;;		_isdigit
 13654 ;; This function is called by:
 13655 ;;		_vfprintf
 13656 ;; This function uses a non-reentrant model
 13657 ;;
 13658                           
 13659                           	psect	text34
 13660   005F76                     __ptext34:
 13661                           	callstack 0
 13662   005F76                     _vfpfcnvrt:
 13663                           	callstack 18
 13664   005F76                     
 13665                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
 13666   005F76  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13667   005F7A  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13668   005F7E  CFDE FFF6          	movff	postinc2,tblptrl
 13669   005F82  CFDD FFF7          	movff	postdec2,tblptrh
 13670   005F86                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13671   005F86  6AF8               	clrf	tblptru,c
 13672   005F88                     	endif
 13673   005F88                     	if	0	;tblptru may be non-zero
 13674   005F88                     	endif
 13675   005F88  0008               	tblrd		*
 13676   005F8A  50F5               	movf	tablat,w,c
 13677   005F8C  0A25               	xorlw	37
 13678   005F8E  A4D8               	btfss	status,2,c
 13679   005F90  EFCC  F02F         	goto	u15041
 13680   005F94  EFCE  F02F         	goto	u15040
 13681   005F98                     u15041:
 13682   005F98  EFDE  F031         	goto	l12016
 13683   005F9C                     u15040:
 13684   005F9C                     
 13685                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
 13686   005F9C  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13687   005FA0  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13688   005FA4  2ADE               	incf	postinc2,f,c
 13689   005FA6  0E00               	movlw	0
 13690   005FA8  22DD               	addwfc	postdec2,f,c
 13691   005FAA                     
 13692                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
 13693   005FAA  0E00               	movlw	0
 13694   005FAC  0102               	movlb	2	; () banked
 13695   005FAE  6F1E               	movwf	(_width+1)& (0+255),b
 13696   005FB0  0E00               	movlw	0
 13697   005FB2  6F1D               	movwf	_width& (0+255),b
 13698   005FB4  C21D  F0FB         	movff	_width,_flags
 13699   005FB8                     
 13700                           ; BSR set to: 2
 13701                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
 13702   005FB8  687B               	setf	_prec^0,c
 13703   005FBA  687C               	setf	(_prec+1)^0,c
 13704   005FBC                     
 13705                           ; BSR set to: 2
 13706                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1027:         don
      +                          e = 0;
 13707   005FBC  0E00               	movlw	0
 13708   005FBE  0100               	movlb	0	; () banked
 13709   005FC0  6FBF               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 13710   005FC2  0E00               	movlw	0
 13711   005FC4  6FBE               	movwf	vfpfcnvrt@done& (0+255),b
 13712                           
 13713                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
 13714   005FC6  EF10  F030         	goto	l11946
 13715   005FCA                     l11936:
 13716                           
 13717                           ; BSR set to: 0
 13718                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1038:            
      +                                   flags |= (1 << 1);
 13719   005FCA  83FB               	bsf	_flags& (0+255),1,b
 13720   005FCC                     
 13721                           ; BSR set to: 0
 13722                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1039:            
      +                                   ++*fmt;
 13723   005FCC  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13724   005FD0  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13725   005FD4  2ADE               	incf	postinc2,f,c
 13726   005FD6  0E00               	movlw	0
 13727   005FD8  22DD               	addwfc	postdec2,f,c
 13728                           
 13729                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1040:            
      +                                   break;
 13730   005FDA  EF10  F030         	goto	l11946
 13731   005FDE                     l11940:
 13732                           
 13733                           ; BSR set to: 0
 13734                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1061:            
      +                                   done = 1;
 13735   005FDE  0E00               	movlw	0
 13736   005FE0  6FBF               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 13737   005FE2  0E01               	movlw	1
 13738   005FE4  6FBE               	movwf	vfpfcnvrt@done& (0+255),b
 13739                           
 13740                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1062:            
      +                                   break;
 13741   005FE6  EF10  F030         	goto	l11946
 13742   005FEA                     l11944:
 13743                           
 13744                           ; BSR set to: 0
 13745   005FEA  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13746   005FEE  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13747   005FF2  CFDE FFF6          	movff	postinc2,tblptrl
 13748   005FF6  CFDD FFF7          	movff	postdec2,tblptrh
 13749   005FFA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13750   005FFA  6AF8               	clrf	tblptru,c
 13751   005FFC                     	endif
 13752   005FFC                     	if	0	;tblptru may be non-zero
 13753   005FFC                     	endif
 13754   005FFC  0008               	tblrd		*
 13755   005FFE  50F5               	movf	tablat,w,c
 13756   006000  6FBB               	movwf	??_vfpfcnvrt& (0+255),b
 13757   006002  6BBC               	clrf	(??_vfpfcnvrt+1)& (0+255),b
 13758                           
 13759                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13760                           ; Switch size 1, requested type "simple"
 13761                           ; Number of cases is 1, Range of values is 0 to 0
 13762                           ; switch strategies available:
 13763                           ; Name         Instructions Cycles
 13764                           ; simple_byte            4     3 (average)
 13765                           ;	Chosen strategy is simple_byte
 13766   006004  51BC               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
 13767   006006  0A00               	xorlw	0	; case 0
 13768   006008  B4D8               	btfsc	status,2,c
 13769   00600A  EF09  F030         	goto	l13844
 13770   00600E  EFEF  F02F         	goto	l11940
 13771   006012                     l13844:
 13772                           
 13773                           ; BSR set to: 0
 13774                           ; Switch size 1, requested type "simple"
 13775                           ; Number of cases is 1, Range of values is 48 to 48
 13776                           ; switch strategies available:
 13777                           ; Name         Instructions Cycles
 13778                           ; simple_byte            4     3 (average)
 13779                           ;	Chosen strategy is simple_byte
 13780   006012  51BB               	movf	??_vfpfcnvrt& (0+255),w,b
 13781   006014  0A30               	xorlw	48	; case 48
 13782   006016  B4D8               	btfsc	status,2,c
 13783   006018  EFE5  F02F         	goto	l11936
 13784   00601C  EFEF  F02F         	goto	l11940
 13785   006020                     l11946:
 13786                           
 13787                           ; BSR set to: 0
 13788                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
 13789   006020  51BE               	movf	vfpfcnvrt@done& (0+255),w,b
 13790   006022  11BF               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
 13791   006024  B4D8               	btfsc	status,2,c
 13792   006026  EF17  F030         	goto	u15051
 13793   00602A  EF19  F030         	goto	u15050
 13794   00602E                     u15051:
 13795   00602E  EFF5  F02F         	goto	l11944
 13796   006032                     u15050:
 13797   006032                     
 13798                           ; BSR set to: 0
 13799                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1091:         if 
      +                          ((*fmt)[0] == '.') {
 13800   006032  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13801   006036  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13802   00603A  CFDE FFF6          	movff	postinc2,tblptrl
 13803   00603E  CFDD FFF7          	movff	postdec2,tblptrh
 13804   006042                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13805   006042  6AF8               	clrf	tblptru,c
 13806   006044                     	endif
 13807   006044                     	if	0	;tblptru may be non-zero
 13808   006044                     	endif
 13809   006044  0008               	tblrd		*
 13810   006046  50F5               	movf	tablat,w,c
 13811   006048  0A2E               	xorlw	46
 13812   00604A  A4D8               	btfss	status,2,c
 13813   00604C  EF2A  F030         	goto	u15061
 13814   006050  EF2C  F030         	goto	u15060
 13815   006054                     u15061:
 13816   006054  EF9C  F030         	goto	l11966
 13817   006058                     u15060:
 13818   006058                     
 13819                           ; BSR set to: 0
 13820                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1092:            
      +                           prec = 0;
 13821   006058  0E00               	movlw	0
 13822   00605A  6E7C               	movwf	(_prec+1)^0,c
 13823   00605C  0E00               	movlw	0
 13824   00605E  6E7B               	movwf	_prec^0,c
 13825   006060                     
 13826                           ; BSR set to: 0
 13827                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1093:            
      +                           ++*fmt;
 13828   006060  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13829   006064  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13830   006068  2ADE               	incf	postinc2,f,c
 13831   00606A  0E00               	movlw	0
 13832   00606C  22DD               	addwfc	postdec2,f,c
 13833   00606E                     
 13834                           ; BSR set to: 0
 13835                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1094:            
      +                           if ((*fmt)[0] == '*') {
 13836   00606E  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13837   006072  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13838   006076  CFDE FFF6          	movff	postinc2,tblptrl
 13839   00607A  CFDD FFF7          	movff	postdec2,tblptrh
 13840   00607E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13841   00607E  6AF8               	clrf	tblptru,c
 13842   006080                     	endif
 13843   006080                     	if	0	;tblptru may be non-zero
 13844   006080                     	endif
 13845   006080  0008               	tblrd		*
 13846   006082  50F5               	movf	tablat,w,c
 13847   006084  0A2A               	xorlw	42
 13848   006086  A4D8               	btfss	status,2,c
 13849   006088  EF48  F030         	goto	u15071
 13850   00608C  EF4A  F030         	goto	u15070
 13851   006090                     u15071:
 13852   006090  EF67  F030         	goto	l11958
 13853   006094                     u15070:
 13854   006094                     
 13855                           ; BSR set to: 0
 13856                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1095:            
      +                               ++*fmt;
 13857   006094  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13858   006098  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13859   00609C  2ADE               	incf	postinc2,f,c
 13860   00609E  0E00               	movlw	0
 13861   0060A0  22DD               	addwfc	postdec2,f,c
 13862                           
 13863                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1096:            
      +                               prec = (*(int *)__va_arg(*(int **)ap, (int)0));
 13864   0060A2  C0B9  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 13865   0060A6  C0BA  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 13866   0060AA  CFDF F0BB          	movff	indf2,??_vfpfcnvrt
 13867   0060AE  0E02               	movlw	2
 13868   0060B0  26DE               	addwf	postinc2,f,c
 13869   0060B2  CFDF F0BC          	movff	indf2,??_vfpfcnvrt+1
 13870   0060B6  0E00               	movlw	0
 13871   0060B8  22DD               	addwfc	postdec2,f,c
 13872   0060BA  C0BB  FFD9         	movff	??_vfpfcnvrt,fsr2l
 13873   0060BE  C0BC  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 13874   0060C2  CFDE F07B          	movff	postinc2,_prec
 13875   0060C6  CFDD F07C          	movff	postdec2,_prec+1
 13876                           
 13877                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1097:            
      +                           } else {
 13878   0060CA  EF9C  F030         	goto	l11966
 13879   0060CE                     l11958:
 13880                           
 13881                           ; BSR set to: 0
 13882                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1098:            
      +                               prec = atoi(*fmt);
 13883   0060CE  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13884   0060D2  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13885   0060D6  CFDE F009          	movff	postinc2,atoi@s
 13886   0060DA  CFDD F00A          	movff	postdec2,atoi@s+1
 13887   0060DE  EC23  F03F         	call	_atoi	;wreg free
 13888   0060E2  C009  F07B         	movff	?_atoi,_prec
 13889   0060E6  C00A  F07C         	movff	?_atoi+1,_prec+1
 13890                           
 13891                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1099:            
      +                               while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
 13892   0060EA  EF7E  F030         	goto	l11964
 13893   0060EE                     l11960:
 13894                           
 13895                           ; BSR set to: 0
 13896                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1100:            
      +                                   ++*fmt;
 13897   0060EE  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13898   0060F2  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13899   0060F6  2ADE               	incf	postinc2,f,c
 13900   0060F8  0E00               	movlw	0
 13901   0060FA  22DD               	addwfc	postdec2,f,c
 13902   0060FC                     l11964:
 13903   0060FC  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13904   006100  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13905   006104  CFDE FFF6          	movff	postinc2,tblptrl
 13906   006108  CFDD FFF7          	movff	postdec2,tblptrh
 13907   00610C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13908   00610C  6AF8               	clrf	tblptru,c
 13909   00610E                     	endif
 13910   00610E                     	if	0	;tblptru may be non-zero
 13911   00610E                     	endif
 13912   00610E  0008               	tblrd		*
 13913   006110  CFF5 F0BB          	movff	tablat,??_vfpfcnvrt
 13914   006114  0ED0               	movlw	208
 13915   006116  0100               	movlb	0	; () banked
 13916   006118  25BB               	addwf	??_vfpfcnvrt& (0+255),w,b
 13917   00611A  6FBC               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 13918   00611C  6BBD               	clrf	(??_vfpfcnvrt+2)& (0+255),b
 13919   00611E  0EFF               	movlw	255
 13920   006120  23BD               	addwfc	(??_vfpfcnvrt+2)& (0+255),f,b
 13921   006122  51BD               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
 13922   006124  E109               	bnz	u15080
 13923   006126  0E0A               	movlw	10
 13924   006128  5DBC               	subwf	(??_vfpfcnvrt+1)& (0+255),w,b
 13925   00612A  A0D8               	btfss	status,0,c
 13926   00612C  EF9A  F030         	goto	u15081
 13927   006130  EF9C  F030         	goto	u15080
 13928   006134                     u15081:
 13929   006134  EF77  F030         	goto	l11960
 13930   006138                     u15080:
 13931   006138                     l11966:
 13932                           
 13933                           ; BSR set to: 0
 13934                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
 13935   006138  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 13936   00613C  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 13937   006140  CFDE F0C9          	movff	postinc2,vfpfcnvrt@cp
 13938   006144  CFDD F0CA          	movff	postdec2,vfpfcnvrt@cp+1
 13939   006148                     
 13940                           ; BSR set to: 0
 13941                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
 13942   006148  C0C9  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 13943   00614C  C0CA  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 13944   006150                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13945   006150  6AF8               	clrf	tblptru,c
 13946   006152                     	endif
 13947   006152                     	if	0	;tblptru may be non-zero
 13948   006152                     	endif
 13949   006152  0008               	tblrd		*
 13950   006154  50F5               	movf	tablat,w,c
 13951   006156  0A64               	xorlw	100
 13952   006158  B4D8               	btfsc	status,2,c
 13953   00615A  EFB1  F030         	goto	u15091
 13954   00615E  EFB3  F030         	goto	u15090
 13955   006162                     u15091:
 13956   006162  EFC2  F030         	goto	l11972
 13957   006166                     u15090:
 13958   006166                     
 13959                           ; BSR set to: 0
 13960   006166  C0C9  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 13961   00616A  C0CA  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 13962   00616E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13963   00616E  6AF8               	clrf	tblptru,c
 13964   006170                     	endif
 13965   006170                     	if	0	;tblptru may be non-zero
 13966   006170                     	endif
 13967   006170  0008               	tblrd		*
 13968   006172  50F5               	movf	tablat,w,c
 13969   006174  0A69               	xorlw	105
 13970   006176  A4D8               	btfss	status,2,c
 13971   006178  EFC0  F030         	goto	u15101
 13972   00617C  EFC2  F030         	goto	u15100
 13973   006180                     u15101:
 13974   006180  EF05  F031         	goto	l11978
 13975   006184                     u15100:
 13976   006184                     l11972:
 13977                           
 13978                           ; BSR set to: 0
 13979                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
 13980   006184  C0B9  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 13981   006188  C0BA  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 13982   00618C  CFDF F0BB          	movff	indf2,??_vfpfcnvrt
 13983   006190  0E02               	movlw	2
 13984   006192  26DE               	addwf	postinc2,f,c
 13985   006194  CFDF F0BC          	movff	indf2,??_vfpfcnvrt+1
 13986   006198  0E00               	movlw	0
 13987   00619A  22DD               	addwfc	postdec2,f,c
 13988   00619C  C0BB  FFD9         	movff	??_vfpfcnvrt,fsr2l
 13989   0061A0  C0BC  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 13990   0061A4  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
 13991   0061A8  CFDD F0C1          	movff	postdec2,vfpfcnvrt@convarg+1
 13992   0061AC  0E00               	movlw	0
 13993   0061AE  BFC1               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
 13994   0061B0  0EFF               	movlw	-1
 13995   0061B2  6FC2               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
 13996   0061B4  6FC3               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
 13997   0061B6  6FC4               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
 13998   0061B8  6FC5               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
 13999   0061BA  6FC6               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
 14000   0061BC  6FC7               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
 14001                           
 14002                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
 14003   0061BE  0E01               	movlw	1
 14004   0061C0  25C9               	addwf	vfpfcnvrt@cp& (0+255),w,b
 14005   0061C2  6FBB               	movwf	??_vfpfcnvrt& (0+255),b
 14006   0061C4  0E00               	movlw	0
 14007   0061C6  21CA               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
 14008   0061C8  6FBC               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 14009   0061CA  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14010   0061CE  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14011   0061D2  C0BB  FFDE         	movff	??_vfpfcnvrt,postinc2
 14012   0061D6  C0BC  FFDD         	movff	??_vfpfcnvrt+1,postdec2
 14013   0061DA                     
 14014                           ; BSR set to: 0
 14015                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
 14016   0061DA  C0B5  F01E         	movff	vfpfcnvrt@fp,dtoa@fp
 14017   0061DE  C0B6  F01F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 14018   0061E2  C0C0  F020         	movff	vfpfcnvrt@convarg,dtoa@d
 14019   0061E6  C0C1  F021         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
 14020   0061EA  C0C2  F022         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
 14021   0061EE  C0C3  F023         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
 14022   0061F2  C0C4  F024         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
 14023   0061F6  C0C5  F025         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
 14024   0061FA  C0C6  F026         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
 14025   0061FE  C0C7  F027         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
 14026   006202  EC4D  F039         	call	_dtoa	;wreg free
 14027   006206  EFF3  F031         	goto	l1748
 14028   00620A                     l11978:
 14029                           
 14030                           ; BSR set to: 0
 14031                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
 14032   00620A  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14033   00620E  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14034   006212  CFDE F0C9          	movff	postinc2,vfpfcnvrt@cp
 14035   006216  CFDD F0CA          	movff	postdec2,vfpfcnvrt@cp+1
 14036   00621A                     
 14037                           ; BSR set to: 0
 14038                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
 14039   00621A  C0C9  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 14040   00621E  C0CA  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 14041   006222                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14042   006222  6AF8               	clrf	tblptru,c
 14043   006224                     	endif
 14044   006224                     	if	0	;tblptru may be non-zero
 14045   006224                     	endif
 14046   006224  0008               	tblrd		*
 14047   006226  CFF5 F0C8          	movff	tablat,vfpfcnvrt@c
 14048                           
 14049                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
 14050   00622A  EF23  F031         	goto	l11990
 14051   00622E                     l11982:
 14052                           
 14053                           ; BSR set to: 0
 14054                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
 14055   00622E  4BC9               	infsnz	vfpfcnvrt@cp& (0+255),f,b
 14056   006230  2BCA               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
 14057                           
 14058                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
 14059   006232  EF3C  F031         	goto	l11992
 14060   006236                     l11984:
 14061                           
 14062                           ; BSR set to: 0
 14063                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
 14064   006236  0E6C               	movlw	108
 14065   006238  6FC8               	movwf	vfpfcnvrt@c& (0+255),b
 14066                           
 14067                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
 14068   00623A  EF3C  F031         	goto	l11992
 14069   00623E                     l11986:
 14070                           
 14071                           ; BSR set to: 0
 14072                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
 14073   00623E  0E00               	movlw	0
 14074   006240  6FC8               	movwf	vfpfcnvrt@c& (0+255),b
 14075                           
 14076                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
 14077   006242  EF3C  F031         	goto	l11992
 14078   006246                     l11990:
 14079                           
 14080                           ; BSR set to: 0
 14081   006246  51C8               	movf	vfpfcnvrt@c& (0+255),w,b
 14082   006248  6FBB               	movwf	??_vfpfcnvrt& (0+255),b
 14083   00624A  6BBC               	clrf	(??_vfpfcnvrt+1)& (0+255),b
 14084                           
 14085                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14086                           ; Switch size 1, requested type "simple"
 14087                           ; Number of cases is 1, Range of values is 0 to 0
 14088                           ; switch strategies available:
 14089                           ; Name         Instructions Cycles
 14090                           ; simple_byte            4     3 (average)
 14091                           ;	Chosen strategy is simple_byte
 14092   00624C  51BC               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
 14093   00624E  0A00               	xorlw	0	; case 0
 14094   006250  B4D8               	btfsc	status,2,c
 14095   006252  EF2D  F031         	goto	l13846
 14096   006256  EF1F  F031         	goto	l11986
 14097   00625A                     l13846:
 14098                           
 14099                           ; BSR set to: 0
 14100                           ; Switch size 1, requested type "simple"
 14101                           ; Number of cases is 3, Range of values is 76 to 108
 14102                           ; switch strategies available:
 14103                           ; Name         Instructions Cycles
 14104                           ; simple_byte           10     6 (average)
 14105                           ;	Chosen strategy is simple_byte
 14106   00625A  51BB               	movf	??_vfpfcnvrt& (0+255),w,b
 14107   00625C  0A4C               	xorlw	76	; case 76
 14108   00625E  B4D8               	btfsc	status,2,c
 14109   006260  EF17  F031         	goto	l11982
 14110   006264  0A2A               	xorlw	42	; case 102
 14111   006266  B4D8               	btfsc	status,2,c
 14112   006268  EF1B  F031         	goto	l11984
 14113   00626C  0A0A               	xorlw	10	; case 108
 14114   00626E  B4D8               	btfsc	status,2,c
 14115   006270  EF17  F031         	goto	l11982
 14116   006274  EF1F  F031         	goto	l11986
 14117   006278                     l11992:
 14118                           
 14119                           ; BSR set to: 0
 14120   006278  C0C9  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 14121   00627C  C0CA  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 14122   006280                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14123   006280  6AF8               	clrf	tblptru,c
 14124   006282                     	endif
 14125   006282                     	if	0	;tblptru may be non-zero
 14126   006282                     	endif
 14127   006282  0008               	tblrd		*
 14128   006284  50F5               	movf	tablat,w,c
 14129   006286  0A66               	xorlw	102
 14130   006288  A4D8               	btfss	status,2,c
 14131   00628A  EF49  F031         	goto	u15111
 14132   00628E  EF4B  F031         	goto	u15110
 14133   006292                     u15111:
 14134   006292  EFD5  F031         	goto	l12012
 14135   006296                     u15110:
 14136   006296  EF81  F031         	goto	l12000
 14137   00629A                     l11994:
 14138                           
 14139                           ; BSR set to: 0
 14140                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
 14141   00629A  C0B9  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 14142   00629E  C0BA  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 14143   0062A2  CFDF F0BB          	movff	indf2,??_vfpfcnvrt
 14144   0062A6  0E04               	movlw	4
 14145   0062A8  26DE               	addwf	postinc2,f,c
 14146   0062AA  CFDF F0BC          	movff	indf2,??_vfpfcnvrt+1
 14147   0062AE  0E00               	movlw	0
 14148   0062B0  22DD               	addwfc	postdec2,f,c
 14149   0062B2  C0BB  FFD9         	movff	??_vfpfcnvrt,fsr2l
 14150   0062B6  C0BC  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 14151   0062BA  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
 14152   0062BE  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
 14153   0062C2  CFDE F0C2          	movff	postinc2,vfpfcnvrt@convarg+2
 14154   0062C6  CFDE F0C3          	movff	postinc2,vfpfcnvrt@convarg+3
 14155                           
 14156                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
 14157   0062CA  EF96  F031         	goto	l12002
 14158   0062CE                     l11996:
 14159                           
 14160                           ; BSR set to: 0
 14161                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
 14162   0062CE  C0B9  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 14163   0062D2  C0BA  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 14164   0062D6  CFDF F0BB          	movff	indf2,??_vfpfcnvrt
 14165   0062DA  0E04               	movlw	4
 14166   0062DC  26DE               	addwf	postinc2,f,c
 14167   0062DE  CFDF F0BC          	movff	indf2,??_vfpfcnvrt+1
 14168   0062E2  0E00               	movlw	0
 14169   0062E4  22DD               	addwfc	postdec2,f,c
 14170   0062E6  C0BB  FFD9         	movff	??_vfpfcnvrt,fsr2l
 14171   0062EA  C0BC  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 14172   0062EE  CFDE F0C0          	movff	postinc2,vfpfcnvrt@convarg
 14173   0062F2  CFDE F0C1          	movff	postinc2,vfpfcnvrt@convarg+1
 14174   0062F6  CFDE F0C2          	movff	postinc2,vfpfcnvrt@convarg+2
 14175   0062FA  CFDE F0C3          	movff	postinc2,vfpfcnvrt@convarg+3
 14176                           
 14177                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
 14178   0062FE  EF96  F031         	goto	l12002
 14179   006302                     l12000:
 14180                           
 14181                           ; BSR set to: 0
 14182   006302  51C8               	movf	vfpfcnvrt@c& (0+255),w,b
 14183   006304  6FBB               	movwf	??_vfpfcnvrt& (0+255),b
 14184   006306  6BBC               	clrf	(??_vfpfcnvrt+1)& (0+255),b
 14185                           
 14186                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14187                           ; Switch size 1, requested type "simple"
 14188                           ; Number of cases is 1, Range of values is 0 to 0
 14189                           ; switch strategies available:
 14190                           ; Name         Instructions Cycles
 14191                           ; simple_byte            4     3 (average)
 14192                           ;	Chosen strategy is simple_byte
 14193   006308  51BC               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
 14194   00630A  0A00               	xorlw	0	; case 0
 14195   00630C  B4D8               	btfsc	status,2,c
 14196   00630E  EF8B  F031         	goto	l13848
 14197   006312  EF96  F031         	goto	l12002
 14198   006316                     l13848:
 14199                           
 14200                           ; BSR set to: 0
 14201                           ; Switch size 1, requested type "simple"
 14202                           ; Number of cases is 2, Range of values is 76 to 108
 14203                           ; switch strategies available:
 14204                           ; Name         Instructions Cycles
 14205                           ; simple_byte            7     4 (average)
 14206                           ;	Chosen strategy is simple_byte
 14207   006316  51BB               	movf	??_vfpfcnvrt& (0+255),w,b
 14208   006318  0A4C               	xorlw	76	; case 76
 14209   00631A  B4D8               	btfsc	status,2,c
 14210   00631C  EF67  F031         	goto	l11996
 14211   006320  0A20               	xorlw	32	; case 108
 14212   006322  B4D8               	btfsc	status,2,c
 14213   006324  EF4D  F031         	goto	l11994
 14214   006328  EF96  F031         	goto	l12002
 14215   00632C                     l12002:
 14216                           
 14217                           ; BSR set to: 0
 14218                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
 14219   00632C  0E01               	movlw	1
 14220   00632E  25C9               	addwf	vfpfcnvrt@cp& (0+255),w,b
 14221   006330  6FBB               	movwf	??_vfpfcnvrt& (0+255),b
 14222   006332  0E00               	movlw	0
 14223   006334  21CA               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
 14224   006336  6FBC               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 14225   006338  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14226   00633C  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14227   006340  C0BB  FFDE         	movff	??_vfpfcnvrt,postinc2
 14228   006344  C0BC  FFDD         	movff	??_vfpfcnvrt+1,postdec2
 14229                           
 14230                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
 14231   006348  EFBE  F031         	goto	l12010
 14232   00634C                     l12004:
 14233                           
 14234                           ; BSR set to: 0
 14235                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
 14236   00634C  C0B5  F080         	movff	vfpfcnvrt@fp,efgtoa@fp
 14237   006350  C0B6  F081         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
 14238   006354  C0C0  F082         	movff	vfpfcnvrt@convarg,efgtoa@f
 14239   006358  C0C1  F083         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
 14240   00635C  C0C2  F084         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
 14241   006360  C0C3  F085         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
 14242   006364  C0C9  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 14243   006368  C0CA  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 14244   00636C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14245   00636C  6AF8               	clrf	tblptru,c
 14246   00636E                     	endif
 14247   00636E                     	if	0	;tblptru may be non-zero
 14248   00636E                     	endif
 14249   00636E  0008               	tblrd		*
 14250   006370  CFF5 F086          	movff	tablat,efgtoa@c
 14251   006374  ECCD  F025         	call	_efgtoa	;wreg free
 14252   006378  EFF3  F031         	goto	l1748
 14253   00637C                     l12010:
 14254                           
 14255                           ; BSR set to: 0
 14256   00637C  C0C9  FFF6         	movff	vfpfcnvrt@cp,tblptrl
 14257   006380  C0CA  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
 14258   006384                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14259   006384  6AF8               	clrf	tblptru,c
 14260   006386                     	endif
 14261   006386                     	if	0	;tblptru may be non-zero
 14262   006386                     	endif
 14263   006386  0008               	tblrd		*
 14264   006388  50F5               	movf	tablat,w,c
 14265   00638A  6FBB               	movwf	??_vfpfcnvrt& (0+255),b
 14266   00638C  6BBC               	clrf	(??_vfpfcnvrt+1)& (0+255),b
 14267                           
 14268                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14269                           ; Switch size 1, requested type "simple"
 14270                           ; Number of cases is 1, Range of values is 0 to 0
 14271                           ; switch strategies available:
 14272                           ; Name         Instructions Cycles
 14273                           ; simple_byte            4     3 (average)
 14274                           ;	Chosen strategy is simple_byte
 14275   00638E  51BC               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
 14276   006390  0A00               	xorlw	0	; case 0
 14277   006392  B4D8               	btfsc	status,2,c
 14278   006394  EFCE  F031         	goto	l13850
 14279   006398  EFD5  F031         	goto	l12012
 14280   00639C                     l13850:
 14281                           
 14282                           ; BSR set to: 0
 14283                           ; Switch size 1, requested type "simple"
 14284                           ; Number of cases is 1, Range of values is 102 to 102
 14285                           ; switch strategies available:
 14286                           ; Name         Instructions Cycles
 14287                           ; simple_byte            4     3 (average)
 14288                           ;	Chosen strategy is simple_byte
 14289   00639C  51BB               	movf	??_vfpfcnvrt& (0+255),w,b
 14290   00639E  0A66               	xorlw	102	; case 102
 14291   0063A0  B4D8               	btfsc	status,2,c
 14292   0063A2  EFA6  F031         	goto	l12004
 14293   0063A6  EFD5  F031         	goto	l12012
 14294   0063AA                     l12012:
 14295                           
 14296                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
 14297   0063AA  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14298   0063AE  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14299   0063B2  2ADE               	incf	postinc2,f,c
 14300   0063B4  0E00               	movlw	0
 14301   0063B6  22DD               	addwfc	postdec2,f,c
 14302   0063B8  EFF3  F031         	goto	l1748
 14303   0063BC                     l12016:
 14304                           
 14305                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
 14306   0063BC  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 14307   0063C0  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 14308   0063C4  CFDE FFF6          	movff	postinc2,tblptrl
 14309   0063C8  CFDD FFF7          	movff	postdec2,tblptrh
 14310   0063CC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14311   0063CC  6AF8               	clrf	tblptru,c
 14312   0063CE                     	endif
 14313   0063CE                     	if	0	;tblptru may be non-zero
 14314   0063CE                     	endif
 14315   0063CE  0008               	tblrd		*
 14316   0063D0  50F5               	movf	tablat,w,c
 14317   0063D2  6E03               	movwf	fputc@c^0,c
 14318   0063D4  6A04               	clrf	(fputc@c+1)^0,c
 14319   0063D6  C0B5  F005         	movff	vfpfcnvrt@fp,fputc@fp
 14320   0063DA  C0B6  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 14321   0063DE  EC40  F04B         	call	_fputc	;wreg free
 14322   0063E2  EFD5  F031         	goto	l12012
 14323   0063E6                     l1748:
 14324   0063E6  0012               	return		;funcret
 14325   0063E8                     __end_of_vfpfcnvrt:
 14326                           	callstack 0
 14327                           
 14328 ;; *************** function _efgtoa *****************
 14329 ;; Defined at:
 14330 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
 14331 ;; Parameters:    Size  Location     Type
 14332 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
 14333 ;;		 -> sprintf@f(11), 
 14334 ;;  f               4    2[BANK0 ] PTR struct _IO_FILE
 14335 ;;  c               1    6[BANK0 ] unsigned char 
 14336 ;; Auto vars:     Size  Location     Type
 14337 ;;  u               4   49[BANK0 ] struct flui
 14338 ;;  g               4   43[BANK0 ] struct flui
 14339 ;;  l               4   36[BANK0 ] struct flui
 14340 ;;  h               4   32[BANK0 ] struct flui
 14341 ;;  ou              4   26[BANK0 ] struct flui
 14342 ;;  n               2   47[BANK0 ] int 
 14343 ;;  i               2   40[BANK0 ] int 
 14344 ;;  w               2   30[BANK0 ] int 
 14345 ;;  e               2   24[BANK0 ] int 
 14346 ;;  m               2   22[BANK0 ] int 
 14347 ;;  d               2   20[BANK0 ] int 
 14348 ;;  t               2   13[BANK0 ] int 
 14349 ;;  p               2   11[BANK0 ] int 
 14350 ;;  ne              2    9[BANK0 ] int 
 14351 ;;  sign            1   42[BANK0 ] unsigned char 
 14352 ;;  nmode           1   19[BANK0 ] unsigned char 
 14353 ;;  mode            1   18[BANK0 ] unsigned char 
 14354 ;;  pp              1   17[BANK0 ] unsigned char 
 14355 ;;  esign           1    0        unsigned char 
 14356 ;; Return value:  Size  Location     Type
 14357 ;;                  1    wreg      void 
 14358 ;; Registers used:
 14359 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14360 ;; Tracked objects:
 14361 ;;		On entry : 0/0
 14362 ;;		On exit  : 0/0
 14363 ;;		Unchanged: 0/0
 14364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14365 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14366 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14367 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14368 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14369 ;;Total ram usage:       53 bytes
 14370 ;; Hardware stack levels used: 1
 14371 ;; Hardware stack levels required when called: 7
 14372 ;; This function calls:
 14373 ;;		___fladd
 14374 ;;		___fldiv
 14375 ;;		___fleq
 14376 ;;		___flge
 14377 ;;		___flmul
 14378 ;;		___flneg
 14379 ;;		___flsub
 14380 ;;		___fltol
 14381 ;;		___fpclassifyf
 14382 ;;		_floorf
 14383 ;;		_labs
 14384 ;;		_memcpy
 14385 ;;		_pad
 14386 ;;		_strcpy
 14387 ;; This function is called by:
 14388 ;;		_vfpfcnvrt
 14389 ;; This function uses a non-reentrant model
 14390 ;;
 14391                           
 14392                           	psect	text35
 14393   004B9A                     __ptext35:
 14394                           	callstack 0
 14395   004B9A                     _efgtoa:
 14396                           	callstack 18
 14397   004B9A                     
 14398                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
 14399   004B9A  0E00               	movlw	0
 14400   004B9C  0100               	movlb	0	; () banked
 14401   004B9E  6FAA               	movwf	efgtoa@sign& (0+255),b
 14402   004BA0                     
 14403                           ; BSR set to: 0
 14404                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
 14405   004BA0  C082  F0AB         	movff	efgtoa@f,efgtoa@g
 14406   004BA4  C083  F0AC         	movff	efgtoa@f+1,efgtoa@g+1
 14407   004BA8  C084  F0AD         	movff	efgtoa@f+2,efgtoa@g+2
 14408   004BAC  C085  F0AE         	movff	efgtoa@f+3,efgtoa@g+3
 14409   004BB0                     
 14410                           ; BSR set to: 0
 14411                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
 14412   004BB0  BFAE               	btfsc	(efgtoa@g+3)& (0+255),7,b
 14413   004BB2  EFDF  F025         	goto	u14690
 14414   004BB6  EFDD  F025         	goto	u14691
 14415   004BBA                     u14691:
 14416   004BBA  EFF3  F025         	goto	l11702
 14417   004BBE                     u14690:
 14418   004BBE                     
 14419                           ; BSR set to: 0
 14420                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
 14421   004BBE  0E01               	movlw	1
 14422   004BC0  6FAA               	movwf	efgtoa@sign& (0+255),b
 14423   004BC2                     
 14424                           ; BSR set to: 0
 14425                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
 14426   004BC2  C0AB  F003         	movff	efgtoa@g,___flneg@f1
 14427   004BC6  C0AC  F004         	movff	efgtoa@g+1,___flneg@f1+1
 14428   004BCA  C0AD  F005         	movff	efgtoa@g+2,___flneg@f1+2
 14429   004BCE  C0AE  F006         	movff	efgtoa@g+3,___flneg@f1+3
 14430   004BD2  ECBA  F054         	call	___flneg	;wreg free
 14431   004BD6  C003  F0AB         	movff	?___flneg,efgtoa@g
 14432   004BDA  C004  F0AC         	movff	?___flneg+1,efgtoa@g+1
 14433   004BDE  C005  F0AD         	movff	?___flneg+2,efgtoa@g+2
 14434   004BE2  C006  F0AE         	movff	?___flneg+3,efgtoa@g+3
 14435   004BE6                     l11702:
 14436                           
 14437                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
 14438   004BE6  0E00               	movlw	0
 14439   004BE8  0100               	movlb	0	; () banked
 14440   004BEA  6FB0               	movwf	(efgtoa@n+1)& (0+255),b
 14441   004BEC  0E00               	movlw	0
 14442   004BEE  6FAF               	movwf	efgtoa@n& (0+255),b
 14443   004BF0                     
 14444                           ; BSR set to: 0
 14445                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
 14446   004BF0  C21D  F09E         	movff	_width,efgtoa@w
 14447   004BF4  C21E  F09F         	movff	_width+1,efgtoa@w+1
 14448   004BF8                     
 14449                           ; BSR set to: 0
 14450                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
 14451   004BF8  51AA               	movf	efgtoa@sign& (0+255),w,b
 14452   004BFA  B4D8               	btfsc	status,2,c
 14453   004BFC  EF02  F026         	goto	u14701
 14454   004C00  EF04  F026         	goto	u14700
 14455   004C04                     u14701:
 14456   004C04  EF18  F026         	goto	l11716
 14457   004C08                     u14700:
 14458   004C08                     
 14459                           ; BSR set to: 0
 14460                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
 14461   004C08  51AA               	movf	efgtoa@sign& (0+255),w,b
 14462   004C0A  A4D8               	btfss	status,2,c
 14463   004C0C  EF0A  F026         	goto	u14711
 14464   004C10  EF0C  F026         	goto	u14710
 14465   004C14                     u14711:
 14466   004C14  EF12  F026         	goto	l11712
 14467   004C18                     u14710:
 14468   004C18                     
 14469                           ; BSR set to: 0
 14470   004C18  0E00               	movlw	0
 14471   004C1A  6F90               	movwf	(_efgtoa$2267+1)& (0+255),b
 14472   004C1C  0E2B               	movlw	43
 14473   004C1E  6F8F               	movwf	_efgtoa$2267& (0+255),b
 14474   004C20  EF16  F026         	goto	l11714
 14475   004C24                     l11712:
 14476                           
 14477                           ; BSR set to: 0
 14478   004C24  0E00               	movlw	0
 14479   004C26  6F90               	movwf	(_efgtoa$2267+1)& (0+255),b
 14480   004C28  0E2D               	movlw	45
 14481   004C2A  6F8F               	movwf	_efgtoa$2267& (0+255),b
 14482   004C2C                     l11714:
 14483                           
 14484                           ; BSR set to: 0
 14485   004C2C  C08F  F0AA         	movff	_efgtoa$2267,efgtoa@sign
 14486   004C30                     l11716:
 14487                           
 14488                           ; BSR set to: 0
 14489                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
 14490   004C30  C0AB  F003         	movff	efgtoa@g,___fpclassifyf@x
 14491   004C34  C0AC  F004         	movff	efgtoa@g+1,___fpclassifyf@x+1
 14492   004C38  C0AD  F005         	movff	efgtoa@g+2,___fpclassifyf@x+2
 14493   004C3C  C0AE  F006         	movff	efgtoa@g+3,___fpclassifyf@x+3
 14494   004C40  ECE4  F049         	call	___fpclassifyf	;wreg free
 14495   004C44  0403               	decf	?___fpclassifyf^0,w,c
 14496   004C46  1004               	iorwf	(?___fpclassifyf+1)^0,w,c
 14497   004C48  A4D8               	btfss	status,2,c
 14498   004C4A  EF29  F026         	goto	u14721
 14499   004C4E  EF2B  F026         	goto	u14720
 14500   004C52                     u14721:
 14501   004C52  EF5E  F026         	goto	l11734
 14502   004C56                     u14720:
 14503   004C56                     
 14504                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
 14505   004C56  0100               	movlb	0	; () banked
 14506   004C58  51AA               	movf	efgtoa@sign& (0+255),w,b
 14507   004C5A  B4D8               	btfsc	status,2,c
 14508   004C5C  EF32  F026         	goto	u14731
 14509   004C60  EF34  F026         	goto	u14730
 14510   004C64                     u14731:
 14511   004C64  EF3D  F026         	goto	l11726
 14512   004C68                     u14730:
 14513   004C68                     
 14514                           ; BSR set to: 0
 14515                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
 14516   004C68  C0AA  F235         	movff	efgtoa@sign,_dbuf
 14517   004C6C                     
 14518                           ; BSR set to: 0
 14519                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
 14520   004C6C  079E               	decf	efgtoa@w& (0+255),f,b
 14521   004C6E  A0D8               	btfss	status,0,c
 14522   004C70  079F               	decf	(efgtoa@w+1)& (0+255),f,b
 14523   004C72                     
 14524                           ; BSR set to: 0
 14525                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
 14526   004C72  0E00               	movlw	0
 14527   004C74  6FB0               	movwf	(efgtoa@n+1)& (0+255),b
 14528   004C76  0E01               	movlw	1
 14529   004C78  6FAF               	movwf	efgtoa@n& (0+255),b
 14530   004C7A                     l11726:
 14531                           
 14532                           ; BSR set to: 0
 14533                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
 14534   004C7A  0E35               	movlw	low _dbuf
 14535   004C7C  25AF               	addwf	efgtoa@n& (0+255),w,b
 14536   004C7E  6E03               	movwf	strcpy@dest^0,c
 14537   004C80  0E02               	movlw	high _dbuf
 14538   004C82  21B0               	addwfc	(efgtoa@n+1)& (0+255),w,b
 14539   004C84  6E04               	movwf	(strcpy@dest+1)^0,c
 14540   004C86  0EC1               	movlw	low STR_7
 14541   004C88  6E05               	movwf	strcpy@src^0,c
 14542   004C8A  0E10               	movlw	high STR_7
 14543   004C8C  6E06               	movwf	(strcpy@src+1)^0,c
 14544   004C8E  EC5D  F054         	call	_strcpy	;wreg free
 14545   004C92                     l11728:
 14546                           
 14547                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
 14548   004C92  0100               	movlb	0	; () banked
 14549   004C94  0EFD               	movlw	253
 14550   004C96  279E               	addwf	efgtoa@w& (0+255),f,b
 14551   004C98  0EFF               	movlw	255
 14552   004C9A  239F               	addwfc	(efgtoa@w+1)& (0+255),f,b
 14553   004C9C                     
 14554                           ; BSR set to: 0
 14555                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
 14556   004C9C  C080  F013         	movff	efgtoa@fp,pad@fp
 14557   004CA0  C081  F014         	movff	efgtoa@fp+1,pad@fp+1
 14558   004CA4  0E35               	movlw	low _dbuf
 14559   004CA6  6E15               	movwf	pad@buf^0,c
 14560   004CA8  0E02               	movlw	high _dbuf
 14561   004CAA  6E16               	movwf	(pad@buf+1)^0,c
 14562   004CAC  C09E  F017         	movff	efgtoa@w,pad@p
 14563   004CB0  C09F  F018         	movff	efgtoa@w+1,pad@p+1
 14564   004CB4  EC80  F04F         	call	_pad	;wreg free
 14565   004CB8  EFFF  F02A         	goto	l1679
 14566   004CBC                     l11734:
 14567                           
 14568                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
 14569   004CBC  C0AB  F003         	movff	efgtoa@g,___fpclassifyf@x
 14570   004CC0  C0AC  F004         	movff	efgtoa@g+1,___fpclassifyf@x+1
 14571   004CC4  C0AD  F005         	movff	efgtoa@g+2,___fpclassifyf@x+2
 14572   004CC8  C0AE  F006         	movff	efgtoa@g+3,___fpclassifyf@x+3
 14573   004CCC  ECE4  F049         	call	___fpclassifyf	;wreg free
 14574   004CD0  5003               	movf	?___fpclassifyf^0,w,c
 14575   004CD2  1004               	iorwf	(?___fpclassifyf+1)^0,w,c
 14576   004CD4  A4D8               	btfss	status,2,c
 14577   004CD6  EF6F  F026         	goto	u14741
 14578   004CDA  EF71  F026         	goto	u14740
 14579   004CDE                     u14741:
 14580   004CDE  EF91  F026         	goto	l11752
 14581   004CE2                     u14740:
 14582   004CE2                     
 14583                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
 14584   004CE2  0100               	movlb	0	; () banked
 14585   004CE4  51AA               	movf	efgtoa@sign& (0+255),w,b
 14586   004CE6  B4D8               	btfsc	status,2,c
 14587   004CE8  EF78  F026         	goto	u14751
 14588   004CEC  EF7A  F026         	goto	u14750
 14589   004CF0                     u14751:
 14590   004CF0  EF83  F026         	goto	l11744
 14591   004CF4                     u14750:
 14592   004CF4                     
 14593                           ; BSR set to: 0
 14594                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
 14595   004CF4  C0AA  F235         	movff	efgtoa@sign,_dbuf
 14596   004CF8                     
 14597                           ; BSR set to: 0
 14598                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
 14599   004CF8  079E               	decf	efgtoa@w& (0+255),f,b
 14600   004CFA  A0D8               	btfss	status,0,c
 14601   004CFC  079F               	decf	(efgtoa@w+1)& (0+255),f,b
 14602   004CFE                     
 14603                           ; BSR set to: 0
 14604                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
 14605   004CFE  0E00               	movlw	0
 14606   004D00  6FB0               	movwf	(efgtoa@n+1)& (0+255),b
 14607   004D02  0E01               	movlw	1
 14608   004D04  6FAF               	movwf	efgtoa@n& (0+255),b
 14609   004D06                     l11744:
 14610                           
 14611                           ; BSR set to: 0
 14612                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
 14613   004D06  0E35               	movlw	low _dbuf
 14614   004D08  25AF               	addwf	efgtoa@n& (0+255),w,b
 14615   004D0A  6E03               	movwf	strcpy@dest^0,c
 14616   004D0C  0E02               	movlw	high _dbuf
 14617   004D0E  21B0               	addwfc	(efgtoa@n+1)& (0+255),w,b
 14618   004D10  6E04               	movwf	(strcpy@dest+1)^0,c
 14619   004D12  0EC5               	movlw	low STR_10
 14620   004D14  6E05               	movwf	strcpy@src^0,c
 14621   004D16  0E10               	movlw	high STR_10
 14622   004D18  6E06               	movwf	(strcpy@src+1)^0,c
 14623   004D1A  EC5D  F054         	call	_strcpy	;wreg free
 14624   004D1E  EF49  F026         	goto	l11728
 14625   004D22                     l11752:
 14626                           
 14627                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
 14628   004D22  0E00               	movlw	0
 14629   004D24  0100               	movlb	0	; () banked
 14630   004D26  6FB1               	movwf	efgtoa@u& (0+255),b
 14631   004D28  0E00               	movlw	0
 14632   004D2A  6FB2               	movwf	(efgtoa@u+1)& (0+255),b
 14633   004D2C  0E80               	movlw	128
 14634   004D2E  6FB3               	movwf	(efgtoa@u+2)& (0+255),b
 14635   004D30  0E3F               	movlw	63
 14636   004D32  6FB4               	movwf	(efgtoa@u+3)& (0+255),b
 14637                           
 14638                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
 14639   004D34  0E00               	movlw	0
 14640   004D36  6F99               	movwf	(efgtoa@e+1)& (0+255),b
 14641   004D38  0E00               	movlw	0
 14642   004D3A  6F98               	movwf	efgtoa@e& (0+255),b
 14643   004D3C                     
 14644                           ; BSR set to: 0
 14645                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
 14646   004D3C  C0AB  F06F         	movff	efgtoa@g,___fleq@ff1
 14647   004D40  C0AC  F070         	movff	efgtoa@g+1,___fleq@ff1+1
 14648   004D44  C0AD  F071         	movff	efgtoa@g+2,___fleq@ff1+2
 14649   004D48  C0AE  F072         	movff	efgtoa@g+3,___fleq@ff1+3
 14650   004D4C  0E00               	movlw	0
 14651   004D4E  6E73               	movwf	___fleq@ff2^0,c
 14652   004D50  0E00               	movlw	0
 14653   004D52  6E74               	movwf	(___fleq@ff2+1)^0,c
 14654   004D54  0E00               	movlw	0
 14655   004D56  6E75               	movwf	(___fleq@ff2+2)^0,c
 14656   004D58  0E00               	movlw	0
 14657   004D5A  6E76               	movwf	(___fleq@ff2+3)^0,c
 14658   004D5C  EC85  F04D         	call	___fleq	;wreg free
 14659   004D60  B0D8               	btfsc	status,0,c
 14660   004D62  EFB5  F026         	goto	u14761
 14661   004D66  EFB7  F026         	goto	u14760
 14662   004D6A                     u14761:
 14663   004D6A  EF96  F027         	goto	l1682
 14664   004D6E                     u14760:
 14665   004D6E  EFC4  F026         	goto	l11760
 14666   004D72                     l1684:
 14667                           
 14668                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
 14669   004D72  C09A  F0B1         	movff	efgtoa@ou,efgtoa@u
 14670   004D76  C09B  F0B2         	movff	efgtoa@ou+1,efgtoa@u+1
 14671   004D7A  C09C  F0B3         	movff	efgtoa@ou+2,efgtoa@u+2
 14672   004D7E  C09D  F0B4         	movff	efgtoa@ou+3,efgtoa@u+3
 14673   004D82                     
 14674                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
 14675   004D82  0100               	movlb	0	; () banked
 14676   004D84  4B98               	infsnz	efgtoa@e& (0+255),f,b
 14677   004D86  2B99               	incf	(efgtoa@e+1)& (0+255),f,b
 14678   004D88                     l11760:
 14679                           
 14680                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
 14681   004D88  C0B1  F021         	movff	efgtoa@u,___flmul@b
 14682   004D8C  C0B2  F022         	movff	efgtoa@u+1,___flmul@b+1
 14683   004D90  C0B3  F023         	movff	efgtoa@u+2,___flmul@b+2
 14684   004D94  C0B4  F024         	movff	efgtoa@u+3,___flmul@b+3
 14685   004D98  0E00               	movlw	0
 14686   004D9A  6E25               	movwf	___flmul@a^0,c
 14687   004D9C  0E00               	movlw	0
 14688   004D9E  6E26               	movwf	(___flmul@a+1)^0,c
 14689   004DA0  0E20               	movlw	32
 14690   004DA2  6E27               	movwf	(___flmul@a+2)^0,c
 14691   004DA4  0E41               	movlw	65
 14692   004DA6  6E28               	movwf	(___flmul@a+3)^0,c
 14693   004DA8  ECF4  F031         	call	___flmul	;wreg free
 14694   004DAC  C021  F09A         	movff	?___flmul,efgtoa@ou
 14695   004DB0  C022  F09B         	movff	?___flmul+1,efgtoa@ou+1
 14696   004DB4  C023  F09C         	movff	?___flmul+2,efgtoa@ou+2
 14697   004DB8  C024  F09D         	movff	?___flmul+3,efgtoa@ou+3
 14698   004DBC  0100               	movlb	0	; () banked
 14699   004DBE  519A               	movf	efgtoa@ou& (0+255),w,b
 14700   004DC0  5DAB               	subwf	efgtoa@g& (0+255),w,b
 14701   004DC2  6E03               	movwf	labs@a^0,c
 14702   004DC4  519B               	movf	(efgtoa@ou+1)& (0+255),w,b
 14703   004DC6  59AC               	subwfb	(efgtoa@g+1)& (0+255),w,b
 14704   004DC8  6E04               	movwf	(labs@a+1)^0,c
 14705   004DCA  519C               	movf	(efgtoa@ou+2)& (0+255),w,b
 14706   004DCC  59AD               	subwfb	(efgtoa@g+2)& (0+255),w,b
 14707   004DCE  6E05               	movwf	(labs@a+2)^0,c
 14708   004DD0  519D               	movf	(efgtoa@ou+3)& (0+255),w,b
 14709   004DD2  59AE               	subwfb	(efgtoa@g+3)& (0+255),w,b
 14710   004DD4  6E06               	movwf	(labs@a+3)^0,c
 14711   004DD6  EC8D  F051         	call	_labs	;wreg free
 14712   004DDA  BE06               	btfsc	(?_labs+3)^0,7,c
 14713   004DDC  EFFB  F026         	goto	u14771
 14714   004DE0  5006               	movf	(?_labs+3)^0,w,c
 14715   004DE2  1005               	iorwf	(?_labs+2)^0,w,c
 14716   004DE4  1004               	iorwf	(?_labs+1)^0,w,c
 14717   004DE6  E109               	bnz	u14770
 14718   004DE8  0E02               	movlw	2
 14719   004DEA  5C03               	subwf	?_labs^0,w,c
 14720   004DEC  A0D8               	btfss	status,0,c
 14721   004DEE  EFFB  F026         	goto	u14771
 14722   004DF2  EFFD  F026         	goto	u14770
 14723   004DF6                     u14771:
 14724   004DF6  EFB9  F026         	goto	l1684
 14725   004DFA                     u14770:
 14726   004DFA  C09A  F042         	movff	efgtoa@ou,___flge@ff1
 14727   004DFE  C09B  F043         	movff	efgtoa@ou+1,___flge@ff1+1
 14728   004E02  C09C  F044         	movff	efgtoa@ou+2,___flge@ff1+2
 14729   004E06  C09D  F045         	movff	efgtoa@ou+3,___flge@ff1+3
 14730   004E0A  C0AB  F046         	movff	efgtoa@g,___flge@ff2
 14731   004E0E  C0AC  F047         	movff	efgtoa@g+1,___flge@ff2+1
 14732   004E12  C0AD  F048         	movff	efgtoa@g+2,___flge@ff2+2
 14733   004E16  C0AE  F049         	movff	efgtoa@g+3,___flge@ff2+3
 14734   004E1A  ECE3  F048         	call	___flge	;wreg free
 14735   004E1E  A0D8               	btfss	status,0,c
 14736   004E20  EF14  F027         	goto	u14781
 14737   004E24  EF16  F027         	goto	u14780
 14738   004E28                     u14781:
 14739   004E28  EFB9  F026         	goto	l1684
 14740   004E2C                     u14780:
 14741   004E2C                     
 14742                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
 14743   004E2C  0100               	movlb	0	; () banked
 14744   004E2E  51B1               	movf	efgtoa@u& (0+255),w,b
 14745   004E30  5DAB               	subwf	efgtoa@g& (0+255),w,b
 14746   004E32  6E03               	movwf	labs@a^0,c
 14747   004E34  51B2               	movf	(efgtoa@u+1)& (0+255),w,b
 14748   004E36  59AC               	subwfb	(efgtoa@g+1)& (0+255),w,b
 14749   004E38  6E04               	movwf	(labs@a+1)^0,c
 14750   004E3A  51B3               	movf	(efgtoa@u+2)& (0+255),w,b
 14751   004E3C  59AD               	subwfb	(efgtoa@g+2)& (0+255),w,b
 14752   004E3E  6E05               	movwf	(labs@a+2)^0,c
 14753   004E40  51B4               	movf	(efgtoa@u+3)& (0+255),w,b
 14754   004E42  59AE               	subwfb	(efgtoa@g+3)& (0+255),w,b
 14755   004E44  6E06               	movwf	(labs@a+3)^0,c
 14756   004E46  EC8D  F051         	call	_labs	;wreg free
 14757   004E4A  BE06               	btfsc	(?_labs+3)^0,7,c
 14758   004E4C  EF35  F027         	goto	u14790
 14759   004E50  5006               	movf	(?_labs+3)^0,w,c
 14760   004E52  1005               	iorwf	(?_labs+2)^0,w,c
 14761   004E54  1004               	iorwf	(?_labs+1)^0,w,c
 14762   004E56  E107               	bnz	u14791
 14763   004E58  0E02               	movlw	2
 14764   004E5A  5C03               	subwf	?_labs^0,w,c
 14765   004E5C  B0D8               	btfsc	status,0,c
 14766   004E5E  EF33  F027         	goto	u14791
 14767   004E62  EF35  F027         	goto	u14790
 14768   004E66                     u14791:
 14769   004E66  EF7D  F027         	goto	l11778
 14770   004E6A                     u14790:
 14771   004E6A                     l11768:
 14772                           
 14773                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
 14774   004E6A  C0B1  F0AB         	movff	efgtoa@u,efgtoa@g
 14775   004E6E  C0B2  F0AC         	movff	efgtoa@u+1,efgtoa@g+1
 14776   004E72  C0B3  F0AD         	movff	efgtoa@u+2,efgtoa@g+2
 14777   004E76  C0B4  F0AE         	movff	efgtoa@u+3,efgtoa@g+3
 14778                           
 14779                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
 14780   004E7A  EF96  F027         	goto	l1682
 14781   004E7E                     l11770:
 14782                           
 14783                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
 14784   004E7E  C0B1  F042         	movff	efgtoa@u,___fldiv@b
 14785   004E82  C0B2  F043         	movff	efgtoa@u+1,___fldiv@b+1
 14786   004E86  C0B3  F044         	movff	efgtoa@u+2,___fldiv@b+2
 14787   004E8A  C0B4  F045         	movff	efgtoa@u+3,___fldiv@b+3
 14788   004E8E  0E00               	movlw	0
 14789   004E90  6E46               	movwf	___fldiv@a^0,c
 14790   004E92  0E00               	movlw	0
 14791   004E94  6E47               	movwf	(___fldiv@a+1)^0,c
 14792   004E96  0E20               	movlw	32
 14793   004E98  6E48               	movwf	(___fldiv@a+2)^0,c
 14794   004E9A  0E41               	movlw	65
 14795   004E9C  6E49               	movwf	(___fldiv@a+3)^0,c
 14796   004E9E  EC09  F034         	call	___fldiv	;wreg free
 14797   004EA2  C042  F0B1         	movff	?___fldiv,efgtoa@u
 14798   004EA6  C043  F0B2         	movff	?___fldiv+1,efgtoa@u+1
 14799   004EAA  C044  F0B3         	movff	?___fldiv+2,efgtoa@u+2
 14800   004EAE  C045  F0B4         	movff	?___fldiv+3,efgtoa@u+3
 14801   004EB2                     
 14802                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
 14803   004EB2  0100               	movlb	0	; () banked
 14804   004EB4  0798               	decf	efgtoa@e& (0+255),f,b
 14805   004EB6  A0D8               	btfss	status,0,c
 14806   004EB8  0799               	decf	(efgtoa@e+1)& (0+255),f,b
 14807   004EBA                     
 14808                           ; BSR set to: 0
 14809                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
 14810   004EBA  51B1               	movf	efgtoa@u& (0+255),w,b
 14811   004EBC  5DAB               	subwf	efgtoa@g& (0+255),w,b
 14812   004EBE  6E03               	movwf	labs@a^0,c
 14813   004EC0  51B2               	movf	(efgtoa@u+1)& (0+255),w,b
 14814   004EC2  59AC               	subwfb	(efgtoa@g+1)& (0+255),w,b
 14815   004EC4  6E04               	movwf	(labs@a+1)^0,c
 14816   004EC6  51B3               	movf	(efgtoa@u+2)& (0+255),w,b
 14817   004EC8  59AD               	subwfb	(efgtoa@g+2)& (0+255),w,b
 14818   004ECA  6E05               	movwf	(labs@a+2)^0,c
 14819   004ECC  51B4               	movf	(efgtoa@u+3)& (0+255),w,b
 14820   004ECE  59AE               	subwfb	(efgtoa@g+3)& (0+255),w,b
 14821   004ED0  6E06               	movwf	(labs@a+3)^0,c
 14822   004ED2  EC8D  F051         	call	_labs	;wreg free
 14823   004ED6  BE06               	btfsc	(?_labs+3)^0,7,c
 14824   004ED8  EF7B  F027         	goto	u14800
 14825   004EDC  5006               	movf	(?_labs+3)^0,w,c
 14826   004EDE  1005               	iorwf	(?_labs+2)^0,w,c
 14827   004EE0  1004               	iorwf	(?_labs+1)^0,w,c
 14828   004EE2  E107               	bnz	u14801
 14829   004EE4  0E02               	movlw	2
 14830   004EE6  5C03               	subwf	?_labs^0,w,c
 14831   004EE8  B0D8               	btfsc	status,0,c
 14832   004EEA  EF79  F027         	goto	u14801
 14833   004EEE  EF7B  F027         	goto	u14800
 14834   004EF2                     u14801:
 14835   004EF2  EF7D  F027         	goto	l11778
 14836   004EF6                     u14800:
 14837   004EF6  EF35  F027         	goto	l11768
 14838   004EFA                     l11778:
 14839                           
 14840                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
 14841   004EFA  C0AB  F042         	movff	efgtoa@g,___flge@ff1
 14842   004EFE  C0AC  F043         	movff	efgtoa@g+1,___flge@ff1+1
 14843   004F02  C0AD  F044         	movff	efgtoa@g+2,___flge@ff1+2
 14844   004F06  C0AE  F045         	movff	efgtoa@g+3,___flge@ff1+3
 14845   004F0A  C0B1  F046         	movff	efgtoa@u,___flge@ff2
 14846   004F0E  C0B2  F047         	movff	efgtoa@u+1,___flge@ff2+1
 14847   004F12  C0B3  F048         	movff	efgtoa@u+2,___flge@ff2+2
 14848   004F16  C0B4  F049         	movff	efgtoa@u+3,___flge@ff2+3
 14849   004F1A  ECE3  F048         	call	___flge	;wreg free
 14850   004F1E  A0D8               	btfss	status,0,c
 14851   004F20  EF94  F027         	goto	u14811
 14852   004F24  EF96  F027         	goto	u14810
 14853   004F28                     u14811:
 14854   004F28  EF3F  F027         	goto	l11770
 14855   004F2C                     u14810:
 14856   004F2C                     l1682:
 14857                           
 14858                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
 14859   004F2C  C086  F092         	movff	efgtoa@c,efgtoa@mode
 14860                           
 14861                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
 14862   004F30  C092  F093         	movff	efgtoa@mode,efgtoa@nmode
 14863   004F34                     
 14864                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
 14865   004F34  BE7C               	btfsc	(_prec+1)^0,7,c
 14866   004F36  EF9F  F027         	goto	u14821
 14867   004F3A  EFA1  F027         	goto	u14820
 14868   004F3E                     u14821:
 14869   004F3E  EFA7  F027         	goto	l11784
 14870   004F42                     u14820:
 14871   004F42  C07B  F08B         	movff	_prec,efgtoa@p
 14872   004F46  C07C  F08C         	movff	_prec+1,efgtoa@p+1
 14873   004F4A  EFAC  F027         	goto	l11786
 14874   004F4E                     l11784:
 14875   004F4E  0E00               	movlw	0
 14876   004F50  0100               	movlb	0	; () banked
 14877   004F52  6F8C               	movwf	(efgtoa@p+1)& (0+255),b
 14878   004F54  0E06               	movlw	6
 14879   004F56  6F8B               	movwf	efgtoa@p& (0+255),b
 14880   004F58                     l11786:
 14881                           
 14882                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
 14883   004F58  C08B  F096         	movff	efgtoa@p,efgtoa@m
 14884   004F5C  C08C  F097         	movff	efgtoa@p+1,efgtoa@m+1
 14885   004F60                     
 14886                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
 14887   004F60  0100               	movlb	0	; () banked
 14888   004F62  4B96               	infsnz	efgtoa@m& (0+255),f,b
 14889   004F64  2B97               	incf	(efgtoa@m+1)& (0+255),f,b
 14890   004F66                     
 14891                           ; BSR set to: 0
 14892                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
 14893   004F66  0E66               	movlw	102
 14894   004F68  1993               	xorwf	efgtoa@nmode& (0+255),w,b
 14895   004F6A  A4D8               	btfss	status,2,c
 14896   004F6C  EFBA  F027         	goto	u14831
 14897   004F70  EFBC  F027         	goto	u14830
 14898   004F74                     u14831:
 14899   004F74  EFDC  F027         	goto	l11800
 14900   004F78                     u14830:
 14901   004F78                     
 14902                           ; BSR set to: 0
 14903                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
 14904   004F78  BF99               	btfsc	(efgtoa@e+1)& (0+255),7,b
 14905   004F7A  EFC3  F027         	goto	u14840
 14906   004F7E  EFC1  F027         	goto	u14841
 14907   004F82                     u14841:
 14908   004F82  EFCF  F027         	goto	l11796
 14909   004F86                     u14840:
 14910   004F86                     
 14911                           ; BSR set to: 0
 14912                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
 14913   004F86  0E00               	movlw	0
 14914   004F88  6FB1               	movwf	efgtoa@u& (0+255),b
 14915   004F8A  0E00               	movlw	0
 14916   004F8C  6FB2               	movwf	(efgtoa@u+1)& (0+255),b
 14917   004F8E  0E80               	movlw	128
 14918   004F90  6FB3               	movwf	(efgtoa@u+2)& (0+255),b
 14919   004F92  0E3F               	movlw	63
 14920   004F94  6FB4               	movwf	(efgtoa@u+3)& (0+255),b
 14921                           
 14922                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
 14923   004F96  0E00               	movlw	0
 14924   004F98  6F99               	movwf	(efgtoa@e+1)& (0+255),b
 14925   004F9A  0E00               	movlw	0
 14926   004F9C  6F98               	movwf	efgtoa@e& (0+255),b
 14927   004F9E                     l11796:
 14928                           
 14929                           ; BSR set to: 0
 14930                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
 14931   004F9E  0E67               	movlw	103
 14932   004FA0  1992               	xorwf	efgtoa@mode& (0+255),w,b
 14933   004FA2  B4D8               	btfsc	status,2,c
 14934   004FA4  EFD6  F027         	goto	u14851
 14935   004FA8  EFD8  F027         	goto	u14850
 14936   004FAC                     u14851:
 14937   004FAC  EFDC  F027         	goto	l11800
 14938   004FB0                     u14850:
 14939   004FB0                     
 14940                           ; BSR set to: 0
 14941                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
 14942   004FB0  5198               	movf	efgtoa@e& (0+255),w,b
 14943   004FB2  2796               	addwf	efgtoa@m& (0+255),f,b
 14944   004FB4  5199               	movf	(efgtoa@e+1)& (0+255),w,b
 14945   004FB6  2397               	addwfc	(efgtoa@m+1)& (0+255),f,b
 14946   004FB8                     l11800:
 14947                           
 14948                           ; BSR set to: 0
 14949                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
 14950   004FB8  0E00               	movlw	0
 14951   004FBA  6FA9               	movwf	(efgtoa@i+1)& (0+255),b
 14952   004FBC  0E00               	movlw	0
 14953   004FBE  6FA8               	movwf	efgtoa@i& (0+255),b
 14954   004FC0                     
 14955                           ; BSR set to: 0
 14956                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
 14957   004FC0  C0AB  F0A0         	movff	efgtoa@g,efgtoa@h
 14958   004FC4  C0AC  F0A1         	movff	efgtoa@g+1,efgtoa@h+1
 14959   004FC8  C0AD  F0A2         	movff	efgtoa@g+2,efgtoa@h+2
 14960   004FCC  C0AE  F0A3         	movff	efgtoa@g+3,efgtoa@h+3
 14961   004FD0                     
 14962                           ; BSR set to: 0
 14963                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
 14964   004FD0  C0B1  F09A         	movff	efgtoa@u,efgtoa@ou
 14965   004FD4  C0B2  F09B         	movff	efgtoa@u+1,efgtoa@ou+1
 14966   004FD8  C0B3  F09C         	movff	efgtoa@u+2,efgtoa@ou+2
 14967   004FDC  C0B4  F09D         	movff	efgtoa@u+3,efgtoa@ou+3
 14968                           
 14969                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
 14970   004FE0  EF6D  F028         	goto	l11814
 14971   004FE4                     l11806:
 14972                           
 14973                           ; BSR set to: 0
 14974                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
 14975   004FE4  C0A0  F042         	movff	efgtoa@h,___fldiv@b
 14976   004FE8  C0A1  F043         	movff	efgtoa@h+1,___fldiv@b+1
 14977   004FEC  C0A2  F044         	movff	efgtoa@h+2,___fldiv@b+2
 14978   004FF0  C0A3  F045         	movff	efgtoa@h+3,___fldiv@b+3
 14979   004FF4  C0B1  F046         	movff	efgtoa@u,___fldiv@a
 14980   004FF8  C0B2  F047         	movff	efgtoa@u+1,___fldiv@a+1
 14981   004FFC  C0B3  F048         	movff	efgtoa@u+2,___fldiv@a+2
 14982   005000  C0B4  F049         	movff	efgtoa@u+3,___fldiv@a+3
 14983   005004  EC09  F034         	call	___fldiv	;wreg free
 14984   005008  C042  F05B         	movff	?___fldiv,floorf@x
 14985   00500C  C043  F05C         	movff	?___fldiv+1,floorf@x+1
 14986   005010  C044  F05D         	movff	?___fldiv+2,floorf@x+2
 14987   005014  C045  F05E         	movff	?___fldiv+3,floorf@x+3
 14988   005018  EC11  F03D         	call	_floorf	;wreg free
 14989   00501C  C05B  F0A4         	movff	?_floorf,efgtoa@l
 14990   005020  C05C  F0A5         	movff	?_floorf+1,efgtoa@l+1
 14991   005024  C05D  F0A6         	movff	?_floorf+2,efgtoa@l+2
 14992   005028  C05E  F0A7         	movff	?_floorf+3,efgtoa@l+3
 14993                           
 14994                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
 14995   00502C  C0A4  F05B         	movff	efgtoa@l,___fltol@f1
 14996   005030  C0A5  F05C         	movff	efgtoa@l+1,___fltol@f1+1
 14997   005034  C0A6  F05D         	movff	efgtoa@l+2,___fltol@f1+2
 14998   005038  C0A7  F05E         	movff	efgtoa@l+3,___fltol@f1+3
 14999   00503C  EC60  F048         	call	___fltol	;wreg free
 15000   005040  C05B  F094         	movff	?___fltol,efgtoa@d
 15001   005044  C05C  F095         	movff	?___fltol+1,efgtoa@d+1
 15002   005048                     
 15003                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
 15004   005048  C0A0  F03A         	movff	efgtoa@h,___flsub@b
 15005   00504C  C0A1  F03B         	movff	efgtoa@h+1,___flsub@b+1
 15006   005050  C0A2  F03C         	movff	efgtoa@h+2,___flsub@b+2
 15007   005054  C0A3  F03D         	movff	efgtoa@h+3,___flsub@b+3
 15008   005058  C0A4  F025         	movff	efgtoa@l,___flmul@a
 15009   00505C  C0A5  F026         	movff	efgtoa@l+1,___flmul@a+1
 15010   005060  C0A6  F027         	movff	efgtoa@l+2,___flmul@a+2
 15011   005064  C0A7  F028         	movff	efgtoa@l+3,___flmul@a+3
 15012   005068  C0B1  F021         	movff	efgtoa@u,___flmul@b
 15013   00506C  C0B2  F022         	movff	efgtoa@u+1,___flmul@b+1
 15014   005070  C0B3  F023         	movff	efgtoa@u+2,___flmul@b+2
 15015   005074  C0B4  F024         	movff	efgtoa@u+3,___flmul@b+3
 15016   005078  ECF4  F031         	call	___flmul	;wreg free
 15017   00507C  C021  F03E         	movff	?___flmul,___flsub@a
 15018   005080  C022  F03F         	movff	?___flmul+1,___flsub@a+1
 15019   005084  C023  F040         	movff	?___flmul+2,___flsub@a+2
 15020   005088  C024  F041         	movff	?___flmul+3,___flsub@a+3
 15021   00508C  EC8D  F053         	call	___flsub	;wreg free
 15022   005090  C03A  F0A0         	movff	?___flsub,efgtoa@h
 15023   005094  C03B  F0A1         	movff	?___flsub+1,efgtoa@h+1
 15024   005098  C03C  F0A2         	movff	?___flsub+2,efgtoa@h+2
 15025   00509C  C03D  F0A3         	movff	?___flsub+3,efgtoa@h+3
 15026   0050A0                     
 15027                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
 15028   0050A0  C0B1  F042         	movff	efgtoa@u,___fldiv@b
 15029   0050A4  C0B2  F043         	movff	efgtoa@u+1,___fldiv@b+1
 15030   0050A8  C0B3  F044         	movff	efgtoa@u+2,___fldiv@b+2
 15031   0050AC  C0B4  F045         	movff	efgtoa@u+3,___fldiv@b+3
 15032   0050B0  0E00               	movlw	0
 15033   0050B2  6E46               	movwf	___fldiv@a^0,c
 15034   0050B4  0E00               	movlw	0
 15035   0050B6  6E47               	movwf	(___fldiv@a+1)^0,c
 15036   0050B8  0E20               	movlw	32
 15037   0050BA  6E48               	movwf	(___fldiv@a+2)^0,c
 15038   0050BC  0E41               	movlw	65
 15039   0050BE  6E49               	movwf	(___fldiv@a+3)^0,c
 15040   0050C0  EC09  F034         	call	___fldiv	;wreg free
 15041   0050C4  C042  F0B1         	movff	?___fldiv,efgtoa@u
 15042   0050C8  C043  F0B2         	movff	?___fldiv+1,efgtoa@u+1
 15043   0050CC  C044  F0B3         	movff	?___fldiv+2,efgtoa@u+2
 15044   0050D0  C045  F0B4         	movff	?___fldiv+3,efgtoa@u+3
 15045   0050D4                     
 15046                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
 15047   0050D4  0100               	movlb	0	; () banked
 15048   0050D6  4BA8               	infsnz	efgtoa@i& (0+255),f,b
 15049   0050D8  2BA9               	incf	(efgtoa@i+1)& (0+255),f,b
 15050   0050DA                     l11814:
 15051                           
 15052                           ; BSR set to: 0
 15053                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
 15054   0050DA  5196               	movf	efgtoa@m& (0+255),w,b
 15055   0050DC  5DA8               	subwf	efgtoa@i& (0+255),w,b
 15056   0050DE  51A9               	movf	(efgtoa@i+1)& (0+255),w,b
 15057   0050E0  0A80               	xorlw	128
 15058   0050E2  6F87               	movwf	??_efgtoa& (0+255),b
 15059   0050E4  5197               	movf	(efgtoa@m+1)& (0+255),w,b
 15060   0050E6  0A80               	xorlw	128
 15061   0050E8  5987               	subwfb	??_efgtoa& (0+255),w,b
 15062   0050EA  A0D8               	btfss	status,0,c
 15063   0050EC  EF7A  F028         	goto	u14861
 15064   0050F0  EF7C  F028         	goto	u14860
 15065   0050F4                     u14861:
 15066   0050F4  EFF2  F027         	goto	l11806
 15067   0050F8                     u14860:
 15068   0050F8                     
 15069                           ; BSR set to: 0
 15070                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
 15071   0050F8  C0B1  F021         	movff	efgtoa@u,___flmul@b
 15072   0050FC  C0B2  F022         	movff	efgtoa@u+1,___flmul@b+1
 15073   005100  C0B3  F023         	movff	efgtoa@u+2,___flmul@b+2
 15074   005104  C0B4  F024         	movff	efgtoa@u+3,___flmul@b+3
 15075   005108  0E00               	movlw	0
 15076   00510A  6E25               	movwf	___flmul@a^0,c
 15077   00510C  0E00               	movlw	0
 15078   00510E  6E26               	movwf	(___flmul@a+1)^0,c
 15079   005110  0EA0               	movlw	160
 15080   005112  6E27               	movwf	(___flmul@a+2)^0,c
 15081   005114  0E40               	movlw	64
 15082   005116  6E28               	movwf	(___flmul@a+3)^0,c
 15083   005118  ECF4  F031         	call	___flmul	;wreg free
 15084   00511C  C021  F0A4         	movff	?___flmul,efgtoa@l
 15085   005120  C022  F0A5         	movff	?___flmul+1,efgtoa@l+1
 15086   005124  C023  F0A6         	movff	?___flmul+2,efgtoa@l+2
 15087   005128  C024  F0A7         	movff	?___flmul+3,efgtoa@l+3
 15088   00512C                     
 15089                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
 15090   00512C  C0A0  F042         	movff	efgtoa@h,___flge@ff1
 15091   005130  C0A1  F043         	movff	efgtoa@h+1,___flge@ff1+1
 15092   005134  C0A2  F044         	movff	efgtoa@h+2,___flge@ff1+2
 15093   005138  C0A3  F045         	movff	efgtoa@h+3,___flge@ff1+3
 15094   00513C  C0A4  F046         	movff	efgtoa@l,___flge@ff2
 15095   005140  C0A5  F047         	movff	efgtoa@l+1,___flge@ff2+1
 15096   005144  C0A6  F048         	movff	efgtoa@l+2,___flge@ff2+2
 15097   005148  C0A7  F049         	movff	efgtoa@l+3,___flge@ff2+3
 15098   00514C  ECE3  F048         	call	___flge	;wreg free
 15099   005150  B0D8               	btfsc	status,0,c
 15100   005152  EFAD  F028         	goto	u14871
 15101   005156  EFAF  F028         	goto	u14870
 15102   00515A                     u14871:
 15103   00515A  EFBA  F028         	goto	l11822
 15104   00515E                     u14870:
 15105   00515E                     
 15106                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
 15107   00515E  0E00               	movlw	0
 15108   005160  0100               	movlb	0	; () banked
 15109   005162  6FA4               	movwf	efgtoa@l& (0+255),b
 15110   005164  0E00               	movlw	0
 15111   005166  6FA5               	movwf	(efgtoa@l+1)& (0+255),b
 15112   005168  0E00               	movlw	0
 15113   00516A  6FA6               	movwf	(efgtoa@l+2)& (0+255),b
 15114   00516C  0E00               	movlw	0
 15115   00516E  6FA7               	movwf	(efgtoa@l+3)& (0+255),b
 15116                           
 15117                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
 15118   005170  EFE3  F028         	goto	l11828
 15119   005174                     l11822:
 15120                           
 15121                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
 15122   005174  C0A0  F06F         	movff	efgtoa@h,___fleq@ff1
 15123   005178  C0A1  F070         	movff	efgtoa@h+1,___fleq@ff1+1
 15124   00517C  C0A2  F071         	movff	efgtoa@h+2,___fleq@ff1+2
 15125   005180  C0A3  F072         	movff	efgtoa@h+3,___fleq@ff1+3
 15126   005184  C0A4  F073         	movff	efgtoa@l,___fleq@ff2
 15127   005188  C0A5  F074         	movff	efgtoa@l+1,___fleq@ff2+1
 15128   00518C  C0A6  F075         	movff	efgtoa@l+2,___fleq@ff2+2
 15129   005190  C0A7  F076         	movff	efgtoa@l+3,___fleq@ff2+3
 15130   005194  EC85  F04D         	call	___fleq	;wreg free
 15131   005198  A0D8               	btfss	status,0,c
 15132   00519A  EFD1  F028         	goto	u14881
 15133   00519E  EFD3  F028         	goto	u14880
 15134   0051A2                     u14881:
 15135   0051A2  EFE3  F028         	goto	l11828
 15136   0051A6                     u14880:
 15137   0051A6  0100               	movlb	0	; () banked
 15138   0051A8  B194               	btfsc	efgtoa@d& (0+255),0,b
 15139   0051AA  EFD9  F028         	goto	u14891
 15140   0051AE  EFDB  F028         	goto	u14890
 15141   0051B2                     u14891:
 15142   0051B2  EFE3  F028         	goto	l11828
 15143   0051B6                     u14890:
 15144   0051B6                     
 15145                           ; BSR set to: 0
 15146                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
 15147   0051B6  0E00               	movlw	0
 15148   0051B8  6FA4               	movwf	efgtoa@l& (0+255),b
 15149   0051BA  0E00               	movlw	0
 15150   0051BC  6FA5               	movwf	(efgtoa@l+1)& (0+255),b
 15151   0051BE  0E00               	movlw	0
 15152   0051C0  6FA6               	movwf	(efgtoa@l+2)& (0+255),b
 15153   0051C2  0E00               	movlw	0
 15154   0051C4  6FA7               	movwf	(efgtoa@l+3)& (0+255),b
 15155   0051C6                     l11828:
 15156                           
 15157                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
 15158   0051C6  C0AB  F011         	movff	efgtoa@g,___fladd@b
 15159   0051CA  C0AC  F012         	movff	efgtoa@g+1,___fladd@b+1
 15160   0051CE  C0AD  F013         	movff	efgtoa@g+2,___fladd@b+2
 15161   0051D2  C0AE  F014         	movff	efgtoa@g+3,___fladd@b+3
 15162   0051D6  C0A4  F015         	movff	efgtoa@l,___fladd@a
 15163   0051DA  C0A5  F016         	movff	efgtoa@l+1,___fladd@a+1
 15164   0051DE  C0A6  F017         	movff	efgtoa@l+2,___fladd@a+2
 15165   0051E2  C0A7  F018         	movff	efgtoa@l+3,___fladd@a+3
 15166   0051E6  EC00  F02B         	call	___fladd	;wreg free
 15167   0051EA  C011  F0A0         	movff	?___fladd,efgtoa@h
 15168   0051EE  C012  F0A1         	movff	?___fladd+1,efgtoa@h+1
 15169   0051F2  C013  F0A2         	movff	?___fladd+2,efgtoa@h+2
 15170   0051F6  C014  F0A3         	movff	?___fladd+3,efgtoa@h+3
 15171   0051FA                     
 15172                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
 15173   0051FA  C0A0  F042         	movff	efgtoa@h,___flge@ff1
 15174   0051FE  C0A1  F043         	movff	efgtoa@h+1,___flge@ff1+1
 15175   005202  C0A2  F044         	movff	efgtoa@h+2,___flge@ff1+2
 15176   005206  C0A3  F045         	movff	efgtoa@h+3,___flge@ff1+3
 15177   00520A  0E00               	movlw	0
 15178   00520C  6E25               	movwf	___flmul@a^0,c
 15179   00520E  0E00               	movlw	0
 15180   005210  6E26               	movwf	(___flmul@a+1)^0,c
 15181   005212  0E20               	movlw	32
 15182   005214  6E27               	movwf	(___flmul@a+2)^0,c
 15183   005216  0E41               	movlw	65
 15184   005218  6E28               	movwf	(___flmul@a+3)^0,c
 15185   00521A  C09A  F021         	movff	efgtoa@ou,___flmul@b
 15186   00521E  C09B  F022         	movff	efgtoa@ou+1,___flmul@b+1
 15187   005222  C09C  F023         	movff	efgtoa@ou+2,___flmul@b+2
 15188   005226  C09D  F024         	movff	efgtoa@ou+3,___flmul@b+3
 15189   00522A  ECF4  F031         	call	___flmul	;wreg free
 15190   00522E  C021  F046         	movff	?___flmul,___flge@ff2
 15191   005232  C022  F047         	movff	?___flmul+1,___flge@ff2+1
 15192   005236  C023  F048         	movff	?___flmul+2,___flge@ff2+2
 15193   00523A  C024  F049         	movff	?___flmul+3,___flge@ff2+3
 15194   00523E  ECE3  F048         	call	___flge	;wreg free
 15195   005242  A0D8               	btfss	status,0,c
 15196   005244  EF26  F029         	goto	u14901
 15197   005248  EF28  F029         	goto	u14900
 15198   00524C                     u14901:
 15199   00524C  EF51  F029         	goto	l11840
 15200   005250                     u14900:
 15201   005250                     
 15202                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
 15203   005250  0100               	movlb	0	; () banked
 15204   005252  4B98               	infsnz	efgtoa@e& (0+255),f,b
 15205   005254  2B99               	incf	(efgtoa@e+1)& (0+255),f,b
 15206   005256                     
 15207                           ; BSR set to: 0
 15208                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
 15209   005256  C09A  F021         	movff	efgtoa@ou,___flmul@b
 15210   00525A  C09B  F022         	movff	efgtoa@ou+1,___flmul@b+1
 15211   00525E  C09C  F023         	movff	efgtoa@ou+2,___flmul@b+2
 15212   005262  C09D  F024         	movff	efgtoa@ou+3,___flmul@b+3
 15213   005266  0E00               	movlw	0
 15214   005268  6E25               	movwf	___flmul@a^0,c
 15215   00526A  0E00               	movlw	0
 15216   00526C  6E26               	movwf	(___flmul@a+1)^0,c
 15217   00526E  0E20               	movlw	32
 15218   005270  6E27               	movwf	(___flmul@a+2)^0,c
 15219   005272  0E41               	movlw	65
 15220   005274  6E28               	movwf	(___flmul@a+3)^0,c
 15221   005276  ECF4  F031         	call	___flmul	;wreg free
 15222   00527A  C021  F09A         	movff	?___flmul,efgtoa@ou
 15223   00527E  C022  F09B         	movff	?___flmul+1,efgtoa@ou+1
 15224   005282  C023  F09C         	movff	?___flmul+2,efgtoa@ou+2
 15225   005286  C024  F09D         	movff	?___flmul+3,efgtoa@ou+3
 15226   00528A                     
 15227                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
 15228   00528A  0E66               	movlw	102
 15229   00528C  0100               	movlb	0	; () banked
 15230   00528E  1993               	xorwf	efgtoa@nmode& (0+255),w,b
 15231   005290  A4D8               	btfss	status,2,c
 15232   005292  EF4D  F029         	goto	u14911
 15233   005296  EF4F  F029         	goto	u14910
 15234   00529A                     u14911:
 15235   00529A  EF51  F029         	goto	l11840
 15236   00529E                     u14910:
 15237   00529E                     
 15238                           ; BSR set to: 0
 15239                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
 15240   00529E  4B96               	infsnz	efgtoa@m& (0+255),f,b
 15241   0052A0  2B97               	incf	(efgtoa@m+1)& (0+255),f,b
 15242   0052A2                     l11840:
 15243                           
 15244                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
 15245   0052A2  C09A  F0B1         	movff	efgtoa@ou,efgtoa@u
 15246   0052A6  C09B  F0B2         	movff	efgtoa@ou+1,efgtoa@u+1
 15247   0052AA  C09C  F0B3         	movff	efgtoa@ou+2,efgtoa@u+2
 15248   0052AE  C09D  F0B4         	movff	efgtoa@ou+3,efgtoa@u+3
 15249   0052B2                     
 15250                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
 15251   0052B2  C098  F089         	movff	efgtoa@e,efgtoa@ne
 15252   0052B6  C099  F08A         	movff	efgtoa@e+1,efgtoa@ne+1
 15253   0052BA                     
 15254                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
 15255   0052BA  0E00               	movlw	0
 15256   0052BC  0100               	movlb	0	; () banked
 15257   0052BE  6F91               	movwf	efgtoa@pp& (0+255),b
 15258   0052C0                     
 15259                           ; BSR set to: 0
 15260                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
 15261   0052C0  0E00               	movlw	0
 15262   0052C2  6F8E               	movwf	(efgtoa@t+1)& (0+255),b
 15263   0052C4  0E00               	movlw	0
 15264   0052C6  6F8D               	movwf	efgtoa@t& (0+255),b
 15265   0052C8                     
 15266                           ; BSR set to: 0
 15267                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
 15268   0052C8  0E00               	movlw	0
 15269   0052CA  6FA9               	movwf	(efgtoa@i+1)& (0+255),b
 15270   0052CC  0E00               	movlw	0
 15271   0052CE  6FA8               	movwf	efgtoa@i& (0+255),b
 15272                           
 15273                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
 15274   0052D0  EF4F  F02A         	goto	l11890
 15275   0052D4                     l11850:
 15276                           
 15277                           ; BSR set to: 0
 15278                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
 15279   0052D4  C0A0  F042         	movff	efgtoa@h,___fldiv@b
 15280   0052D8  C0A1  F043         	movff	efgtoa@h+1,___fldiv@b+1
 15281   0052DC  C0A2  F044         	movff	efgtoa@h+2,___fldiv@b+2
 15282   0052E0  C0A3  F045         	movff	efgtoa@h+3,___fldiv@b+3
 15283   0052E4  C0B1  F046         	movff	efgtoa@u,___fldiv@a
 15284   0052E8  C0B2  F047         	movff	efgtoa@u+1,___fldiv@a+1
 15285   0052EC  C0B3  F048         	movff	efgtoa@u+2,___fldiv@a+2
 15286   0052F0  C0B4  F049         	movff	efgtoa@u+3,___fldiv@a+3
 15287   0052F4  EC09  F034         	call	___fldiv	;wreg free
 15288   0052F8  C042  F05B         	movff	?___fldiv,floorf@x
 15289   0052FC  C043  F05C         	movff	?___fldiv+1,floorf@x+1
 15290   005300  C044  F05D         	movff	?___fldiv+2,floorf@x+2
 15291   005304  C045  F05E         	movff	?___fldiv+3,floorf@x+3
 15292   005308  EC11  F03D         	call	_floorf	;wreg free
 15293   00530C  C05B  F0A4         	movff	?_floorf,efgtoa@l
 15294   005310  C05C  F0A5         	movff	?_floorf+1,efgtoa@l+1
 15295   005314  C05D  F0A6         	movff	?_floorf+2,efgtoa@l+2
 15296   005318  C05E  F0A7         	movff	?_floorf+3,efgtoa@l+3
 15297                           
 15298                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
 15299   00531C  C0A4  F05B         	movff	efgtoa@l,___fltol@f1
 15300   005320  C0A5  F05C         	movff	efgtoa@l+1,___fltol@f1+1
 15301   005324  C0A6  F05D         	movff	efgtoa@l+2,___fltol@f1+2
 15302   005328  C0A7  F05E         	movff	efgtoa@l+3,___fltol@f1+3
 15303   00532C  EC60  F048         	call	___fltol	;wreg free
 15304   005330  BE5C               	btfsc	(?___fltol+1)^0,7,c
 15305   005332  EFA6  F029         	goto	u14920
 15306   005336  505C               	movf	(?___fltol+1)^0,w,c
 15307   005338  E107               	bnz	u14921
 15308   00533A  0E0A               	movlw	10
 15309   00533C  5C5B               	subwf	?___fltol^0,w,c
 15310   00533E  B0D8               	btfsc	status,0,c
 15311   005340  EFA4  F029         	goto	u14921
 15312   005344  EFA6  F029         	goto	u14920
 15313   005348                     u14921:
 15314   005348  EFB6  F029         	goto	l11854
 15315   00534C                     u14920:
 15316   00534C  C0A4  F05B         	movff	efgtoa@l,___fltol@f1
 15317   005350  C0A5  F05C         	movff	efgtoa@l+1,___fltol@f1+1
 15318   005354  C0A6  F05D         	movff	efgtoa@l+2,___fltol@f1+2
 15319   005358  C0A7  F05E         	movff	efgtoa@l+3,___fltol@f1+3
 15320   00535C  EC60  F048         	call	___fltol	;wreg free
 15321   005360  C05B  F094         	movff	?___fltol,efgtoa@d
 15322   005364  C05C  F095         	movff	?___fltol+1,efgtoa@d+1
 15323   005368  EFBB  F029         	goto	l1712
 15324   00536C                     l11854:
 15325   00536C  0E00               	movlw	0
 15326   00536E  0100               	movlb	0	; () banked
 15327   005370  6F95               	movwf	(efgtoa@d+1)& (0+255),b
 15328   005372  0E09               	movlw	9
 15329   005374  6F94               	movwf	efgtoa@d& (0+255),b
 15330   005376                     l1712:
 15331                           
 15332                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
 15333   005376  0100               	movlb	0	; () banked
 15334   005378  5191               	movf	efgtoa@pp& (0+255),w,b
 15335   00537A  A4D8               	btfss	status,2,c
 15336   00537C  EFC2  F029         	goto	u14931
 15337   005380  EFC4  F029         	goto	u14930
 15338   005384                     u14931:
 15339   005384  EFEC  F029         	goto	l11874
 15340   005388                     u14930:
 15341   005388                     
 15342                           ; BSR set to: 0
 15343   005388  BF8A               	btfsc	(efgtoa@ne+1)& (0+255),7,b
 15344   00538A  EFCB  F029         	goto	u14940
 15345   00538E  EFC9  F029         	goto	u14941
 15346   005392                     u14941:
 15347   005392  EFEC  F029         	goto	l11874
 15348   005396                     u14940:
 15349   005396                     
 15350                           ; BSR set to: 0
 15351                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
 15352   005396  0E35               	movlw	low _dbuf
 15353   005398  25AF               	addwf	efgtoa@n& (0+255),w,b
 15354   00539A  6ED9               	movwf	fsr2l,c
 15355   00539C  0E02               	movlw	high _dbuf
 15356   00539E  21B0               	addwfc	(efgtoa@n+1)& (0+255),w,b
 15357   0053A0  6EDA               	movwf	fsr2h,c
 15358   0053A2  0E2E               	movlw	46
 15359   0053A4  6EDF               	movwf	indf2,c
 15360   0053A6                     
 15361                           ; BSR set to: 0
 15362   0053A6  4BAF               	infsnz	efgtoa@n& (0+255),f,b
 15363   0053A8  2BB0               	incf	(efgtoa@n+1)& (0+255),f,b
 15364   0053AA                     
 15365                           ; BSR set to: 0
 15366                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
 15367   0053AA  079E               	decf	efgtoa@w& (0+255),f,b
 15368   0053AC  A0D8               	btfss	status,0,c
 15369   0053AE  079F               	decf	(efgtoa@w+1)& (0+255),f,b
 15370   0053B0                     
 15371                           ; BSR set to: 0
 15372                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
 15373   0053B0  0E01               	movlw	1
 15374   0053B2  6F91               	movwf	efgtoa@pp& (0+255),b
 15375   0053B4  EFEC  F029         	goto	l11874
 15376   0053B8                     l11866:
 15377                           
 15378                           ; BSR set to: 0
 15379                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
 15380   0053B8  0E35               	movlw	low _dbuf
 15381   0053BA  25AF               	addwf	efgtoa@n& (0+255),w,b
 15382   0053BC  6ED9               	movwf	fsr2l,c
 15383   0053BE  0E02               	movlw	high _dbuf
 15384   0053C0  21B0               	addwfc	(efgtoa@n+1)& (0+255),w,b
 15385   0053C2  6EDA               	movwf	fsr2h,c
 15386   0053C4  0E30               	movlw	48
 15387   0053C6  6EDF               	movwf	indf2,c
 15388   0053C8                     
 15389                           ; BSR set to: 0
 15390   0053C8  4BAF               	infsnz	efgtoa@n& (0+255),f,b
 15391   0053CA  2BB0               	incf	(efgtoa@n+1)& (0+255),f,b
 15392   0053CC                     
 15393                           ; BSR set to: 0
 15394                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
 15395   0053CC  079E               	decf	efgtoa@w& (0+255),f,b
 15396   0053CE  A0D8               	btfss	status,0,c
 15397   0053D0  079F               	decf	(efgtoa@w+1)& (0+255),f,b
 15398   0053D2                     
 15399                           ; BSR set to: 0
 15400                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
 15401   0053D2  078D               	decf	efgtoa@t& (0+255),f,b
 15402   0053D4  A0D8               	btfss	status,0,c
 15403   0053D6  078E               	decf	(efgtoa@t+1)& (0+255),f,b
 15404   0053D8                     l11874:
 15405                           
 15406                           ; BSR set to: 0
 15407                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
 15408   0053D8  518D               	movf	efgtoa@t& (0+255),w,b
 15409   0053DA  118E               	iorwf	(efgtoa@t+1)& (0+255),w,b
 15410   0053DC  A4D8               	btfss	status,2,c
 15411   0053DE  EFF3  F029         	goto	u14951
 15412   0053E2  EFF5  F029         	goto	u14950
 15413   0053E6                     u14951:
 15414   0053E6  EFDC  F029         	goto	l11866
 15415   0053EA                     u14950:
 15416   0053EA                     
 15417                           ; BSR set to: 0
 15418                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
 15419   0053EA  0E35               	movlw	low _dbuf
 15420   0053EC  25AF               	addwf	efgtoa@n& (0+255),w,b
 15421   0053EE  6ED9               	movwf	fsr2l,c
 15422   0053F0  0E02               	movlw	high _dbuf
 15423   0053F2  21B0               	addwfc	(efgtoa@n+1)& (0+255),w,b
 15424   0053F4  6EDA               	movwf	fsr2h,c
 15425   0053F6  5194               	movf	efgtoa@d& (0+255),w,b
 15426   0053F8  0F30               	addlw	48
 15427   0053FA  6EDF               	movwf	indf2,c
 15428   0053FC                     
 15429                           ; BSR set to: 0
 15430   0053FC  4BAF               	infsnz	efgtoa@n& (0+255),f,b
 15431   0053FE  2BB0               	incf	(efgtoa@n+1)& (0+255),f,b
 15432   005400                     
 15433                           ; BSR set to: 0
 15434                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
 15435   005400  079E               	decf	efgtoa@w& (0+255),f,b
 15436   005402  A0D8               	btfss	status,0,c
 15437   005404  079F               	decf	(efgtoa@w+1)& (0+255),f,b
 15438   005406                     
 15439                           ; BSR set to: 0
 15440                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
 15441   005406  C0A0  F03A         	movff	efgtoa@h,___flsub@b
 15442   00540A  C0A1  F03B         	movff	efgtoa@h+1,___flsub@b+1
 15443   00540E  C0A2  F03C         	movff	efgtoa@h+2,___flsub@b+2
 15444   005412  C0A3  F03D         	movff	efgtoa@h+3,___flsub@b+3
 15445   005416  C0A4  F025         	movff	efgtoa@l,___flmul@a
 15446   00541A  C0A5  F026         	movff	efgtoa@l+1,___flmul@a+1
 15447   00541E  C0A6  F027         	movff	efgtoa@l+2,___flmul@a+2
 15448   005422  C0A7  F028         	movff	efgtoa@l+3,___flmul@a+3
 15449   005426  C0B1  F021         	movff	efgtoa@u,___flmul@b
 15450   00542A  C0B2  F022         	movff	efgtoa@u+1,___flmul@b+1
 15451   00542E  C0B3  F023         	movff	efgtoa@u+2,___flmul@b+2
 15452   005432  C0B4  F024         	movff	efgtoa@u+3,___flmul@b+3
 15453   005436  ECF4  F031         	call	___flmul	;wreg free
 15454   00543A  C021  F03E         	movff	?___flmul,___flsub@a
 15455   00543E  C022  F03F         	movff	?___flmul+1,___flsub@a+1
 15456   005442  C023  F040         	movff	?___flmul+2,___flsub@a+2
 15457   005446  C024  F041         	movff	?___flmul+3,___flsub@a+3
 15458   00544A  EC8D  F053         	call	___flsub	;wreg free
 15459   00544E  C03A  F0A0         	movff	?___flsub,efgtoa@h
 15460   005452  C03B  F0A1         	movff	?___flsub+1,efgtoa@h+1
 15461   005456  C03C  F0A2         	movff	?___flsub+2,efgtoa@h+2
 15462   00545A  C03D  F0A3         	movff	?___flsub+3,efgtoa@h+3
 15463   00545E                     
 15464                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
 15465   00545E  C0B1  F042         	movff	efgtoa@u,___fldiv@b
 15466   005462  C0B2  F043         	movff	efgtoa@u+1,___fldiv@b+1
 15467   005466  C0B3  F044         	movff	efgtoa@u+2,___fldiv@b+2
 15468   00546A  C0B4  F045         	movff	efgtoa@u+3,___fldiv@b+3
 15469   00546E  0E00               	movlw	0
 15470   005470  6E46               	movwf	___fldiv@a^0,c
 15471   005472  0E00               	movlw	0
 15472   005474  6E47               	movwf	(___fldiv@a+1)^0,c
 15473   005476  0E20               	movlw	32
 15474   005478  6E48               	movwf	(___fldiv@a+2)^0,c
 15475   00547A  0E41               	movlw	65
 15476   00547C  6E49               	movwf	(___fldiv@a+3)^0,c
 15477   00547E  EC09  F034         	call	___fldiv	;wreg free
 15478   005482  C042  F0B1         	movff	?___fldiv,efgtoa@u
 15479   005486  C043  F0B2         	movff	?___fldiv+1,efgtoa@u+1
 15480   00548A  C044  F0B3         	movff	?___fldiv+2,efgtoa@u+2
 15481   00548E  C045  F0B4         	movff	?___fldiv+3,efgtoa@u+3
 15482   005492                     
 15483                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
 15484   005492  0100               	movlb	0	; () banked
 15485   005494  0789               	decf	efgtoa@ne& (0+255),f,b
 15486   005496  A0D8               	btfss	status,0,c
 15487   005498  078A               	decf	(efgtoa@ne+1)& (0+255),f,b
 15488   00549A                     
 15489                           ; BSR set to: 0
 15490                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
 15491   00549A  4BA8               	infsnz	efgtoa@i& (0+255),f,b
 15492   00549C  2BA9               	incf	(efgtoa@i+1)& (0+255),f,b
 15493   00549E                     l11890:
 15494                           
 15495                           ; BSR set to: 0
 15496                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
 15497   00549E  5196               	movf	efgtoa@m& (0+255),w,b
 15498   0054A0  5DA8               	subwf	efgtoa@i& (0+255),w,b
 15499   0054A2  51A9               	movf	(efgtoa@i+1)& (0+255),w,b
 15500   0054A4  0A80               	xorlw	128
 15501   0054A6  6F87               	movwf	??_efgtoa& (0+255),b
 15502   0054A8  5197               	movf	(efgtoa@m+1)& (0+255),w,b
 15503   0054AA  0A80               	xorlw	128
 15504   0054AC  5987               	subwfb	??_efgtoa& (0+255),w,b
 15505   0054AE  B0D8               	btfsc	status,0,c
 15506   0054B0  EF5C  F02A         	goto	u14961
 15507   0054B4  EF5E  F02A         	goto	u14960
 15508   0054B8                     u14961:
 15509   0054B8  EF6C  F02A         	goto	l11894
 15510   0054BC                     u14960:
 15511   0054BC                     
 15512                           ; BSR set to: 0
 15513   0054BC  BFB0               	btfsc	(efgtoa@n+1)& (0+255),7,b
 15514   0054BE  EF6A  F02A         	goto	u14971
 15515   0054C2  51B0               	movf	(efgtoa@n+1)& (0+255),w,b
 15516   0054C4  E109               	bnz	u14970
 15517   0054C6  0E4B               	movlw	75
 15518   0054C8  5DAF               	subwf	efgtoa@n& (0+255),w,b
 15519   0054CA  A0D8               	btfss	status,0,c
 15520   0054CC  EF6A  F02A         	goto	u14971
 15521   0054D0  EF6C  F02A         	goto	u14970
 15522   0054D4                     u14971:
 15523   0054D4  EF6A  F029         	goto	l11850
 15524   0054D8                     u14970:
 15525   0054D8                     l11894:
 15526                           
 15527                           ; BSR set to: 0
 15528                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
 15529   0054D8  0E00               	movlw	0
 15530   0054DA  6FA9               	movwf	(efgtoa@i+1)& (0+255),b
 15531   0054DC  0E4F               	movlw	79
 15532   0054DE  6FA8               	movwf	efgtoa@i& (0+255),b
 15533   0054E0                     
 15534                           ; BSR set to: 0
 15535                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
 15536   0054E0  0E35               	movlw	low _dbuf
 15537   0054E2  25A8               	addwf	efgtoa@i& (0+255),w,b
 15538   0054E4  6ED9               	movwf	fsr2l,c
 15539   0054E6  0E02               	movlw	high _dbuf
 15540   0054E8  21A9               	addwfc	(efgtoa@i+1)& (0+255),w,b
 15541   0054EA  6EDA               	movwf	fsr2h,c
 15542   0054EC  0E00               	movlw	0
 15543   0054EE  6EDF               	movwf	indf2,c
 15544   0054F0                     
 15545                           ; BSR set to: 0
 15546                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
 15547   0054F0  0E35               	movlw	low _dbuf
 15548   0054F2  6F87               	movwf	??_efgtoa& (0+255),b
 15549   0054F4  0E02               	movlw	high _dbuf
 15550   0054F6  6F88               	movwf	(??_efgtoa+1)& (0+255),b
 15551   0054F8  51AF               	movf	efgtoa@n& (0+255),w,b
 15552   0054FA  5F87               	subwf	??_efgtoa& (0+255),f,b
 15553   0054FC  51B0               	movf	(efgtoa@n+1)& (0+255),w,b
 15554   0054FE  5B88               	subwfb	(??_efgtoa+1)& (0+255),f,b
 15555   005500  51A8               	movf	efgtoa@i& (0+255),w,b
 15556   005502  2587               	addwf	??_efgtoa& (0+255),w,b
 15557   005504  6E03               	movwf	memcpy@d1^0,c
 15558   005506  51A9               	movf	(efgtoa@i+1)& (0+255),w,b
 15559   005508  2188               	addwfc	(??_efgtoa+1)& (0+255),w,b
 15560   00550A  6E04               	movwf	(memcpy@d1+1)^0,c
 15561   00550C  0E35               	movlw	low _dbuf
 15562   00550E  6E05               	movwf	memcpy@s1^0,c
 15563   005510  0E02               	movlw	high _dbuf
 15564   005512  6E06               	movwf	(memcpy@s1+1)^0,c
 15565   005514  C0AF  F007         	movff	efgtoa@n,memcpy@n
 15566   005518  C0B0  F008         	movff	efgtoa@n+1,memcpy@n+1
 15567   00551C  ECF4  F052         	call	_memcpy	;wreg free
 15568   005520                     
 15569                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
 15570   005520  0100               	movlb	0	; () banked
 15571   005522  51AF               	movf	efgtoa@n& (0+255),w,b
 15572   005524  5DA8               	subwf	efgtoa@i& (0+255),w,b
 15573   005526  6FAF               	movwf	efgtoa@n& (0+255),b
 15574   005528  51B0               	movf	(efgtoa@n+1)& (0+255),w,b
 15575   00552A  59A9               	subwfb	(efgtoa@i+1)& (0+255),w,b
 15576   00552C  6FB0               	movwf	(efgtoa@n+1)& (0+255),b
 15577   00552E                     
 15578                           ; BSR set to: 0
 15579                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
 15580   00552E  51AA               	movf	efgtoa@sign& (0+255),w,b
 15581   005530  A4D8               	btfss	status,2,c
 15582   005532  EF9D  F02A         	goto	u14981
 15583   005536  EFA0  F02A         	goto	u14980
 15584   00553A                     u14981:
 15585   00553A  0E01               	movlw	1
 15586   00553C  EFA1  F02A         	goto	u14990
 15587   005540                     u14980:
 15588   005540  0E00               	movlw	0
 15589   005542                     u14990:
 15590   005542  6FA8               	movwf	efgtoa@i& (0+255),b
 15591   005544  6BA9               	clrf	(efgtoa@i+1)& (0+255),b
 15592   005546                     
 15593                           ; BSR set to: 0
 15594                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 772:  if (flags &
      +                           (1 << 1)) {
 15595   005546  A3FB               	btfss	_flags& (0+255),1,b
 15596   005548  EFA8  F02A         	goto	u15001
 15597   00554C  EFAA  F02A         	goto	u15000
 15598   005550                     u15001:
 15599   005550  EFD8  F02A         	goto	l11916
 15600   005554                     u15000:
 15601   005554  EFBA  F02A         	goto	l11912
 15602   005558                     l11908:
 15603                           
 15604                           ; BSR set to: 0
 15605                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 774:    dbuf[--n]
      +                           = '0';
 15606   005558  07AF               	decf	efgtoa@n& (0+255),f,b
 15607   00555A  A0D8               	btfss	status,0,c
 15608   00555C  07B0               	decf	(efgtoa@n+1)& (0+255),f,b
 15609   00555E  0E35               	movlw	low _dbuf
 15610   005560  25AF               	addwf	efgtoa@n& (0+255),w,b
 15611   005562  6ED9               	movwf	fsr2l,c
 15612   005564  0E02               	movlw	high _dbuf
 15613   005566  21B0               	addwfc	(efgtoa@n+1)& (0+255),w,b
 15614   005568  6EDA               	movwf	fsr2h,c
 15615   00556A  0E30               	movlw	48
 15616   00556C  6EDF               	movwf	indf2,c
 15617   00556E                     
 15618                           ; BSR set to: 0
 15619                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 775:    w--;
 15620   00556E  079E               	decf	efgtoa@w& (0+255),f,b
 15621   005570  A0D8               	btfss	status,0,c
 15622   005572  079F               	decf	(efgtoa@w+1)& (0+255),f,b
 15623   005574                     l11912:
 15624                           
 15625                           ; BSR set to: 0
 15626                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 773:   while (w >
      +                           i && n > i) {
 15627   005574  519E               	movf	efgtoa@w& (0+255),w,b
 15628   005576  5DA8               	subwf	efgtoa@i& (0+255),w,b
 15629   005578  51A9               	movf	(efgtoa@i+1)& (0+255),w,b
 15630   00557A  0A80               	xorlw	128
 15631   00557C  6F87               	movwf	??_efgtoa& (0+255),b
 15632   00557E  519F               	movf	(efgtoa@w+1)& (0+255),w,b
 15633   005580  0A80               	xorlw	128
 15634   005582  5987               	subwfb	??_efgtoa& (0+255),w,b
 15635   005584  B0D8               	btfsc	status,0,c
 15636   005586  EFC7  F02A         	goto	u15011
 15637   00558A  EFC9  F02A         	goto	u15010
 15638   00558E                     u15011:
 15639   00558E  EFD8  F02A         	goto	l11916
 15640   005592                     u15010:
 15641   005592                     
 15642                           ; BSR set to: 0
 15643   005592  51AF               	movf	efgtoa@n& (0+255),w,b
 15644   005594  5DA8               	subwf	efgtoa@i& (0+255),w,b
 15645   005596  51A9               	movf	(efgtoa@i+1)& (0+255),w,b
 15646   005598  0A80               	xorlw	128
 15647   00559A  6F87               	movwf	??_efgtoa& (0+255),b
 15648   00559C  51B0               	movf	(efgtoa@n+1)& (0+255),w,b
 15649   00559E  0A80               	xorlw	128
 15650   0055A0  5987               	subwfb	??_efgtoa& (0+255),w,b
 15651   0055A2  A0D8               	btfss	status,0,c
 15652   0055A4  EFD6  F02A         	goto	u15021
 15653   0055A8  EFD8  F02A         	goto	u15020
 15654   0055AC                     u15021:
 15655   0055AC  EFAC  F02A         	goto	l11908
 15656   0055B0                     u15020:
 15657   0055B0                     l11916:
 15658                           
 15659                           ; BSR set to: 0
 15660                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
 15661   0055B0  51AA               	movf	efgtoa@sign& (0+255),w,b
 15662   0055B2  B4D8               	btfsc	status,2,c
 15663   0055B4  EFDE  F02A         	goto	u15031
 15664   0055B8  EFE0  F02A         	goto	u15030
 15665   0055BC                     u15031:
 15666   0055BC  EFEB  F02A         	goto	l11920
 15667   0055C0                     u15030:
 15668   0055C0                     
 15669                           ; BSR set to: 0
 15670                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
 15671   0055C0  07AF               	decf	efgtoa@n& (0+255),f,b
 15672   0055C2  A0D8               	btfss	status,0,c
 15673   0055C4  07B0               	decf	(efgtoa@n+1)& (0+255),f,b
 15674   0055C6  0E35               	movlw	low _dbuf
 15675   0055C8  25AF               	addwf	efgtoa@n& (0+255),w,b
 15676   0055CA  6ED9               	movwf	fsr2l,c
 15677   0055CC  0E02               	movlw	high _dbuf
 15678   0055CE  21B0               	addwfc	(efgtoa@n+1)& (0+255),w,b
 15679   0055D0  6EDA               	movwf	fsr2h,c
 15680   0055D2  C0AA  FFDF         	movff	efgtoa@sign,indf2
 15681   0055D6                     l11920:
 15682                           
 15683                           ; BSR set to: 0
 15684                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
 15685   0055D6  51A8               	movf	efgtoa@i& (0+255),w,b
 15686   0055D8  5F9E               	subwf	efgtoa@w& (0+255),f,b
 15687   0055DA  51A9               	movf	(efgtoa@i+1)& (0+255),w,b
 15688   0055DC  5B9F               	subwfb	(efgtoa@w+1)& (0+255),f,b
 15689   0055DE                     
 15690                           ; BSR set to: 0
 15691                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
 15692   0055DE  C080  F013         	movff	efgtoa@fp,pad@fp
 15693   0055E2  C081  F014         	movff	efgtoa@fp+1,pad@fp+1
 15694   0055E6  0E35               	movlw	low _dbuf
 15695   0055E8  25AF               	addwf	efgtoa@n& (0+255),w,b
 15696   0055EA  6E15               	movwf	pad@buf^0,c
 15697   0055EC  0E02               	movlw	high _dbuf
 15698   0055EE  21B0               	addwfc	(efgtoa@n+1)& (0+255),w,b
 15699   0055F0  6E16               	movwf	(pad@buf+1)^0,c
 15700   0055F2  C09E  F017         	movff	efgtoa@w,pad@p
 15701   0055F6  C09F  F018         	movff	efgtoa@w+1,pad@p+1
 15702   0055FA  EC80  F04F         	call	_pad	;wreg free
 15703   0055FE                     l1679:
 15704   0055FE  0012               	return		;funcret
 15705   005600                     __end_of_efgtoa:
 15706                           	callstack 0
 15707                           
 15708 ;; *************** function _strcpy *****************
 15709 ;; Defined at:
 15710 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
 15711 ;; Parameters:    Size  Location     Type
 15712 ;;  dest            2    2[COMRAM] PTR unsigned char 
 15713 ;;		 -> dbuf(80), 
 15714 ;;  src             2    4[COMRAM] PTR const unsigned char 
 15715 ;;		 -> STR_10(4), STR_7(4), 
 15716 ;; Auto vars:     Size  Location     Type
 15717 ;;  d               2    8[COMRAM] PTR unsigned char 
 15718 ;;		 -> dbuf(80), 
 15719 ;;  s               2    6[COMRAM] PTR const unsigned char 
 15720 ;;		 -> STR_10(4), STR_7(4), 
 15721 ;; Return value:  Size  Location     Type
 15722 ;;                  2    2[COMRAM] PTR unsigned char 
 15723 ;; Registers used:
 15724 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 15725 ;; Tracked objects:
 15726 ;;		On entry : 0/0
 15727 ;;		On exit  : 0/0
 15728 ;;		Unchanged: 0/0
 15729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15730 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15731 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15733 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15734 ;;Total ram usage:        8 bytes
 15735 ;; Hardware stack levels used: 1
 15736 ;; Hardware stack levels required when called: 3
 15737 ;; This function calls:
 15738 ;;		Nothing
 15739 ;; This function is called by:
 15740 ;;		_efgtoa
 15741 ;; This function uses a non-reentrant model
 15742 ;;
 15743                           
 15744                           	psect	text36
 15745   00A8BA                     __ptext36:
 15746                           	callstack 0
 15747   00A8BA                     _strcpy:
 15748                           	callstack 21
 15749   00A8BA  C005  F007         	movff	strcpy@src,strcpy@s
 15750   00A8BE  C006  F008         	movff	strcpy@src+1,strcpy@s+1
 15751   00A8C2  C003  F009         	movff	strcpy@dest,strcpy@d
 15752   00A8C6  C004  F00A         	movff	strcpy@dest+1,strcpy@d+1
 15753   00A8CA                     l11582:
 15754   00A8CA  C007  FFF6         	movff	strcpy@s,tblptrl
 15755   00A8CE  C008  FFF7         	movff	strcpy@s+1,tblptrh
 15756   00A8D2  4A07               	infsnz	strcpy@s^0,f,c
 15757   00A8D4  2A08               	incf	(strcpy@s+1)^0,f,c
 15758   00A8D6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15759   00A8D6  6AF8               	clrf	tblptru,c
 15760   00A8D8                     	endif
 15761   00A8D8                     	if	0	;tblptru may be non-zero
 15762   00A8D8                     	endif
 15763   00A8D8  C009  FFD9         	movff	strcpy@d,fsr2l
 15764   00A8DC  C00A  FFDA         	movff	strcpy@d+1,fsr2h
 15765   00A8E0  4A09               	infsnz	strcpy@d^0,f,c
 15766   00A8E2  2A0A               	incf	(strcpy@d+1)^0,f,c
 15767   00A8E4  0008               	tblrd		*
 15768   00A8E6  CFF5 FFDF          	movff	tablat,indf2
 15769   00A8EA  50DF               	movf	indf2,w,c
 15770   00A8EC  A4D8               	btfss	status,2,c
 15771   00A8EE  EF7B  F054         	goto	u14441
 15772   00A8F2  EF7D  F054         	goto	u14440
 15773   00A8F6                     u14441:
 15774   00A8F6  EF65  F054         	goto	l11582
 15775   00A8FA                     u14440:
 15776   00A8FA  0012               	return		;funcret
 15777   00A8FC                     __end_of_strcpy:
 15778                           	callstack 0
 15779                           
 15780 ;; *************** function _memcpy *****************
 15781 ;; Defined at:
 15782 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
 15783 ;; Parameters:    Size  Location     Type
 15784 ;;  d1              2    2[COMRAM] PTR void 
 15785 ;;		 -> dbuf(80), 
 15786 ;;  s1              2    4[COMRAM] PTR const void 
 15787 ;;		 -> dbuf(80), 
 15788 ;;  n               2    6[COMRAM] unsigned int 
 15789 ;; Auto vars:     Size  Location     Type
 15790 ;;  s               2   11[COMRAM] PTR const unsigned char 
 15791 ;;		 -> dbuf(80), 
 15792 ;;  d               2    9[COMRAM] PTR unsigned char 
 15793 ;;		 -> dbuf(80), 
 15794 ;;  tmp             1    8[COMRAM] unsigned char 
 15795 ;; Return value:  Size  Location     Type
 15796 ;;                  2    2[COMRAM] PTR void 
 15797 ;; Registers used:
 15798 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15799 ;; Tracked objects:
 15800 ;;		On entry : 0/0
 15801 ;;		On exit  : 0/0
 15802 ;;		Unchanged: 0/0
 15803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15804 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15805 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15807 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15808 ;;Total ram usage:       11 bytes
 15809 ;; Hardware stack levels used: 1
 15810 ;; Hardware stack levels required when called: 3
 15811 ;; This function calls:
 15812 ;;		Nothing
 15813 ;; This function is called by:
 15814 ;;		_efgtoa
 15815 ;; This function uses a non-reentrant model
 15816 ;;
 15817                           
 15818                           	psect	text37
 15819   00A5E8                     __ptext37:
 15820                           	callstack 0
 15821   00A5E8                     _memcpy:
 15822                           	callstack 21
 15823   00A5E8  C005  F00C         	movff	memcpy@s1,memcpy@s
 15824   00A5EC  C006  F00D         	movff	memcpy@s1+1,memcpy@s+1
 15825   00A5F0  C003  F00A         	movff	memcpy@d1,memcpy@d
 15826   00A5F4  C004  F00B         	movff	memcpy@d1+1,memcpy@d+1
 15827   00A5F8  EF0E  F053         	goto	l11598
 15828   00A5FC                     l11590:
 15829   00A5FC  C00C  FFD9         	movff	memcpy@s,fsr2l
 15830   00A600  C00D  FFDA         	movff	memcpy@s+1,fsr2h
 15831   00A604  50DF               	movf	indf2,w,c
 15832   00A606  6E09               	movwf	memcpy@tmp^0,c
 15833   00A608  4A0C               	infsnz	memcpy@s^0,f,c
 15834   00A60A  2A0D               	incf	(memcpy@s+1)^0,f,c
 15835   00A60C  C00A  FFD9         	movff	memcpy@d,fsr2l
 15836   00A610  C00B  FFDA         	movff	memcpy@d+1,fsr2h
 15837   00A614  C009  FFDF         	movff	memcpy@tmp,indf2
 15838   00A618  4A0A               	infsnz	memcpy@d^0,f,c
 15839   00A61A  2A0B               	incf	(memcpy@d+1)^0,f,c
 15840   00A61C                     l11598:
 15841   00A61C  0607               	decf	memcpy@n^0,f,c
 15842   00A61E  A0D8               	btfss	status,0,c
 15843   00A620  0608               	decf	(memcpy@n+1)^0,f,c
 15844   00A622  2807               	incf	memcpy@n^0,w,c
 15845   00A624  E106               	bnz	u14461
 15846   00A626  2808               	incf	(memcpy@n+1)^0,w,c
 15847   00A628  A4D8               	btfss	status,2,c
 15848   00A62A  EF19  F053         	goto	u14461
 15849   00A62E  EF1B  F053         	goto	u14460
 15850   00A632                     u14461:
 15851   00A632  EFFE  F052         	goto	l11590
 15852   00A636                     u14460:
 15853   00A636  0012               	return		;funcret
 15854   00A638                     __end_of_memcpy:
 15855                           	callstack 0
 15856                           
 15857 ;; *************** function _labs *****************
 15858 ;; Defined at:
 15859 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
 15860 ;; Parameters:    Size  Location     Type
 15861 ;;  a               4    2[COMRAM] long 
 15862 ;; Auto vars:     Size  Location     Type
 15863 ;;		None
 15864 ;; Return value:  Size  Location     Type
 15865 ;;                  4    2[COMRAM] long 
 15866 ;; Registers used:
 15867 ;;		wreg, status,2, status,0
 15868 ;; Tracked objects:
 15869 ;;		On entry : 0/0
 15870 ;;		On exit  : 0/0
 15871 ;;		Unchanged: 0/0
 15872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15873 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15875 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15876 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15877 ;;Total ram usage:        8 bytes
 15878 ;; Hardware stack levels used: 1
 15879 ;; Hardware stack levels required when called: 3
 15880 ;; This function calls:
 15881 ;;		Nothing
 15882 ;; This function is called by:
 15883 ;;		_efgtoa
 15884 ;; This function uses a non-reentrant model
 15885 ;;
 15886                           
 15887                           	psect	text38
 15888   00A31A                     __ptext38:
 15889                           	callstack 0
 15890   00A31A                     _labs:
 15891                           	callstack 21
 15892   00A31A  BE06               	btfsc	(labs@a+3)^0,7,c
 15893   00A31C  EF9C  F051         	goto	u14450
 15894   00A320  5006               	movf	(labs@a+3)^0,w,c
 15895   00A322  1005               	iorwf	(labs@a+2)^0,w,c
 15896   00A324  1004               	iorwf	(labs@a+1)^0,w,c
 15897   00A326  E106               	bnz	u14451
 15898   00A328  0403               	decf	labs@a^0,w,c
 15899   00A32A  B0D8               	btfsc	status,0,c
 15900   00A32C  EF9A  F051         	goto	u14451
 15901   00A330  EF9C  F051         	goto	u14450
 15902   00A334                     u14451:
 15903   00A334  EFB7  F051         	goto	l1792
 15904   00A338                     u14450:
 15905   00A338  C003  F007         	movff	labs@a,??_labs
 15906   00A33C  C004  F008         	movff	labs@a+1,??_labs+1
 15907   00A340  C005  F009         	movff	labs@a+2,??_labs+2
 15908   00A344  C006  F00A         	movff	labs@a+3,??_labs+3
 15909   00A348  1E07               	comf	??_labs^0,f,c
 15910   00A34A  1E08               	comf	(??_labs+1)^0,f,c
 15911   00A34C  1E09               	comf	(??_labs+2)^0,f,c
 15912   00A34E  1E0A               	comf	(??_labs+3)^0,f,c
 15913   00A350  2A07               	incf	??_labs^0,f,c
 15914   00A352  0E00               	movlw	0
 15915   00A354  2208               	addwfc	(??_labs+1)^0,f,c
 15916   00A356  2209               	addwfc	(??_labs+2)^0,f,c
 15917   00A358  220A               	addwfc	(??_labs+3)^0,f,c
 15918   00A35A  C007  F003         	movff	??_labs,?_labs
 15919   00A35E  C008  F004         	movff	??_labs+1,?_labs+1
 15920   00A362  C009  F005         	movff	??_labs+2,?_labs+2
 15921   00A366  C00A  F006         	movff	??_labs+3,?_labs+3
 15922   00A36A  EFBF  F051         	goto	l1795
 15923   00A36E                     l1792:
 15924   00A36E  C003  F003         	movff	labs@a,?_labs
 15925   00A372  C004  F004         	movff	labs@a+1,?_labs+1
 15926   00A376  C005  F005         	movff	labs@a+2,?_labs+2
 15927   00A37A  C006  F006         	movff	labs@a+3,?_labs+3
 15928   00A37E                     l1795:
 15929   00A37E  0012               	return		;funcret
 15930   00A380                     __end_of_labs:
 15931                           	callstack 0
 15932                           
 15933 ;; *************** function _floorf *****************
 15934 ;; Defined at:
 15935 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
 15936 ;; Parameters:    Size  Location     Type
 15937 ;;  x               4   90[COMRAM] float 
 15938 ;; Auto vars:     Size  Location     Type
 15939 ;;  u               4  106[COMRAM] struct .
 15940 ;;  m               4  100[COMRAM] unsigned long 
 15941 ;;  e               2  104[COMRAM] int 
 15942 ;; Return value:  Size  Location     Type
 15943 ;;                  4   90[COMRAM] float 
 15944 ;; Registers used:
 15945 ;;		wreg, status,2, status,0
 15946 ;; Tracked objects:
 15947 ;;		On entry : 0/0
 15948 ;;		On exit  : 0/0
 15949 ;;		Unchanged: 0/0
 15950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15951 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15952 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15953 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15954 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15955 ;;Total ram usage:       20 bytes
 15956 ;; Hardware stack levels used: 1
 15957 ;; Hardware stack levels required when called: 3
 15958 ;; This function calls:
 15959 ;;		Nothing
 15960 ;; This function is called by:
 15961 ;;		_Calculator_display_result
 15962 ;;		_efgtoa
 15963 ;; This function uses a non-reentrant model
 15964 ;;
 15965                           
 15966                           	psect	text39
 15967   007A22                     __ptext39:
 15968                           	callstack 0
 15969   007A22                     _floorf:
 15970                           	callstack 26
 15971   007A22  C213  F06B         	movff	floorf@F526,floorf@u
 15972   007A26  C214  F06C         	movff	floorf@F526+1,floorf@u+1
 15973   007A2A  C215  F06D         	movff	floorf@F526+2,floorf@u+2
 15974   007A2E  C216  F06E         	movff	floorf@F526+3,floorf@u+3
 15975   007A32  C05B  F06B         	movff	floorf@x,floorf@u
 15976   007A36  C05C  F06C         	movff	floorf@x+1,floorf@u+1
 15977   007A3A  C05D  F06D         	movff	floorf@x+2,floorf@u+2
 15978   007A3E  C05E  F06E         	movff	floorf@x+3,floorf@u+3
 15979   007A42  0E81               	movlw	129
 15980   007A44  6E5F               	movwf	??_floorf^0,c
 15981   007A46  0EFF               	movlw	255
 15982   007A48  6E60               	movwf	(??_floorf+1)^0,c
 15983   007A4A  C06B  F061         	movff	floorf@u,??_floorf+2
 15984   007A4E  C06C  F062         	movff	floorf@u+1,??_floorf+3
 15985   007A52  C06D  F063         	movff	floorf@u+2,??_floorf+4
 15986   007A56  C06E  F064         	movff	floorf@u+3,??_floorf+5
 15987   007A5A  0E18               	movlw	24
 15988   007A5C  EF35  F03D         	goto	u13490
 15989   007A60                     u13495:
 15990   007A60  90D8               	bcf	status,0,c
 15991   007A62  3264               	rrcf	(??_floorf+5)^0,f,c
 15992   007A64  3263               	rrcf	(??_floorf+4)^0,f,c
 15993   007A66  3262               	rrcf	(??_floorf+3)^0,f,c
 15994   007A68  3261               	rrcf	(??_floorf+2)^0,f,c
 15995   007A6A                     u13490:
 15996   007A6A  2EE8               	decfsz	wreg,f,c
 15997   007A6C  EF30  F03D         	goto	u13495
 15998   007A70  5061               	movf	(??_floorf+2)^0,w,c
 15999   007A72  245F               	addwf	??_floorf^0,w,c
 16000   007A74  6E69               	movwf	floorf@e^0,c
 16001   007A76  0E00               	movlw	0
 16002   007A78  2060               	addwfc	(??_floorf+1)^0,w,c
 16003   007A7A  6E6A               	movwf	(floorf@e+1)^0,c
 16004   007A7C  BE6A               	btfsc	(floorf@e+1)^0,7,c
 16005   007A7E  EF4A  F03D         	goto	u13501
 16006   007A82  506A               	movf	(floorf@e+1)^0,w,c
 16007   007A84  E109               	bnz	u13500
 16008   007A86  0E17               	movlw	23
 16009   007A88  5C69               	subwf	floorf@e^0,w,c
 16010   007A8A  A0D8               	btfss	status,0,c
 16011   007A8C  EF4A  F03D         	goto	u13501
 16012   007A90  EF4C  F03D         	goto	u13500
 16013   007A94                     u13501:
 16014   007A94  EF56  F03D         	goto	l11052
 16015   007A98                     u13500:
 16016   007A98                     l11050:
 16017   007A98  C05B  F05B         	movff	floorf@x,?_floorf
 16018   007A9C  C05C  F05C         	movff	floorf@x+1,?_floorf+1
 16019   007AA0  C05D  F05D         	movff	floorf@x+2,?_floorf+2
 16020   007AA4  C05E  F05E         	movff	floorf@x+3,?_floorf+3
 16021   007AA8  EF19  F03E         	goto	l1568
 16022   007AAC                     l11052:
 16023   007AAC  BE6A               	btfsc	(floorf@e+1)^0,7,c
 16024   007AAE  EF5B  F03D         	goto	u13511
 16025   007AB2  EF5D  F03D         	goto	u13510
 16026   007AB6                     u13511:
 16027   007AB6  EFCD  F03D         	goto	l11062
 16028   007ABA                     u13510:
 16029   007ABA  C069  F05F         	movff	floorf@e,??_floorf
 16030   007ABE  0EFF               	movlw	255
 16031   007AC0  6E60               	movwf	(??_floorf+1)^0,c
 16032   007AC2  0EFF               	movlw	255
 16033   007AC4  6E61               	movwf	(??_floorf+2)^0,c
 16034   007AC6  0E7F               	movlw	127
 16035   007AC8  6E62               	movwf	(??_floorf+3)^0,c
 16036   007ACA  0E00               	movlw	0
 16037   007ACC  6E63               	movwf	(??_floorf+4)^0,c
 16038   007ACE                     u13525:
 16039   007ACE  665F               	tstfsz	??_floorf^0,c
 16040   007AD0  EF6C  F03D         	goto	u13526
 16041   007AD4  EF74  F03D         	goto	u13527
 16042   007AD8                     u13526:
 16043   007AD8  3463               	rlcf	(??_floorf+4)^0,w,c
 16044   007ADA  3263               	rrcf	(??_floorf+4)^0,f,c
 16045   007ADC  3262               	rrcf	(??_floorf+3)^0,f,c
 16046   007ADE  3261               	rrcf	(??_floorf+2)^0,f,c
 16047   007AE0  3260               	rrcf	(??_floorf+1)^0,f,c
 16048   007AE2  2E5F               	decfsz	??_floorf^0,f,c
 16049   007AE4  EF67  F03D         	goto	u13525
 16050   007AE8                     u13527:
 16051   007AE8  C060  F065         	movff	??_floorf+1,floorf@m
 16052   007AEC  C061  F066         	movff	??_floorf+2,floorf@m+1
 16053   007AF0  C062  F067         	movff	??_floorf+3,floorf@m+2
 16054   007AF4  C063  F068         	movff	??_floorf+4,floorf@m+3
 16055   007AF8  5065               	movf	floorf@m^0,w,c
 16056   007AFA  146B               	andwf	floorf@u^0,w,c
 16057   007AFC  6E5F               	movwf	??_floorf^0,c
 16058   007AFE  5066               	movf	(floorf@m+1)^0,w,c
 16059   007B00  146C               	andwf	(floorf@u+1)^0,w,c
 16060   007B02  6E60               	movwf	(??_floorf+1)^0,c
 16061   007B04  5067               	movf	(floorf@m+2)^0,w,c
 16062   007B06  146D               	andwf	(floorf@u+2)^0,w,c
 16063   007B08  6E61               	movwf	(??_floorf+2)^0,c
 16064   007B0A  5068               	movf	(floorf@m+3)^0,w,c
 16065   007B0C  146E               	andwf	(floorf@u+3)^0,w,c
 16066   007B0E  6E62               	movwf	(??_floorf+3)^0,c
 16067   007B10  505F               	movf	??_floorf^0,w,c
 16068   007B12  1060               	iorwf	(??_floorf+1)^0,w,c
 16069   007B14  1061               	iorwf	(??_floorf+2)^0,w,c
 16070   007B16  1062               	iorwf	(??_floorf+3)^0,w,c
 16071   007B18  A4D8               	btfss	status,2,c
 16072   007B1A  EF91  F03D         	goto	u13531
 16073   007B1E  EF93  F03D         	goto	u13530
 16074   007B22                     u13531:
 16075   007B22  EF95  F03D         	goto	l11058
 16076   007B26                     u13530:
 16077   007B26  EF4C  F03D         	goto	l11050
 16078   007B2A                     l11058:
 16079   007B2A  C06B  F05F         	movff	floorf@u,??_floorf
 16080   007B2E  C06C  F060         	movff	floorf@u+1,??_floorf+1
 16081   007B32  C06D  F061         	movff	floorf@u+2,??_floorf+2
 16082   007B36  C06E  F062         	movff	floorf@u+3,??_floorf+3
 16083   007B3A  0E20               	movlw	32
 16084   007B3C  EFA5  F03D         	goto	u13540
 16085   007B40                     u13545:
 16086   007B40  90D8               	bcf	status,0,c
 16087   007B42  3262               	rrcf	(??_floorf+3)^0,f,c
 16088   007B44  3261               	rrcf	(??_floorf+2)^0,f,c
 16089   007B46  3260               	rrcf	(??_floorf+1)^0,f,c
 16090   007B48  325F               	rrcf	??_floorf^0,f,c
 16091   007B4A                     u13540:
 16092   007B4A  2EE8               	decfsz	wreg,f,c
 16093   007B4C  EFA0  F03D         	goto	u13545
 16094   007B50  505F               	movf	??_floorf^0,w,c
 16095   007B52  1060               	iorwf	(??_floorf+1)^0,w,c
 16096   007B54  1061               	iorwf	(??_floorf+2)^0,w,c
 16097   007B56  1062               	iorwf	(??_floorf+3)^0,w,c
 16098   007B58  B4D8               	btfsc	status,2,c
 16099   007B5A  EFB1  F03D         	goto	u13551
 16100   007B5E  EFB3  F03D         	goto	u13550
 16101   007B62                     u13551:
 16102   007B62  EFBB  F03D         	goto	l1571
 16103   007B66                     u13550:
 16104   007B66  5065               	movf	floorf@m^0,w,c
 16105   007B68  266B               	addwf	floorf@u^0,f,c
 16106   007B6A  5066               	movf	(floorf@m+1)^0,w,c
 16107   007B6C  226C               	addwfc	(floorf@u+1)^0,f,c
 16108   007B6E  5067               	movf	(floorf@m+2)^0,w,c
 16109   007B70  226D               	addwfc	(floorf@u+2)^0,f,c
 16110   007B72  5068               	movf	(floorf@m+3)^0,w,c
 16111   007B74  226E               	addwfc	(floorf@u+3)^0,f,c
 16112   007B76                     l1571:
 16113   007B76  1C65               	comf	floorf@m^0,w,c
 16114   007B78  6E5F               	movwf	??_floorf^0,c
 16115   007B7A  1C66               	comf	(floorf@m+1)^0,w,c
 16116   007B7C  6E60               	movwf	(??_floorf+1)^0,c
 16117   007B7E  1C67               	comf	(floorf@m+2)^0,w,c
 16118   007B80  6E61               	movwf	(??_floorf+2)^0,c
 16119   007B82  1C68               	comf	(floorf@m+3)^0,w,c
 16120   007B84  6E62               	movwf	(??_floorf+3)^0,c
 16121   007B86  505F               	movf	??_floorf^0,w,c
 16122   007B88  166B               	andwf	floorf@u^0,f,c
 16123   007B8A  5060               	movf	(??_floorf+1)^0,w,c
 16124   007B8C  166C               	andwf	(floorf@u+1)^0,f,c
 16125   007B8E  5061               	movf	(??_floorf+2)^0,w,c
 16126   007B90  166D               	andwf	(floorf@u+2)^0,f,c
 16127   007B92  5062               	movf	(??_floorf+3)^0,w,c
 16128   007B94  166E               	andwf	(floorf@u+3)^0,f,c
 16129   007B96  EF11  F03E         	goto	l11070
 16130   007B9A                     l11062:
 16131   007B9A  C06B  F05F         	movff	floorf@u,??_floorf
 16132   007B9E  C06C  F060         	movff	floorf@u+1,??_floorf+1
 16133   007BA2  C06D  F061         	movff	floorf@u+2,??_floorf+2
 16134   007BA6  C06E  F062         	movff	floorf@u+3,??_floorf+3
 16135   007BAA  0E20               	movlw	32
 16136   007BAC  EFDD  F03D         	goto	u13560
 16137   007BB0                     u13565:
 16138   007BB0  90D8               	bcf	status,0,c
 16139   007BB2  3262               	rrcf	(??_floorf+3)^0,f,c
 16140   007BB4  3261               	rrcf	(??_floorf+2)^0,f,c
 16141   007BB6  3260               	rrcf	(??_floorf+1)^0,f,c
 16142   007BB8  325F               	rrcf	??_floorf^0,f,c
 16143   007BBA                     u13560:
 16144   007BBA  2EE8               	decfsz	wreg,f,c
 16145   007BBC  EFD8  F03D         	goto	u13565
 16146   007BC0  505F               	movf	??_floorf^0,w,c
 16147   007BC2  1060               	iorwf	(??_floorf+1)^0,w,c
 16148   007BC4  1061               	iorwf	(??_floorf+2)^0,w,c
 16149   007BC6  1062               	iorwf	(??_floorf+3)^0,w,c
 16150   007BC8  A4D8               	btfss	status,2,c
 16151   007BCA  EFE9  F03D         	goto	u13571
 16152   007BCE  EFEB  F03D         	goto	u13570
 16153   007BD2                     u13571:
 16154   007BD2  EFF5  F03D         	goto	l11066
 16155   007BD6                     u13570:
 16156   007BD6  0E00               	movlw	0
 16157   007BD8  6E6B               	movwf	floorf@u^0,c
 16158   007BDA  0E00               	movlw	0
 16159   007BDC  6E6C               	movwf	(floorf@u+1)^0,c
 16160   007BDE  0E00               	movlw	0
 16161   007BE0  6E6D               	movwf	(floorf@u+2)^0,c
 16162   007BE2  0E00               	movlw	0
 16163   007BE4  6E6E               	movwf	(floorf@u+3)^0,c
 16164   007BE6  EF11  F03E         	goto	l11070
 16165   007BEA                     l11066:
 16166   007BEA  90D8               	bcf	status,0,c
 16167   007BEC  346B               	rlcf	floorf@u^0,w,c
 16168   007BEE  6E5F               	movwf	??_floorf^0,c
 16169   007BF0  346C               	rlcf	(floorf@u+1)^0,w,c
 16170   007BF2  6E60               	movwf	(??_floorf+1)^0,c
 16171   007BF4  346D               	rlcf	(floorf@u+2)^0,w,c
 16172   007BF6  6E61               	movwf	(??_floorf+2)^0,c
 16173   007BF8  346E               	rlcf	(floorf@u+3)^0,w,c
 16174   007BFA  6E62               	movwf	(??_floorf+3)^0,c
 16175   007BFC  505F               	movf	??_floorf^0,w,c
 16176   007BFE  1060               	iorwf	(??_floorf+1)^0,w,c
 16177   007C00  1061               	iorwf	(??_floorf+2)^0,w,c
 16178   007C02  1062               	iorwf	(??_floorf+3)^0,w,c
 16179   007C04  B4D8               	btfsc	status,2,c
 16180   007C06  EF07  F03E         	goto	u13581
 16181   007C0A  EF09  F03E         	goto	u13580
 16182   007C0E                     u13581:
 16183   007C0E  EF11  F03E         	goto	l11070
 16184   007C12                     u13580:
 16185   007C12  0E00               	movlw	0
 16186   007C14  6E6B               	movwf	floorf@u^0,c
 16187   007C16  0E00               	movlw	0
 16188   007C18  6E6C               	movwf	(floorf@u+1)^0,c
 16189   007C1A  0E80               	movlw	128
 16190   007C1C  6E6D               	movwf	(floorf@u+2)^0,c
 16191   007C1E  0EBF               	movlw	191
 16192   007C20  6E6E               	movwf	(floorf@u+3)^0,c
 16193   007C22                     l11070:
 16194   007C22  C06B  F05B         	movff	floorf@u,?_floorf
 16195   007C26  C06C  F05C         	movff	floorf@u+1,?_floorf+1
 16196   007C2A  C06D  F05D         	movff	floorf@u+2,?_floorf+2
 16197   007C2E  C06E  F05E         	movff	floorf@u+3,?_floorf+3
 16198   007C32                     l1568:
 16199   007C32  0012               	return		;funcret
 16200   007C34                     __end_of_floorf:
 16201                           	callstack 0
 16202                           
 16203 ;; *************** function ___fpclassifyf *****************
 16204 ;; Defined at:
 16205 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
 16206 ;; Parameters:    Size  Location     Type
 16207 ;;  x               4    2[COMRAM] float 
 16208 ;; Auto vars:     Size  Location     Type
 16209 ;;  u               4   12[COMRAM] struct .
 16210 ;;  e               2   10[COMRAM] int 
 16211 ;; Return value:  Size  Location     Type
 16212 ;;                  2    2[COMRAM] int 
 16213 ;; Registers used:
 16214 ;;		wreg, status,2, status,0
 16215 ;; Tracked objects:
 16216 ;;		On entry : 0/0
 16217 ;;		On exit  : 0/0
 16218 ;;		Unchanged: 0/0
 16219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16220 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16221 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16222 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16223 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16224 ;;Total ram usage:       14 bytes
 16225 ;; Hardware stack levels used: 1
 16226 ;; Hardware stack levels required when called: 3
 16227 ;; This function calls:
 16228 ;;		Nothing
 16229 ;; This function is called by:
 16230 ;;		_efgtoa
 16231 ;; This function uses a non-reentrant model
 16232 ;;
 16233                           
 16234                           	psect	text40
 16235   0093C8                     __ptext40:
 16236                           	callstack 0
 16237   0093C8                     ___fpclassifyf:
 16238                           	callstack 21
 16239   0093C8  C20F  F00D         	movff	___fpclassifyf@F465,___fpclassifyf@u
 16240   0093CC  C210  F00E         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
 16241   0093D0  C211  F00F         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
 16242   0093D4  C212  F010         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
 16243   0093D8  C003  F00D         	movff	___fpclassifyf@x,___fpclassifyf@u
 16244   0093DC  C004  F00E         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 16245   0093E0  C005  F00F         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 16246   0093E4  C006  F010         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 16247   0093E8  C00D  F007         	movff	___fpclassifyf@u,??___fpclassifyf
 16248   0093EC  C00E  F008         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 16249   0093F0  C00F  F009         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 16250   0093F4  C010  F00A         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 16251   0093F8  0E18               	movlw	24
 16252   0093FA  EF04  F04A         	goto	u14370
 16253   0093FE                     u14375:
 16254   0093FE  90D8               	bcf	status,0,c
 16255   009400  320A               	rrcf	(??___fpclassifyf+3)^0,f,c
 16256   009402  3209               	rrcf	(??___fpclassifyf+2)^0,f,c
 16257   009404  3208               	rrcf	(??___fpclassifyf+1)^0,f,c
 16258   009406  3207               	rrcf	??___fpclassifyf^0,f,c
 16259   009408                     u14370:
 16260   009408  2EE8               	decfsz	wreg,f,c
 16261   00940A  EFFF  F049         	goto	u14375
 16262   00940E  5007               	movf	??___fpclassifyf^0,w,c
 16263   009410  6E0B               	movwf	___fpclassifyf@e^0,c
 16264   009412  6A0C               	clrf	(___fpclassifyf@e+1)^0,c
 16265   009414  500B               	movf	___fpclassifyf@e^0,w,c
 16266   009416  100C               	iorwf	(___fpclassifyf@e+1)^0,w,c
 16267   009418  A4D8               	btfss	status,2,c
 16268   00941A  EF11  F04A         	goto	u14381
 16269   00941E  EF13  F04A         	goto	u14380
 16270   009422                     u14381:
 16271   009422  EF33  F04A         	goto	l11570
 16272   009426                     u14380:
 16273   009426  90D8               	bcf	status,0,c
 16274   009428  340D               	rlcf	___fpclassifyf@u^0,w,c
 16275   00942A  6E07               	movwf	??___fpclassifyf^0,c
 16276   00942C  340E               	rlcf	(___fpclassifyf@u+1)^0,w,c
 16277   00942E  6E08               	movwf	(??___fpclassifyf+1)^0,c
 16278   009430  340F               	rlcf	(___fpclassifyf@u+2)^0,w,c
 16279   009432  6E09               	movwf	(??___fpclassifyf+2)^0,c
 16280   009434  3410               	rlcf	(___fpclassifyf@u+3)^0,w,c
 16281   009436  6E0A               	movwf	(??___fpclassifyf+3)^0,c
 16282   009438  5007               	movf	??___fpclassifyf^0,w,c
 16283   00943A  1008               	iorwf	(??___fpclassifyf+1)^0,w,c
 16284   00943C  1009               	iorwf	(??___fpclassifyf+2)^0,w,c
 16285   00943E  100A               	iorwf	(??___fpclassifyf+3)^0,w,c
 16286   009440  A4D8               	btfss	status,2,c
 16287   009442  EF25  F04A         	goto	u14391
 16288   009446  EF27  F04A         	goto	u14390
 16289   00944A                     u14391:
 16290   00944A  EF2D  F04A         	goto	l11566
 16291   00944E                     u14390:
 16292   00944E  0E00               	movlw	0
 16293   009450  6E04               	movwf	(?___fpclassifyf+1)^0,c
 16294   009452  0E02               	movlw	2
 16295   009454  6E03               	movwf	?___fpclassifyf^0,c
 16296   009456  EF62  F04A         	goto	l1780
 16297   00945A                     l11566:
 16298   00945A  0E00               	movlw	0
 16299   00945C  6E04               	movwf	(?___fpclassifyf+1)^0,c
 16300   00945E  0E03               	movlw	3
 16301   009460  6E03               	movwf	?___fpclassifyf^0,c
 16302   009462  EF62  F04A         	goto	l1780
 16303   009466                     l11570:
 16304   009466  280B               	incf	___fpclassifyf@e^0,w,c
 16305   009468  100C               	iorwf	(___fpclassifyf@e+1)^0,w,c
 16306   00946A  A4D8               	btfss	status,2,c
 16307   00946C  EF3A  F04A         	goto	u14401
 16308   009470  EF3C  F04A         	goto	u14400
 16309   009474                     u14401:
 16310   009474  EF5E  F04A         	goto	l11576
 16311   009478                     u14400:
 16312   009478  C00D  F007         	movff	___fpclassifyf@u,??___fpclassifyf
 16313   00947C  C00E  F008         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 16314   009480  C00F  F009         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 16315   009484  C010  F00A         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 16316   009488  0E09               	movlw	9
 16317   00948A                     u14415:
 16318   00948A  90D8               	bcf	status,0,c
 16319   00948C  3607               	rlcf	??___fpclassifyf^0,f,c
 16320   00948E  3608               	rlcf	(??___fpclassifyf+1)^0,f,c
 16321   009490  3609               	rlcf	(??___fpclassifyf+2)^0,f,c
 16322   009492  360A               	rlcf	(??___fpclassifyf+3)^0,f,c
 16323   009494  2EE8               	decfsz	wreg,f,c
 16324   009496  EF45  F04A         	goto	u14415
 16325   00949A  5007               	movf	??___fpclassifyf^0,w,c
 16326   00949C  1008               	iorwf	(??___fpclassifyf+1)^0,w,c
 16327   00949E  1009               	iorwf	(??___fpclassifyf+2)^0,w,c
 16328   0094A0  100A               	iorwf	(??___fpclassifyf+3)^0,w,c
 16329   0094A2  B4D8               	btfsc	status,2,c
 16330   0094A4  EF56  F04A         	goto	u14421
 16331   0094A8  EF59  F04A         	goto	u14420
 16332   0094AC                     u14421:
 16333   0094AC  0E01               	movlw	1
 16334   0094AE  EF5A  F04A         	goto	u14430
 16335   0094B2                     u14420:
 16336   0094B2  0E00               	movlw	0
 16337   0094B4                     u14430:
 16338   0094B4  6E03               	movwf	?___fpclassifyf^0,c
 16339   0094B6  6A04               	clrf	(?___fpclassifyf+1)^0,c
 16340   0094B8  EF62  F04A         	goto	l1780
 16341   0094BC                     l11576:
 16342   0094BC  0E00               	movlw	0
 16343   0094BE  6E04               	movwf	(?___fpclassifyf+1)^0,c
 16344   0094C0  0E04               	movlw	4
 16345   0094C2  6E03               	movwf	?___fpclassifyf^0,c
 16346   0094C4                     l1780:
 16347   0094C4  0012               	return		;funcret
 16348   0094C6                     __end_of___fpclassifyf:
 16349                           	callstack 0
 16350                           
 16351 ;; *************** function ___flsub *****************
 16352 ;; Defined at:
 16353 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 16354 ;; Parameters:    Size  Location     Type
 16355 ;;  b               4   57[COMRAM] int 
 16356 ;;  a               4   61[COMRAM] int 
 16357 ;; Auto vars:     Size  Location     Type
 16358 ;;		None
 16359 ;; Return value:  Size  Location     Type
 16360 ;;                  4   57[COMRAM] int 
 16361 ;; Registers used:
 16362 ;;		wreg, status,2, status,0, cstack
 16363 ;; Tracked objects:
 16364 ;;		On entry : 0/0
 16365 ;;		On exit  : 0/0
 16366 ;;		Unchanged: 0/0
 16367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16368 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16371 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16372 ;;Total ram usage:        8 bytes
 16373 ;; Hardware stack levels used: 1
 16374 ;; Hardware stack levels required when called: 4
 16375 ;; This function calls:
 16376 ;;		___fladd
 16377 ;; This function is called by:
 16378 ;;		_Calculate
 16379 ;;		_efgtoa
 16380 ;;		_powf
 16381 ;; This function uses a non-reentrant model
 16382 ;;
 16383                           
 16384                           	psect	text41
 16385   00A71A                     __ptext41:
 16386                           	callstack 0
 16387   00A71A                     ___flsub:
 16388                           	callstack 23
 16389   00A71A  0E00               	movlw	0
 16390   00A71C  1A3E               	xorwf	___flsub@a^0,f,c
 16391   00A71E  0E00               	movlw	0
 16392   00A720  1A3F               	xorwf	(___flsub@a+1)^0,f,c
 16393   00A722  0E00               	movlw	0
 16394   00A724  1A40               	xorwf	(___flsub@a+2)^0,f,c
 16395   00A726  0E80               	movlw	128
 16396   00A728  1A41               	xorwf	(___flsub@a+3)^0,f,c
 16397   00A72A  C03A  F011         	movff	___flsub@b,___fladd@b
 16398   00A72E  C03B  F012         	movff	___flsub@b+1,___fladd@b+1
 16399   00A732  C03C  F013         	movff	___flsub@b+2,___fladd@b+2
 16400   00A736  C03D  F014         	movff	___flsub@b+3,___fladd@b+3
 16401   00A73A  C03E  F015         	movff	___flsub@a,___fladd@a
 16402   00A73E  C03F  F016         	movff	___flsub@a+1,___fladd@a+1
 16403   00A742  C040  F017         	movff	___flsub@a+2,___fladd@a+2
 16404   00A746  C041  F018         	movff	___flsub@a+3,___fladd@a+3
 16405   00A74A  EC00  F02B         	call	___fladd	;wreg free
 16406   00A74E  C011  F03A         	movff	?___fladd,?___flsub
 16407   00A752  C012  F03B         	movff	?___fladd+1,?___flsub+1
 16408   00A756  C013  F03C         	movff	?___fladd+2,?___flsub+2
 16409   00A75A  C014  F03D         	movff	?___fladd+3,?___flsub+3
 16410   00A75E  0012               	return		;funcret
 16411   00A760                     __end_of___flsub:
 16412                           	callstack 0
 16413                           
 16414 ;; *************** function ___flneg *****************
 16415 ;; Defined at:
 16416 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
 16417 ;; Parameters:    Size  Location     Type
 16418 ;;  f1              4    2[COMRAM] int 
 16419 ;; Auto vars:     Size  Location     Type
 16420 ;;		None
 16421 ;; Return value:  Size  Location     Type
 16422 ;;                  4    2[COMRAM] int 
 16423 ;; Registers used:
 16424 ;;		wreg, status,2, status,0
 16425 ;; Tracked objects:
 16426 ;;		On entry : 0/0
 16427 ;;		On exit  : 0/0
 16428 ;;		Unchanged: 0/0
 16429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16430 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16433 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16434 ;;Total ram usage:        4 bytes
 16435 ;; Hardware stack levels used: 1
 16436 ;; Hardware stack levels required when called: 3
 16437 ;; This function calls:
 16438 ;;		Nothing
 16439 ;; This function is called by:
 16440 ;;		_efgtoa
 16441 ;;		_powf
 16442 ;;		_strtof
 16443 ;; This function uses a non-reentrant model
 16444 ;;
 16445                           
 16446                           	psect	text42
 16447   00A974                     __ptext42:
 16448                           	callstack 0
 16449   00A974                     ___flneg:
 16450                           	callstack 24
 16451   00A974  5003               	movf	___flneg@f1^0,w,c
 16452   00A976  1004               	iorwf	(___flneg@f1+1)^0,w,c
 16453   00A978  1005               	iorwf	(___flneg@f1+2)^0,w,c
 16454   00A97A  1006               	iorwf	(___flneg@f1+3)^0,w,c
 16455   00A97C  B4D8               	btfsc	status,2,c
 16456   00A97E  EFC3  F054         	goto	u14221
 16457   00A982  EFC5  F054         	goto	u14220
 16458   00A986                     u14221:
 16459   00A986  EFCD  F054         	goto	l11476
 16460   00A98A                     u14220:
 16461   00A98A  0E00               	movlw	0
 16462   00A98C  1A03               	xorwf	___flneg@f1^0,f,c
 16463   00A98E  0E00               	movlw	0
 16464   00A990  1A04               	xorwf	(___flneg@f1+1)^0,f,c
 16465   00A992  0E00               	movlw	0
 16466   00A994  1A05               	xorwf	(___flneg@f1+2)^0,f,c
 16467   00A996  0E80               	movlw	128
 16468   00A998  1A06               	xorwf	(___flneg@f1+3)^0,f,c
 16469   00A99A                     l11476:
 16470   00A99A  C003  F003         	movff	___flneg@f1,?___flneg
 16471   00A99E  C004  F004         	movff	___flneg@f1+1,?___flneg+1
 16472   00A9A2  C005  F005         	movff	___flneg@f1+2,?___flneg+2
 16473   00A9A6  C006  F006         	movff	___flneg@f1+3,?___flneg+3
 16474   00A9AA  0012               	return		;funcret
 16475   00A9AC                     __end_of___flneg:
 16476                           	callstack 0
 16477                           
 16478 ;; *************** function ___flmul *****************
 16479 ;; Defined at:
 16480 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
 16481 ;; Parameters:    Size  Location     Type
 16482 ;;  b               4   32[COMRAM] int 
 16483 ;;  a               4   36[COMRAM] int 
 16484 ;; Auto vars:     Size  Location     Type
 16485 ;;  prod            4   51[COMRAM] struct .
 16486 ;;  grs             4   46[COMRAM] unsigned long 
 16487 ;;  temp            2   55[COMRAM] struct .
 16488 ;;  bexp            1   50[COMRAM] unsigned char 
 16489 ;;  aexp            1   45[COMRAM] unsigned char 
 16490 ;;  sign            1   44[COMRAM] unsigned char 
 16491 ;; Return value:  Size  Location     Type
 16492 ;;                  4   32[COMRAM] unsigned char 
 16493 ;; Registers used:
 16494 ;;		wreg, status,2, status,0, prodl, prodh
 16495 ;; Tracked objects:
 16496 ;;		On entry : 0/0
 16497 ;;		On exit  : 0/0
 16498 ;;		Unchanged: 0/0
 16499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16500 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16501 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16502 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16503 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16504 ;;Total ram usage:       25 bytes
 16505 ;; Hardware stack levels used: 1
 16506 ;; Hardware stack levels required when called: 3
 16507 ;; This function calls:
 16508 ;;		Nothing
 16509 ;; This function is called by:
 16510 ;;		_Calculate
 16511 ;;		_efgtoa
 16512 ;;		_powf
 16513 ;;		_scalbnf
 16514 ;;		_sqrtf
 16515 ;;		_strtof
 16516 ;; This function uses a non-reentrant model
 16517 ;;
 16518                           
 16519                           	psect	text43
 16520   0063E8                     __ptext43:
 16521                           	callstack 0
 16522   0063E8                     ___flmul:
 16523                           	callstack 24
 16524   0063E8  5024               	movf	(___flmul@b+3)^0,w,c
 16525   0063EA  0B80               	andlw	128
 16526   0063EC  6E2D               	movwf	___flmul@sign^0,c
 16527   0063EE  5024               	movf	(___flmul@b+3)^0,w,c
 16528   0063F0  2424               	addwf	(___flmul@b+3)^0,w,c
 16529   0063F2  6E33               	movwf	___flmul@bexp^0,c
 16530   0063F4  AE23               	btfss	(___flmul@b+2)^0,7,c
 16531   0063F6  EFFF  F031         	goto	u13951
 16532   0063FA  EF01  F032         	goto	u13950
 16533   0063FE                     u13951:
 16534   0063FE  EF02  F032         	goto	l11304
 16535   006402                     u13950:
 16536   006402  8033               	bsf	___flmul@bexp^0,0,c
 16537   006404                     l11304:
 16538   006404  5033               	movf	___flmul@bexp^0,w,c
 16539   006406  B4D8               	btfsc	status,2,c
 16540   006408  EF08  F032         	goto	u13961
 16541   00640C  EF0A  F032         	goto	u13960
 16542   006410                     u13961:
 16543   006410  EF1D  F032         	goto	l11312
 16544   006414                     u13960:
 16545   006414  2833               	incf	___flmul@bexp^0,w,c
 16546   006416  A4D8               	btfss	status,2,c
 16547   006418  EF10  F032         	goto	u13971
 16548   00641C  EF12  F032         	goto	u13970
 16549   006420                     u13971:
 16550   006420  EF1A  F032         	goto	l11310
 16551   006424                     u13970:
 16552   006424  0E00               	movlw	0
 16553   006426  6E21               	movwf	___flmul@b^0,c
 16554   006428  0E00               	movlw	0
 16555   00642A  6E22               	movwf	(___flmul@b+1)^0,c
 16556   00642C  0E00               	movlw	0
 16557   00642E  6E23               	movwf	(___flmul@b+2)^0,c
 16558   006430  0E00               	movlw	0
 16559   006432  6E24               	movwf	(___flmul@b+3)^0,c
 16560   006434                     l11310:
 16561   006434  8E23               	bsf	(___flmul@b+2)^0,7,c
 16562   006436  EF25  F032         	goto	l11314
 16563   00643A                     l11312:
 16564   00643A  0E00               	movlw	0
 16565   00643C  6E21               	movwf	___flmul@b^0,c
 16566   00643E  0E00               	movlw	0
 16567   006440  6E22               	movwf	(___flmul@b+1)^0,c
 16568   006442  0E00               	movlw	0
 16569   006444  6E23               	movwf	(___flmul@b+2)^0,c
 16570   006446  0E00               	movlw	0
 16571   006448  6E24               	movwf	(___flmul@b+3)^0,c
 16572   00644A                     l11314:
 16573   00644A  5028               	movf	(___flmul@a+3)^0,w,c
 16574   00644C  0B80               	andlw	128
 16575   00644E  1A2D               	xorwf	___flmul@sign^0,f,c
 16576   006450  5028               	movf	(___flmul@a+3)^0,w,c
 16577   006452  2428               	addwf	(___flmul@a+3)^0,w,c
 16578   006454  6E2E               	movwf	___flmul@aexp^0,c
 16579   006456  AE27               	btfss	(___flmul@a+2)^0,7,c
 16580   006458  EF30  F032         	goto	u13981
 16581   00645C  EF32  F032         	goto	u13980
 16582   006460                     u13981:
 16583   006460  EF33  F032         	goto	l11322
 16584   006464                     u13980:
 16585   006464  802E               	bsf	___flmul@aexp^0,0,c
 16586   006466                     l11322:
 16587   006466  502E               	movf	___flmul@aexp^0,w,c
 16588   006468  B4D8               	btfsc	status,2,c
 16589   00646A  EF39  F032         	goto	u13991
 16590   00646E  EF3B  F032         	goto	u13990
 16591   006472                     u13991:
 16592   006472  EF4E  F032         	goto	l11330
 16593   006476                     u13990:
 16594   006476  282E               	incf	___flmul@aexp^0,w,c
 16595   006478  A4D8               	btfss	status,2,c
 16596   00647A  EF41  F032         	goto	u14001
 16597   00647E  EF43  F032         	goto	u14000
 16598   006482                     u14001:
 16599   006482  EF4B  F032         	goto	l11328
 16600   006486                     u14000:
 16601   006486  0E00               	movlw	0
 16602   006488  6E25               	movwf	___flmul@a^0,c
 16603   00648A  0E00               	movlw	0
 16604   00648C  6E26               	movwf	(___flmul@a+1)^0,c
 16605   00648E  0E00               	movlw	0
 16606   006490  6E27               	movwf	(___flmul@a+2)^0,c
 16607   006492  0E00               	movlw	0
 16608   006494  6E28               	movwf	(___flmul@a+3)^0,c
 16609   006496                     l11328:
 16610   006496  8E27               	bsf	(___flmul@a+2)^0,7,c
 16611   006498  EF56  F032         	goto	l1467
 16612   00649C                     l11330:
 16613   00649C  0E00               	movlw	0
 16614   00649E  6E25               	movwf	___flmul@a^0,c
 16615   0064A0  0E00               	movlw	0
 16616   0064A2  6E26               	movwf	(___flmul@a+1)^0,c
 16617   0064A4  0E00               	movlw	0
 16618   0064A6  6E27               	movwf	(___flmul@a+2)^0,c
 16619   0064A8  0E00               	movlw	0
 16620   0064AA  6E28               	movwf	(___flmul@a+3)^0,c
 16621   0064AC                     l1467:
 16622   0064AC  502E               	movf	___flmul@aexp^0,w,c
 16623   0064AE  B4D8               	btfsc	status,2,c
 16624   0064B0  EF5C  F032         	goto	u14011
 16625   0064B4  EF5E  F032         	goto	u14010
 16626   0064B8                     u14011:
 16627   0064B8  EF66  F032         	goto	l11334
 16628   0064BC                     u14010:
 16629   0064BC  5033               	movf	___flmul@bexp^0,w,c
 16630   0064BE  A4D8               	btfss	status,2,c
 16631   0064C0  EF64  F032         	goto	u14021
 16632   0064C4  EF66  F032         	goto	u14020
 16633   0064C8                     u14021:
 16634   0064C8  EF70  F032         	goto	l11338
 16635   0064CC                     u14020:
 16636   0064CC                     l11334:
 16637   0064CC  0E00               	movlw	0
 16638   0064CE  6E21               	movwf	?___flmul^0,c
 16639   0064D0  0E00               	movlw	0
 16640   0064D2  6E22               	movwf	(?___flmul+1)^0,c
 16641   0064D4  0E00               	movlw	0
 16642   0064D6  6E23               	movwf	(?___flmul+2)^0,c
 16643   0064D8  0E00               	movlw	0
 16644   0064DA  6E24               	movwf	(?___flmul+3)^0,c
 16645   0064DC  EF08  F034         	goto	l1471
 16646   0064E0                     l11338:
 16647   0064E0  5027               	movf	(___flmul@a+2)^0,w,c
 16648   0064E2  0221               	mulwf	___flmul@b^0,c
 16649   0064E4  CFF3 F038          	movff	prodl,___flmul@temp
 16650   0064E8  CFF4 F039          	movff	prodh,___flmul@temp+1
 16651   0064EC  5038               	movf	___flmul@temp^0,w,c
 16652   0064EE  6E2F               	movwf	___flmul@grs^0,c
 16653   0064F0  6A30               	clrf	(___flmul@grs+1)^0,c
 16654   0064F2  6A31               	clrf	(___flmul@grs+2)^0,c
 16655   0064F4  6A32               	clrf	(___flmul@grs+3)^0,c
 16656   0064F6  5039               	movf	(___flmul@temp+1)^0,w,c
 16657   0064F8  6E34               	movwf	___flmul@prod^0,c
 16658   0064FA  6A35               	clrf	(___flmul@prod+1)^0,c
 16659   0064FC  6A36               	clrf	(___flmul@prod+2)^0,c
 16660   0064FE  6A37               	clrf	(___flmul@prod+3)^0,c
 16661   006500  5026               	movf	(___flmul@a+1)^0,w,c
 16662   006502  0222               	mulwf	(___flmul@b+1)^0,c
 16663   006504  CFF3 F038          	movff	prodl,___flmul@temp
 16664   006508  CFF4 F039          	movff	prodh,___flmul@temp+1
 16665   00650C  5038               	movf	___flmul@temp^0,w,c
 16666   00650E  262F               	addwf	___flmul@grs^0,f,c
 16667   006510  0E00               	movlw	0
 16668   006512  2230               	addwfc	(___flmul@grs+1)^0,f,c
 16669   006514  2231               	addwfc	(___flmul@grs+2)^0,f,c
 16670   006516  2232               	addwfc	(___flmul@grs+3)^0,f,c
 16671   006518  5039               	movf	(___flmul@temp+1)^0,w,c
 16672   00651A  2634               	addwf	___flmul@prod^0,f,c
 16673   00651C  0E00               	movlw	0
 16674   00651E  2235               	addwfc	(___flmul@prod+1)^0,f,c
 16675   006520  2236               	addwfc	(___flmul@prod+2)^0,f,c
 16676   006522  2237               	addwfc	(___flmul@prod+3)^0,f,c
 16677   006524  5025               	movf	___flmul@a^0,w,c
 16678   006526  0223               	mulwf	(___flmul@b+2)^0,c
 16679   006528  CFF3 F038          	movff	prodl,___flmul@temp
 16680   00652C  CFF4 F039          	movff	prodh,___flmul@temp+1
 16681   006530  5038               	movf	___flmul@temp^0,w,c
 16682   006532  262F               	addwf	___flmul@grs^0,f,c
 16683   006534  0E00               	movlw	0
 16684   006536  2230               	addwfc	(___flmul@grs+1)^0,f,c
 16685   006538  2231               	addwfc	(___flmul@grs+2)^0,f,c
 16686   00653A  2232               	addwfc	(___flmul@grs+3)^0,f,c
 16687   00653C  5039               	movf	(___flmul@temp+1)^0,w,c
 16688   00653E  2634               	addwf	___flmul@prod^0,f,c
 16689   006540  0E00               	movlw	0
 16690   006542  2235               	addwfc	(___flmul@prod+1)^0,f,c
 16691   006544  2236               	addwfc	(___flmul@prod+2)^0,f,c
 16692   006546  2237               	addwfc	(___flmul@prod+3)^0,f,c
 16693   006548  C031  F032         	movff	___flmul@grs+2,___flmul@grs+3
 16694   00654C  C030  F031         	movff	___flmul@grs+1,___flmul@grs+2
 16695   006550  C02F  F030         	movff	___flmul@grs,___flmul@grs+1
 16696   006554  6A2F               	clrf	___flmul@grs^0,c
 16697   006556  5025               	movf	___flmul@a^0,w,c
 16698   006558  0222               	mulwf	(___flmul@b+1)^0,c
 16699   00655A  CFF3 F038          	movff	prodl,___flmul@temp
 16700   00655E  CFF4 F039          	movff	prodh,___flmul@temp+1
 16701   006562  5038               	movf	___flmul@temp^0,w,c
 16702   006564  262F               	addwf	___flmul@grs^0,f,c
 16703   006566  5039               	movf	(___flmul@temp+1)^0,w,c
 16704   006568  2230               	addwfc	(___flmul@grs+1)^0,f,c
 16705   00656A  0E00               	movlw	0
 16706   00656C  2231               	addwfc	(___flmul@grs+2)^0,f,c
 16707   00656E  0E00               	movlw	0
 16708   006570  2232               	addwfc	(___flmul@grs+3)^0,f,c
 16709   006572  5026               	movf	(___flmul@a+1)^0,w,c
 16710   006574  0221               	mulwf	___flmul@b^0,c
 16711   006576  CFF3 F038          	movff	prodl,___flmul@temp
 16712   00657A  CFF4 F039          	movff	prodh,___flmul@temp+1
 16713   00657E  5038               	movf	___flmul@temp^0,w,c
 16714   006580  262F               	addwf	___flmul@grs^0,f,c
 16715   006582  5039               	movf	(___flmul@temp+1)^0,w,c
 16716   006584  2230               	addwfc	(___flmul@grs+1)^0,f,c
 16717   006586  0E00               	movlw	0
 16718   006588  2231               	addwfc	(___flmul@grs+2)^0,f,c
 16719   00658A  0E00               	movlw	0
 16720   00658C  2232               	addwfc	(___flmul@grs+3)^0,f,c
 16721   00658E  C031  F032         	movff	___flmul@grs+2,___flmul@grs+3
 16722   006592  C030  F031         	movff	___flmul@grs+1,___flmul@grs+2
 16723   006596  C02F  F030         	movff	___flmul@grs,___flmul@grs+1
 16724   00659A  6A2F               	clrf	___flmul@grs^0,c
 16725   00659C  5025               	movf	___flmul@a^0,w,c
 16726   00659E  0221               	mulwf	___flmul@b^0,c
 16727   0065A0  CFF3 F038          	movff	prodl,___flmul@temp
 16728   0065A4  CFF4 F039          	movff	prodh,___flmul@temp+1
 16729   0065A8  5038               	movf	___flmul@temp^0,w,c
 16730   0065AA  262F               	addwf	___flmul@grs^0,f,c
 16731   0065AC  5039               	movf	(___flmul@temp+1)^0,w,c
 16732   0065AE  2230               	addwfc	(___flmul@grs+1)^0,f,c
 16733   0065B0  0E00               	movlw	0
 16734   0065B2  2231               	addwfc	(___flmul@grs+2)^0,f,c
 16735   0065B4  0E00               	movlw	0
 16736   0065B6  2232               	addwfc	(___flmul@grs+3)^0,f,c
 16737   0065B8  5027               	movf	(___flmul@a+2)^0,w,c
 16738   0065BA  0222               	mulwf	(___flmul@b+1)^0,c
 16739   0065BC  CFF3 F038          	movff	prodl,___flmul@temp
 16740   0065C0  CFF4 F039          	movff	prodh,___flmul@temp+1
 16741   0065C4  5038               	movf	___flmul@temp^0,w,c
 16742   0065C6  2634               	addwf	___flmul@prod^0,f,c
 16743   0065C8  5039               	movf	(___flmul@temp+1)^0,w,c
 16744   0065CA  2235               	addwfc	(___flmul@prod+1)^0,f,c
 16745   0065CC  0E00               	movlw	0
 16746   0065CE  2236               	addwfc	(___flmul@prod+2)^0,f,c
 16747   0065D0  0E00               	movlw	0
 16748   0065D2  2237               	addwfc	(___flmul@prod+3)^0,f,c
 16749   0065D4  5026               	movf	(___flmul@a+1)^0,w,c
 16750   0065D6  0223               	mulwf	(___flmul@b+2)^0,c
 16751   0065D8  CFF3 F038          	movff	prodl,___flmul@temp
 16752   0065DC  CFF4 F039          	movff	prodh,___flmul@temp+1
 16753   0065E0  5038               	movf	___flmul@temp^0,w,c
 16754   0065E2  2634               	addwf	___flmul@prod^0,f,c
 16755   0065E4  5039               	movf	(___flmul@temp+1)^0,w,c
 16756   0065E6  2235               	addwfc	(___flmul@prod+1)^0,f,c
 16757   0065E8  0E00               	movlw	0
 16758   0065EA  2236               	addwfc	(___flmul@prod+2)^0,f,c
 16759   0065EC  0E00               	movlw	0
 16760   0065EE  2237               	addwfc	(___flmul@prod+3)^0,f,c
 16761   0065F0  5027               	movf	(___flmul@a+2)^0,w,c
 16762   0065F2  0223               	mulwf	(___flmul@b+2)^0,c
 16763   0065F4  CFF3 F038          	movff	prodl,___flmul@temp
 16764   0065F8  CFF4 F039          	movff	prodh,___flmul@temp+1
 16765   0065FC  5038               	movf	___flmul@temp^0,w,c
 16766   0065FE  6E29               	movwf	??___flmul^0,c
 16767   006600  5039               	movf	(___flmul@temp+1)^0,w,c
 16768   006602  6E2A               	movwf	(??___flmul+1)^0,c
 16769   006604  6A2B               	clrf	(??___flmul+2)^0,c
 16770   006606  6A2C               	clrf	(??___flmul+3)^0,c
 16771   006608  C02B  F02C         	movff	??___flmul+2,??___flmul+3
 16772   00660C  C02A  F02B         	movff	??___flmul+1,??___flmul+2
 16773   006610  C029  F02A         	movff	??___flmul,??___flmul+1
 16774   006614  6A29               	clrf	??___flmul^0,c
 16775   006616  5029               	movf	??___flmul^0,w,c
 16776   006618  2634               	addwf	___flmul@prod^0,f,c
 16777   00661A  502A               	movf	(??___flmul+1)^0,w,c
 16778   00661C  2235               	addwfc	(___flmul@prod+1)^0,f,c
 16779   00661E  502B               	movf	(??___flmul+2)^0,w,c
 16780   006620  2236               	addwfc	(___flmul@prod+2)^0,f,c
 16781   006622  502C               	movf	(??___flmul+3)^0,w,c
 16782   006624  2237               	addwfc	(___flmul@prod+3)^0,f,c
 16783   006626  C02F  F029         	movff	___flmul@grs,??___flmul
 16784   00662A  C030  F02A         	movff	___flmul@grs+1,??___flmul+1
 16785   00662E  C031  F02B         	movff	___flmul@grs+2,??___flmul+2
 16786   006632  C032  F02C         	movff	___flmul@grs+3,??___flmul+3
 16787   006636  0E19               	movlw	25
 16788   006638  EF23  F033         	goto	u14030
 16789   00663C                     u14035:
 16790   00663C  90D8               	bcf	status,0,c
 16791   00663E  322C               	rrcf	(??___flmul+3)^0,f,c
 16792   006640  322B               	rrcf	(??___flmul+2)^0,f,c
 16793   006642  322A               	rrcf	(??___flmul+1)^0,f,c
 16794   006644  3229               	rrcf	??___flmul^0,f,c
 16795   006646                     u14030:
 16796   006646  2EE8               	decfsz	wreg,f,c
 16797   006648  EF1E  F033         	goto	u14035
 16798   00664C  5029               	movf	??___flmul^0,w,c
 16799   00664E  2634               	addwf	___flmul@prod^0,f,c
 16800   006650  502A               	movf	(??___flmul+1)^0,w,c
 16801   006652  2235               	addwfc	(___flmul@prod+1)^0,f,c
 16802   006654  502B               	movf	(??___flmul+2)^0,w,c
 16803   006656  2236               	addwfc	(___flmul@prod+2)^0,f,c
 16804   006658  502C               	movf	(??___flmul+3)^0,w,c
 16805   00665A  2237               	addwfc	(___flmul@prod+3)^0,f,c
 16806   00665C  C031  F032         	movff	___flmul@grs+2,___flmul@grs+3
 16807   006660  C030  F031         	movff	___flmul@grs+1,___flmul@grs+2
 16808   006664  C02F  F030         	movff	___flmul@grs,___flmul@grs+1
 16809   006668  6A2F               	clrf	___flmul@grs^0,c
 16810   00666A  502E               	movf	___flmul@aexp^0,w,c
 16811   00666C  C033  F029         	movff	___flmul@bexp,??___flmul
 16812   006670  6A2A               	clrf	(??___flmul+1)^0,c
 16813   006672  2629               	addwf	??___flmul^0,f,c
 16814   006674  0E00               	movlw	0
 16815   006676  222A               	addwfc	(??___flmul+1)^0,f,c
 16816   006678  0E82               	movlw	130
 16817   00667A  2429               	addwf	??___flmul^0,w,c
 16818   00667C  6E38               	movwf	___flmul@temp^0,c
 16819   00667E  0EFF               	movlw	255
 16820   006680  202A               	addwfc	(??___flmul+1)^0,w,c
 16821   006682  6E39               	movwf	(___flmul@temp+1)^0,c
 16822   006684  EF59  F033         	goto	l11386
 16823   006688                     l11380:
 16824   006688  90D8               	bcf	status,0,c
 16825   00668A  3634               	rlcf	___flmul@prod^0,f,c
 16826   00668C  3635               	rlcf	(___flmul@prod+1)^0,f,c
 16827   00668E  3636               	rlcf	(___flmul@prod+2)^0,f,c
 16828   006690  3637               	rlcf	(___flmul@prod+3)^0,f,c
 16829   006692  AE32               	btfss	(___flmul@grs+3)^0,7,c
 16830   006694  EF4E  F033         	goto	u14041
 16831   006698  EF50  F033         	goto	u14040
 16832   00669C                     u14041:
 16833   00669C  EF51  F033         	goto	l1474
 16834   0066A0                     u14040:
 16835   0066A0  8034               	bsf	___flmul@prod^0,0,c
 16836   0066A2                     l1474:
 16837   0066A2  90D8               	bcf	status,0,c
 16838   0066A4  362F               	rlcf	___flmul@grs^0,f,c
 16839   0066A6  3630               	rlcf	(___flmul@grs+1)^0,f,c
 16840   0066A8  3631               	rlcf	(___flmul@grs+2)^0,f,c
 16841   0066AA  3632               	rlcf	(___flmul@grs+3)^0,f,c
 16842   0066AC  0638               	decf	___flmul@temp^0,f,c
 16843   0066AE  A0D8               	btfss	status,0,c
 16844   0066B0  0639               	decf	(___flmul@temp+1)^0,f,c
 16845   0066B2                     l11386:
 16846   0066B2  AE36               	btfss	(___flmul@prod+2)^0,7,c
 16847   0066B4  EF5E  F033         	goto	u14051
 16848   0066B8  EF60  F033         	goto	u14050
 16849   0066BC                     u14051:
 16850   0066BC  EF44  F033         	goto	l11380
 16851   0066C0                     u14050:
 16852   0066C0  0E00               	movlw	0
 16853   0066C2  6E2E               	movwf	___flmul@aexp^0,c
 16854   0066C4  AE32               	btfss	(___flmul@grs+3)^0,7,c
 16855   0066C6  EF67  F033         	goto	u14061
 16856   0066CA  EF69  F033         	goto	u14060
 16857   0066CE                     u14061:
 16858   0066CE  EF8D  F033         	goto	l1476
 16859   0066D2                     u14060:
 16860   0066D2  0EFF               	movlw	255
 16861   0066D4  142F               	andwf	___flmul@grs^0,w,c
 16862   0066D6  6E29               	movwf	??___flmul^0,c
 16863   0066D8  0EFF               	movlw	255
 16864   0066DA  1430               	andwf	(___flmul@grs+1)^0,w,c
 16865   0066DC  6E2A               	movwf	(??___flmul+1)^0,c
 16866   0066DE  0EFF               	movlw	255
 16867   0066E0  1431               	andwf	(___flmul@grs+2)^0,w,c
 16868   0066E2  6E2B               	movwf	(??___flmul+2)^0,c
 16869   0066E4  0E7F               	movlw	127
 16870   0066E6  1432               	andwf	(___flmul@grs+3)^0,w,c
 16871   0066E8  6E2C               	movwf	(??___flmul+3)^0,c
 16872   0066EA  5029               	movf	??___flmul^0,w,c
 16873   0066EC  102A               	iorwf	(??___flmul+1)^0,w,c
 16874   0066EE  102B               	iorwf	(??___flmul+2)^0,w,c
 16875   0066F0  102C               	iorwf	(??___flmul+3)^0,w,c
 16876   0066F2  B4D8               	btfsc	status,2,c
 16877   0066F4  EF7E  F033         	goto	u14071
 16878   0066F8  EF80  F033         	goto	u14070
 16879   0066FC                     u14071:
 16880   0066FC  EF84  F033         	goto	l1477
 16881   006700                     u14070:
 16882   006700                     l11394:
 16883   006700  0E01               	movlw	1
 16884   006702  6E2E               	movwf	___flmul@aexp^0,c
 16885   006704  EF8D  F033         	goto	l1476
 16886   006708                     l1477:
 16887   006708  A034               	btfss	___flmul@prod^0,0,c
 16888   00670A  EF89  F033         	goto	u14081
 16889   00670E  EF8B  F033         	goto	u14080
 16890   006712                     u14081:
 16891   006712  EF8D  F033         	goto	l1476
 16892   006716                     u14080:
 16893   006716  EF80  F033         	goto	l11394
 16894   00671A                     l1476:
 16895   00671A  502E               	movf	___flmul@aexp^0,w,c
 16896   00671C  B4D8               	btfsc	status,2,c
 16897   00671E  EF93  F033         	goto	u14091
 16898   006722  EF95  F033         	goto	u14090
 16899   006726                     u14091:
 16900   006726  EFB9  F033         	goto	l11406
 16901   00672A                     u14090:
 16902   00672A  0E01               	movlw	1
 16903   00672C  2634               	addwf	___flmul@prod^0,f,c
 16904   00672E  0E00               	movlw	0
 16905   006730  2235               	addwfc	(___flmul@prod+1)^0,f,c
 16906   006732  2236               	addwfc	(___flmul@prod+2)^0,f,c
 16907   006734  2237               	addwfc	(___flmul@prod+3)^0,f,c
 16908   006736  A037               	btfss	(___flmul@prod+3)^0,0,c
 16909   006738  EFA0  F033         	goto	u14101
 16910   00673C  EFA2  F033         	goto	u14100
 16911   006740                     u14101:
 16912   006740  EFB9  F033         	goto	l11406
 16913   006744                     u14100:
 16914   006744  C034  F029         	movff	___flmul@prod,??___flmul
 16915   006748  C035  F02A         	movff	___flmul@prod+1,??___flmul+1
 16916   00674C  C036  F02B         	movff	___flmul@prod+2,??___flmul+2
 16917   006750  C037  F02C         	movff	___flmul@prod+3,??___flmul+3
 16918   006754  342C               	rlcf	(??___flmul+3)^0,w,c
 16919   006756  322C               	rrcf	(??___flmul+3)^0,f,c
 16920   006758  322B               	rrcf	(??___flmul+2)^0,f,c
 16921   00675A  322A               	rrcf	(??___flmul+1)^0,f,c
 16922   00675C  3229               	rrcf	??___flmul^0,f,c
 16923   00675E  C029  F034         	movff	??___flmul,___flmul@prod
 16924   006762  C02A  F035         	movff	??___flmul+1,___flmul@prod+1
 16925   006766  C02B  F036         	movff	??___flmul+2,___flmul@prod+2
 16926   00676A  C02C  F037         	movff	??___flmul+3,___flmul@prod+3
 16927   00676E  4A38               	infsnz	___flmul@temp^0,f,c
 16928   006770  2A39               	incf	(___flmul@temp+1)^0,f,c
 16929   006772                     l11406:
 16930   006772  BE39               	btfsc	(___flmul@temp+1)^0,7,c
 16931   006774  EFC4  F033         	goto	u14111
 16932   006778  5039               	movf	(___flmul@temp+1)^0,w,c
 16933   00677A  E108               	bnz	u14110
 16934   00677C  2838               	incf	___flmul@temp^0,w,c
 16935   00677E  A0D8               	btfss	status,0,c
 16936   006780  EFC4  F033         	goto	u14111
 16937   006784  EFC6  F033         	goto	u14110
 16938   006788                     u14111:
 16939   006788  EFD0  F033         	goto	l11410
 16940   00678C                     u14110:
 16941   00678C  0E00               	movlw	0
 16942   00678E  6E34               	movwf	___flmul@prod^0,c
 16943   006790  0E00               	movlw	0
 16944   006792  6E35               	movwf	(___flmul@prod+1)^0,c
 16945   006794  0E80               	movlw	128
 16946   006796  6E36               	movwf	(___flmul@prod+2)^0,c
 16947   006798  0E7F               	movlw	127
 16948   00679A  6E37               	movwf	(___flmul@prod+3)^0,c
 16949   00679C  EFFE  F033         	goto	l11422
 16950   0067A0                     l11410:
 16951   0067A0  BE39               	btfsc	(___flmul@temp+1)^0,7,c
 16952   0067A2  EFDD  F033         	goto	u14120
 16953   0067A6  5039               	movf	(___flmul@temp+1)^0,w,c
 16954   0067A8  E106               	bnz	u14121
 16955   0067AA  0438               	decf	___flmul@temp^0,w,c
 16956   0067AC  B0D8               	btfsc	status,0,c
 16957   0067AE  EFDB  F033         	goto	u14121
 16958   0067B2  EFDD  F033         	goto	u14120
 16959   0067B6                     u14121:
 16960   0067B6  EFE9  F033         	goto	l1484
 16961   0067BA                     u14120:
 16962   0067BA  0E00               	movlw	0
 16963   0067BC  6E34               	movwf	___flmul@prod^0,c
 16964   0067BE  0E00               	movlw	0
 16965   0067C0  6E35               	movwf	(___flmul@prod+1)^0,c
 16966   0067C2  0E00               	movlw	0
 16967   0067C4  6E36               	movwf	(___flmul@prod+2)^0,c
 16968   0067C6  0E00               	movlw	0
 16969   0067C8  6E37               	movwf	(___flmul@prod+3)^0,c
 16970   0067CA  0E00               	movlw	0
 16971   0067CC  6E2D               	movwf	___flmul@sign^0,c
 16972   0067CE  EFFE  F033         	goto	l11422
 16973   0067D2                     l1484:
 16974   0067D2  C038  F033         	movff	___flmul@temp,___flmul@bexp
 16975   0067D6  0EFF               	movlw	255
 16976   0067D8  1634               	andwf	___flmul@prod^0,f,c
 16977   0067DA  0EFF               	movlw	255
 16978   0067DC  1635               	andwf	(___flmul@prod+1)^0,f,c
 16979   0067DE  0E7F               	movlw	127
 16980   0067E0  1636               	andwf	(___flmul@prod+2)^0,f,c
 16981   0067E2  0E00               	movlw	0
 16982   0067E4  1637               	andwf	(___flmul@prod+3)^0,f,c
 16983   0067E6  A033               	btfss	___flmul@bexp^0,0,c
 16984   0067E8  EFF8  F033         	goto	u14131
 16985   0067EC  EFFA  F033         	goto	u14130
 16986   0067F0                     u14131:
 16987   0067F0  EFFB  F033         	goto	l11420
 16988   0067F4                     u14130:
 16989   0067F4  8E36               	bsf	(___flmul@prod+2)^0,7,c
 16990   0067F6                     l11420:
 16991   0067F6  90D8               	bcf	status,0,c
 16992   0067F8  3033               	rrcf	___flmul@bexp^0,w,c
 16993   0067FA  6E37               	movwf	(___flmul@prod+3)^0,c
 16994   0067FC                     l11422:
 16995   0067FC  502D               	movf	___flmul@sign^0,w,c
 16996   0067FE  1237               	iorwf	(___flmul@prod+3)^0,f,c
 16997   006800  C034  F021         	movff	___flmul@prod,?___flmul
 16998   006804  C035  F022         	movff	___flmul@prod+1,?___flmul+1
 16999   006808  C036  F023         	movff	___flmul@prod+2,?___flmul+2
 17000   00680C  C037  F024         	movff	___flmul@prod+3,?___flmul+3
 17001   006810                     l1471:
 17002   006810  0012               	return		;funcret
 17003   006812                     __end_of___flmul:
 17004                           	callstack 0
 17005                           
 17006 ;; *************** function ___flge *****************
 17007 ;; Defined at:
 17008 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 17009 ;; Parameters:    Size  Location     Type
 17010 ;;  ff1             4   65[COMRAM] unsigned char 
 17011 ;;  ff2             4   69[COMRAM] unsigned char 
 17012 ;; Auto vars:     Size  Location     Type
 17013 ;;		None
 17014 ;; Return value:  Size  Location     Type
 17015 ;;		None               void
 17016 ;; Registers used:
 17017 ;;		wreg, status,2, status,0
 17018 ;; Tracked objects:
 17019 ;;		On entry : 0/0
 17020 ;;		On exit  : 0/0
 17021 ;;		Unchanged: 0/0
 17022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17023 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17025 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17026 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17027 ;;Total ram usage:       12 bytes
 17028 ;; Hardware stack levels used: 1
 17029 ;; Hardware stack levels required when called: 3
 17030 ;; This function calls:
 17031 ;;		Nothing
 17032 ;; This function is called by:
 17033 ;;		_Calculator_display_result
 17034 ;;		_efgtoa
 17035 ;;		_powf
 17036 ;;		_sqrtf
 17037 ;;		_strtof
 17038 ;; This function uses a non-reentrant model
 17039 ;;
 17040                           
 17041                           	psect	text44
 17042   0091C6                     __ptext44:
 17043                           	callstack 0
 17044   0091C6                     ___flge:
 17045                           	callstack 24
 17046   0091C6  0E00               	movlw	0
 17047   0091C8  1442               	andwf	___flge@ff1^0,w,c
 17048   0091CA  6E4A               	movwf	??___flge^0,c
 17049   0091CC  0E00               	movlw	0
 17050   0091CE  1443               	andwf	(___flge@ff1+1)^0,w,c
 17051   0091D0  6E4B               	movwf	(??___flge+1)^0,c
 17052   0091D2  0E80               	movlw	128
 17053   0091D4  1444               	andwf	(___flge@ff1+2)^0,w,c
 17054   0091D6  6E4C               	movwf	(??___flge+2)^0,c
 17055   0091D8  0E7F               	movlw	127
 17056   0091DA  1445               	andwf	(___flge@ff1+3)^0,w,c
 17057   0091DC  6E4D               	movwf	(??___flge+3)^0,c
 17058   0091DE  504A               	movf	??___flge^0,w,c
 17059   0091E0  104B               	iorwf	(??___flge+1)^0,w,c
 17060   0091E2  104C               	iorwf	(??___flge+2)^0,w,c
 17061   0091E4  104D               	iorwf	(??___flge+3)^0,w,c
 17062   0091E6  A4D8               	btfss	status,2,c
 17063   0091E8  EFF8  F048         	goto	u14171
 17064   0091EC  EFFA  F048         	goto	u14170
 17065   0091F0                     u14171:
 17066   0091F0  EF02  F049         	goto	l11454
 17067   0091F4                     u14170:
 17068   0091F4  0E00               	movlw	0
 17069   0091F6  6E42               	movwf	___flge@ff1^0,c
 17070   0091F8  0E00               	movlw	0
 17071   0091FA  6E43               	movwf	(___flge@ff1+1)^0,c
 17072   0091FC  0E00               	movlw	0
 17073   0091FE  6E44               	movwf	(___flge@ff1+2)^0,c
 17074   009200  0E00               	movlw	0
 17075   009202  6E45               	movwf	(___flge@ff1+3)^0,c
 17076   009204                     l11454:
 17077   009204  0E00               	movlw	0
 17078   009206  1446               	andwf	___flge@ff2^0,w,c
 17079   009208  6E4A               	movwf	??___flge^0,c
 17080   00920A  0E00               	movlw	0
 17081   00920C  1447               	andwf	(___flge@ff2+1)^0,w,c
 17082   00920E  6E4B               	movwf	(??___flge+1)^0,c
 17083   009210  0E80               	movlw	128
 17084   009212  1448               	andwf	(___flge@ff2+2)^0,w,c
 17085   009214  6E4C               	movwf	(??___flge+2)^0,c
 17086   009216  0E7F               	movlw	127
 17087   009218  1449               	andwf	(___flge@ff2+3)^0,w,c
 17088   00921A  6E4D               	movwf	(??___flge+3)^0,c
 17089   00921C  504A               	movf	??___flge^0,w,c
 17090   00921E  104B               	iorwf	(??___flge+1)^0,w,c
 17091   009220  104C               	iorwf	(??___flge+2)^0,w,c
 17092   009222  104D               	iorwf	(??___flge+3)^0,w,c
 17093   009224  A4D8               	btfss	status,2,c
 17094   009226  EF17  F049         	goto	u14181
 17095   00922A  EF19  F049         	goto	u14180
 17096   00922E                     u14181:
 17097   00922E  EF21  F049         	goto	l11458
 17098   009232                     u14180:
 17099   009232  0E00               	movlw	0
 17100   009234  6E46               	movwf	___flge@ff2^0,c
 17101   009236  0E00               	movlw	0
 17102   009238  6E47               	movwf	(___flge@ff2+1)^0,c
 17103   00923A  0E00               	movlw	0
 17104   00923C  6E48               	movwf	(___flge@ff2+2)^0,c
 17105   00923E  0E00               	movlw	0
 17106   009240  6E49               	movwf	(___flge@ff2+3)^0,c
 17107   009242                     l11458:
 17108   009242  AE45               	btfss	(___flge@ff1+3)^0,7,c
 17109   009244  EF26  F049         	goto	u14191
 17110   009248  EF28  F049         	goto	u14190
 17111   00924C                     u14191:
 17112   00924C  EF31  F049         	goto	l11462
 17113   009250                     u14190:
 17114   009250  6C42               	negf	___flge@ff1^0,c
 17115   009252  1E43               	comf	(___flge@ff1+1)^0,f,c
 17116   009254  B0D8               	btfsc	status,0,c
 17117   009256  2A43               	incf	(___flge@ff1+1)^0,f,c
 17118   009258  1E44               	comf	(___flge@ff1+2)^0,f,c
 17119   00925A  B0D8               	btfsc	status,0,c
 17120   00925C  2A44               	incf	(___flge@ff1+2)^0,f,c
 17121   00925E  0E80               	movlw	128
 17122   009260  5645               	subfwb	(___flge@ff1+3)^0,f,c
 17123   009262                     l11462:
 17124   009262  AE49               	btfss	(___flge@ff2+3)^0,7,c
 17125   009264  EF36  F049         	goto	u14201
 17126   009268  EF38  F049         	goto	u14200
 17127   00926C                     u14201:
 17128   00926C  EF41  F049         	goto	l1118
 17129   009270                     u14200:
 17130   009270  6C46               	negf	___flge@ff2^0,c
 17131   009272  1E47               	comf	(___flge@ff2+1)^0,f,c
 17132   009274  B0D8               	btfsc	status,0,c
 17133   009276  2A47               	incf	(___flge@ff2+1)^0,f,c
 17134   009278  1E48               	comf	(___flge@ff2+2)^0,f,c
 17135   00927A  B0D8               	btfsc	status,0,c
 17136   00927C  2A48               	incf	(___flge@ff2+2)^0,f,c
 17137   00927E  0E80               	movlw	128
 17138   009280  5649               	subfwb	(___flge@ff2+3)^0,f,c
 17139   009282                     l1118:
 17140   009282  0E00               	movlw	0
 17141   009284  1A42               	xorwf	___flge@ff1^0,f,c
 17142   009286  0E00               	movlw	0
 17143   009288  1A43               	xorwf	(___flge@ff1+1)^0,f,c
 17144   00928A  0E00               	movlw	0
 17145   00928C  1A44               	xorwf	(___flge@ff1+2)^0,f,c
 17146   00928E  0E80               	movlw	128
 17147   009290  1A45               	xorwf	(___flge@ff1+3)^0,f,c
 17148   009292  0E00               	movlw	0
 17149   009294  1A46               	xorwf	___flge@ff2^0,f,c
 17150   009296  0E00               	movlw	0
 17151   009298  1A47               	xorwf	(___flge@ff2+1)^0,f,c
 17152   00929A  0E00               	movlw	0
 17153   00929C  1A48               	xorwf	(___flge@ff2+2)^0,f,c
 17154   00929E  0E80               	movlw	128
 17155   0092A0  1A49               	xorwf	(___flge@ff2+3)^0,f,c
 17156   0092A2  5046               	movf	___flge@ff2^0,w,c
 17157   0092A4  5C42               	subwf	___flge@ff1^0,w,c
 17158   0092A6  5047               	movf	(___flge@ff2+1)^0,w,c
 17159   0092A8  5843               	subwfb	(___flge@ff1+1)^0,w,c
 17160   0092AA  5048               	movf	(___flge@ff2+2)^0,w,c
 17161   0092AC  5844               	subwfb	(___flge@ff1+2)^0,w,c
 17162   0092AE  5049               	movf	(___flge@ff2+3)^0,w,c
 17163   0092B0  5845               	subwfb	(___flge@ff1+3)^0,w,c
 17164   0092B2  B0D8               	btfsc	status,0,c
 17165   0092B4  EF5E  F049         	goto	u14211
 17166   0092B8  EF60  F049         	goto	u14210
 17167   0092BC                     u14211:
 17168   0092BC  EF63  F049         	goto	l11468
 17169   0092C0                     u14210:
 17170   0092C0  90D8               	bcf	status,0,c
 17171   0092C2  EF64  F049         	goto	l1123
 17172   0092C6                     l11468:
 17173   0092C6  80D8               	bsf	status,0,c
 17174   0092C8                     l1123:
 17175   0092C8  0012               	return		;funcret
 17176   0092CA                     __end_of___flge:
 17177                           	callstack 0
 17178                           
 17179 ;; *************** function ___fleq *****************
 17180 ;; Defined at:
 17181 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
 17182 ;; Parameters:    Size  Location     Type
 17183 ;;  ff1             4  110[COMRAM] unsigned char 
 17184 ;;  ff2             4  114[COMRAM] unsigned char 
 17185 ;; Auto vars:     Size  Location     Type
 17186 ;;		None
 17187 ;; Return value:  Size  Location     Type
 17188 ;;		None               void
 17189 ;; Registers used:
 17190 ;;		wreg, status,2, status,0
 17191 ;; Tracked objects:
 17192 ;;		On entry : 0/0
 17193 ;;		On exit  : 0/0
 17194 ;;		Unchanged: 0/0
 17195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17196 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17198 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17199 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17200 ;;Total ram usage:       12 bytes
 17201 ;; Hardware stack levels used: 1
 17202 ;; Hardware stack levels required when called: 3
 17203 ;; This function calls:
 17204 ;;		Nothing
 17205 ;; This function is called by:
 17206 ;;		_Calculator_display_result
 17207 ;;		_efgtoa
 17208 ;;		_strtof
 17209 ;; This function uses a non-reentrant model
 17210 ;;
 17211                           
 17212                           	psect	text45
 17213   009B0A                     __ptext45:
 17214                           	callstack 0
 17215   009B0A                     ___fleq:
 17216                           	callstack 24
 17217   009B0A  0E00               	movlw	0
 17218   009B0C  146F               	andwf	___fleq@ff1^0,w,c
 17219   009B0E  6E77               	movwf	??___fleq^0,c
 17220   009B10  0E00               	movlw	0
 17221   009B12  1470               	andwf	(___fleq@ff1+1)^0,w,c
 17222   009B14  6E78               	movwf	(??___fleq+1)^0,c
 17223   009B16  0E80               	movlw	128
 17224   009B18  1471               	andwf	(___fleq@ff1+2)^0,w,c
 17225   009B1A  6E79               	movwf	(??___fleq+2)^0,c
 17226   009B1C  0E7F               	movlw	127
 17227   009B1E  1472               	andwf	(___fleq@ff1+3)^0,w,c
 17228   009B20  6E7A               	movwf	(??___fleq+3)^0,c
 17229   009B22  5077               	movf	??___fleq^0,w,c
 17230   009B24  1078               	iorwf	(??___fleq+1)^0,w,c
 17231   009B26  1079               	iorwf	(??___fleq+2)^0,w,c
 17232   009B28  107A               	iorwf	(??___fleq+3)^0,w,c
 17233   009B2A  A4D8               	btfss	status,2,c
 17234   009B2C  EF9A  F04D         	goto	u14141
 17235   009B30  EF9C  F04D         	goto	u14140
 17236   009B34                     u14141:
 17237   009B34  EFA4  F04D         	goto	l11438
 17238   009B38                     u14140:
 17239   009B38  0E00               	movlw	0
 17240   009B3A  6E6F               	movwf	___fleq@ff1^0,c
 17241   009B3C  0E00               	movlw	0
 17242   009B3E  6E70               	movwf	(___fleq@ff1+1)^0,c
 17243   009B40  0E00               	movlw	0
 17244   009B42  6E71               	movwf	(___fleq@ff1+2)^0,c
 17245   009B44  0E00               	movlw	0
 17246   009B46  6E72               	movwf	(___fleq@ff1+3)^0,c
 17247   009B48                     l11438:
 17248   009B48  0E00               	movlw	0
 17249   009B4A  1473               	andwf	___fleq@ff2^0,w,c
 17250   009B4C  6E77               	movwf	??___fleq^0,c
 17251   009B4E  0E00               	movlw	0
 17252   009B50  1474               	andwf	(___fleq@ff2+1)^0,w,c
 17253   009B52  6E78               	movwf	(??___fleq+1)^0,c
 17254   009B54  0E80               	movlw	128
 17255   009B56  1475               	andwf	(___fleq@ff2+2)^0,w,c
 17256   009B58  6E79               	movwf	(??___fleq+2)^0,c
 17257   009B5A  0E7F               	movlw	127
 17258   009B5C  1476               	andwf	(___fleq@ff2+3)^0,w,c
 17259   009B5E  6E7A               	movwf	(??___fleq+3)^0,c
 17260   009B60  5077               	movf	??___fleq^0,w,c
 17261   009B62  1078               	iorwf	(??___fleq+1)^0,w,c
 17262   009B64  1079               	iorwf	(??___fleq+2)^0,w,c
 17263   009B66  107A               	iorwf	(??___fleq+3)^0,w,c
 17264   009B68  A4D8               	btfss	status,2,c
 17265   009B6A  EFB9  F04D         	goto	u14151
 17266   009B6E  EFBB  F04D         	goto	u14150
 17267   009B72                     u14151:
 17268   009B72  EFC3  F04D         	goto	l11442
 17269   009B76                     u14150:
 17270   009B76  0E00               	movlw	0
 17271   009B78  6E73               	movwf	___fleq@ff2^0,c
 17272   009B7A  0E00               	movlw	0
 17273   009B7C  6E74               	movwf	(___fleq@ff2+1)^0,c
 17274   009B7E  0E00               	movlw	0
 17275   009B80  6E75               	movwf	(___fleq@ff2+2)^0,c
 17276   009B82  0E00               	movlw	0
 17277   009B84  6E76               	movwf	(___fleq@ff2+3)^0,c
 17278   009B86                     l11442:
 17279   009B86  5073               	movf	___fleq@ff2^0,w,c
 17280   009B88  186F               	xorwf	___fleq@ff1^0,w,c
 17281   009B8A  E10F               	bnz	u14160
 17282   009B8C  5074               	movf	(___fleq@ff2+1)^0,w,c
 17283   009B8E  1870               	xorwf	(___fleq@ff1+1)^0,w,c
 17284   009B90  E10C               	bnz	u14160
 17285   009B92  5075               	movf	(___fleq@ff2+2)^0,w,c
 17286   009B94  1871               	xorwf	(___fleq@ff1+2)^0,w,c
 17287   009B96  E109               	bnz	u14160
 17288   009B98  5076               	movf	(___fleq@ff2+3)^0,w,c
 17289   009B9A  1872               	xorwf	(___fleq@ff1+3)^0,w,c
 17290   009B9C  B4D8               	btfsc	status,2,c
 17291   009B9E  EFD3  F04D         	goto	u14161
 17292   009BA2  EFD5  F04D         	goto	u14160
 17293   009BA6                     u14161:
 17294   009BA6  EFD8  F04D         	goto	l11446
 17295   009BAA                     u14160:
 17296   009BAA  90D8               	bcf	status,0,c
 17297   009BAC  EFD9  F04D         	goto	l1112
 17298   009BB0                     l11446:
 17299   009BB0  80D8               	bsf	status,0,c
 17300   009BB2                     l1112:
 17301   009BB2  0012               	return		;funcret
 17302   009BB4                     __end_of___fleq:
 17303                           	callstack 0
 17304                           
 17305 ;; *************** function _dtoa *****************
 17306 ;; Defined at:
 17307 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
 17308 ;; Parameters:    Size  Location     Type
 17309 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 17310 ;;		 -> sprintf@f(11), 
 17311 ;;  d               8   31[COMRAM] long long 
 17312 ;; Auto vars:     Size  Location     Type
 17313 ;;  n               8   53[COMRAM] long long 
 17314 ;;  i               2   62[COMRAM] int 
 17315 ;;  w               2   51[COMRAM] int 
 17316 ;;  p               2   49[COMRAM] int 
 17317 ;;  s               1   61[COMRAM] unsigned char 
 17318 ;; Return value:  Size  Location     Type
 17319 ;;                  1    wreg      void 
 17320 ;; Registers used:
 17321 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17322 ;; Tracked objects:
 17323 ;;		On entry : 0/0
 17324 ;;		On exit  : 0/0
 17325 ;;		Unchanged: 0/0
 17326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17327 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17328 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17329 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17330 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17331 ;;Total ram usage:       35 bytes
 17332 ;; Hardware stack levels used: 1
 17333 ;; Hardware stack levels required when called: 7
 17334 ;; This function calls:
 17335 ;;		___aodiv
 17336 ;;		___aomod
 17337 ;;		_abs
 17338 ;;		_pad
 17339 ;; This function is called by:
 17340 ;;		_vfpfcnvrt
 17341 ;; This function uses a non-reentrant model
 17342 ;;
 17343                           
 17344                           	psect	text46
 17345   00729A                     __ptext46:
 17346                           	callstack 0
 17347   00729A                     _dtoa:
 17348                           	callstack 18
 17349   00729A                     
 17350                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
 17351   00729A  C020  F036         	movff	dtoa@d,dtoa@n
 17352   00729E  C021  F037         	movff	dtoa@d+1,dtoa@n+1
 17353   0072A2  C022  F038         	movff	dtoa@d+2,dtoa@n+2
 17354   0072A6  C023  F039         	movff	dtoa@d+3,dtoa@n+3
 17355   0072AA  C024  F03A         	movff	dtoa@d+4,dtoa@n+4
 17356   0072AE  C025  F03B         	movff	dtoa@d+5,dtoa@n+5
 17357   0072B2  C026  F03C         	movff	dtoa@d+6,dtoa@n+6
 17358   0072B6  C027  F03D         	movff	dtoa@d+7,dtoa@n+7
 17359   0072BA                     
 17360                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
 17361   0072BA  BE3D               	btfsc	(dtoa@n+7)^0,7,c
 17362   0072BC  EF62  F039         	goto	u14561
 17363   0072C0  EF65  F039         	goto	u14560
 17364   0072C4                     u14561:
 17365   0072C4  0E01               	movlw	1
 17366   0072C6  EF66  F039         	goto	u14570
 17367   0072CA                     u14560:
 17368   0072CA  0E00               	movlw	0
 17369   0072CC                     u14570:
 17370   0072CC  6E3E               	movwf	dtoa@s^0,c
 17371   0072CE                     
 17372                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
 17373   0072CE  503E               	movf	dtoa@s^0,w,c
 17374   0072D0  B4D8               	btfsc	status,2,c
 17375   0072D2  EF6D  F039         	goto	u14581
 17376   0072D6  EF6F  F039         	goto	u14580
 17377   0072DA                     u14581:
 17378   0072DA  EF7F  F039         	goto	l11640
 17379   0072DE                     u14580:
 17380   0072DE                     
 17381                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
 17382   0072DE  1E3D               	comf	(dtoa@n+7)^0,f,c
 17383   0072E0  1E3C               	comf	(dtoa@n+6)^0,f,c
 17384   0072E2  1E3B               	comf	(dtoa@n+5)^0,f,c
 17385   0072E4  1E3A               	comf	(dtoa@n+4)^0,f,c
 17386   0072E6  1E39               	comf	(dtoa@n+3)^0,f,c
 17387   0072E8  1E38               	comf	(dtoa@n+2)^0,f,c
 17388   0072EA  1E37               	comf	(dtoa@n+1)^0,f,c
 17389   0072EC  6C36               	negf	dtoa@n^0,c
 17390   0072EE  0E00               	movlw	0
 17391   0072F0  2237               	addwfc	(dtoa@n+1)^0,f,c
 17392   0072F2  2238               	addwfc	(dtoa@n+2)^0,f,c
 17393   0072F4  2239               	addwfc	(dtoa@n+3)^0,f,c
 17394   0072F6  223A               	addwfc	(dtoa@n+4)^0,f,c
 17395   0072F8  223B               	addwfc	(dtoa@n+5)^0,f,c
 17396   0072FA  223C               	addwfc	(dtoa@n+6)^0,f,c
 17397   0072FC  223D               	addwfc	(dtoa@n+7)^0,f,c
 17398   0072FE                     l11640:
 17399                           
 17400                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 458:     if (!(pr
      +                          ec < 0)) {
 17401   0072FE  BE7C               	btfsc	(_prec+1)^0,7,c
 17402   007300  EF84  F039         	goto	u14591
 17403   007304  EF86  F039         	goto	u14590
 17404   007308                     u14591:
 17405   007308  EF88  F039         	goto	l11644
 17406   00730C                     u14590:
 17407   00730C                     
 17408                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 459:         flag
      +                          s &= ~(1 << 1);
 17409   00730C  0100               	movlb	0	; () banked
 17410   00730E  93FB               	bcf	_flags& (0+255),1,b
 17411   007310                     l11644:
 17412                           
 17413                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
 17414   007310  BE7C               	btfsc	(_prec+1)^0,7,c
 17415   007312  EF95  F039         	goto	u14600
 17416   007316  507C               	movf	(_prec+1)^0,w,c
 17417   007318  E106               	bnz	u14601
 17418   00731A  047B               	decf	_prec^0,w,c
 17419   00731C  B0D8               	btfsc	status,0,c
 17420   00731E  EF93  F039         	goto	u14601
 17421   007322  EF95  F039         	goto	u14600
 17422   007326                     u14601:
 17423   007326  EF9B  F039         	goto	l1652
 17424   00732A                     u14600:
 17425   00732A  0E00               	movlw	0
 17426   00732C  6E33               	movwf	(dtoa@p+1)^0,c
 17427   00732E  0E01               	movlw	1
 17428   007330  6E32               	movwf	dtoa@p^0,c
 17429   007332  EF9F  F039         	goto	l1654
 17430   007336                     l1652:
 17431   007336  C07B  F032         	movff	_prec,dtoa@p
 17432   00733A  C07C  F033         	movff	_prec+1,dtoa@p+1
 17433   00733E                     l1654:
 17434                           
 17435                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
 17436   00733E  C21D  F034         	movff	_width,dtoa@w
 17437   007342  C21E  F035         	movff	_width+1,dtoa@w+1
 17438   007346                     
 17439                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
 17440   007346  503E               	movf	dtoa@s^0,w,c
 17441   007348  B4D8               	btfsc	status,2,c
 17442   00734A  EFA9  F039         	goto	u14611
 17443   00734E  EFAB  F039         	goto	u14610
 17444   007352                     u14611:
 17445   007352  EFC2  F039         	goto	l1655
 17446   007356                     u14610:
 17447   007356                     
 17448                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
 17449   007356  0634               	decf	dtoa@w^0,f,c
 17450   007358  A0D8               	btfss	status,0,c
 17451   00735A  0635               	decf	(dtoa@w+1)^0,f,c
 17452   00735C                     
 17453                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
 17454   00735C  503E               	movf	dtoa@s^0,w,c
 17455   00735E  A4D8               	btfss	status,2,c
 17456   007360  EFB4  F039         	goto	u14621
 17457   007364  EFB6  F039         	goto	u14620
 17458   007368                     u14621:
 17459   007368  EFBC  F039         	goto	l11656
 17460   00736C                     u14620:
 17461   00736C  0E00               	movlw	0
 17462   00736E  6E31               	movwf	(_dtoa$2236+1)^0,c
 17463   007370  0E2B               	movlw	43
 17464   007372  6E30               	movwf	_dtoa$2236^0,c
 17465   007374  EFC0  F039         	goto	l11658
 17466   007378                     l11656:
 17467   007378  0E00               	movlw	0
 17468   00737A  6E31               	movwf	(_dtoa$2236+1)^0,c
 17469   00737C  0E2D               	movlw	45
 17470   00737E  6E30               	movwf	_dtoa$2236^0,c
 17471   007380                     l11658:
 17472   007380  C030  F03E         	movff	_dtoa$2236,dtoa@s
 17473   007384                     l1655:
 17474                           
 17475                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
 17476   007384  0E00               	movlw	0
 17477   007386  6E40               	movwf	(dtoa@i+1)^0,c
 17478   007388  0E4F               	movlw	79
 17479   00738A  6E3F               	movwf	dtoa@i^0,c
 17480   00738C                     
 17481                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
 17482   00738C  0E00               	movlw	0
 17483   00738E  0102               	movlb	2	; () banked
 17484   007390  6F84               	movwf	(_dbuf+79)& (0+255),b
 17485                           
 17486                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
 17487   007392  EF47  F03A         	goto	l11672
 17488   007396                     l11662:
 17489                           
 17490                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
 17491   007396  063F               	decf	dtoa@i^0,f,c
 17492   007398  A0D8               	btfss	status,0,c
 17493   00739A  0640               	decf	(dtoa@i+1)^0,f,c
 17494   00739C                     
 17495                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
 17496   00739C  0E35               	movlw	low _dbuf
 17497   00739E  243F               	addwf	dtoa@i^0,w,c
 17498   0073A0  6ED9               	movwf	fsr2l,c
 17499   0073A2  0E02               	movlw	high _dbuf
 17500   0073A4  2040               	addwfc	(dtoa@i+1)^0,w,c
 17501   0073A6  6EDA               	movwf	fsr2h,c
 17502   0073A8  C036  F003         	movff	dtoa@n,___aomod@dividend
 17503   0073AC  C037  F004         	movff	dtoa@n+1,___aomod@dividend+1
 17504   0073B0  C038  F005         	movff	dtoa@n+2,___aomod@dividend+2
 17505   0073B4  C039  F006         	movff	dtoa@n+3,___aomod@dividend+3
 17506   0073B8  C03A  F007         	movff	dtoa@n+4,___aomod@dividend+4
 17507   0073BC  C03B  F008         	movff	dtoa@n+5,___aomod@dividend+5
 17508   0073C0  C03C  F009         	movff	dtoa@n+6,___aomod@dividend+6
 17509   0073C4  C03D  F00A         	movff	dtoa@n+7,___aomod@dividend+7
 17510   0073C8  0E0A               	movlw	10
 17511   0073CA  6E0B               	movwf	___aomod@divisor^0,c
 17512   0073CC  0E00               	movlw	0
 17513   0073CE  6E0C               	movwf	(___aomod@divisor+1)^0,c
 17514   0073D0  0E00               	movlw	0
 17515   0073D2  6E0D               	movwf	(___aomod@divisor+2)^0,c
 17516   0073D4  0E00               	movlw	0
 17517   0073D6  6E0E               	movwf	(___aomod@divisor+3)^0,c
 17518   0073D8  0E00               	movlw	0
 17519   0073DA  6E0F               	movwf	(___aomod@divisor+4)^0,c
 17520   0073DC  0E00               	movlw	0
 17521   0073DE  6E10               	movwf	(___aomod@divisor+5)^0,c
 17522   0073E0  0E00               	movlw	0
 17523   0073E2  6E11               	movwf	(___aomod@divisor+6)^0,c
 17524   0073E4  0E00               	movlw	0
 17525   0073E6  6E12               	movwf	(___aomod@divisor+7)^0,c
 17526   0073E8  ECE4  F043         	call	___aomod	;wreg free
 17527   0073EC  C003  F028         	movff	?___aomod,??_dtoa
 17528   0073F0  C004  F029         	movff	?___aomod+1,??_dtoa+1
 17529   0073F4  C005  F02A         	movff	?___aomod+2,??_dtoa+2
 17530   0073F8  C006  F02B         	movff	?___aomod+3,??_dtoa+3
 17531   0073FC  C007  F02C         	movff	?___aomod+4,??_dtoa+4
 17532   007400  C008  F02D         	movff	?___aomod+5,??_dtoa+5
 17533   007404  C009  F02E         	movff	?___aomod+6,??_dtoa+6
 17534   007408  C00A  F02F         	movff	?___aomod+7,??_dtoa+7
 17535   00740C  C028  F015         	movff	??_dtoa,abs@a
 17536   007410  C029  F016         	movff	??_dtoa+1,abs@a+1
 17537   007414  EC7E  F054         	call	_abs	;wreg free
 17538   007418  5015               	movf	?_abs^0,w,c
 17539   00741A  0F30               	addlw	48
 17540   00741C  6EDF               	movwf	indf2,c
 17541   00741E                     
 17542                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
 17543   00741E  0632               	decf	dtoa@p^0,f,c
 17544   007420  A0D8               	btfss	status,0,c
 17545   007422  0633               	decf	(dtoa@p+1)^0,f,c
 17546   007424                     
 17547                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
 17548   007424  0634               	decf	dtoa@w^0,f,c
 17549   007426  A0D8               	btfss	status,0,c
 17550   007428  0635               	decf	(dtoa@w+1)^0,f,c
 17551   00742A                     
 17552                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
 17553   00742A  C036  F003         	movff	dtoa@n,___aodiv@dividend
 17554   00742E  C037  F004         	movff	dtoa@n+1,___aodiv@dividend+1
 17555   007432  C038  F005         	movff	dtoa@n+2,___aodiv@dividend+2
 17556   007436  C039  F006         	movff	dtoa@n+3,___aodiv@dividend+3
 17557   00743A  C03A  F007         	movff	dtoa@n+4,___aodiv@dividend+4
 17558   00743E  C03B  F008         	movff	dtoa@n+5,___aodiv@dividend+5
 17559   007442  C03C  F009         	movff	dtoa@n+6,___aodiv@dividend+6
 17560   007446  C03D  F00A         	movff	dtoa@n+7,___aodiv@dividend+7
 17561   00744A  0E0A               	movlw	10
 17562   00744C  6E0B               	movwf	___aodiv@divisor^0,c
 17563   00744E  0E00               	movlw	0
 17564   007450  6E0C               	movwf	(___aodiv@divisor+1)^0,c
 17565   007452  0E00               	movlw	0
 17566   007454  6E0D               	movwf	(___aodiv@divisor+2)^0,c
 17567   007456  0E00               	movlw	0
 17568   007458  6E0E               	movwf	(___aodiv@divisor+3)^0,c
 17569   00745A  0E00               	movlw	0
 17570   00745C  6E0F               	movwf	(___aodiv@divisor+4)^0,c
 17571   00745E  0E00               	movlw	0
 17572   007460  6E10               	movwf	(___aodiv@divisor+5)^0,c
 17573   007462  0E00               	movlw	0
 17574   007464  6E11               	movwf	(___aodiv@divisor+6)^0,c
 17575   007466  0E00               	movlw	0
 17576   007468  6E12               	movwf	(___aodiv@divisor+7)^0,c
 17577   00746A  ECAC  F041         	call	___aodiv	;wreg free
 17578   00746E  C003  F036         	movff	?___aodiv,dtoa@n
 17579   007472  C004  F037         	movff	?___aodiv+1,dtoa@n+1
 17580   007476  C005  F038         	movff	?___aodiv+2,dtoa@n+2
 17581   00747A  C006  F039         	movff	?___aodiv+3,dtoa@n+3
 17582   00747E  C007  F03A         	movff	?___aodiv+4,dtoa@n+4
 17583   007482  C008  F03B         	movff	?___aodiv+5,dtoa@n+5
 17584   007486  C009  F03C         	movff	?___aodiv+6,dtoa@n+6
 17585   00748A  C00A  F03D         	movff	?___aodiv+7,dtoa@n+7
 17586   00748E                     l11672:
 17587                           
 17588                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
 17589   00748E  BE40               	btfsc	(dtoa@i+1)^0,7,c
 17590   007490  EF52  F03A         	goto	u14631
 17591   007494  5040               	movf	(dtoa@i+1)^0,w,c
 17592   007496  E108               	bnz	u14630
 17593   007498  043F               	decf	dtoa@i^0,w,c
 17594   00749A  A0D8               	btfss	status,0,c
 17595   00749C  EF52  F03A         	goto	u14631
 17596   0074A0  EF54  F03A         	goto	u14630
 17597   0074A4                     u14631:
 17598   0074A4  EF85  F03A         	goto	l11682
 17599   0074A8                     u14630:
 17600   0074A8  5036               	movf	dtoa@n^0,w,c
 17601   0074AA  1037               	iorwf	(dtoa@n+1)^0,w,c
 17602   0074AC  1038               	iorwf	(dtoa@n+2)^0,w,c
 17603   0074AE  1039               	iorwf	(dtoa@n+3)^0,w,c
 17604   0074B0  103A               	iorwf	(dtoa@n+4)^0,w,c
 17605   0074B2  103B               	iorwf	(dtoa@n+5)^0,w,c
 17606   0074B4  103C               	iorwf	(dtoa@n+6)^0,w,c
 17607   0074B6  103D               	iorwf	(dtoa@n+7)^0,w,c
 17608   0074B8  A4D8               	btfss	status,2,c
 17609   0074BA  EF61  F03A         	goto	u14641
 17610   0074BE  EF63  F03A         	goto	u14640
 17611   0074C2                     u14641:
 17612   0074C2  EFCB  F039         	goto	l11662
 17613   0074C6                     u14640:
 17614   0074C6  BE33               	btfsc	(dtoa@p+1)^0,7,c
 17615   0074C8  EF70  F03A         	goto	u14650
 17616   0074CC  5033               	movf	(dtoa@p+1)^0,w,c
 17617   0074CE  E106               	bnz	u14651
 17618   0074D0  0432               	decf	dtoa@p^0,w,c
 17619   0074D2  B0D8               	btfsc	status,0,c
 17620   0074D4  EF6E  F03A         	goto	u14651
 17621   0074D8  EF70  F03A         	goto	u14650
 17622   0074DC                     u14651:
 17623   0074DC  EFCB  F039         	goto	l11662
 17624   0074E0                     u14650:
 17625   0074E0  BE35               	btfsc	(dtoa@w+1)^0,7,c
 17626   0074E2  EF7B  F03A         	goto	u14661
 17627   0074E6  5035               	movf	(dtoa@w+1)^0,w,c
 17628   0074E8  E108               	bnz	u14660
 17629   0074EA  0434               	decf	dtoa@w^0,w,c
 17630   0074EC  A0D8               	btfss	status,0,c
 17631   0074EE  EF7B  F03A         	goto	u14661
 17632   0074F2  EF7D  F03A         	goto	u14660
 17633   0074F6                     u14661:
 17634   0074F6  EF85  F03A         	goto	l11682
 17635   0074FA                     u14660:
 17636   0074FA  0100               	movlb	0	; () banked
 17637   0074FC  B3FB               	btfsc	_flags& (0+255),1,b
 17638   0074FE  EF83  F03A         	goto	u14671
 17639   007502  EF85  F03A         	goto	u14670
 17640   007506                     u14671:
 17641   007506  EFCB  F039         	goto	l11662
 17642   00750A                     u14670:
 17643   00750A                     l11682:
 17644                           
 17645                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
 17646   00750A  503E               	movf	dtoa@s^0,w,c
 17647   00750C  B4D8               	btfsc	status,2,c
 17648   00750E  EF8B  F03A         	goto	u14681
 17649   007512  EF8D  F03A         	goto	u14680
 17650   007516                     u14681:
 17651   007516  EF98  F03A         	goto	l11688
 17652   00751A                     u14680:
 17653   00751A                     
 17654                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
 17655   00751A  063F               	decf	dtoa@i^0,f,c
 17656   00751C  A0D8               	btfss	status,0,c
 17657   00751E  0640               	decf	(dtoa@i+1)^0,f,c
 17658   007520                     
 17659                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
 17660   007520  0E35               	movlw	low _dbuf
 17661   007522  243F               	addwf	dtoa@i^0,w,c
 17662   007524  6ED9               	movwf	fsr2l,c
 17663   007526  0E02               	movlw	high _dbuf
 17664   007528  2040               	addwfc	(dtoa@i+1)^0,w,c
 17665   00752A  6EDA               	movwf	fsr2h,c
 17666   00752C  C03E  FFDF         	movff	dtoa@s,indf2
 17667   007530                     l11688:
 17668                           
 17669                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
 17670   007530  C01E  F013         	movff	dtoa@fp,pad@fp
 17671   007534  C01F  F014         	movff	dtoa@fp+1,pad@fp+1
 17672   007538  0E35               	movlw	low _dbuf
 17673   00753A  243F               	addwf	dtoa@i^0,w,c
 17674   00753C  6E15               	movwf	pad@buf^0,c
 17675   00753E  0E02               	movlw	high _dbuf
 17676   007540  2040               	addwfc	(dtoa@i+1)^0,w,c
 17677   007542  6E16               	movwf	(pad@buf+1)^0,c
 17678   007544  C034  F017         	movff	dtoa@w,pad@p
 17679   007548  C035  F018         	movff	dtoa@w+1,pad@p+1
 17680   00754C  EC80  F04F         	call	_pad	;wreg free
 17681   007550  0012               	return		;funcret
 17682   007552                     __end_of_dtoa:
 17683                           	callstack 0
 17684                           
 17685 ;; *************** function _pad *****************
 17686 ;; Defined at:
 17687 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
 17688 ;; Parameters:    Size  Location     Type
 17689 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
 17690 ;;		 -> sprintf@f(11), 
 17691 ;;  buf             2   20[COMRAM] PTR unsigned char 
 17692 ;;		 -> dbuf(80), 
 17693 ;;  p               2   22[COMRAM] int 
 17694 ;; Auto vars:     Size  Location     Type
 17695 ;;  w               2   27[COMRAM] int 
 17696 ;;  i               2   25[COMRAM] int 
 17697 ;; Return value:  Size  Location     Type
 17698 ;;                  1    wreg      void 
 17699 ;; Registers used:
 17700 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17701 ;; Tracked objects:
 17702 ;;		On entry : 0/0
 17703 ;;		On exit  : 0/0
 17704 ;;		Unchanged: 0/0
 17705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17706 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17707 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17708 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17709 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17710 ;;Total ram usage:       11 bytes
 17711 ;; Hardware stack levels used: 1
 17712 ;; Hardware stack levels required when called: 6
 17713 ;; This function calls:
 17714 ;;		_fputc
 17715 ;;		_fputs
 17716 ;; This function is called by:
 17717 ;;		_dtoa
 17718 ;;		_efgtoa
 17719 ;; This function uses a non-reentrant model
 17720 ;;
 17721                           
 17722                           	psect	text47
 17723   009F00                     __ptext47:
 17724                           	callstack 0
 17725   009F00                     _pad:
 17726                           	callstack 18
 17727   009F00                     
 17728                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
 17729   009F00  BE18               	btfsc	(pad@p+1)^0,7,c
 17730   009F02  EF85  F04F         	goto	u14341
 17731   009F06  EF87  F04F         	goto	u14340
 17732   009F0A                     u14341:
 17733   009F0A  EF8D  F04F         	goto	l11544
 17734   009F0E                     u14340:
 17735   009F0E  C017  F01C         	movff	pad@p,pad@w
 17736   009F12  C018  F01D         	movff	pad@p+1,pad@w+1
 17737   009F16  EF91  F04F         	goto	l1642
 17738   009F1A                     l11544:
 17739   009F1A  0E00               	movlw	0
 17740   009F1C  6E1D               	movwf	(pad@w+1)^0,c
 17741   009F1E  0E00               	movlw	0
 17742   009F20  6E1C               	movwf	pad@w^0,c
 17743   009F22                     l1642:
 17744                           
 17745                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
 17746   009F22  0E00               	movlw	0
 17747   009F24  6E1B               	movwf	(pad@i+1)^0,c
 17748   009F26  0E00               	movlw	0
 17749   009F28  6E1A               	movwf	pad@i^0,c
 17750                           
 17751                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
 17752   009F2A  EFA3  F04F         	goto	l11550
 17753   009F2E                     l11546:
 17754                           
 17755                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
 17756   009F2E  0E00               	movlw	0
 17757   009F30  6E04               	movwf	(fputc@c+1)^0,c
 17758   009F32  0E20               	movlw	32
 17759   009F34  6E03               	movwf	fputc@c^0,c
 17760   009F36  C013  F005         	movff	pad@fp,fputc@fp
 17761   009F3A  C014  F006         	movff	pad@fp+1,fputc@fp+1
 17762   009F3E  EC40  F04B         	call	_fputc	;wreg free
 17763   009F42                     
 17764                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
 17765   009F42  4A1A               	infsnz	pad@i^0,f,c
 17766   009F44  2A1B               	incf	(pad@i+1)^0,f,c
 17767   009F46                     l11550:
 17768                           
 17769                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
 17770   009F46  501C               	movf	pad@w^0,w,c
 17771   009F48  5C1A               	subwf	pad@i^0,w,c
 17772   009F4A  501B               	movf	(pad@i+1)^0,w,c
 17773   009F4C  0A80               	xorlw	128
 17774   009F4E  6E19               	movwf	??_pad^0,c
 17775   009F50  501D               	movf	(pad@w+1)^0,w,c
 17776   009F52  0A80               	xorlw	128
 17777   009F54  5819               	subwfb	??_pad^0,w,c
 17778   009F56  A0D8               	btfss	status,0,c
 17779   009F58  EFB0  F04F         	goto	u14351
 17780   009F5C  EFB2  F04F         	goto	u14350
 17781   009F60                     u14351:
 17782   009F60  EF97  F04F         	goto	l11546
 17783   009F64                     u14350:
 17784   009F64                     
 17785                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
 17786   009F64  C015  F00C         	movff	pad@buf,fputs@s
 17787   009F68  C016  F00D         	movff	pad@buf+1,fputs@s+1
 17788   009F6C  C013  F00E         	movff	pad@fp,fputs@fp
 17789   009F70  C014  F00F         	movff	pad@fp+1,fputs@fp+1
 17790   009F74  EC3B  F054         	call	_fputs	;wreg free
 17791   009F78  0012               	return		;funcret
 17792   009F7A                     __end_of_pad:
 17793                           	callstack 0
 17794                           
 17795 ;; *************** function _fputs *****************
 17796 ;; Defined at:
 17797 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
 17798 ;; Parameters:    Size  Location     Type
 17799 ;;  s               2   11[COMRAM] PTR const unsigned char 
 17800 ;;		 -> dbuf(80), 
 17801 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
 17802 ;;		 -> sprintf@f(11), 
 17803 ;; Auto vars:     Size  Location     Type
 17804 ;;  i               2   16[COMRAM] int 
 17805 ;;  c               1   15[COMRAM] unsigned char 
 17806 ;; Return value:  Size  Location     Type
 17807 ;;                  2   11[COMRAM] int 
 17808 ;; Registers used:
 17809 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17810 ;; Tracked objects:
 17811 ;;		On entry : 0/0
 17812 ;;		On exit  : 0/0
 17813 ;;		Unchanged: 0/0
 17814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17815 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17816 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17818 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17819 ;;Total ram usage:        7 bytes
 17820 ;; Hardware stack levels used: 1
 17821 ;; Hardware stack levels required when called: 5
 17822 ;; This function calls:
 17823 ;;		_fputc
 17824 ;; This function is called by:
 17825 ;;		_pad
 17826 ;; This function uses a non-reentrant model
 17827 ;;
 17828                           
 17829                           	psect	text48
 17830   00A876                     __ptext48:
 17831                           	callstack 0
 17832   00A876                     _fputs:
 17833                           	callstack 18
 17834   00A876  0E00               	movlw	0
 17835   00A878  6E12               	movwf	(fputs@i+1)^0,c
 17836   00A87A  0E00               	movlw	0
 17837   00A87C  6E11               	movwf	fputs@i^0,c
 17838   00A87E  EF4C  F054         	goto	l11044
 17839   00A882                     l11040:
 17840   00A882  C010  F003         	movff	fputs@c,fputc@c
 17841   00A886  6A04               	clrf	(fputc@c+1)^0,c
 17842   00A888  C00E  F005         	movff	fputs@fp,fputc@fp
 17843   00A88C  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
 17844   00A890  EC40  F04B         	call	_fputc	;wreg free
 17845   00A894  4A11               	infsnz	fputs@i^0,f,c
 17846   00A896  2A12               	incf	(fputs@i+1)^0,f,c
 17847   00A898                     l11044:
 17848   00A898  5011               	movf	fputs@i^0,w,c
 17849   00A89A  240C               	addwf	fputs@s^0,w,c
 17850   00A89C  6ED9               	movwf	fsr2l,c
 17851   00A89E  5012               	movf	(fputs@i+1)^0,w,c
 17852   00A8A0  200D               	addwfc	(fputs@s+1)^0,w,c
 17853   00A8A2  6EDA               	movwf	fsr2h,c
 17854   00A8A4  50DF               	movf	indf2,w,c
 17855   00A8A6  6E10               	movwf	fputs@c^0,c
 17856   00A8A8  5010               	movf	fputs@c^0,w,c
 17857   00A8AA  A4D8               	btfss	status,2,c
 17858   00A8AC  EF5A  F054         	goto	u13481
 17859   00A8B0  EF5C  F054         	goto	u13480
 17860   00A8B4                     u13481:
 17861   00A8B4  EF41  F054         	goto	l11040
 17862   00A8B8                     u13480:
 17863   00A8B8  0012               	return		;funcret
 17864   00A8BA                     __end_of_fputs:
 17865                           	callstack 0
 17866                           
 17867 ;; *************** function _fputc *****************
 17868 ;; Defined at:
 17869 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
 17870 ;; Parameters:    Size  Location     Type
 17871 ;;  c               2    2[COMRAM] int 
 17872 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
 17873 ;;		 -> sprintf@f(11), 
 17874 ;; Auto vars:     Size  Location     Type
 17875 ;;		None
 17876 ;; Return value:  Size  Location     Type
 17877 ;;                  2    2[COMRAM] int 
 17878 ;; Registers used:
 17879 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17880 ;; Tracked objects:
 17881 ;;		On entry : 0/0
 17882 ;;		On exit  : 0/0
 17883 ;;		Unchanged: 0/0
 17884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17885 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17887 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17888 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17889 ;;Total ram usage:        9 bytes
 17890 ;; Hardware stack levels used: 1
 17891 ;; Hardware stack levels required when called: 4
 17892 ;; This function calls:
 17893 ;;		_putch
 17894 ;; This function is called by:
 17895 ;;		_pad
 17896 ;;		_vfpfcnvrt
 17897 ;;		_fputs
 17898 ;; This function uses a non-reentrant model
 17899 ;;
 17900                           
 17901                           	psect	text49
 17902   009680                     __ptext49:
 17903                           	callstack 0
 17904   009680                     _fputc:
 17905                           	callstack 21
 17906   009680  5005               	movf	fputc@fp^0,w,c
 17907   009682  1006               	iorwf	(fputc@fp+1)^0,w,c
 17908   009684  B4D8               	btfsc	status,2,c
 17909   009686  EF47  F04B         	goto	u13051
 17910   00968A  EF49  F04B         	goto	u13050
 17911   00968E                     u13051:
 17912   00968E  EF52  F04B         	goto	l10826
 17913   009692                     u13050:
 17914   009692  5005               	movf	fputc@fp^0,w,c
 17915   009694  1006               	iorwf	(fputc@fp+1)^0,w,c
 17916   009696  A4D8               	btfss	status,2,c
 17917   009698  EF50  F04B         	goto	u13061
 17918   00969C  EF52  F04B         	goto	u13060
 17919   0096A0                     u13061:
 17920   0096A0  EF57  F04B         	goto	l10828
 17921   0096A4                     u13060:
 17922   0096A4                     l10826:
 17923   0096A4  5003               	movf	fputc@c^0,w,c
 17924   0096A6  EC59  F056         	call	_putch
 17925   0096AA  EFA4  F04B         	goto	l1813
 17926   0096AE                     l10828:
 17927   0096AE  EE20 F009          	lfsr	2,9
 17928   0096B2  5005               	movf	fputc@fp^0,w,c
 17929   0096B4  26D9               	addwf	fsr2l,f,c
 17930   0096B6  5006               	movf	(fputc@fp+1)^0,w,c
 17931   0096B8  22DA               	addwfc	fsr2h,f,c
 17932   0096BA  50DE               	movf	postinc2,w,c
 17933   0096BC  10DE               	iorwf	postinc2,w,c
 17934   0096BE  B4D8               	btfsc	status,2,c
 17935   0096C0  EF64  F04B         	goto	u13071
 17936   0096C4  EF66  F04B         	goto	u13070
 17937   0096C8                     u13071:
 17938   0096C8  EF81  F04B         	goto	l10832
 17939   0096CC                     u13070:
 17940   0096CC  EE20 F009          	lfsr	2,9
 17941   0096D0  5005               	movf	fputc@fp^0,w,c
 17942   0096D2  26D9               	addwf	fsr2l,f,c
 17943   0096D4  5006               	movf	(fputc@fp+1)^0,w,c
 17944   0096D6  22DA               	addwfc	fsr2h,f,c
 17945   0096D8  EE10 F003          	lfsr	1,3
 17946   0096DC  5005               	movf	fputc@fp^0,w,c
 17947   0096DE  26E1               	addwf	fsr1l,f,c
 17948   0096E0  5006               	movf	(fputc@fp+1)^0,w,c
 17949   0096E2  22E2               	addwfc	fsr1h,f,c
 17950   0096E4  50DE               	movf	postinc2,w,c
 17951   0096E6  5CE6               	subwf	postinc1,w,c
 17952   0096E8  50E6               	movf	postinc1,w,c
 17953   0096EA  0A80               	xorlw	128
 17954   0096EC  6E0B               	movwf	(??_fputc+4)^0,c
 17955   0096EE  50DE               	movf	postinc2,w,c
 17956   0096F0  0A80               	xorlw	128
 17957   0096F2  580B               	subwfb	(??_fputc+4)^0,w,c
 17958   0096F4  B0D8               	btfsc	status,0,c
 17959   0096F6  EF7F  F04B         	goto	u13081
 17960   0096FA  EF81  F04B         	goto	u13080
 17961   0096FE                     u13081:
 17962   0096FE  EFA4  F04B         	goto	l1813
 17963   009702                     u13080:
 17964   009702                     l10832:
 17965   009702  EE20 F003          	lfsr	2,3
 17966   009706  5005               	movf	fputc@fp^0,w,c
 17967   009708  26D9               	addwf	fsr2l,f,c
 17968   00970A  5006               	movf	(fputc@fp+1)^0,w,c
 17969   00970C  22DA               	addwfc	fsr2h,f,c
 17970   00970E  CFDE F007          	movff	postinc2,??_fputc
 17971   009712  CFDD F008          	movff	postdec2,??_fputc+1
 17972   009716  C005  FFD9         	movff	fputc@fp,fsr2l
 17973   00971A  C006  FFDA         	movff	fputc@fp+1,fsr2h
 17974   00971E  CFDE F009          	movff	postinc2,??_fputc+2
 17975   009722  CFDD F00A          	movff	postdec2,??_fputc+3
 17976   009726  5007               	movf	??_fputc^0,w,c
 17977   009728  2409               	addwf	(??_fputc+2)^0,w,c
 17978   00972A  6ED9               	movwf	fsr2l,c
 17979   00972C  5008               	movf	(??_fputc+1)^0,w,c
 17980   00972E  200A               	addwfc	(??_fputc+3)^0,w,c
 17981   009730  6EDA               	movwf	fsr2h,c
 17982   009732  C003  FFDF         	movff	fputc@c,indf2
 17983   009736  EE20 F003          	lfsr	2,3
 17984   00973A  5005               	movf	fputc@fp^0,w,c
 17985   00973C  26D9               	addwf	fsr2l,f,c
 17986   00973E  5006               	movf	(fputc@fp+1)^0,w,c
 17987   009740  22DA               	addwfc	fsr2h,f,c
 17988   009742  2ADE               	incf	postinc2,f,c
 17989   009744  0E00               	movlw	0
 17990   009746  22DD               	addwfc	postdec2,f,c
 17991   009748                     l1813:
 17992   009748  0012               	return		;funcret
 17993   00974A                     __end_of_fputc:
 17994                           	callstack 0
 17995                           
 17996 ;; *************** function _putch *****************
 17997 ;; Defined at:
 17998 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
 17999 ;; Parameters:    Size  Location     Type
 18000 ;;  c               1    wreg     unsigned char 
 18001 ;; Auto vars:     Size  Location     Type
 18002 ;;  c               1    0[COMRAM] unsigned char 
 18003 ;; Return value:  Size  Location     Type
 18004 ;;                  1    wreg      void 
 18005 ;; Registers used:
 18006 ;;		wreg
 18007 ;; Tracked objects:
 18008 ;;		On entry : 0/0
 18009 ;;		On exit  : 0/0
 18010 ;;		Unchanged: 0/0
 18011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18016 ;;Total ram usage:        0 bytes
 18017 ;; Hardware stack levels used: 1
 18018 ;; Hardware stack levels required when called: 3
 18019 ;; This function calls:
 18020 ;;		Nothing
 18021 ;; This function is called by:
 18022 ;;		_fputc
 18023 ;; This function uses a non-reentrant model
 18024 ;;
 18025                           
 18026                           	psect	text50
 18027   00ACB2                     __ptext50:
 18028                           	callstack 0
 18029   00ACB2                     _putch:
 18030                           	callstack 21
 18031   00ACB2  0012               	return		;funcret
 18032   00ACB4                     __end_of_putch:
 18033                           	callstack 0
 18034                           
 18035 ;; *************** function _abs *****************
 18036 ;; Defined at:
 18037 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
 18038 ;; Parameters:    Size  Location     Type
 18039 ;;  a               2   20[COMRAM] int 
 18040 ;; Auto vars:     Size  Location     Type
 18041 ;;		None
 18042 ;; Return value:  Size  Location     Type
 18043 ;;                  2   20[COMRAM] int 
 18044 ;; Registers used:
 18045 ;;		wreg, status,2, status,0
 18046 ;; Tracked objects:
 18047 ;;		On entry : 0/0
 18048 ;;		On exit  : 0/0
 18049 ;;		Unchanged: 0/0
 18050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18051 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18053 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18054 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18055 ;;Total ram usage:        4 bytes
 18056 ;; Hardware stack levels used: 1
 18057 ;; Hardware stack levels required when called: 3
 18058 ;; This function calls:
 18059 ;;		Nothing
 18060 ;; This function is called by:
 18061 ;;		_dtoa
 18062 ;; This function uses a non-reentrant model
 18063 ;;
 18064                           
 18065                           	psect	text51
 18066   00A8FC                     __ptext51:
 18067                           	callstack 0
 18068   00A8FC                     _abs:
 18069                           	callstack 21
 18070   00A8FC  BE16               	btfsc	(abs@a+1)^0,7,c
 18071   00A8FE  EF8B  F054         	goto	u14360
 18072   00A902  5016               	movf	(abs@a+1)^0,w,c
 18073   00A904  E106               	bnz	u14361
 18074   00A906  0415               	decf	abs@a^0,w,c
 18075   00A908  B0D8               	btfsc	status,0,c
 18076   00A90A  EF89  F054         	goto	u14361
 18077   00A90E  EF8B  F054         	goto	u14360
 18078   00A912                     u14361:
 18079   00A912  EF99  F054         	goto	l1785
 18080   00A916                     u14360:
 18081   00A916  C015  F017         	movff	abs@a,??_abs
 18082   00A91A  C016  F018         	movff	abs@a+1,??_abs+1
 18083   00A91E  1E17               	comf	??_abs^0,f,c
 18084   00A920  1E18               	comf	(??_abs+1)^0,f,c
 18085   00A922  4A17               	infsnz	??_abs^0,f,c
 18086   00A924  2A18               	incf	(??_abs+1)^0,f,c
 18087   00A926  C017  F015         	movff	??_abs,?_abs
 18088   00A92A  C018  F016         	movff	??_abs+1,?_abs+1
 18089   00A92E  EF9D  F054         	goto	l1788
 18090   00A932                     l1785:
 18091   00A932  C015  F015         	movff	abs@a,?_abs
 18092   00A936  C016  F016         	movff	abs@a+1,?_abs+1
 18093   00A93A                     l1788:
 18094   00A93A  0012               	return		;funcret
 18095   00A93C                     __end_of_abs:
 18096                           	callstack 0
 18097                           
 18098 ;; *************** function ___aomod *****************
 18099 ;; Defined at:
 18100 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
 18101 ;; Parameters:    Size  Location     Type
 18102 ;;  dividend        8    2[COMRAM] long long 
 18103 ;;  divisor         8   10[COMRAM] long long 
 18104 ;; Auto vars:     Size  Location     Type
 18105 ;;  sign            1   19[COMRAM] unsigned char 
 18106 ;;  counter         1   18[COMRAM] unsigned char 
 18107 ;; Return value:  Size  Location     Type
 18108 ;;                  8    2[COMRAM] long long 
 18109 ;; Registers used:
 18110 ;;		wreg, status,2, status,0
 18111 ;; Tracked objects:
 18112 ;;		On entry : 0/0
 18113 ;;		On exit  : 0/0
 18114 ;;		Unchanged: 0/0
 18115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18116 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18117 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18119 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18120 ;;Total ram usage:       18 bytes
 18121 ;; Hardware stack levels used: 1
 18122 ;; Hardware stack levels required when called: 3
 18123 ;; This function calls:
 18124 ;;		Nothing
 18125 ;; This function is called by:
 18126 ;;		_dtoa
 18127 ;; This function uses a non-reentrant model
 18128 ;;
 18129                           
 18130                           	psect	text52
 18131   0087C8                     __ptext52:
 18132                           	callstack 0
 18133   0087C8                     ___aomod:
 18134                           	callstack 21
 18135   0087C8  0E00               	movlw	0
 18136   0087CA  6E14               	movwf	___aomod@sign^0,c
 18137   0087CC  BE0A               	btfsc	(___aomod@dividend+7)^0,7,c
 18138   0087CE  EFED  F043         	goto	u13660
 18139   0087D2  EFEB  F043         	goto	u13661
 18140   0087D6                     u13661:
 18141   0087D6  EFFF  F043         	goto	l11132
 18142   0087DA                     u13660:
 18143   0087DA  1E0A               	comf	(___aomod@dividend+7)^0,f,c
 18144   0087DC  1E09               	comf	(___aomod@dividend+6)^0,f,c
 18145   0087DE  1E08               	comf	(___aomod@dividend+5)^0,f,c
 18146   0087E0  1E07               	comf	(___aomod@dividend+4)^0,f,c
 18147   0087E2  1E06               	comf	(___aomod@dividend+3)^0,f,c
 18148   0087E4  1E05               	comf	(___aomod@dividend+2)^0,f,c
 18149   0087E6  1E04               	comf	(___aomod@dividend+1)^0,f,c
 18150   0087E8  6C03               	negf	___aomod@dividend^0,c
 18151   0087EA  0E00               	movlw	0
 18152   0087EC  2204               	addwfc	(___aomod@dividend+1)^0,f,c
 18153   0087EE  2205               	addwfc	(___aomod@dividend+2)^0,f,c
 18154   0087F0  2206               	addwfc	(___aomod@dividend+3)^0,f,c
 18155   0087F2  2207               	addwfc	(___aomod@dividend+4)^0,f,c
 18156   0087F4  2208               	addwfc	(___aomod@dividend+5)^0,f,c
 18157   0087F6  2209               	addwfc	(___aomod@dividend+6)^0,f,c
 18158   0087F8  220A               	addwfc	(___aomod@dividend+7)^0,f,c
 18159   0087FA  0E01               	movlw	1
 18160   0087FC  6E14               	movwf	___aomod@sign^0,c
 18161   0087FE                     l11132:
 18162   0087FE  BE12               	btfsc	(___aomod@divisor+7)^0,7,c
 18163   008800  EF06  F044         	goto	u13670
 18164   008804  EF04  F044         	goto	u13671
 18165   008808                     u13671:
 18166   008808  EF16  F044         	goto	l11136
 18167   00880C                     u13670:
 18168   00880C  1E12               	comf	(___aomod@divisor+7)^0,f,c
 18169   00880E  1E11               	comf	(___aomod@divisor+6)^0,f,c
 18170   008810  1E10               	comf	(___aomod@divisor+5)^0,f,c
 18171   008812  1E0F               	comf	(___aomod@divisor+4)^0,f,c
 18172   008814  1E0E               	comf	(___aomod@divisor+3)^0,f,c
 18173   008816  1E0D               	comf	(___aomod@divisor+2)^0,f,c
 18174   008818  1E0C               	comf	(___aomod@divisor+1)^0,f,c
 18175   00881A  6C0B               	negf	___aomod@divisor^0,c
 18176   00881C  0E00               	movlw	0
 18177   00881E  220C               	addwfc	(___aomod@divisor+1)^0,f,c
 18178   008820  220D               	addwfc	(___aomod@divisor+2)^0,f,c
 18179   008822  220E               	addwfc	(___aomod@divisor+3)^0,f,c
 18180   008824  220F               	addwfc	(___aomod@divisor+4)^0,f,c
 18181   008826  2210               	addwfc	(___aomod@divisor+5)^0,f,c
 18182   008828  2211               	addwfc	(___aomod@divisor+6)^0,f,c
 18183   00882A  2212               	addwfc	(___aomod@divisor+7)^0,f,c
 18184   00882C                     l11136:
 18185   00882C  500B               	movf	___aomod@divisor^0,w,c
 18186   00882E  100C               	iorwf	(___aomod@divisor+1)^0,w,c
 18187   008830  100D               	iorwf	(___aomod@divisor+2)^0,w,c
 18188   008832  100E               	iorwf	(___aomod@divisor+3)^0,w,c
 18189   008834  100F               	iorwf	(___aomod@divisor+4)^0,w,c
 18190   008836  1010               	iorwf	(___aomod@divisor+5)^0,w,c
 18191   008838  1011               	iorwf	(___aomod@divisor+6)^0,w,c
 18192   00883A  1012               	iorwf	(___aomod@divisor+7)^0,w,c
 18193   00883C  B4D8               	btfsc	status,2,c
 18194   00883E  EF23  F044         	goto	u13681
 18195   008842  EF25  F044         	goto	u13680
 18196   008846                     u13681:
 18197   008846  EF6D  F044         	goto	l11152
 18198   00884A                     u13680:
 18199   00884A  0E01               	movlw	1
 18200   00884C  6E13               	movwf	___aomod@counter^0,c
 18201   00884E  EF33  F044         	goto	l11142
 18202   008852                     l11140:
 18203   008852  90D8               	bcf	status,0,c
 18204   008854  360B               	rlcf	___aomod@divisor^0,f,c
 18205   008856  360C               	rlcf	(___aomod@divisor+1)^0,f,c
 18206   008858  360D               	rlcf	(___aomod@divisor+2)^0,f,c
 18207   00885A  360E               	rlcf	(___aomod@divisor+3)^0,f,c
 18208   00885C  360F               	rlcf	(___aomod@divisor+4)^0,f,c
 18209   00885E  3610               	rlcf	(___aomod@divisor+5)^0,f,c
 18210   008860  3611               	rlcf	(___aomod@divisor+6)^0,f,c
 18211   008862  3612               	rlcf	(___aomod@divisor+7)^0,f,c
 18212   008864  2A13               	incf	___aomod@counter^0,f,c
 18213   008866                     l11142:
 18214   008866  AE12               	btfss	(___aomod@divisor+7)^0,7,c
 18215   008868  EF38  F044         	goto	u13691
 18216   00886C  EF3A  F044         	goto	u13690
 18217   008870                     u13691:
 18218   008870  EF29  F044         	goto	l11140
 18219   008874                     u13690:
 18220   008874                     l11144:
 18221   008874  500B               	movf	___aomod@divisor^0,w,c
 18222   008876  5C03               	subwf	___aomod@dividend^0,w,c
 18223   008878  500C               	movf	(___aomod@divisor+1)^0,w,c
 18224   00887A  5804               	subwfb	(___aomod@dividend+1)^0,w,c
 18225   00887C  500D               	movf	(___aomod@divisor+2)^0,w,c
 18226   00887E  5805               	subwfb	(___aomod@dividend+2)^0,w,c
 18227   008880  500E               	movf	(___aomod@divisor+3)^0,w,c
 18228   008882  5806               	subwfb	(___aomod@dividend+3)^0,w,c
 18229   008884  500F               	movf	(___aomod@divisor+4)^0,w,c
 18230   008886  5807               	subwfb	(___aomod@dividend+4)^0,w,c
 18231   008888  5010               	movf	(___aomod@divisor+5)^0,w,c
 18232   00888A  5808               	subwfb	(___aomod@dividend+5)^0,w,c
 18233   00888C  5011               	movf	(___aomod@divisor+6)^0,w,c
 18234   00888E  5809               	subwfb	(___aomod@dividend+6)^0,w,c
 18235   008890  5012               	movf	(___aomod@divisor+7)^0,w,c
 18236   008892  580A               	subwfb	(___aomod@dividend+7)^0,w,c
 18237   008894  A0D8               	btfss	status,0,c
 18238   008896  EF4F  F044         	goto	u13701
 18239   00889A  EF51  F044         	goto	u13700
 18240   00889E                     u13701:
 18241   00889E  EF61  F044         	goto	l11148
 18242   0088A2                     u13700:
 18243   0088A2  500B               	movf	___aomod@divisor^0,w,c
 18244   0088A4  5E03               	subwf	___aomod@dividend^0,f,c
 18245   0088A6  500C               	movf	(___aomod@divisor+1)^0,w,c
 18246   0088A8  5A04               	subwfb	(___aomod@dividend+1)^0,f,c
 18247   0088AA  500D               	movf	(___aomod@divisor+2)^0,w,c
 18248   0088AC  5A05               	subwfb	(___aomod@dividend+2)^0,f,c
 18249   0088AE  500E               	movf	(___aomod@divisor+3)^0,w,c
 18250   0088B0  5A06               	subwfb	(___aomod@dividend+3)^0,f,c
 18251   0088B2  500F               	movf	(___aomod@divisor+4)^0,w,c
 18252   0088B4  5A07               	subwfb	(___aomod@dividend+4)^0,f,c
 18253   0088B6  5010               	movf	(___aomod@divisor+5)^0,w,c
 18254   0088B8  5A08               	subwfb	(___aomod@dividend+5)^0,f,c
 18255   0088BA  5011               	movf	(___aomod@divisor+6)^0,w,c
 18256   0088BC  5A09               	subwfb	(___aomod@dividend+6)^0,f,c
 18257   0088BE  5012               	movf	(___aomod@divisor+7)^0,w,c
 18258   0088C0  5A0A               	subwfb	(___aomod@dividend+7)^0,f,c
 18259   0088C2                     l11148:
 18260   0088C2  90D8               	bcf	status,0,c
 18261   0088C4  3212               	rrcf	(___aomod@divisor+7)^0,f,c
 18262   0088C6  3211               	rrcf	(___aomod@divisor+6)^0,f,c
 18263   0088C8  3210               	rrcf	(___aomod@divisor+5)^0,f,c
 18264   0088CA  320F               	rrcf	(___aomod@divisor+4)^0,f,c
 18265   0088CC  320E               	rrcf	(___aomod@divisor+3)^0,f,c
 18266   0088CE  320D               	rrcf	(___aomod@divisor+2)^0,f,c
 18267   0088D0  320C               	rrcf	(___aomod@divisor+1)^0,f,c
 18268   0088D2  320B               	rrcf	___aomod@divisor^0,f,c
 18269   0088D4  2E13               	decfsz	___aomod@counter^0,f,c
 18270   0088D6  EF3A  F044         	goto	l11144
 18271   0088DA                     l11152:
 18272   0088DA  5014               	movf	___aomod@sign^0,w,c
 18273   0088DC  B4D8               	btfsc	status,2,c
 18274   0088DE  EF73  F044         	goto	u13711
 18275   0088E2  EF75  F044         	goto	u13710
 18276   0088E6                     u13711:
 18277   0088E6  EF85  F044         	goto	l11156
 18278   0088EA                     u13710:
 18279   0088EA  1E0A               	comf	(___aomod@dividend+7)^0,f,c
 18280   0088EC  1E09               	comf	(___aomod@dividend+6)^0,f,c
 18281   0088EE  1E08               	comf	(___aomod@dividend+5)^0,f,c
 18282   0088F0  1E07               	comf	(___aomod@dividend+4)^0,f,c
 18283   0088F2  1E06               	comf	(___aomod@dividend+3)^0,f,c
 18284   0088F4  1E05               	comf	(___aomod@dividend+2)^0,f,c
 18285   0088F6  1E04               	comf	(___aomod@dividend+1)^0,f,c
 18286   0088F8  6C03               	negf	___aomod@dividend^0,c
 18287   0088FA  0E00               	movlw	0
 18288   0088FC  2204               	addwfc	(___aomod@dividend+1)^0,f,c
 18289   0088FE  2205               	addwfc	(___aomod@dividend+2)^0,f,c
 18290   008900  2206               	addwfc	(___aomod@dividend+3)^0,f,c
 18291   008902  2207               	addwfc	(___aomod@dividend+4)^0,f,c
 18292   008904  2208               	addwfc	(___aomod@dividend+5)^0,f,c
 18293   008906  2209               	addwfc	(___aomod@dividend+6)^0,f,c
 18294   008908  220A               	addwfc	(___aomod@dividend+7)^0,f,c
 18295   00890A                     l11156:
 18296   00890A  C003  F003         	movff	___aomod@dividend,?___aomod
 18297   00890E  C004  F004         	movff	___aomod@dividend+1,?___aomod+1
 18298   008912  C005  F005         	movff	___aomod@dividend+2,?___aomod+2
 18299   008916  C006  F006         	movff	___aomod@dividend+3,?___aomod+3
 18300   00891A  C007  F007         	movff	___aomod@dividend+4,?___aomod+4
 18301   00891E  C008  F008         	movff	___aomod@dividend+5,?___aomod+5
 18302   008922  C009  F009         	movff	___aomod@dividend+6,?___aomod+6
 18303   008926  C00A  F00A         	movff	___aomod@dividend+7,?___aomod+7
 18304   00892A  0012               	return		;funcret
 18305   00892C                     __end_of___aomod:
 18306                           	callstack 0
 18307                           
 18308 ;; *************** function ___aodiv *****************
 18309 ;; Defined at:
 18310 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
 18311 ;; Parameters:    Size  Location     Type
 18312 ;;  dividend        8    2[COMRAM] long long 
 18313 ;;  divisor         8   10[COMRAM] long long 
 18314 ;; Auto vars:     Size  Location     Type
 18315 ;;  quotient        8   20[COMRAM] long long 
 18316 ;;  sign            1   19[COMRAM] unsigned char 
 18317 ;;  counter         1   18[COMRAM] unsigned char 
 18318 ;; Return value:  Size  Location     Type
 18319 ;;                  8    2[COMRAM] long long 
 18320 ;; Registers used:
 18321 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18322 ;; Tracked objects:
 18323 ;;		On entry : 0/0
 18324 ;;		On exit  : 0/0
 18325 ;;		Unchanged: 0/0
 18326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18327 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18328 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18330 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18331 ;;Total ram usage:       26 bytes
 18332 ;; Hardware stack levels used: 1
 18333 ;; Hardware stack levels required when called: 3
 18334 ;; This function calls:
 18335 ;;		Nothing
 18336 ;; This function is called by:
 18337 ;;		_dtoa
 18338 ;; This function uses a non-reentrant model
 18339 ;;
 18340                           
 18341                           	psect	text53
 18342   008358                     __ptext53:
 18343                           	callstack 0
 18344   008358                     ___aodiv:
 18345                           	callstack 21
 18346   008358  0E00               	movlw	0
 18347   00835A  6E14               	movwf	___aodiv@sign^0,c
 18348   00835C  BE12               	btfsc	(___aodiv@divisor+7)^0,7,c
 18349   00835E  EFB5  F041         	goto	u13590
 18350   008362  EFB3  F041         	goto	u13591
 18351   008366                     u13591:
 18352   008366  EFC7  F041         	goto	l11088
 18353   00836A                     u13590:
 18354   00836A  1E12               	comf	(___aodiv@divisor+7)^0,f,c
 18355   00836C  1E11               	comf	(___aodiv@divisor+6)^0,f,c
 18356   00836E  1E10               	comf	(___aodiv@divisor+5)^0,f,c
 18357   008370  1E0F               	comf	(___aodiv@divisor+4)^0,f,c
 18358   008372  1E0E               	comf	(___aodiv@divisor+3)^0,f,c
 18359   008374  1E0D               	comf	(___aodiv@divisor+2)^0,f,c
 18360   008376  1E0C               	comf	(___aodiv@divisor+1)^0,f,c
 18361   008378  6C0B               	negf	___aodiv@divisor^0,c
 18362   00837A  0E00               	movlw	0
 18363   00837C  220C               	addwfc	(___aodiv@divisor+1)^0,f,c
 18364   00837E  220D               	addwfc	(___aodiv@divisor+2)^0,f,c
 18365   008380  220E               	addwfc	(___aodiv@divisor+3)^0,f,c
 18366   008382  220F               	addwfc	(___aodiv@divisor+4)^0,f,c
 18367   008384  2210               	addwfc	(___aodiv@divisor+5)^0,f,c
 18368   008386  2211               	addwfc	(___aodiv@divisor+6)^0,f,c
 18369   008388  2212               	addwfc	(___aodiv@divisor+7)^0,f,c
 18370   00838A  0E01               	movlw	1
 18371   00838C  6E14               	movwf	___aodiv@sign^0,c
 18372   00838E                     l11088:
 18373   00838E  BE0A               	btfsc	(___aodiv@dividend+7)^0,7,c
 18374   008390  EFCE  F041         	goto	u13600
 18375   008394  EFCC  F041         	goto	u13601
 18376   008398                     u13601:
 18377   008398  EFE0  F041         	goto	l11094
 18378   00839C                     u13600:
 18379   00839C  1E0A               	comf	(___aodiv@dividend+7)^0,f,c
 18380   00839E  1E09               	comf	(___aodiv@dividend+6)^0,f,c
 18381   0083A0  1E08               	comf	(___aodiv@dividend+5)^0,f,c
 18382   0083A2  1E07               	comf	(___aodiv@dividend+4)^0,f,c
 18383   0083A4  1E06               	comf	(___aodiv@dividend+3)^0,f,c
 18384   0083A6  1E05               	comf	(___aodiv@dividend+2)^0,f,c
 18385   0083A8  1E04               	comf	(___aodiv@dividend+1)^0,f,c
 18386   0083AA  6C03               	negf	___aodiv@dividend^0,c
 18387   0083AC  0E00               	movlw	0
 18388   0083AE  2204               	addwfc	(___aodiv@dividend+1)^0,f,c
 18389   0083B0  2205               	addwfc	(___aodiv@dividend+2)^0,f,c
 18390   0083B2  2206               	addwfc	(___aodiv@dividend+3)^0,f,c
 18391   0083B4  2207               	addwfc	(___aodiv@dividend+4)^0,f,c
 18392   0083B6  2208               	addwfc	(___aodiv@dividend+5)^0,f,c
 18393   0083B8  2209               	addwfc	(___aodiv@dividend+6)^0,f,c
 18394   0083BA  220A               	addwfc	(___aodiv@dividend+7)^0,f,c
 18395   0083BC  0E01               	movlw	1
 18396   0083BE  1A14               	xorwf	___aodiv@sign^0,f,c
 18397   0083C0                     l11094:
 18398   0083C0  EE20  F015         	lfsr	2,___aodiv@quotient
 18399   0083C4  0E07               	movlw	7
 18400   0083C6                     u13611:
 18401   0083C6  6ADE               	clrf	postinc2,c
 18402   0083C8  06E8               	decf	wreg,f,c
 18403   0083CA  E2FD               	bc	u13611
 18404   0083CC  500B               	movf	___aodiv@divisor^0,w,c
 18405   0083CE  100C               	iorwf	(___aodiv@divisor+1)^0,w,c
 18406   0083D0  100D               	iorwf	(___aodiv@divisor+2)^0,w,c
 18407   0083D2  100E               	iorwf	(___aodiv@divisor+3)^0,w,c
 18408   0083D4  100F               	iorwf	(___aodiv@divisor+4)^0,w,c
 18409   0083D6  1010               	iorwf	(___aodiv@divisor+5)^0,w,c
 18410   0083D8  1011               	iorwf	(___aodiv@divisor+6)^0,w,c
 18411   0083DA  1012               	iorwf	(___aodiv@divisor+7)^0,w,c
 18412   0083DC  B4D8               	btfsc	status,2,c
 18413   0083DE  EFF3  F041         	goto	u13621
 18414   0083E2  EFF5  F041         	goto	u13620
 18415   0083E6                     u13621:
 18416   0083E6  EF47  F042         	goto	l11116
 18417   0083EA                     u13620:
 18418   0083EA  0E01               	movlw	1
 18419   0083EC  6E13               	movwf	___aodiv@counter^0,c
 18420   0083EE  EF03  F042         	goto	l11102
 18421   0083F2                     l11100:
 18422   0083F2  90D8               	bcf	status,0,c
 18423   0083F4  360B               	rlcf	___aodiv@divisor^0,f,c
 18424   0083F6  360C               	rlcf	(___aodiv@divisor+1)^0,f,c
 18425   0083F8  360D               	rlcf	(___aodiv@divisor+2)^0,f,c
 18426   0083FA  360E               	rlcf	(___aodiv@divisor+3)^0,f,c
 18427   0083FC  360F               	rlcf	(___aodiv@divisor+4)^0,f,c
 18428   0083FE  3610               	rlcf	(___aodiv@divisor+5)^0,f,c
 18429   008400  3611               	rlcf	(___aodiv@divisor+6)^0,f,c
 18430   008402  3612               	rlcf	(___aodiv@divisor+7)^0,f,c
 18431   008404  2A13               	incf	___aodiv@counter^0,f,c
 18432   008406                     l11102:
 18433   008406  AE12               	btfss	(___aodiv@divisor+7)^0,7,c
 18434   008408  EF08  F042         	goto	u13631
 18435   00840C  EF0A  F042         	goto	u13630
 18436   008410                     u13631:
 18437   008410  EFF9  F041         	goto	l11100
 18438   008414                     u13630:
 18439   008414                     l11104:
 18440   008414  90D8               	bcf	status,0,c
 18441   008416  3615               	rlcf	___aodiv@quotient^0,f,c
 18442   008418  3616               	rlcf	(___aodiv@quotient+1)^0,f,c
 18443   00841A  3617               	rlcf	(___aodiv@quotient+2)^0,f,c
 18444   00841C  3618               	rlcf	(___aodiv@quotient+3)^0,f,c
 18445   00841E  3619               	rlcf	(___aodiv@quotient+4)^0,f,c
 18446   008420  361A               	rlcf	(___aodiv@quotient+5)^0,f,c
 18447   008422  361B               	rlcf	(___aodiv@quotient+6)^0,f,c
 18448   008424  361C               	rlcf	(___aodiv@quotient+7)^0,f,c
 18449   008426  500B               	movf	___aodiv@divisor^0,w,c
 18450   008428  5C03               	subwf	___aodiv@dividend^0,w,c
 18451   00842A  500C               	movf	(___aodiv@divisor+1)^0,w,c
 18452   00842C  5804               	subwfb	(___aodiv@dividend+1)^0,w,c
 18453   00842E  500D               	movf	(___aodiv@divisor+2)^0,w,c
 18454   008430  5805               	subwfb	(___aodiv@dividend+2)^0,w,c
 18455   008432  500E               	movf	(___aodiv@divisor+3)^0,w,c
 18456   008434  5806               	subwfb	(___aodiv@dividend+3)^0,w,c
 18457   008436  500F               	movf	(___aodiv@divisor+4)^0,w,c
 18458   008438  5807               	subwfb	(___aodiv@dividend+4)^0,w,c
 18459   00843A  5010               	movf	(___aodiv@divisor+5)^0,w,c
 18460   00843C  5808               	subwfb	(___aodiv@dividend+5)^0,w,c
 18461   00843E  5011               	movf	(___aodiv@divisor+6)^0,w,c
 18462   008440  5809               	subwfb	(___aodiv@dividend+6)^0,w,c
 18463   008442  5012               	movf	(___aodiv@divisor+7)^0,w,c
 18464   008444  580A               	subwfb	(___aodiv@dividend+7)^0,w,c
 18465   008446  A0D8               	btfss	status,0,c
 18466   008448  EF28  F042         	goto	u13641
 18467   00844C  EF2A  F042         	goto	u13640
 18468   008450                     u13641:
 18469   008450  EF3B  F042         	goto	l11112
 18470   008454                     u13640:
 18471   008454  500B               	movf	___aodiv@divisor^0,w,c
 18472   008456  5E03               	subwf	___aodiv@dividend^0,f,c
 18473   008458  500C               	movf	(___aodiv@divisor+1)^0,w,c
 18474   00845A  5A04               	subwfb	(___aodiv@dividend+1)^0,f,c
 18475   00845C  500D               	movf	(___aodiv@divisor+2)^0,w,c
 18476   00845E  5A05               	subwfb	(___aodiv@dividend+2)^0,f,c
 18477   008460  500E               	movf	(___aodiv@divisor+3)^0,w,c
 18478   008462  5A06               	subwfb	(___aodiv@dividend+3)^0,f,c
 18479   008464  500F               	movf	(___aodiv@divisor+4)^0,w,c
 18480   008466  5A07               	subwfb	(___aodiv@dividend+4)^0,f,c
 18481   008468  5010               	movf	(___aodiv@divisor+5)^0,w,c
 18482   00846A  5A08               	subwfb	(___aodiv@dividend+5)^0,f,c
 18483   00846C  5011               	movf	(___aodiv@divisor+6)^0,w,c
 18484   00846E  5A09               	subwfb	(___aodiv@dividend+6)^0,f,c
 18485   008470  5012               	movf	(___aodiv@divisor+7)^0,w,c
 18486   008472  5A0A               	subwfb	(___aodiv@dividend+7)^0,f,c
 18487   008474  8015               	bsf	___aodiv@quotient^0,0,c
 18488   008476                     l11112:
 18489   008476  90D8               	bcf	status,0,c
 18490   008478  3212               	rrcf	(___aodiv@divisor+7)^0,f,c
 18491   00847A  3211               	rrcf	(___aodiv@divisor+6)^0,f,c
 18492   00847C  3210               	rrcf	(___aodiv@divisor+5)^0,f,c
 18493   00847E  320F               	rrcf	(___aodiv@divisor+4)^0,f,c
 18494   008480  320E               	rrcf	(___aodiv@divisor+3)^0,f,c
 18495   008482  320D               	rrcf	(___aodiv@divisor+2)^0,f,c
 18496   008484  320C               	rrcf	(___aodiv@divisor+1)^0,f,c
 18497   008486  320B               	rrcf	___aodiv@divisor^0,f,c
 18498   008488  2E13               	decfsz	___aodiv@counter^0,f,c
 18499   00848A  EF0A  F042         	goto	l11104
 18500   00848E                     l11116:
 18501   00848E  5014               	movf	___aodiv@sign^0,w,c
 18502   008490  B4D8               	btfsc	status,2,c
 18503   008492  EF4D  F042         	goto	u13651
 18504   008496  EF4F  F042         	goto	u13650
 18505   00849A                     u13651:
 18506   00849A  EF5F  F042         	goto	l11120
 18507   00849E                     u13650:
 18508   00849E  1E1C               	comf	(___aodiv@quotient+7)^0,f,c
 18509   0084A0  1E1B               	comf	(___aodiv@quotient+6)^0,f,c
 18510   0084A2  1E1A               	comf	(___aodiv@quotient+5)^0,f,c
 18511   0084A4  1E19               	comf	(___aodiv@quotient+4)^0,f,c
 18512   0084A6  1E18               	comf	(___aodiv@quotient+3)^0,f,c
 18513   0084A8  1E17               	comf	(___aodiv@quotient+2)^0,f,c
 18514   0084AA  1E16               	comf	(___aodiv@quotient+1)^0,f,c
 18515   0084AC  6C15               	negf	___aodiv@quotient^0,c
 18516   0084AE  0E00               	movlw	0
 18517   0084B0  2216               	addwfc	(___aodiv@quotient+1)^0,f,c
 18518   0084B2  2217               	addwfc	(___aodiv@quotient+2)^0,f,c
 18519   0084B4  2218               	addwfc	(___aodiv@quotient+3)^0,f,c
 18520   0084B6  2219               	addwfc	(___aodiv@quotient+4)^0,f,c
 18521   0084B8  221A               	addwfc	(___aodiv@quotient+5)^0,f,c
 18522   0084BA  221B               	addwfc	(___aodiv@quotient+6)^0,f,c
 18523   0084BC  221C               	addwfc	(___aodiv@quotient+7)^0,f,c
 18524   0084BE                     l11120:
 18525   0084BE  C015  F003         	movff	___aodiv@quotient,?___aodiv
 18526   0084C2  C016  F004         	movff	___aodiv@quotient+1,?___aodiv+1
 18527   0084C6  C017  F005         	movff	___aodiv@quotient+2,?___aodiv+2
 18528   0084CA  C018  F006         	movff	___aodiv@quotient+3,?___aodiv+3
 18529   0084CE  C019  F007         	movff	___aodiv@quotient+4,?___aodiv+4
 18530   0084D2  C01A  F008         	movff	___aodiv@quotient+5,?___aodiv+5
 18531   0084D6  C01B  F009         	movff	___aodiv@quotient+6,?___aodiv+6
 18532   0084DA  C01C  F00A         	movff	___aodiv@quotient+7,?___aodiv+7
 18533   0084DE  0012               	return		;funcret
 18534   0084E0                     __end_of___aodiv:
 18535                           	callstack 0
 18536                           
 18537 ;; *************** function _atoi *****************
 18538 ;; Defined at:
 18539 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
 18540 ;; Parameters:    Size  Location     Type
 18541 ;;  s               2    8[COMRAM] PTR const unsigned char 
 18542 ;;		 -> main@MATH_STR(60), STR_4(6), STR_3(3), STR_2(3), 
 18543 ;;		 -> STR_1(3), 
 18544 ;; Auto vars:     Size  Location     Type
 18545 ;;  n               2   15[COMRAM] int 
 18546 ;;  neg             2   13[COMRAM] int 
 18547 ;; Return value:  Size  Location     Type
 18548 ;;                  2    8[COMRAM] int 
 18549 ;; Registers used:
 18550 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18551 ;; Tracked objects:
 18552 ;;		On entry : 0/0
 18553 ;;		On exit  : 0/0
 18554 ;;		Unchanged: 0/0
 18555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18556 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18557 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18558 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18559 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18560 ;;Total ram usage:        9 bytes
 18561 ;; Hardware stack levels used: 1
 18562 ;; Hardware stack levels required when called: 4
 18563 ;; This function calls:
 18564 ;;		___wmul
 18565 ;;		_isdigit
 18566 ;;		_isspace
 18567 ;; This function is called by:
 18568 ;;		_MathError
 18569 ;;		_vfpfcnvrt
 18570 ;; This function uses a non-reentrant model
 18571 ;;
 18572                           
 18573                           	psect	text54
 18574   007E46                     __ptext54:
 18575                           	callstack 0
 18576   007E46                     _atoi:
 18577                           	callstack 25
 18578   007E46  0E00               	movlw	0
 18579   007E48  6E11               	movwf	(atoi@n+1)^0,c
 18580   007E4A  0E00               	movlw	0
 18581   007E4C  6E10               	movwf	atoi@n^0,c
 18582   007E4E  0E00               	movlw	0
 18583   007E50  6E0F               	movwf	(atoi@neg+1)^0,c
 18584   007E52  0E00               	movlw	0
 18585   007E54  6E0E               	movwf	atoi@neg^0,c
 18586   007E56  EF2F  F03F         	goto	l11606
 18587   007E5A                     l11602:
 18588   007E5A  4A09               	infsnz	atoi@s^0,f,c
 18589   007E5C  2A0A               	incf	(atoi@s+1)^0,f,c
 18590   007E5E                     l11606:
 18591   007E5E  C009  FFF6         	movff	atoi@s,tblptrl
 18592   007E62  C00A  FFF7         	movff	atoi@s+1,tblptrh
 18593   007E66  0E00               	movlw	low (__smallconst shr (0+16))
 18594   007E68  6EF8               	movwf	tblptru,c
 18595   007E6A  0E0F               	movlw	(high __ramtop+-1)
 18596   007E6C  64F7               	cpfsgt	tblptrh,c
 18597   007E6E  D003               	bra	u14477
 18598   007E70  0008               	tblrd		*
 18599   007E72  50F5               	movf	tablat,w,c
 18600   007E74  D005               	bra	u14470
 18601   007E76                     u14477:
 18602   007E76  CFF6 FFE9          	movff	tblptrl,fsr0l
 18603   007E7A  CFF7 FFEA          	movff	tblptrh,fsr0h
 18604   007E7E  50EF               	movf	indf0,w,c
 18605   007E80                     u14470:
 18606   007E80  0A20               	xorlw	32
 18607   007E82  B4D8               	btfsc	status,2,c
 18608   007E84  EF46  F03F         	goto	u14481
 18609   007E88  EF48  F03F         	goto	u14480
 18610   007E8C                     u14481:
 18611   007E8C  EF2D  F03F         	goto	l11602
 18612   007E90                     u14480:
 18613   007E90  C009  FFF6         	movff	atoi@s,tblptrl
 18614   007E94  C00A  FFF7         	movff	atoi@s+1,tblptrh
 18615   007E98  0E00               	movlw	low (__smallconst shr (0+16))
 18616   007E9A  6EF8               	movwf	tblptru,c
 18617   007E9C  0E0F               	movlw	(high __ramtop+-1)
 18618   007E9E  64F7               	cpfsgt	tblptrh,c
 18619   007EA0  D003               	bra	u14497
 18620   007EA2  0008               	tblrd		*
 18621   007EA4  50F5               	movf	tablat,w,c
 18622   007EA6  D005               	bra	u14490
 18623   007EA8                     u14497:
 18624   007EA8  CFF6 FFE9          	movff	tblptrl,fsr0l
 18625   007EAC  CFF7 FFEA          	movff	tblptrh,fsr0h
 18626   007EB0  50EF               	movf	indf0,w,c
 18627   007EB2                     u14490:
 18628   007EB2  6E0B               	movwf	??_atoi^0,c
 18629   007EB4  0EF7               	movlw	247
 18630   007EB6  240B               	addwf	??_atoi^0,w,c
 18631   007EB8  6E0C               	movwf	(??_atoi+1)^0,c
 18632   007EBA  6A0D               	clrf	(??_atoi+2)^0,c
 18633   007EBC  0EFF               	movlw	255
 18634   007EBE  220D               	addwfc	(??_atoi+2)^0,f,c
 18635   007EC0  500D               	movf	(??_atoi+2)^0,w,c
 18636   007EC2  E109               	bnz	u14500
 18637   007EC4  0E05               	movlw	5
 18638   007EC6  5C0C               	subwf	(??_atoi+1)^0,w,c
 18639   007EC8  A0D8               	btfss	status,0,c
 18640   007ECA  EF69  F03F         	goto	u14501
 18641   007ECE  EF6B  F03F         	goto	u14500
 18642   007ED2                     u14501:
 18643   007ED2  EF2D  F03F         	goto	l11602
 18644   007ED6                     u14500:
 18645   007ED6  EF75  F03F         	goto	l11614
 18646   007EDA                     l11610:
 18647   007EDA  0E00               	movlw	0
 18648   007EDC  6E0F               	movwf	(atoi@neg+1)^0,c
 18649   007EDE  0E01               	movlw	1
 18650   007EE0  6E0E               	movwf	atoi@neg^0,c
 18651   007EE2                     l11612:
 18652   007EE2  4A09               	infsnz	atoi@s^0,f,c
 18653   007EE4  2A0A               	incf	(atoi@s+1)^0,f,c
 18654   007EE6  EFC2  F03F         	goto	l11622
 18655   007EEA                     l11614:
 18656   007EEA  C009  FFF6         	movff	atoi@s,tblptrl
 18657   007EEE  C00A  FFF7         	movff	atoi@s+1,tblptrh
 18658   007EF2  0E00               	movlw	low (__smallconst shr (0+16))
 18659   007EF4  6EF8               	movwf	tblptru,c
 18660   007EF6  0E0F               	movlw	(high __ramtop+-1)
 18661   007EF8  64F7               	cpfsgt	tblptrh,c
 18662   007EFA  D003               	bra	u14517
 18663   007EFC  0008               	tblrd		*
 18664   007EFE  50F5               	movf	tablat,w,c
 18665   007F00  D005               	bra	u14510
 18666   007F02                     u14517:
 18667   007F02  CFF6 FFE9          	movff	tblptrl,fsr0l
 18668   007F06  CFF7 FFEA          	movff	tblptrh,fsr0h
 18669   007F0A  50EF               	movf	indf0,w,c
 18670   007F0C                     u14510:
 18671   007F0C  6E0B               	movwf	??_atoi^0,c
 18672   007F0E  6A0C               	clrf	(??_atoi+1)^0,c
 18673                           
 18674                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18675                           ; Switch size 1, requested type "simple"
 18676                           ; Number of cases is 1, Range of values is 0 to 0
 18677                           ; switch strategies available:
 18678                           ; Name         Instructions Cycles
 18679                           ; simple_byte            4     3 (average)
 18680                           ;	Chosen strategy is simple_byte
 18681   007F10  500C               	movf	(??_atoi+1)^0,w,c
 18682   007F12  0A00               	xorlw	0	; case 0
 18683   007F14  B4D8               	btfsc	status,2,c
 18684   007F16  EF8F  F03F         	goto	l13852
 18685   007F1A  EFC2  F03F         	goto	l11622
 18686   007F1E                     l13852:
 18687                           
 18688                           ; Switch size 1, requested type "simple"
 18689                           ; Number of cases is 2, Range of values is 43 to 45
 18690                           ; switch strategies available:
 18691                           ; Name         Instructions Cycles
 18692                           ; simple_byte            7     4 (average)
 18693                           ;	Chosen strategy is simple_byte
 18694   007F1E  500B               	movf	??_atoi^0,w,c
 18695   007F20  0A2B               	xorlw	43	; case 43
 18696   007F22  B4D8               	btfsc	status,2,c
 18697   007F24  EF71  F03F         	goto	l11612
 18698   007F28  0A06               	xorlw	6	; case 45
 18699   007F2A  B4D8               	btfsc	status,2,c
 18700   007F2C  EF6D  F03F         	goto	l11610
 18701   007F30  EFC2  F03F         	goto	l11622
 18702   007F34                     l11616:
 18703   007F34  C010  F003         	movff	atoi@n,___wmul@multiplier
 18704   007F38  C011  F004         	movff	atoi@n+1,___wmul@multiplier+1
 18705   007F3C  0E00               	movlw	0
 18706   007F3E  6E06               	movwf	(___wmul@multiplicand+1)^0,c
 18707   007F40  0E0A               	movlw	10
 18708   007F42  6E05               	movwf	___wmul@multiplicand^0,c
 18709   007F44  ECC7  F055         	call	___wmul	;wreg free
 18710   007F48  C009  FFF6         	movff	atoi@s,tblptrl
 18711   007F4C  C00A  FFF7         	movff	atoi@s+1,tblptrh
 18712   007F50  0E00               	movlw	low (__smallconst shr (0+16))
 18713   007F52  6EF8               	movwf	tblptru,c
 18714   007F54  0E0F               	movlw	(high __ramtop+-1)
 18715   007F56  64F7               	cpfsgt	tblptrh,c
 18716   007F58  D003               	bra	u14527
 18717   007F5A  0008               	tblrd		*
 18718   007F5C  50F5               	movf	tablat,w,c
 18719   007F5E  D005               	bra	u14520
 18720   007F60                     u14527:
 18721   007F60  CFF6 FFE9          	movff	tblptrl,fsr0l
 18722   007F64  CFF7 FFEA          	movff	tblptrh,fsr0h
 18723   007F68  50EF               	movf	indf0,w,c
 18724   007F6A                     u14520:
 18725   007F6A  6E0B               	movwf	??_atoi^0,c
 18726   007F6C  500B               	movf	??_atoi^0,w,c
 18727   007F6E  5E03               	subwf	?___wmul^0,f,c
 18728   007F70  0E00               	movlw	0
 18729   007F72  5A04               	subwfb	(?___wmul+1)^0,f,c
 18730   007F74  0E30               	movlw	48
 18731   007F76  2403               	addwf	?___wmul^0,w,c
 18732   007F78  6E10               	movwf	atoi@n^0,c
 18733   007F7A  0E00               	movlw	0
 18734   007F7C  2004               	addwfc	(?___wmul+1)^0,w,c
 18735   007F7E  6E11               	movwf	(atoi@n+1)^0,c
 18736   007F80  EF71  F03F         	goto	l11612
 18737   007F84                     l11622:
 18738   007F84  C009  FFF6         	movff	atoi@s,tblptrl
 18739   007F88  C00A  FFF7         	movff	atoi@s+1,tblptrh
 18740   007F8C  0E00               	movlw	low (__smallconst shr (0+16))
 18741   007F8E  6EF8               	movwf	tblptru,c
 18742   007F90  0E0F               	movlw	(high __ramtop+-1)
 18743   007F92  64F7               	cpfsgt	tblptrh,c
 18744   007F94  D003               	bra	u14537
 18745   007F96  0008               	tblrd		*
 18746   007F98  50F5               	movf	tablat,w,c
 18747   007F9A  D005               	bra	u14530
 18748   007F9C                     u14537:
 18749   007F9C  CFF6 FFE9          	movff	tblptrl,fsr0l
 18750   007FA0  CFF7 FFEA          	movff	tblptrh,fsr0h
 18751   007FA4  50EF               	movf	indf0,w,c
 18752   007FA6                     u14530:
 18753   007FA6  6E0B               	movwf	??_atoi^0,c
 18754   007FA8  0ED0               	movlw	208
 18755   007FAA  240B               	addwf	??_atoi^0,w,c
 18756   007FAC  6E0C               	movwf	(??_atoi+1)^0,c
 18757   007FAE  6A0D               	clrf	(??_atoi+2)^0,c
 18758   007FB0  0EFF               	movlw	255
 18759   007FB2  220D               	addwfc	(??_atoi+2)^0,f,c
 18760   007FB4  500D               	movf	(??_atoi+2)^0,w,c
 18761   007FB6  E109               	bnz	u14540
 18762   007FB8  0E0A               	movlw	10
 18763   007FBA  5C0C               	subwf	(??_atoi+1)^0,w,c
 18764   007FBC  A0D8               	btfss	status,0,c
 18765   007FBE  EFE3  F03F         	goto	u14541
 18766   007FC2  EFE5  F03F         	goto	u14540
 18767   007FC6                     u14541:
 18768   007FC6  EF9A  F03F         	goto	l11616
 18769   007FCA                     u14540:
 18770   007FCA  500E               	movf	atoi@neg^0,w,c
 18771   007FCC  100F               	iorwf	(atoi@neg+1)^0,w,c
 18772   007FCE  A4D8               	btfss	status,2,c
 18773   007FD0  EFEC  F03F         	goto	u14551
 18774   007FD4  EFEE  F03F         	goto	u14550
 18775   007FD8                     u14551:
 18776   007FD8  EFFC  F03F         	goto	l1546
 18777   007FDC                     u14550:
 18778   007FDC  C010  F00B         	movff	atoi@n,??_atoi
 18779   007FE0  C011  F00C         	movff	atoi@n+1,??_atoi+1
 18780   007FE4  1E0B               	comf	??_atoi^0,f,c
 18781   007FE6  1E0C               	comf	(??_atoi+1)^0,f,c
 18782   007FE8  4A0B               	infsnz	??_atoi^0,f,c
 18783   007FEA  2A0C               	incf	(??_atoi+1)^0,f,c
 18784   007FEC  C00B  F009         	movff	??_atoi,?_atoi
 18785   007FF0  C00C  F00A         	movff	??_atoi+1,?_atoi+1
 18786   007FF4  EF00  F040         	goto	l1549
 18787   007FF8                     l1546:
 18788   007FF8  C010  F009         	movff	atoi@n,?_atoi
 18789   007FFC  C011  F00A         	movff	atoi@n+1,?_atoi+1
 18790   008000                     l1549:
 18791   008000  0012               	return		;funcret
 18792   008002                     __end_of_atoi:
 18793                           	callstack 0
 18794                           
 18795 ;; *************** function _isspace *****************
 18796 ;; Defined at:
 18797 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
 18798 ;; Parameters:    Size  Location     Type
 18799 ;;  c               2    2[COMRAM] int 
 18800 ;; Auto vars:     Size  Location     Type
 18801 ;;		None
 18802 ;; Return value:  Size  Location     Type
 18803 ;;                  2    2[COMRAM] int 
 18804 ;; Registers used:
 18805 ;;		wreg, status,2, status,0
 18806 ;; Tracked objects:
 18807 ;;		On entry : 0/0
 18808 ;;		On exit  : 0/0
 18809 ;;		Unchanged: 0/0
 18810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18811 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18812 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18813 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18814 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18815 ;;Total ram usage:        5 bytes
 18816 ;; Hardware stack levels used: 1
 18817 ;; Hardware stack levels required when called: 3
 18818 ;; This function calls:
 18819 ;;		Nothing
 18820 ;; This function is called by:
 18821 ;;		_atoi
 18822 ;;		_strtof
 18823 ;; This function uses a non-reentrant model
 18824 ;;
 18825                           
 18826                           	psect	text55
 18827   00A760                     __ptext55:
 18828                           	callstack 0
 18829   00A760                     _isspace:
 18830                           	callstack 25
 18831   00A760  0E01               	movlw	1
 18832   00A762  6E07               	movwf	_isspace$2115^0,c
 18833   00A764  0E20               	movlw	32
 18834   00A766  1803               	xorwf	isspace@c^0,w,c
 18835   00A768  1004               	iorwf	(isspace@c+1)^0,w,c
 18836   00A76A  B4D8               	btfsc	status,2,c
 18837   00A76C  EFBA  F053         	goto	u14301
 18838   00A770  EFBC  F053         	goto	u14300
 18839   00A774                     u14301:
 18840   00A774  EFCF  F053         	goto	l11532
 18841   00A778                     u14300:
 18842   00A778  0EF7               	movlw	247
 18843   00A77A  2403               	addwf	isspace@c^0,w,c
 18844   00A77C  6E05               	movwf	??_isspace^0,c
 18845   00A77E  0EFF               	movlw	255
 18846   00A780  2004               	addwfc	(isspace@c+1)^0,w,c
 18847   00A782  6E06               	movwf	(??_isspace+1)^0,c
 18848   00A784  5006               	movf	(??_isspace+1)^0,w,c
 18849   00A786  E109               	bnz	u14310
 18850   00A788  0E05               	movlw	5
 18851   00A78A  5C05               	subwf	??_isspace^0,w,c
 18852   00A78C  A0D8               	btfss	status,0,c
 18853   00A78E  EFCB  F053         	goto	u14311
 18854   00A792  EFCD  F053         	goto	u14310
 18855   00A796                     u14311:
 18856   00A796  EFCF  F053         	goto	l11532
 18857   00A79A                     u14310:
 18858   00A79A  0E00               	movlw	0
 18859   00A79C  6E07               	movwf	_isspace$2115^0,c
 18860   00A79E                     l11532:
 18861   00A79E  C007  F003         	movff	_isspace$2115,?_isspace
 18862   00A7A2  6A04               	clrf	(?_isspace+1)^0,c
 18863   00A7A4  0012               	return		;funcret
 18864   00A7A6                     __end_of_isspace:
 18865                           	callstack 0
 18866                           
 18867 ;; *************** function _isdigit *****************
 18868 ;; Defined at:
 18869 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
 18870 ;; Parameters:    Size  Location     Type
 18871 ;;  c               2    2[COMRAM] int 
 18872 ;; Auto vars:     Size  Location     Type
 18873 ;;		None
 18874 ;; Return value:  Size  Location     Type
 18875 ;;                  2    2[COMRAM] int 
 18876 ;; Registers used:
 18877 ;;		wreg, status,2, status,0
 18878 ;; Tracked objects:
 18879 ;;		On entry : 0/0
 18880 ;;		On exit  : 0/0
 18881 ;;		Unchanged: 0/0
 18882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18883 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18885 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18886 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18887 ;;Total ram usage:        4 bytes
 18888 ;; Hardware stack levels used: 1
 18889 ;; Hardware stack levels required when called: 3
 18890 ;; This function calls:
 18891 ;;		Nothing
 18892 ;; This function is called by:
 18893 ;;		_atoi
 18894 ;;		_vfpfcnvrt
 18895 ;;		_strtof
 18896 ;;		_isxdigit
 18897 ;; This function uses a non-reentrant model
 18898 ;;
 18899                           
 18900                           	psect	text56
 18901   00AB3A                     __ptext56:
 18902                           	callstack 0
 18903   00AB3A                     _isdigit:
 18904                           	callstack 25
 18905   00AB3A  0ED0               	movlw	208
 18906   00AB3C  2403               	addwf	isdigit@c^0,w,c
 18907   00AB3E  6E05               	movwf	??_isdigit^0,c
 18908   00AB40  0EFF               	movlw	255
 18909   00AB42  2004               	addwfc	(isdigit@c+1)^0,w,c
 18910   00AB44  6E06               	movwf	(??_isdigit+1)^0,c
 18911   00AB46  5006               	movf	(??_isdigit+1)^0,w,c
 18912   00AB48  E10A               	bnz	u14320
 18913   00AB4A  0E0A               	movlw	10
 18914   00AB4C  5C05               	subwf	??_isdigit^0,w,c
 18915   00AB4E  A0D8               	btfss	status,0,c
 18916   00AB50  EFAC  F055         	goto	u14321
 18917   00AB54  EFAF  F055         	goto	u14320
 18918   00AB58                     u14321:
 18919   00AB58  0E01               	movlw	1
 18920   00AB5A  EFB0  F055         	goto	u14330
 18921   00AB5E                     u14320:
 18922   00AB5E  0E00               	movlw	0
 18923   00AB60                     u14330:
 18924   00AB60  6E03               	movwf	?_isdigit^0,c
 18925   00AB62  6A04               	clrf	(?_isdigit+1)^0,c
 18926   00AB64  0012               	return		;funcret
 18927   00AB66                     __end_of_isdigit:
 18928                           	callstack 0
 18929                           
 18930 ;; *************** function ___wmul *****************
 18931 ;; Defined at:
 18932 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
 18933 ;; Parameters:    Size  Location     Type
 18934 ;;  multiplier      2    2[COMRAM] unsigned int 
 18935 ;;  multiplicand    2    4[COMRAM] unsigned int 
 18936 ;; Auto vars:     Size  Location     Type
 18937 ;;  product         2    6[COMRAM] unsigned int 
 18938 ;; Return value:  Size  Location     Type
 18939 ;;                  2    2[COMRAM] unsigned int 
 18940 ;; Registers used:
 18941 ;;		wreg, status,2, status,0, prodl, prodh
 18942 ;; Tracked objects:
 18943 ;;		On entry : 0/0
 18944 ;;		On exit  : 0/0
 18945 ;;		Unchanged: 0/0
 18946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18947 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18948 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18950 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18951 ;;Total ram usage:        6 bytes
 18952 ;; Hardware stack levels used: 1
 18953 ;; Hardware stack levels required when called: 3
 18954 ;; This function calls:
 18955 ;;		Nothing
 18956 ;; This function is called by:
 18957 ;;		_atoi
 18958 ;;		_strtof
 18959 ;; This function uses a non-reentrant model
 18960 ;;
 18961                           
 18962                           	psect	text57
 18963   00AB8E                     __ptext57:
 18964                           	callstack 0
 18965   00AB8E                     ___wmul:
 18966                           	callstack 25
 18967   00AB8E  5003               	movf	___wmul@multiplier^0,w,c
 18968   00AB90  0205               	mulwf	___wmul@multiplicand^0,c
 18969   00AB92  CFF3 F007          	movff	prodl,___wmul@product
 18970   00AB96  CFF4 F008          	movff	prodh,___wmul@product+1
 18971   00AB9A  5003               	movf	___wmul@multiplier^0,w,c
 18972   00AB9C  0206               	mulwf	(___wmul@multiplicand+1)^0,c
 18973   00AB9E  50F3               	movf	243,w,c
 18974   00ABA0  2608               	addwf	(___wmul@product+1)^0,f,c
 18975   00ABA2  5004               	movf	(___wmul@multiplier+1)^0,w,c
 18976   00ABA4  0205               	mulwf	___wmul@multiplicand^0,c
 18977   00ABA6  50F3               	movf	243,w,c
 18978   00ABA8  2608               	addwf	(___wmul@product+1)^0,f,c
 18979   00ABAA  C007  F003         	movff	___wmul@product,?___wmul
 18980   00ABAE  C008  F004         	movff	___wmul@product+1,?___wmul+1
 18981   00ABB2  0012               	return		;funcret
 18982   00ABB4                     __end_of___wmul:
 18983                           	callstack 0
 18984                           
 18985 ;; *************** function _memset *****************
 18986 ;; Defined at:
 18987 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memset.c"
 18988 ;; Parameters:    Size  Location     Type
 18989 ;;  dest            2    2[COMRAM] PTR void 
 18990 ;;		 -> Calculator_display_result@result_str(20), main@MATH_STR(60), 
 18991 ;;  c               2    4[COMRAM] int 
 18992 ;;  n               2    6[COMRAM] unsigned int 
 18993 ;; Auto vars:     Size  Location     Type
 18994 ;;  s               2   12[COMRAM] PTR unsigned char 
 18995 ;;		 -> Calculator_display_result@result_str(20), main@MATH_STR(60), 
 18996 ;;  k               2   10[COMRAM] unsigned int 
 18997 ;; Return value:  Size  Location     Type
 18998 ;;                  2    2[COMRAM] PTR void 
 18999 ;; Registers used:
 19000 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19001 ;; Tracked objects:
 19002 ;;		On entry : 0/0
 19003 ;;		On exit  : 0/0
 19004 ;;		Unchanged: 0/0
 19005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19006 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19007 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19008 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19009 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19010 ;;Total ram usage:       12 bytes
 19011 ;; Hardware stack levels used: 1
 19012 ;; Hardware stack levels required when called: 3
 19013 ;; This function calls:
 19014 ;;		Nothing
 19015 ;; This function is called by:
 19016 ;;		_convert_int32_to_string
 19017 ;;		_convert_float_to_string
 19018 ;;		_main
 19019 ;;		_convert_uint8_to_string
 19020 ;;		_convert_uint16_to_string
 19021 ;; This function uses a non-reentrant model
 19022 ;;
 19023                           
 19024                           	psect	text58
 19025   0084E0                     __ptext58:
 19026                           	callstack 0
 19027   0084E0                     _memset:
 19028                           	callstack 27
 19029   0084E0  C003  F00D         	movff	memset@dest,memset@s
 19030   0084E4  C004  F00E         	movff	memset@dest+1,memset@s+1
 19031   0084E8  5007               	movf	memset@n^0,w,c
 19032   0084EA  1008               	iorwf	(memset@n+1)^0,w,c
 19033   0084EC  A4D8               	btfss	status,2,c
 19034   0084EE  EF7B  F042         	goto	u15951
 19035   0084F2  EF7D  F042         	goto	u15950
 19036   0084F6                     u15951:
 19037   0084F6  EF7F  F042         	goto	l12658
 19038   0084FA                     u15950:
 19039   0084FA  EF2A  F043         	goto	l1593
 19040   0084FE                     l12658:
 19041   0084FE  C00D  FFD9         	movff	memset@s,fsr2l
 19042   008502  C00E  FFDA         	movff	memset@s+1,fsr2h
 19043   008506  C005  FFDF         	movff	memset@c,indf2
 19044   00850A  5007               	movf	memset@n^0,w,c
 19045   00850C  240D               	addwf	memset@s^0,w,c
 19046   00850E  6E09               	movwf	??_memset^0,c
 19047   008510  5008               	movf	(memset@n+1)^0,w,c
 19048   008512  200E               	addwfc	(memset@s+1)^0,w,c
 19049   008514  6E0A               	movwf	(??_memset+1)^0,c
 19050   008516  0EFF               	movlw	255
 19051   008518  2409               	addwf	??_memset^0,w,c
 19052   00851A  6ED9               	movwf	fsr2l,c
 19053   00851C  0EFF               	movlw	255
 19054   00851E  200A               	addwfc	(??_memset+1)^0,w,c
 19055   008520  6EDA               	movwf	fsr2h,c
 19056   008522  C005  FFDF         	movff	memset@c,indf2
 19057   008526  5008               	movf	(memset@n+1)^0,w,c
 19058   008528  E107               	bnz	u15961
 19059   00852A  0E03               	movlw	3
 19060   00852C  5C07               	subwf	memset@n^0,w,c
 19061   00852E  B0D8               	btfsc	status,0,c
 19062   008530  EF9C  F042         	goto	u15961
 19063   008534  EF9E  F042         	goto	u15960
 19064   008538                     u15961:
 19065   008538  EFA0  F042         	goto	l12664
 19066   00853C                     u15960:
 19067   00853C  EF2A  F043         	goto	l1593
 19068   008540                     l12664:
 19069   008540  EE20 F001          	lfsr	2,1
 19070   008544  500D               	movf	memset@s^0,w,c
 19071   008546  26D9               	addwf	fsr2l,f,c
 19072   008548  500E               	movf	(memset@s+1)^0,w,c
 19073   00854A  22DA               	addwfc	fsr2h,f,c
 19074   00854C  C005  FFDF         	movff	memset@c,indf2
 19075   008550  EE20 F002          	lfsr	2,2
 19076   008554  500D               	movf	memset@s^0,w,c
 19077   008556  26D9               	addwf	fsr2l,f,c
 19078   008558  500E               	movf	(memset@s+1)^0,w,c
 19079   00855A  22DA               	addwfc	fsr2h,f,c
 19080   00855C  C005  FFDF         	movff	memset@c,indf2
 19081   008560  5007               	movf	memset@n^0,w,c
 19082   008562  240D               	addwf	memset@s^0,w,c
 19083   008564  6E09               	movwf	??_memset^0,c
 19084   008566  5008               	movf	(memset@n+1)^0,w,c
 19085   008568  200E               	addwfc	(memset@s+1)^0,w,c
 19086   00856A  6E0A               	movwf	(??_memset+1)^0,c
 19087   00856C  0EFE               	movlw	254
 19088   00856E  2409               	addwf	??_memset^0,w,c
 19089   008570  6ED9               	movwf	fsr2l,c
 19090   008572  0EFF               	movlw	255
 19091   008574  200A               	addwfc	(??_memset+1)^0,w,c
 19092   008576  6EDA               	movwf	fsr2h,c
 19093   008578  C005  FFDF         	movff	memset@c,indf2
 19094   00857C  5007               	movf	memset@n^0,w,c
 19095   00857E  240D               	addwf	memset@s^0,w,c
 19096   008580  6E09               	movwf	??_memset^0,c
 19097   008582  5008               	movf	(memset@n+1)^0,w,c
 19098   008584  200E               	addwfc	(memset@s+1)^0,w,c
 19099   008586  6E0A               	movwf	(??_memset+1)^0,c
 19100   008588  0EFD               	movlw	253
 19101   00858A  2409               	addwf	??_memset^0,w,c
 19102   00858C  6ED9               	movwf	fsr2l,c
 19103   00858E  0EFF               	movlw	255
 19104   008590  200A               	addwfc	(??_memset+1)^0,w,c
 19105   008592  6EDA               	movwf	fsr2h,c
 19106   008594  C005  FFDF         	movff	memset@c,indf2
 19107   008598  5008               	movf	(memset@n+1)^0,w,c
 19108   00859A  E107               	bnz	u15971
 19109   00859C  0E07               	movlw	7
 19110   00859E  5C07               	subwf	memset@n^0,w,c
 19111   0085A0  B0D8               	btfsc	status,0,c
 19112   0085A2  EFD5  F042         	goto	u15971
 19113   0085A6  EFD7  F042         	goto	u15970
 19114   0085AA                     u15971:
 19115   0085AA  EFD9  F042         	goto	l12670
 19116   0085AE                     u15970:
 19117   0085AE  EF2A  F043         	goto	l1593
 19118   0085B2                     l12670:
 19119   0085B2  EE20 F003          	lfsr	2,3
 19120   0085B6  500D               	movf	memset@s^0,w,c
 19121   0085B8  26D9               	addwf	fsr2l,f,c
 19122   0085BA  500E               	movf	(memset@s+1)^0,w,c
 19123   0085BC  22DA               	addwfc	fsr2h,f,c
 19124   0085BE  C005  FFDF         	movff	memset@c,indf2
 19125   0085C2  5007               	movf	memset@n^0,w,c
 19126   0085C4  240D               	addwf	memset@s^0,w,c
 19127   0085C6  6E09               	movwf	??_memset^0,c
 19128   0085C8  5008               	movf	(memset@n+1)^0,w,c
 19129   0085CA  200E               	addwfc	(memset@s+1)^0,w,c
 19130   0085CC  6E0A               	movwf	(??_memset+1)^0,c
 19131   0085CE  0EFC               	movlw	252
 19132   0085D0  2409               	addwf	??_memset^0,w,c
 19133   0085D2  6ED9               	movwf	fsr2l,c
 19134   0085D4  0EFF               	movlw	255
 19135   0085D6  200A               	addwfc	(??_memset+1)^0,w,c
 19136   0085D8  6EDA               	movwf	fsr2h,c
 19137   0085DA  C005  FFDF         	movff	memset@c,indf2
 19138   0085DE  5008               	movf	(memset@n+1)^0,w,c
 19139   0085E0  E107               	bnz	u15981
 19140   0085E2  0E09               	movlw	9
 19141   0085E4  5C07               	subwf	memset@n^0,w,c
 19142   0085E6  B0D8               	btfsc	status,0,c
 19143   0085E8  EFF8  F042         	goto	u15981
 19144   0085EC  EFFA  F042         	goto	u15980
 19145   0085F0                     u15981:
 19146   0085F0  EFFC  F042         	goto	l12676
 19147   0085F4                     u15980:
 19148   0085F4  EF2A  F043         	goto	l1593
 19149   0085F8                     l12676:
 19150   0085F8  C00D  F009         	movff	memset@s,??_memset
 19151   0085FC  C00E  F00A         	movff	memset@s+1,??_memset+1
 19152   008600  1E09               	comf	??_memset^0,f,c
 19153   008602  1E0A               	comf	(??_memset+1)^0,f,c
 19154   008604  4A09               	infsnz	??_memset^0,f,c
 19155   008606  2A0A               	incf	(??_memset+1)^0,f,c
 19156   008608  0E03               	movlw	3
 19157   00860A  1409               	andwf	??_memset^0,w,c
 19158   00860C  6E0B               	movwf	memset@k^0,c
 19159   00860E  6A0C               	clrf	(memset@k+1)^0,c
 19160   008610  500B               	movf	memset@k^0,w,c
 19161   008612  260D               	addwf	memset@s^0,f,c
 19162   008614  500C               	movf	(memset@k+1)^0,w,c
 19163   008616  220E               	addwfc	(memset@s+1)^0,f,c
 19164   008618  500B               	movf	memset@k^0,w,c
 19165   00861A  5E07               	subwf	memset@n^0,f,c
 19166   00861C  500C               	movf	(memset@k+1)^0,w,c
 19167   00861E  5A08               	subwfb	(memset@n+1)^0,f,c
 19168   008620  0EFC               	movlw	252
 19169   008622  1607               	andwf	memset@n^0,f,c
 19170   008624  0EFF               	movlw	255
 19171   008626  1608               	andwf	(memset@n+1)^0,f,c
 19172   008628  EF21  F043         	goto	l12684
 19173   00862C                     l12678:
 19174   00862C  C00D  FFD9         	movff	memset@s,fsr2l
 19175   008630  C00E  FFDA         	movff	memset@s+1,fsr2h
 19176   008634  C005  FFDF         	movff	memset@c,indf2
 19177   008638  0607               	decf	memset@n^0,f,c
 19178   00863A  A0D8               	btfss	status,0,c
 19179   00863C  0608               	decf	(memset@n+1)^0,f,c
 19180   00863E  4A0D               	infsnz	memset@s^0,f,c
 19181   008640  2A0E               	incf	(memset@s+1)^0,f,c
 19182   008642                     l12684:
 19183   008642  5007               	movf	memset@n^0,w,c
 19184   008644  1008               	iorwf	(memset@n+1)^0,w,c
 19185   008646  A4D8               	btfss	status,2,c
 19186   008648  EF28  F043         	goto	u15991
 19187   00864C  EF2A  F043         	goto	u15990
 19188   008650                     u15991:
 19189   008650  EF16  F043         	goto	l12678
 19190   008654                     u15990:
 19191   008654                     l1593:
 19192   008654  0012               	return		;funcret
 19193   008656                     __end_of_memset:
 19194                           	callstack 0
 19195                           
 19196 ;; *************** function _ceilf *****************
 19197 ;; Defined at:
 19198 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\ceilf.c"
 19199 ;; Parameters:    Size  Location     Type
 19200 ;;  x               4    2[COMRAM] float 
 19201 ;; Auto vars:     Size  Location     Type
 19202 ;;  u               4   18[COMRAM] struct .
 19203 ;;  m               4   12[COMRAM] unsigned long 
 19204 ;;  e               2   16[COMRAM] int 
 19205 ;; Return value:  Size  Location     Type
 19206 ;;                  4    2[COMRAM] float 
 19207 ;; Registers used:
 19208 ;;		wreg, status,2, status,0
 19209 ;; Tracked objects:
 19210 ;;		On entry : 0/0
 19211 ;;		On exit  : 0/0
 19212 ;;		Unchanged: 0/0
 19213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19214 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19215 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19216 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19217 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19218 ;;Total ram usage:       20 bytes
 19219 ;; Hardware stack levels used: 1
 19220 ;; Hardware stack levels required when called: 3
 19221 ;; This function calls:
 19222 ;;		Nothing
 19223 ;; This function is called by:
 19224 ;;		_Calculator_display_result
 19225 ;; This function uses a non-reentrant model
 19226 ;;
 19227                           
 19228                           	psect	text59
 19229   007C34                     __ptext59:
 19230                           	callstack 0
 19231   007C34                     _ceilf:
 19232                           	callstack 26
 19233   007C34  C217  F013         	movff	ceilf@F526,ceilf@u
 19234   007C38  C218  F014         	movff	ceilf@F526+1,ceilf@u+1
 19235   007C3C  C219  F015         	movff	ceilf@F526+2,ceilf@u+2
 19236   007C40  C21A  F016         	movff	ceilf@F526+3,ceilf@u+3
 19237   007C44  C003  F013         	movff	ceilf@x,ceilf@u
 19238   007C48  C004  F014         	movff	ceilf@x+1,ceilf@u+1
 19239   007C4C  C005  F015         	movff	ceilf@x+2,ceilf@u+2
 19240   007C50  C006  F016         	movff	ceilf@x+3,ceilf@u+3
 19241   007C54  0E81               	movlw	129
 19242   007C56  6E07               	movwf	??_ceilf^0,c
 19243   007C58  0EFF               	movlw	255
 19244   007C5A  6E08               	movwf	(??_ceilf+1)^0,c
 19245   007C5C  C013  F009         	movff	ceilf@u,??_ceilf+2
 19246   007C60  C014  F00A         	movff	ceilf@u+1,??_ceilf+3
 19247   007C64  C015  F00B         	movff	ceilf@u+2,??_ceilf+4
 19248   007C68  C016  F00C         	movff	ceilf@u+3,??_ceilf+5
 19249   007C6C  0E18               	movlw	24
 19250   007C6E  EF3E  F03E         	goto	u11670
 19251   007C72                     u11675:
 19252   007C72  90D8               	bcf	status,0,c
 19253   007C74  320C               	rrcf	(??_ceilf+5)^0,f,c
 19254   007C76  320B               	rrcf	(??_ceilf+4)^0,f,c
 19255   007C78  320A               	rrcf	(??_ceilf+3)^0,f,c
 19256   007C7A  3209               	rrcf	(??_ceilf+2)^0,f,c
 19257   007C7C                     u11670:
 19258   007C7C  2EE8               	decfsz	wreg,f,c
 19259   007C7E  EF39  F03E         	goto	u11675
 19260   007C82  5009               	movf	(??_ceilf+2)^0,w,c
 19261   007C84  2407               	addwf	??_ceilf^0,w,c
 19262   007C86  6E11               	movwf	ceilf@e^0,c
 19263   007C88  0E00               	movlw	0
 19264   007C8A  2008               	addwfc	(??_ceilf+1)^0,w,c
 19265   007C8C  6E12               	movwf	(ceilf@e+1)^0,c
 19266   007C8E  BE12               	btfsc	(ceilf@e+1)^0,7,c
 19267   007C90  EF53  F03E         	goto	u11681
 19268   007C94  5012               	movf	(ceilf@e+1)^0,w,c
 19269   007C96  E109               	bnz	u11680
 19270   007C98  0E17               	movlw	23
 19271   007C9A  5C11               	subwf	ceilf@e^0,w,c
 19272   007C9C  A0D8               	btfss	status,0,c
 19273   007C9E  EF53  F03E         	goto	u11681
 19274   007CA2  EF55  F03E         	goto	u11680
 19275   007CA6                     u11681:
 19276   007CA6  EF5F  F03E         	goto	l9762
 19277   007CAA                     u11680:
 19278   007CAA                     l9760:
 19279   007CAA  C003  F003         	movff	ceilf@x,?_ceilf
 19280   007CAE  C004  F004         	movff	ceilf@x+1,?_ceilf+1
 19281   007CB2  C005  F005         	movff	ceilf@x+2,?_ceilf+2
 19282   007CB6  C006  F006         	movff	ceilf@x+3,?_ceilf+3
 19283   007CBA  EF22  F03F         	goto	l1555
 19284   007CBE                     l9762:
 19285   007CBE  BE12               	btfsc	(ceilf@e+1)^0,7,c
 19286   007CC0  EF64  F03E         	goto	u11691
 19287   007CC4  EF66  F03E         	goto	u11690
 19288   007CC8                     u11691:
 19289   007CC8  EFD6  F03E         	goto	l9772
 19290   007CCC                     u11690:
 19291   007CCC  C011  F007         	movff	ceilf@e,??_ceilf
 19292   007CD0  0EFF               	movlw	255
 19293   007CD2  6E08               	movwf	(??_ceilf+1)^0,c
 19294   007CD4  0EFF               	movlw	255
 19295   007CD6  6E09               	movwf	(??_ceilf+2)^0,c
 19296   007CD8  0E7F               	movlw	127
 19297   007CDA  6E0A               	movwf	(??_ceilf+3)^0,c
 19298   007CDC  0E00               	movlw	0
 19299   007CDE  6E0B               	movwf	(??_ceilf+4)^0,c
 19300   007CE0                     u11705:
 19301   007CE0  6607               	tstfsz	??_ceilf^0,c
 19302   007CE2  EF75  F03E         	goto	u11706
 19303   007CE6  EF7D  F03E         	goto	u11707
 19304   007CEA                     u11706:
 19305   007CEA  340B               	rlcf	(??_ceilf+4)^0,w,c
 19306   007CEC  320B               	rrcf	(??_ceilf+4)^0,f,c
 19307   007CEE  320A               	rrcf	(??_ceilf+3)^0,f,c
 19308   007CF0  3209               	rrcf	(??_ceilf+2)^0,f,c
 19309   007CF2  3208               	rrcf	(??_ceilf+1)^0,f,c
 19310   007CF4  2E07               	decfsz	??_ceilf^0,f,c
 19311   007CF6  EF70  F03E         	goto	u11705
 19312   007CFA                     u11707:
 19313   007CFA  C008  F00D         	movff	??_ceilf+1,ceilf@m
 19314   007CFE  C009  F00E         	movff	??_ceilf+2,ceilf@m+1
 19315   007D02  C00A  F00F         	movff	??_ceilf+3,ceilf@m+2
 19316   007D06  C00B  F010         	movff	??_ceilf+4,ceilf@m+3
 19317   007D0A  500D               	movf	ceilf@m^0,w,c
 19318   007D0C  1413               	andwf	ceilf@u^0,w,c
 19319   007D0E  6E07               	movwf	??_ceilf^0,c
 19320   007D10  500E               	movf	(ceilf@m+1)^0,w,c
 19321   007D12  1414               	andwf	(ceilf@u+1)^0,w,c
 19322   007D14  6E08               	movwf	(??_ceilf+1)^0,c
 19323   007D16  500F               	movf	(ceilf@m+2)^0,w,c
 19324   007D18  1415               	andwf	(ceilf@u+2)^0,w,c
 19325   007D1A  6E09               	movwf	(??_ceilf+2)^0,c
 19326   007D1C  5010               	movf	(ceilf@m+3)^0,w,c
 19327   007D1E  1416               	andwf	(ceilf@u+3)^0,w,c
 19328   007D20  6E0A               	movwf	(??_ceilf+3)^0,c
 19329   007D22  5007               	movf	??_ceilf^0,w,c
 19330   007D24  1008               	iorwf	(??_ceilf+1)^0,w,c
 19331   007D26  1009               	iorwf	(??_ceilf+2)^0,w,c
 19332   007D28  100A               	iorwf	(??_ceilf+3)^0,w,c
 19333   007D2A  A4D8               	btfss	status,2,c
 19334   007D2C  EF9A  F03E         	goto	u11711
 19335   007D30  EF9C  F03E         	goto	u11710
 19336   007D34                     u11711:
 19337   007D34  EF9E  F03E         	goto	l9768
 19338   007D38                     u11710:
 19339   007D38  EF55  F03E         	goto	l9760
 19340   007D3C                     l9768:
 19341   007D3C  C013  F007         	movff	ceilf@u,??_ceilf
 19342   007D40  C014  F008         	movff	ceilf@u+1,??_ceilf+1
 19343   007D44  C015  F009         	movff	ceilf@u+2,??_ceilf+2
 19344   007D48  C016  F00A         	movff	ceilf@u+3,??_ceilf+3
 19345   007D4C  0E20               	movlw	32
 19346   007D4E  EFAE  F03E         	goto	u11720
 19347   007D52                     u11725:
 19348   007D52  90D8               	bcf	status,0,c
 19349   007D54  320A               	rrcf	(??_ceilf+3)^0,f,c
 19350   007D56  3209               	rrcf	(??_ceilf+2)^0,f,c
 19351   007D58  3208               	rrcf	(??_ceilf+1)^0,f,c
 19352   007D5A  3207               	rrcf	??_ceilf^0,f,c
 19353   007D5C                     u11720:
 19354   007D5C  2EE8               	decfsz	wreg,f,c
 19355   007D5E  EFA9  F03E         	goto	u11725
 19356   007D62  5007               	movf	??_ceilf^0,w,c
 19357   007D64  1008               	iorwf	(??_ceilf+1)^0,w,c
 19358   007D66  1009               	iorwf	(??_ceilf+2)^0,w,c
 19359   007D68  100A               	iorwf	(??_ceilf+3)^0,w,c
 19360   007D6A  A4D8               	btfss	status,2,c
 19361   007D6C  EFBA  F03E         	goto	u11731
 19362   007D70  EFBC  F03E         	goto	u11730
 19363   007D74                     u11731:
 19364   007D74  EFC4  F03E         	goto	l1558
 19365   007D78                     u11730:
 19366   007D78  500D               	movf	ceilf@m^0,w,c
 19367   007D7A  2613               	addwf	ceilf@u^0,f,c
 19368   007D7C  500E               	movf	(ceilf@m+1)^0,w,c
 19369   007D7E  2214               	addwfc	(ceilf@u+1)^0,f,c
 19370   007D80  500F               	movf	(ceilf@m+2)^0,w,c
 19371   007D82  2215               	addwfc	(ceilf@u+2)^0,f,c
 19372   007D84  5010               	movf	(ceilf@m+3)^0,w,c
 19373   007D86  2216               	addwfc	(ceilf@u+3)^0,f,c
 19374   007D88                     l1558:
 19375   007D88  1C0D               	comf	ceilf@m^0,w,c
 19376   007D8A  6E07               	movwf	??_ceilf^0,c
 19377   007D8C  1C0E               	comf	(ceilf@m+1)^0,w,c
 19378   007D8E  6E08               	movwf	(??_ceilf+1)^0,c
 19379   007D90  1C0F               	comf	(ceilf@m+2)^0,w,c
 19380   007D92  6E09               	movwf	(??_ceilf+2)^0,c
 19381   007D94  1C10               	comf	(ceilf@m+3)^0,w,c
 19382   007D96  6E0A               	movwf	(??_ceilf+3)^0,c
 19383   007D98  5007               	movf	??_ceilf^0,w,c
 19384   007D9A  1613               	andwf	ceilf@u^0,f,c
 19385   007D9C  5008               	movf	(??_ceilf+1)^0,w,c
 19386   007D9E  1614               	andwf	(ceilf@u+1)^0,f,c
 19387   007DA0  5009               	movf	(??_ceilf+2)^0,w,c
 19388   007DA2  1615               	andwf	(ceilf@u+2)^0,f,c
 19389   007DA4  500A               	movf	(??_ceilf+3)^0,w,c
 19390   007DA6  1616               	andwf	(ceilf@u+3)^0,f,c
 19391   007DA8  EF1A  F03F         	goto	l9780
 19392   007DAC                     l9772:
 19393   007DAC  C013  F007         	movff	ceilf@u,??_ceilf
 19394   007DB0  C014  F008         	movff	ceilf@u+1,??_ceilf+1
 19395   007DB4  C015  F009         	movff	ceilf@u+2,??_ceilf+2
 19396   007DB8  C016  F00A         	movff	ceilf@u+3,??_ceilf+3
 19397   007DBC  0E20               	movlw	32
 19398   007DBE  EFE6  F03E         	goto	u11740
 19399   007DC2                     u11745:
 19400   007DC2  90D8               	bcf	status,0,c
 19401   007DC4  320A               	rrcf	(??_ceilf+3)^0,f,c
 19402   007DC6  3209               	rrcf	(??_ceilf+2)^0,f,c
 19403   007DC8  3208               	rrcf	(??_ceilf+1)^0,f,c
 19404   007DCA  3207               	rrcf	??_ceilf^0,f,c
 19405   007DCC                     u11740:
 19406   007DCC  2EE8               	decfsz	wreg,f,c
 19407   007DCE  EFE1  F03E         	goto	u11745
 19408   007DD2  5007               	movf	??_ceilf^0,w,c
 19409   007DD4  1008               	iorwf	(??_ceilf+1)^0,w,c
 19410   007DD6  1009               	iorwf	(??_ceilf+2)^0,w,c
 19411   007DD8  100A               	iorwf	(??_ceilf+3)^0,w,c
 19412   007DDA  B4D8               	btfsc	status,2,c
 19413   007DDC  EFF2  F03E         	goto	u11751
 19414   007DE0  EFF4  F03E         	goto	u11750
 19415   007DE4                     u11751:
 19416   007DE4  EFFE  F03E         	goto	l9776
 19417   007DE8                     u11750:
 19418   007DE8  0E00               	movlw	0
 19419   007DEA  6E13               	movwf	ceilf@u^0,c
 19420   007DEC  0E00               	movlw	0
 19421   007DEE  6E14               	movwf	(ceilf@u+1)^0,c
 19422   007DF0  0E00               	movlw	0
 19423   007DF2  6E15               	movwf	(ceilf@u+2)^0,c
 19424   007DF4  0E80               	movlw	128
 19425   007DF6  6E16               	movwf	(ceilf@u+3)^0,c
 19426   007DF8  EF1A  F03F         	goto	l9780
 19427   007DFC                     l9776:
 19428   007DFC  90D8               	bcf	status,0,c
 19429   007DFE  3413               	rlcf	ceilf@u^0,w,c
 19430   007E00  6E07               	movwf	??_ceilf^0,c
 19431   007E02  3414               	rlcf	(ceilf@u+1)^0,w,c
 19432   007E04  6E08               	movwf	(??_ceilf+1)^0,c
 19433   007E06  3415               	rlcf	(ceilf@u+2)^0,w,c
 19434   007E08  6E09               	movwf	(??_ceilf+2)^0,c
 19435   007E0A  3416               	rlcf	(ceilf@u+3)^0,w,c
 19436   007E0C  6E0A               	movwf	(??_ceilf+3)^0,c
 19437   007E0E  5007               	movf	??_ceilf^0,w,c
 19438   007E10  1008               	iorwf	(??_ceilf+1)^0,w,c
 19439   007E12  1009               	iorwf	(??_ceilf+2)^0,w,c
 19440   007E14  100A               	iorwf	(??_ceilf+3)^0,w,c
 19441   007E16  B4D8               	btfsc	status,2,c
 19442   007E18  EF10  F03F         	goto	u11761
 19443   007E1C  EF12  F03F         	goto	u11760
 19444   007E20                     u11761:
 19445   007E20  EF1A  F03F         	goto	l9780
 19446   007E24                     u11760:
 19447   007E24  0E00               	movlw	0
 19448   007E26  6E13               	movwf	ceilf@u^0,c
 19449   007E28  0E00               	movlw	0
 19450   007E2A  6E14               	movwf	(ceilf@u+1)^0,c
 19451   007E2C  0E80               	movlw	128
 19452   007E2E  6E15               	movwf	(ceilf@u+2)^0,c
 19453   007E30  0E3F               	movlw	63
 19454   007E32  6E16               	movwf	(ceilf@u+3)^0,c
 19455   007E34                     l9780:
 19456   007E34  C013  F003         	movff	ceilf@u,?_ceilf
 19457   007E38  C014  F004         	movff	ceilf@u+1,?_ceilf+1
 19458   007E3C  C015  F005         	movff	ceilf@u+2,?_ceilf+2
 19459   007E40  C016  F006         	movff	ceilf@u+3,?_ceilf+3
 19460   007E44                     l1555:
 19461   007E44  0012               	return		;funcret
 19462   007E46                     __end_of_ceilf:
 19463                           	callstack 0
 19464                           
 19465 ;; *************** function _Calculator_Init *****************
 19466 ;; Defined at:
 19467 ;;		line 92 in file "ECU_Layer/ECU_init.c"
 19468 ;; Parameters:    Size  Location     Type
 19469 ;;		None
 19470 ;; Auto vars:     Size  Location     Type
 19471 ;;  ret             1  109[COMRAM] unsigned char 
 19472 ;; Return value:  Size  Location     Type
 19473 ;;                  1    wreg      unsigned char 
 19474 ;; Registers used:
 19475 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19476 ;; Tracked objects:
 19477 ;;		On entry : 0/0
 19478 ;;		On exit  : 0/0
 19479 ;;		Unchanged: 0/0
 19480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19482 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19484 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19485 ;;Total ram usage:        1 bytes
 19486 ;; Hardware stack levels used: 1
 19487 ;; Hardware stack levels required when called: 9
 19488 ;; This function calls:
 19489 ;;		_INTx_interrupt_init
 19490 ;;		_MSSP_I2C_init
 19491 ;;		_keypad_init
 19492 ;;		_lcd_init
 19493 ;; This function is called by:
 19494 ;;		_main
 19495 ;; This function uses a non-reentrant model
 19496 ;;
 19497                           
 19498                           	psect	text60
 19499   00A380                     __ptext60:
 19500                           	callstack 0
 19501   00A380                     _Calculator_Init:
 19502                           	callstack 21
 19503   00A380                     
 19504                           ;ECU_Layer/ECU_init.c: 100:     (INTCONbits.GIE=1);
 19505   00A380  8EF2               	bsf	242,7,c	;volatile
 19506                           
 19507                           ;ECU_Layer/ECU_init.c: 101:     (INTCONbits.PEIE=1);
 19508   00A382  8CF2               	bsf	242,6,c	;volatile
 19509   00A384                     
 19510                           ;ECU_Layer/ECU_init.c: 104:     Std_ReturnType ret=((Std_ReturnType)0X01);
 19511   00A384  0E01               	movlw	1
 19512   00A386  6E6E               	movwf	Calculator_Init@ret^0,c
 19513   00A388                     
 19514                           ;ECU_Layer/ECU_init.c: 105:     ret &= MSSP_I2C_init(&I2C);
 19515   00A388  0EC7               	movlw	low _I2C
 19516   00A38A  6E6B               	movwf	MSSP_I2C_init@_i2c^0,c
 19517   00A38C  0E02               	movlw	high _I2C
 19518   00A38E  6E6C               	movwf	(MSSP_I2C_init@_i2c+1)^0,c
 19519   00A390  EC2C  F04D         	call	_MSSP_I2C_init	;wreg free
 19520   00A394  166E               	andwf	Calculator_Init@ret^0,f,c
 19521   00A396                     
 19522                           ;ECU_Layer/ECU_init.c: 106:     ret &= INTx_interrupt_init(&NB0);
 19523   00A396  0EDD               	movlw	low _NB0
 19524   00A398  6E16               	movwf	INTx_interrupt_init@pin^0,c
 19525   00A39A  0E02               	movlw	high _NB0
 19526   00A39C  6E17               	movwf	(INTx_interrupt_init@pin+1)^0,c
 19527   00A39E  ECC2  F04E         	call	_INTx_interrupt_init	;wreg free
 19528   00A3A2  166E               	andwf	Calculator_Init@ret^0,f,c
 19529   00A3A4                     
 19530                           ;ECU_Layer/ECU_init.c: 107:     ret &= INTx_interrupt_init(&NB1);
 19531   00A3A4  0ED7               	movlw	low _NB1
 19532   00A3A6  6E16               	movwf	INTx_interrupt_init@pin^0,c
 19533   00A3A8  0E02               	movlw	high _NB1
 19534   00A3AA  6E17               	movwf	(INTx_interrupt_init@pin+1)^0,c
 19535   00A3AC  ECC2  F04E         	call	_INTx_interrupt_init	;wreg free
 19536   00A3B0  166E               	andwf	Calculator_Init@ret^0,f,c
 19537   00A3B2                     
 19538                           ;ECU_Layer/ECU_init.c: 108:     lcd.I2C_Handle = I2C;
 19539   00A3B2  EE22  F0C7         	lfsr	2,_I2C
 19540   00A3B6  EE12  F085         	lfsr	1,_lcd
 19541   00A3BA  0E07               	movlw	7
 19542   00A3BC                     u17301:
 19543   00A3BC  CFDB FFE3          	movff	plusw2,plusw1
 19544   00A3C0  06E8               	decf	wreg,f,c
 19545   00A3C2  E2FC               	bc	u17301
 19546   00A3C4                     
 19547                           ;ECU_Layer/ECU_init.c: 109:     ret &= lcd_init(&lcd);
 19548   00A3C4  0E85               	movlw	low _lcd
 19549   00A3C6  6E20               	movwf	lcd_init@lcd^0,c
 19550   00A3C8  0E02               	movlw	high _lcd
 19551   00A3CA  6E21               	movwf	(lcd_init@lcd+1)^0,c
 19552   00A3CC  EC96  F044         	call	_lcd_init	;wreg free
 19553   00A3D0  166E               	andwf	Calculator_Init@ret^0,f,c
 19554   00A3D2                     
 19555                           ;ECU_Layer/ECU_init.c: 110:     ret &= keypad_init(&Keypad);
 19556   00A3D2  0ECF               	movlw	low _Keypad
 19557   00A3D4  6E19               	movwf	keypad_init@keypad^0,c
 19558   00A3D6  0E02               	movlw	high _Keypad
 19559   00A3D8  6E1A               	movwf	(keypad_init@keypad+1)^0,c
 19560   00A3DA  ECAF  F050         	call	_keypad_init	;wreg free
 19561   00A3DE  166E               	andwf	Calculator_Init@ret^0,f,c
 19562   00A3E0  0012               	return		;funcret
 19563   00A3E2                     __end_of_Calculator_Init:
 19564                           	callstack 0
 19565                           
 19566 ;; *************** function _lcd_init *****************
 19567 ;; Defined at:
 19568 ;;		line 67 in file "ECU_Layer/ECU_LCD/ECU_LCD.c"
 19569 ;; Parameters:    Size  Location     Type
 19570 ;;  lcd             2   31[COMRAM] PTR const struct .
 19571 ;;		 -> lcd(8), 
 19572 ;; Auto vars:     Size  Location     Type
 19573 ;;  ret             1   34[COMRAM] unsigned char 
 19574 ;;  l_lcd_data_p    1    0        unsigned char 
 19575 ;; Return value:  Size  Location     Type
 19576 ;;                  1    wreg      unsigned char 
 19577 ;; Registers used:
 19578 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19579 ;; Tracked objects:
 19580 ;;		On entry : 0/0
 19581 ;;		On exit  : 0/0
 19582 ;;		Unchanged: 0/0
 19583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19584 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19585 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19586 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19587 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19588 ;;Total ram usage:        4 bytes
 19589 ;; Hardware stack levels used: 1
 19590 ;; Hardware stack levels required when called: 8
 19591 ;; This function calls:
 19592 ;;		_IO_expander_write
 19593 ;;		_lcd_send_command
 19594 ;; This function is called by:
 19595 ;;		_Calculator_Init
 19596 ;; This function uses a non-reentrant model
 19597 ;;
 19598                           
 19599                           	psect	text61
 19600   00892C                     __ptext61:
 19601                           	callstack 0
 19602   00892C                     _lcd_init:
 19603                           	callstack 21
 19604   00892C                     
 19605                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 70:     Std_ReturnType ret = ((Std_ReturnType)0X00);
 19606   00892C  0E00               	movlw	0
 19607   00892E  6E23               	movwf	lcd_init@ret^0,c
 19608   008930                     
 19609                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 71:     if(((void*)0)!=lcd)
 19610   008930  5020               	movf	lcd_init@lcd^0,w,c
 19611   008932  1021               	iorwf	(lcd_init@lcd+1)^0,w,c
 19612   008934  B4D8               	btfsc	status,2,c
 19613   008936  EF9F  F044         	goto	u11421
 19614   00893A  EFA1  F044         	goto	u11420
 19615   00893E                     u11421:
 19616   00893E  EF41  F045         	goto	l9592
 19617   008942                     u11420:
 19618   008942                     
 19619                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 72:     {;ECU_Layer/ECU_LCD/ECU_LCD.c: 97:         _delay(
      +                          (unsigned long)((20)*(4000000ul/4000.0)));
 19620   008942  0E1A               	movlw	26
 19621   008944  6E22               	movwf	??_lcd_init^0,c
 19622   008946  0EF8               	movlw	248
 19623   008948                     u17557:
 19624   008948  2EE8               	decfsz	wreg,f,c
 19625   00894A  D7FE               	bra	u17557
 19626   00894C  2E22               	decfsz	??_lcd_init^0,f,c
 19627   00894E  D7FC               	bra	u17557
 19628   008950  D000               	nop2	
 19629   008952                     
 19630                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 98:         ret &= IO_expander_write(lcd,0x00);
 19631   008952  C020  F014         	movff	lcd_init@lcd,IO_expander_write@lcd
 19632   008956  C021  F015         	movff	lcd_init@lcd+1,IO_expander_write@lcd+1
 19633   00895A  0E00               	movlw	0
 19634   00895C  6E16               	movwf	IO_expander_write@data^0,c
 19635   00895E  EC1C  F053         	call	_IO_expander_write	;wreg free
 19636   008962  1623               	andwf	lcd_init@ret^0,f,c
 19637   008964                     
 19638                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 99:         _delay((unsigned long)((5)*(4000000ul/4000.0))
      +                          );
 19639   008964  0E07               	movlw	7
 19640   008966  6E22               	movwf	??_lcd_init^0,c
 19641   008968  0E7D               	movlw	125
 19642   00896A                     u17567:
 19643   00896A  2EE8               	decfsz	wreg,f,c
 19644   00896C  D7FE               	bra	u17567
 19645   00896E  2E22               	decfsz	??_lcd_init^0,f,c
 19646   008970  D7FC               	bra	u17567
 19647   008972  F000               	nop	
 19648                           
 19649                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 100:         ret &= lcd_send_command(lcd,0x03);
 19650   008974  C020  F01C         	movff	lcd_init@lcd,lcd_send_command@lcd
 19651   008978  C021  F01D         	movff	lcd_init@lcd+1,lcd_send_command@lcd+1
 19652   00897C  0E03               	movlw	3
 19653   00897E  6E1E               	movwf	lcd_send_command@command^0,c
 19654   008980  EC68  F053         	call	_lcd_send_command	;wreg free
 19655   008984  1623               	andwf	lcd_init@ret^0,f,c
 19656   008986                     
 19657                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 101:         _delay((unsigned long)((5)*(4000000ul/4000.0)
      +                          ));
 19658   008986  0E07               	movlw	7
 19659   008988  6E22               	movwf	??_lcd_init^0,c
 19660   00898A  0E7D               	movlw	125
 19661   00898C                     u17577:
 19662   00898C  2EE8               	decfsz	wreg,f,c
 19663   00898E  D7FE               	bra	u17577
 19664   008990  2E22               	decfsz	??_lcd_init^0,f,c
 19665   008992  D7FC               	bra	u17577
 19666   008994  F000               	nop	
 19667   008996                     
 19668                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 102:         ret &= lcd_send_command(lcd,0x03);
 19669   008996  C020  F01C         	movff	lcd_init@lcd,lcd_send_command@lcd
 19670   00899A  C021  F01D         	movff	lcd_init@lcd+1,lcd_send_command@lcd+1
 19671   00899E  0E03               	movlw	3
 19672   0089A0  6E1E               	movwf	lcd_send_command@command^0,c
 19673   0089A2  EC68  F053         	call	_lcd_send_command	;wreg free
 19674   0089A6  1623               	andwf	lcd_init@ret^0,f,c
 19675                           
 19676                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 103:         _delay((unsigned long)((5)*(4000000ul/4000.0)
      +                          ));
 19677   0089A8  0E07               	movlw	7
 19678   0089AA  6E22               	movwf	??_lcd_init^0,c
 19679   0089AC  0E7D               	movlw	125
 19680   0089AE                     u17587:
 19681   0089AE  2EE8               	decfsz	wreg,f,c
 19682   0089B0  D7FE               	bra	u17587
 19683   0089B2  2E22               	decfsz	??_lcd_init^0,f,c
 19684   0089B4  D7FC               	bra	u17587
 19685   0089B6  F000               	nop	
 19686   0089B8                     
 19687                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 104:         ret &= lcd_send_command(lcd,0x03);
 19688   0089B8  C020  F01C         	movff	lcd_init@lcd,lcd_send_command@lcd
 19689   0089BC  C021  F01D         	movff	lcd_init@lcd+1,lcd_send_command@lcd+1
 19690   0089C0  0E03               	movlw	3
 19691   0089C2  6E1E               	movwf	lcd_send_command@command^0,c
 19692   0089C4  EC68  F053         	call	_lcd_send_command	;wreg free
 19693   0089C8  1623               	andwf	lcd_init@ret^0,f,c
 19694   0089CA                     
 19695                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 105:         _delay((unsigned long)((5)*(4000000ul/4000.0)
      +                          ));
 19696   0089CA  0E07               	movlw	7
 19697   0089CC  6E22               	movwf	??_lcd_init^0,c
 19698   0089CE  0E7D               	movlw	125
 19699   0089D0                     u17597:
 19700   0089D0  2EE8               	decfsz	wreg,f,c
 19701   0089D2  D7FE               	bra	u17597
 19702   0089D4  2E22               	decfsz	??_lcd_init^0,f,c
 19703   0089D6  D7FC               	bra	u17597
 19704   0089D8  F000               	nop	
 19705                           
 19706                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 106:         ret &= lcd_send_command(lcd,(0x33));
 19707   0089DA  C020  F01C         	movff	lcd_init@lcd,lcd_send_command@lcd
 19708   0089DE  C021  F01D         	movff	lcd_init@lcd+1,lcd_send_command@lcd+1
 19709   0089E2  0E33               	movlw	51
 19710   0089E4  6E1E               	movwf	lcd_send_command@command^0,c
 19711   0089E6  EC68  F053         	call	_lcd_send_command	;wreg free
 19712   0089EA  1623               	andwf	lcd_init@ret^0,f,c
 19713   0089EC                     
 19714                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 107:         _delay((unsigned long)((5)*(4000000ul/4000.0)
      +                          ));
 19715   0089EC  0E07               	movlw	7
 19716   0089EE  6E22               	movwf	??_lcd_init^0,c
 19717   0089F0  0E7D               	movlw	125
 19718   0089F2                     u17607:
 19719   0089F2  2EE8               	decfsz	wreg,f,c
 19720   0089F4  D7FE               	bra	u17607
 19721   0089F6  2E22               	decfsz	??_lcd_init^0,f,c
 19722   0089F8  D7FC               	bra	u17607
 19723   0089FA  F000               	nop	
 19724   0089FC                     
 19725                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 108:         ret &= lcd_send_command(lcd,(0x32));
 19726   0089FC  C020  F01C         	movff	lcd_init@lcd,lcd_send_command@lcd
 19727   008A00  C021  F01D         	movff	lcd_init@lcd+1,lcd_send_command@lcd+1
 19728   008A04  0E32               	movlw	50
 19729   008A06  6E1E               	movwf	lcd_send_command@command^0,c
 19730   008A08  EC68  F053         	call	_lcd_send_command	;wreg free
 19731   008A0C  1623               	andwf	lcd_init@ret^0,f,c
 19732                           
 19733                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 109:         _delay((unsigned long)((150)*(4000000ul/4000.
      +                          0)));
 19734   008A0E  0EC3               	movlw	195
 19735   008A10  6E22               	movwf	??_lcd_init^0,c
 19736   008A12  0ECD               	movlw	205
 19737   008A14                     u17617:
 19738   008A14  2EE8               	decfsz	wreg,f,c
 19739   008A16  D7FE               	bra	u17617
 19740   008A18  2E22               	decfsz	??_lcd_init^0,f,c
 19741   008A1A  D7FC               	bra	u17617
 19742   008A1C  F000               	nop	
 19743   008A1E                     
 19744                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 110:         ret &= lcd_send_command(lcd,(0x28));
 19745   008A1E  C020  F01C         	movff	lcd_init@lcd,lcd_send_command@lcd
 19746   008A22  C021  F01D         	movff	lcd_init@lcd+1,lcd_send_command@lcd+1
 19747   008A26  0E28               	movlw	40
 19748   008A28  6E1E               	movwf	lcd_send_command@command^0,c
 19749   008A2A  EC68  F053         	call	_lcd_send_command	;wreg free
 19750   008A2E  1623               	andwf	lcd_init@ret^0,f,c
 19751   008A30  C020  F01C         	movff	lcd_init@lcd,lcd_send_command@lcd
 19752   008A34  C021  F01D         	movff	lcd_init@lcd+1,lcd_send_command@lcd+1
 19753   008A38  0E01               	movlw	1
 19754   008A3A  6E1E               	movwf	lcd_send_command@command^0,c
 19755   008A3C  EC68  F053         	call	_lcd_send_command	;wreg free
 19756   008A40  C020  F01C         	movff	lcd_init@lcd,lcd_send_command@lcd
 19757   008A44  C021  F01D         	movff	lcd_init@lcd+1,lcd_send_command@lcd+1
 19758   008A48  0E02               	movlw	2
 19759   008A4A  6E1E               	movwf	lcd_send_command@command^0,c
 19760   008A4C  EC68  F053         	call	_lcd_send_command	;wreg free
 19761   008A50  C020  F01C         	movff	lcd_init@lcd,lcd_send_command@lcd
 19762   008A54  C021  F01D         	movff	lcd_init@lcd+1,lcd_send_command@lcd+1
 19763   008A58  0E06               	movlw	6
 19764   008A5A  6E1E               	movwf	lcd_send_command@command^0,c
 19765   008A5C  EC68  F053         	call	_lcd_send_command	;wreg free
 19766   008A60  C020  F01C         	movff	lcd_init@lcd,lcd_send_command@lcd
 19767   008A64  C021  F01D         	movff	lcd_init@lcd+1,lcd_send_command@lcd+1
 19768   008A68  0E0C               	movlw	12
 19769   008A6A  6E1E               	movwf	lcd_send_command@command^0,c
 19770   008A6C  EC68  F053         	call	_lcd_send_command	;wreg free
 19771   008A70                     
 19772                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 116:         ret = lcd_send_command(lcd, (0x80));
 19773   008A70  C020  F01C         	movff	lcd_init@lcd,lcd_send_command@lcd
 19774   008A74  C021  F01D         	movff	lcd_init@lcd+1,lcd_send_command@lcd+1
 19775   008A78  0E80               	movlw	128
 19776   008A7A  6E1E               	movwf	lcd_send_command@command^0,c
 19777   008A7C  EC68  F053         	call	_lcd_send_command	;wreg free
 19778   008A80  6E23               	movwf	lcd_init@ret^0,c
 19779   008A82                     l9592:
 19780                           
 19781                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 118:     return ret;
 19782   008A82  5023               	movf	lcd_init@ret^0,w,c
 19783   008A84  0012               	return		;funcret
 19784   008A86                     __end_of_lcd_init:
 19785                           	callstack 0
 19786                           
 19787 ;; *************** function _lcd_send_command *****************
 19788 ;; Defined at:
 19789 ;;		line 128 in file "ECU_Layer/ECU_LCD/ECU_LCD.c"
 19790 ;; Parameters:    Size  Location     Type
 19791 ;;  lcd             2   27[COMRAM] PTR const struct .
 19792 ;;		 -> lcd(8), 
 19793 ;;  command         1   29[COMRAM] unsigned char 
 19794 ;; Auto vars:     Size  Location     Type
 19795 ;;  ret             1   30[COMRAM] unsigned char 
 19796 ;; Return value:  Size  Location     Type
 19797 ;;                  1    wreg      unsigned char 
 19798 ;; Registers used:
 19799 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19800 ;; Tracked objects:
 19801 ;;		On entry : 0/0
 19802 ;;		On exit  : 0/0
 19803 ;;		Unchanged: 0/0
 19804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19805 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19806 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19808 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19809 ;;Total ram usage:        4 bytes
 19810 ;; Hardware stack levels used: 1
 19811 ;; Hardware stack levels required when called: 7
 19812 ;; This function calls:
 19813 ;;		_lcd_send_4bits
 19814 ;; This function is called by:
 19815 ;;		_lcd_init
 19816 ;;		_lcd_set_cursor
 19817 ;;		_main
 19818 ;;		_lcd_send_custom_char
 19819 ;; This function uses a non-reentrant model
 19820 ;;
 19821                           
 19822                           	psect	text62
 19823   00A6D0                     __ptext62:
 19824                           	callstack 0
 19825   00A6D0                     _lcd_send_command:
 19826                           	callstack 20
 19827   00A6D0                     
 19828                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 128: Std_ReturnType lcd_send_command(const chr_lcd_t *lcd,
      +                           uint8 command);ECU_Layer/ECU_LCD/ECU_LCD.c: 129: {;ECU_Layer/ECU_LCD/ECU_LCD.c: 130:   
      +                            Std_ReturnType ret = ((Std_ReturnType)0X00);
 19829   00A6D0  0E00               	movlw	0
 19830   00A6D2  6E1F               	movwf	lcd_send_command@ret^0,c
 19831   00A6D4                     
 19832                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 131:     if(((void*)0)!=lcd)
 19833   00A6D4  501C               	movf	lcd_send_command@lcd^0,w,c
 19834   00A6D6  101D               	iorwf	(lcd_send_command@lcd+1)^0,w,c
 19835   00A6D8  B4D8               	btfsc	status,2,c
 19836   00A6DA  EF71  F053         	goto	u8791
 19837   00A6DE  EF73  F053         	goto	u8790
 19838   00A6E2                     u8791:
 19839   00A6E2  EF8B  F053         	goto	l212
 19840   00A6E6                     u8790:
 19841   00A6E6                     
 19842                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 132:     {;ECU_Layer/ECU_LCD/ECU_LCD.c: 156:     RS=0;
 19843   00A6E6  0E00               	movlw	0
 19844   00A6E8  0100               	movlb	0	; () banked
 19845   00A6EA  6FFC               	movwf	_RS& (0+255),b
 19846   00A6EC                     
 19847                           ; BSR set to: 0
 19848                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 157:     ret &= lcd_send_4bits(lcd,command & 0xf0);
 19849   00A6EC  C01C  F019         	movff	lcd_send_command@lcd,lcd_send_4bits@lcd
 19850   00A6F0  C01D  F01A         	movff	lcd_send_command@lcd+1,lcd_send_4bits@lcd+1
 19851   00A6F4  501E               	movf	lcd_send_command@command^0,w,c
 19852   00A6F6  0BF0               	andlw	240
 19853   00A6F8  6E1B               	movwf	lcd_send_4bits@_data_command^0,c
 19854   00A6FA  EC0C  F055         	call	_lcd_send_4bits	;wreg free
 19855   00A6FE  161F               	andwf	lcd_send_command@ret^0,f,c
 19856   00A700                     
 19857                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 158:     ret &= lcd_send_4bits(lcd,(command << 4) & ( 0xf0
      +                           ));
 19858   00A700  C01C  F019         	movff	lcd_send_command@lcd,lcd_send_4bits@lcd
 19859   00A704  C01D  F01A         	movff	lcd_send_command@lcd+1,lcd_send_4bits@lcd+1
 19860   00A708  381E               	swapf	lcd_send_command@command^0,w,c
 19861   00A70A  0BF0               	andlw	240
 19862   00A70C  0BF0               	andlw	240
 19863   00A70E  6E1B               	movwf	lcd_send_4bits@_data_command^0,c
 19864   00A710  EC0C  F055         	call	_lcd_send_4bits	;wreg free
 19865   00A714  161F               	andwf	lcd_send_command@ret^0,f,c
 19866   00A716                     l212:
 19867                           
 19868                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 161:     return ret;
 19869   00A716  501F               	movf	lcd_send_command@ret^0,w,c
 19870   00A718  0012               	return		;funcret
 19871   00A71A                     __end_of_lcd_send_command:
 19872                           	callstack 0
 19873                           
 19874 ;; *************** function _lcd_send_4bits *****************
 19875 ;; Defined at:
 19876 ;;		line 444 in file "ECU_Layer/ECU_LCD/ECU_LCD.c"
 19877 ;; Parameters:    Size  Location     Type
 19878 ;;  lcd             2   24[COMRAM] PTR const struct .
 19879 ;;		 -> lcd(8), 
 19880 ;;  _data_comman    1   26[COMRAM] unsigned char 
 19881 ;; Auto vars:     Size  Location     Type
 19882 ;;  ret             1    0        unsigned char 
 19883 ;; Return value:  Size  Location     Type
 19884 ;;                  1    wreg      unsigned char 
 19885 ;; Registers used:
 19886 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19887 ;; Tracked objects:
 19888 ;;		On entry : 0/0
 19889 ;;		On exit  : 0/0
 19890 ;;		Unchanged: 0/0
 19891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19892 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19895 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19896 ;;Total ram usage:        3 bytes
 19897 ;; Hardware stack levels used: 1
 19898 ;; Hardware stack levels required when called: 6
 19899 ;; This function calls:
 19900 ;;		_IO_expander_write
 19901 ;; This function is called by:
 19902 ;;		_lcd_send_command
 19903 ;;		_lcd_send_char
 19904 ;; This function uses a non-reentrant model
 19905 ;;
 19906                           
 19907                           	psect	text63
 19908   00AA18                     __ptext63:
 19909                           	callstack 0
 19910   00AA18                     _lcd_send_4bits:
 19911                           	callstack 20
 19912   00AA18                     
 19913                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 453:     _data_command|=RS;
 19914   00AA18  0100               	movlb	0	; () banked
 19915   00AA1A  51FC               	movf	_RS& (0+255),w,b
 19916   00AA1C  121B               	iorwf	lcd_send_4bits@_data_command^0,f,c
 19917   00AA1E                     
 19918                           ; BSR set to: 0
 19919                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 454:     IO_expander_write(lcd,_data_command | 0x04);
 19920   00AA1E  C019  F014         	movff	lcd_send_4bits@lcd,IO_expander_write@lcd
 19921   00AA22  C01A  F015         	movff	lcd_send_4bits@lcd+1,IO_expander_write@lcd+1
 19922   00AA26  501B               	movf	lcd_send_4bits@_data_command^0,w,c
 19923   00AA28  0904               	iorlw	4
 19924   00AA2A  6E16               	movwf	IO_expander_write@data^0,c
 19925   00AA2C  EC1C  F053         	call	_IO_expander_write	;wreg free
 19926   00AA30                     
 19927                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 455:     IO_expander_write(lcd,_data_command & 0xfb);
 19928   00AA30  C019  F014         	movff	lcd_send_4bits@lcd,IO_expander_write@lcd
 19929   00AA34  C01A  F015         	movff	lcd_send_4bits@lcd+1,IO_expander_write@lcd+1
 19930   00AA38  501B               	movf	lcd_send_4bits@_data_command^0,w,c
 19931   00AA3A  0BFB               	andlw	251
 19932   00AA3C  6E16               	movwf	IO_expander_write@data^0,c
 19933   00AA3E  EC1C  F053         	call	_IO_expander_write	;wreg free
 19934   00AA42                     
 19935                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 456:     _delay((unsigned long)((100)*(4000000ul/4000000.0
      +                          )));
 19936   00AA42  0E21               	movlw	33
 19937   00AA44                     u17627:
 19938   00AA44  2EE8               	decfsz	wreg,f,c
 19939   00AA46  D7FE               	bra	u17627
 19940   00AA48  F000               	nop	
 19941   00AA4A                     
 19942                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 458:     return ret;
 19943   00AA4A  0E01               	movlw	1
 19944   00AA4C  0012               	return		;funcret
 19945   00AA4E                     __end_of_lcd_send_4bits:
 19946                           	callstack 0
 19947                           
 19948 ;; *************** function _IO_expander_write *****************
 19949 ;; Defined at:
 19950 ;;		line 519 in file "ECU_Layer/ECU_LCD/ECU_LCD.c"
 19951 ;; Parameters:    Size  Location     Type
 19952 ;;  lcd             2   19[COMRAM] PTR const struct .
 19953 ;;		 -> lcd(8), 
 19954 ;;  data            1   21[COMRAM] unsigned char 
 19955 ;; Auto vars:     Size  Location     Type
 19956 ;;  ack_St          1   23[COMRAM] unsigned char 
 19957 ;;  ret             1   22[COMRAM] unsigned char 
 19958 ;; Return value:  Size  Location     Type
 19959 ;;                  1    wreg      unsigned char 
 19960 ;; Registers used:
 19961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19962 ;; Tracked objects:
 19963 ;;		On entry : 0/0
 19964 ;;		On exit  : 0/0
 19965 ;;		Unchanged: 0/0
 19966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19967 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19968 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19970 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19971 ;;Total ram usage:        5 bytes
 19972 ;; Hardware stack levels used: 1
 19973 ;; Hardware stack levels required when called: 5
 19974 ;; This function calls:
 19975 ;;		_I2C_Master_Transmit
 19976 ;; This function is called by:
 19977 ;;		_lcd_init
 19978 ;;		_lcd_send_4bits
 19979 ;; This function uses a non-reentrant model
 19980 ;;
 19981                           
 19982                           	psect	text64
 19983   00A638                     __ptext64:
 19984                           	callstack 0
 19985   00A638                     _IO_expander_write:
 19986                           	callstack 20
 19987   00A638                     
 19988                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 520:     uint8 ack_St = (1);
 19989   00A638  0E01               	movlw	1
 19990   00A63A  6E18               	movwf	IO_expander_write@ack_St^0,c
 19991                           
 19992                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 521:     Std_ReturnType ret = ((Std_ReturnType)0X00);
 19993   00A63C  0E00               	movlw	0
 19994   00A63E  6E17               	movwf	IO_expander_write@ret^0,c
 19995   00A640                     
 19996                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 522:     ret &= I2C_Master_Transmit(&(lcd->I2C_Handle),(0x
      +                          70),1,&data,&ack_St);
 19997   00A640  C014  F009         	movff	IO_expander_write@lcd,I2C_Master_Transmit@_i2c
 19998   00A644  C015  F00A         	movff	IO_expander_write@lcd+1,I2C_Master_Transmit@_i2c+1
 19999   00A648  0E70               	movlw	112
 20000   00A64A  6E0B               	movwf	I2C_Master_Transmit@Address^0,c
 20001   00A64C  0E01               	movlw	1
 20002   00A64E  6E0C               	movwf	I2C_Master_Transmit@Length^0,c
 20003   00A650  0E16               	movlw	low IO_expander_write@data
 20004   00A652  6E0D               	movwf	I2C_Master_Transmit@str^0,c
 20005   00A654  0E00               	movlw	high IO_expander_write@data
 20006   00A656  6E0E               	movwf	(I2C_Master_Transmit@str+1)^0,c
 20007   00A658  0E18               	movlw	low IO_expander_write@ack_St
 20008   00A65A  6E0F               	movwf	I2C_Master_Transmit@ACK_State^0,c
 20009   00A65C  0E00               	movlw	high IO_expander_write@ack_St
 20010   00A65E  6E10               	movwf	(I2C_Master_Transmit@ACK_State+1)^0,c
 20011   00A660  EC09  F04C         	call	_I2C_Master_Transmit	;wreg free
 20012   00A664  1617               	andwf	IO_expander_write@ret^0,f,c
 20013   00A666                     
 20014                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 523:     if(ack_St == (0)){
 20015   00A666  5018               	movf	IO_expander_write@ack_St^0,w,c
 20016   00A668  A4D8               	btfss	status,2,c
 20017   00A66A  EF39  F053         	goto	u7181
 20018   00A66E  EF3B  F053         	goto	u7180
 20019   00A672                     u7181:
 20020   00A672  EF3F  F053         	goto	l6886
 20021   00A676                     u7180:
 20022   00A676                     
 20023                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 524:         ret = ((Std_ReturnType)0X01);
 20024   00A676  0E01               	movlw	1
 20025   00A678  6E17               	movwf	IO_expander_write@ret^0,c
 20026                           
 20027                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 525:     }
 20028   00A67A  EF41  F053         	goto	l301
 20029   00A67E                     l6886:
 20030                           
 20031                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 527:         ret = ((Std_ReturnType)0X00);
 20032   00A67E  0E00               	movlw	0
 20033   00A680  6E17               	movwf	IO_expander_write@ret^0,c
 20034   00A682                     l301:
 20035                           
 20036                           ;ECU_Layer/ECU_LCD/ECU_LCD.c: 529:     return ret;
 20037   00A682  5017               	movf	IO_expander_write@ret^0,w,c
 20038   00A684  0012               	return		;funcret
 20039   00A686                     __end_of_IO_expander_write:
 20040                           	callstack 0
 20041                           
 20042 ;; *************** function _I2C_Master_Transmit *****************
 20043 ;; Defined at:
 20044 ;;		line 240 in file "MCAL_Layer/mcal_I2C/hal_I2C.c"
 20045 ;; Parameters:    Size  Location     Type
 20046 ;;  _i2c            2    8[COMRAM] PTR const struct .
 20047 ;;		 -> lcd(8), 
 20048 ;;  Address         1   10[COMRAM] unsigned char 
 20049 ;;  Length          1   11[COMRAM] unsigned char 
 20050 ;;  str             2   12[COMRAM] PTR unsigned char 
 20051 ;;		 -> IO_expander_write@data(1), 
 20052 ;;  ACK_State       2   14[COMRAM] PTR unsigned char 
 20053 ;;		 -> IO_expander_write@ack_St(1), 
 20054 ;; Auto vars:     Size  Location     Type
 20055 ;;  ack             1   18[COMRAM] unsigned char 
 20056 ;;  ret             1   17[COMRAM] unsigned char 
 20057 ;;  ctr             1   16[COMRAM] unsigned char 
 20058 ;; Return value:  Size  Location     Type
 20059 ;;                  1    wreg      unsigned char 
 20060 ;; Registers used:
 20061 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20062 ;; Tracked objects:
 20063 ;;		On entry : 0/0
 20064 ;;		On exit  : 0/0
 20065 ;;		Unchanged: 0/0
 20066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20067 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20068 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20070 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20071 ;;Total ram usage:       11 bytes
 20072 ;; Hardware stack levels used: 1
 20073 ;; Hardware stack levels required when called: 4
 20074 ;; This function calls:
 20075 ;;		_MSSP_I2C_Master_Send_Start
 20076 ;;		_MSSP_I2C_Master_Send_Stop
 20077 ;;		_MSSP_I2C_Master_Write_Blocking
 20078 ;; This function is called by:
 20079 ;;		_IO_expander_write
 20080 ;; This function uses a non-reentrant model
 20081 ;;
 20082                           
 20083                           	psect	text65
 20084   009812                     __ptext65:
 20085                           	callstack 0
 20086   009812                     _I2C_Master_Transmit:
 20087                           	callstack 20
 20088   009812                     
 20089                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 241:     Std_ReturnType ret = ((Std_ReturnType)0X00);
 20090   009812  0E00               	movlw	0
 20091   009814  6E12               	movwf	I2C_Master_Transmit@ret^0,c
 20092                           
 20093                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 242:     uint8 ack = (1);
 20094   009816  0E01               	movlw	1
 20095   009818  6E13               	movwf	I2C_Master_Transmit@ack^0,c
 20096                           
 20097                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 243:     uint8 ctr = 0;
 20098   00981A  0E00               	movlw	0
 20099   00981C  6E11               	movwf	I2C_Master_Transmit@ctr^0,c
 20100   00981E                     
 20101                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 244:     if((((void*)0) != _i2c)&&(((void*)0) != ACK_Sta
      +                          te))
 20102   00981E  5009               	movf	I2C_Master_Transmit@_i2c^0,w,c
 20103   009820  100A               	iorwf	(I2C_Master_Transmit@_i2c+1)^0,w,c
 20104   009822  B4D8               	btfsc	status,2,c
 20105   009824  EF16  F04C         	goto	u6741
 20106   009828  EF18  F04C         	goto	u6740
 20107   00982C                     u6741:
 20108   00982C  EF6B  F04C         	goto	l6664
 20109   009830                     u6740:
 20110   009830  500F               	movf	I2C_Master_Transmit@ACK_State^0,w,c
 20111   009832  1010               	iorwf	(I2C_Master_Transmit@ACK_State+1)^0,w,c
 20112   009834  B4D8               	btfsc	status,2,c
 20113   009836  EF1F  F04C         	goto	u6751
 20114   00983A  EF21  F04C         	goto	u6750
 20115   00983E                     u6751:
 20116   00983E  EF6B  F04C         	goto	l6664
 20117   009842                     u6750:
 20118   009842                     
 20119                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 247:         ret &= ret = MSSP_I2C_Master_Send_Start(_i2
      +                          c);
 20120   009842  C009  F003         	movff	I2C_Master_Transmit@_i2c,MSSP_I2C_Master_Send_Start@_i2c
 20121   009846  C00A  F004         	movff	I2C_Master_Transmit@_i2c+1,MSSP_I2C_Master_Send_Start@_i2c+1
 20122   00984A  ECF6  F053         	call	_MSSP_I2C_Master_Send_Start	;wreg free
 20123   00984E  6E12               	movwf	I2C_Master_Transmit@ret^0,c
 20124   009850  5012               	movf	I2C_Master_Transmit@ret^0,w,c
 20125   009852  1612               	andwf	I2C_Master_Transmit@ret^0,f,c
 20126   009854                     
 20127                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 248:         ret &= MSSP_I2C_Master_Write_Blocking(_i2c,
      +                          Address,&ack);
 20128   009854  C009  F003         	movff	I2C_Master_Transmit@_i2c,MSSP_I2C_Master_Write_Blocking@_i2c
 20129   009858  C00A  F004         	movff	I2C_Master_Transmit@_i2c+1,MSSP_I2C_Master_Write_Blocking@_i2c+1
 20130   00985C  C00B  F005         	movff	I2C_Master_Transmit@Address,MSSP_I2C_Master_Write_Blocking@Data
 20131   009860  0E13               	movlw	low I2C_Master_Transmit@ack
 20132   009862  6E06               	movwf	MSSP_I2C_Master_Write_Blocking@ACK_State^0,c
 20133   009864  0E00               	movlw	high I2C_Master_Transmit@ack
 20134   009866  6E07               	movwf	(MSSP_I2C_Master_Write_Blocking@ACK_State+1)^0,c
 20135   009868  EC21  F051         	call	_MSSP_I2C_Master_Write_Blocking	;wreg free
 20136   00986C  1612               	andwf	I2C_Master_Transmit@ret^0,f,c
 20137                           
 20138                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 249:         while((ctr<Length)&&(ack == (0))){
 20139   00986E  EF4D  F04C         	goto	l6656
 20140   009872                     l6650:
 20141                           
 20142                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 250:         ret &= MSSP_I2C_Master_Write_Blocking(_i2c,
      +                          *str++,&ack);
 20143   009872  C009  F003         	movff	I2C_Master_Transmit@_i2c,MSSP_I2C_Master_Write_Blocking@_i2c
 20144   009876  C00A  F004         	movff	I2C_Master_Transmit@_i2c+1,MSSP_I2C_Master_Write_Blocking@_i2c+1
 20145   00987A  C00D  FFD9         	movff	I2C_Master_Transmit@str,fsr2l
 20146   00987E  C00E  FFDA         	movff	I2C_Master_Transmit@str+1,fsr2h
 20147   009882  50DF               	movf	indf2,w,c
 20148   009884  6E05               	movwf	MSSP_I2C_Master_Write_Blocking@Data^0,c
 20149   009886  0E13               	movlw	low I2C_Master_Transmit@ack
 20150   009888  6E06               	movwf	MSSP_I2C_Master_Write_Blocking@ACK_State^0,c
 20151   00988A  0E00               	movlw	high I2C_Master_Transmit@ack
 20152   00988C  6E07               	movwf	(MSSP_I2C_Master_Write_Blocking@ACK_State+1)^0,c
 20153   00988E  EC21  F051         	call	_MSSP_I2C_Master_Write_Blocking	;wreg free
 20154   009892  1612               	andwf	I2C_Master_Transmit@ret^0,f,c
 20155   009894  4A0D               	infsnz	I2C_Master_Transmit@str^0,f,c
 20156   009896  2A0E               	incf	(I2C_Master_Transmit@str+1)^0,f,c
 20157   009898                     
 20158                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 251:         ctr++;
 20159   009898  2A11               	incf	I2C_Master_Transmit@ctr^0,f,c
 20160   00989A                     l6656:
 20161                           
 20162                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 249:         while((ctr<Length)&&(ack == (0))){
 20163   00989A  500C               	movf	I2C_Master_Transmit@Length^0,w,c
 20164   00989C  5C11               	subwf	I2C_Master_Transmit@ctr^0,w,c
 20165   00989E  B0D8               	btfsc	status,0,c
 20166   0098A0  EF54  F04C         	goto	u6761
 20167   0098A4  EF56  F04C         	goto	u6760
 20168   0098A8                     u6761:
 20169   0098A8  EF5E  F04C         	goto	l6660
 20170   0098AC                     u6760:
 20171   0098AC  5013               	movf	I2C_Master_Transmit@ack^0,w,c
 20172   0098AE  B4D8               	btfsc	status,2,c
 20173   0098B0  EF5C  F04C         	goto	u6771
 20174   0098B4  EF5E  F04C         	goto	u6770
 20175   0098B8                     u6771:
 20176   0098B8  EF39  F04C         	goto	l6650
 20177   0098BC                     u6770:
 20178   0098BC                     l6660:
 20179                           
 20180                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 253:         ret = MSSP_I2C_Master_Send_Stop(_i2c);
 20181   0098BC  C009  F003         	movff	I2C_Master_Transmit@_i2c,MSSP_I2C_Master_Send_Stop@_i2c
 20182   0098C0  C00A  F004         	movff	I2C_Master_Transmit@_i2c+1,MSSP_I2C_Master_Send_Stop@_i2c+1
 20183   0098C4  ECD3  F053         	call	_MSSP_I2C_Master_Send_Stop	;wreg free
 20184   0098C8  6E12               	movwf	I2C_Master_Transmit@ret^0,c
 20185   0098CA                     
 20186                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 254:         *ACK_State = ack;
 20187   0098CA  C00F  FFD9         	movff	I2C_Master_Transmit@ACK_State,fsr2l
 20188   0098CE  C010  FFDA         	movff	I2C_Master_Transmit@ACK_State+1,fsr2h
 20189   0098D2  C013  FFDF         	movff	I2C_Master_Transmit@ack,indf2
 20190   0098D6                     l6664:
 20191                           
 20192                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 256:     return ret;
 20193   0098D6  5012               	movf	I2C_Master_Transmit@ret^0,w,c
 20194   0098D8  0012               	return		;funcret
 20195   0098DA                     __end_of_I2C_Master_Transmit:
 20196                           	callstack 0
 20197                           
 20198 ;; *************** function _MSSP_I2C_Master_Write_Blocking *****************
 20199 ;; Defined at:
 20200 ;;		line 205 in file "MCAL_Layer/mcal_I2C/hal_I2C.c"
 20201 ;; Parameters:    Size  Location     Type
 20202 ;;  _i2c            2    2[COMRAM] PTR const struct .
 20203 ;;		 -> lcd(8), 
 20204 ;;  Data            1    4[COMRAM] unsigned char 
 20205 ;;  ACK_State       2    5[COMRAM] PTR unsigned char 
 20206 ;;		 -> I2C_Master_Transmit@ack(1), 
 20207 ;; Auto vars:     Size  Location     Type
 20208 ;;  ret             1    7[COMRAM] unsigned char 
 20209 ;; Return value:  Size  Location     Type
 20210 ;;                  1    wreg      unsigned char 
 20211 ;; Registers used:
 20212 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20213 ;; Tracked objects:
 20214 ;;		On entry : 0/0
 20215 ;;		On exit  : 0/0
 20216 ;;		Unchanged: 0/0
 20217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20218 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20219 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20221 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20222 ;;Total ram usage:        6 bytes
 20223 ;; Hardware stack levels used: 1
 20224 ;; Hardware stack levels required when called: 3
 20225 ;; This function calls:
 20226 ;;		Nothing
 20227 ;; This function is called by:
 20228 ;;		_I2C_Master_Transmit
 20229 ;; This function uses a non-reentrant model
 20230 ;;
 20231                           
 20232                           	psect	text66
 20233   00A242                     __ptext66:
 20234                           	callstack 0
 20235   00A242                     _MSSP_I2C_Master_Write_Blocking:
 20236                           	callstack 20
 20237   00A242                     
 20238                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 205: Std_ReturnType MSSP_I2C_Master_Write_Blocking(const
      +                           mssp_i2c_t * _i2c,uint8 Data,uint8 * ACK_State);MCAL_Layer/mcal_I2C/hal_I2C.c: 206: {;M
      +                          CAL_Layer/mcal_I2C/hal_I2C.c: 207:     Std_ReturnType ret = ((Std_ReturnType)0X00);
 20239   00A242  0E00               	movlw	0
 20240   00A244  6E08               	movwf	MSSP_I2C_Master_Write_Blocking@ret^0,c
 20241   00A246                     
 20242                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 208:     if((((void*)0) != _i2c)&&(((void*)0) != ACK_Sta
      +                          te))
 20243   00A246  5003               	movf	MSSP_I2C_Master_Write_Blocking@_i2c^0,w,c
 20244   00A248  1004               	iorwf	(MSSP_I2C_Master_Write_Blocking@_i2c+1)^0,w,c
 20245   00A24A  B4D8               	btfsc	status,2,c
 20246   00A24C  EF2A  F051         	goto	u6661
 20247   00A250  EF2C  F051         	goto	u6660
 20248   00A254                     u6661:
 20249   00A254  EF56  F051         	goto	l6620
 20250   00A258                     u6660:
 20251   00A258  5006               	movf	MSSP_I2C_Master_Write_Blocking@ACK_State^0,w,c
 20252   00A25A  1007               	iorwf	(MSSP_I2C_Master_Write_Blocking@ACK_State+1)^0,w,c
 20253   00A25C  B4D8               	btfsc	status,2,c
 20254   00A25E  EF33  F051         	goto	u6671
 20255   00A262  EF35  F051         	goto	u6670
 20256   00A266                     u6671:
 20257   00A266  EF56  F051         	goto	l6620
 20258   00A26A                     u6670:
 20259   00A26A                     
 20260                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 209:     {;MCAL_Layer/mcal_I2C/hal_I2C.c: 210:         r
      +                          et = ((Std_ReturnType)0X01);
 20261   00A26A  0E01               	movlw	1
 20262   00A26C  6E08               	movwf	MSSP_I2C_Master_Write_Blocking@ret^0,c
 20263   00A26E                     
 20264                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 212:         SSPBUF = Data;
 20265   00A26E  C005  FFC9         	movff	MSSP_I2C_Master_Write_Blocking@Data,4041	;volatile
 20266   00A272                     l488:
 20267   00A272  A69E               	btfss	158,3,c	;volatile
 20268   00A274  EF3E  F051         	goto	u6681
 20269   00A278  EF40  F051         	goto	u6680
 20270   00A27C                     u6681:
 20271   00A27C  EF39  F051         	goto	l488
 20272   00A280                     u6680:
 20273   00A280                     
 20274                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 216:         PIR1bits.SSPIF = 0;
 20275   00A280  969E               	bcf	158,3,c	;volatile
 20276                           
 20277                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 218:         if((0) == SSPCON2bits.ACKDT){
 20278   00A282  BAC5               	btfsc	197,5,c	;volatile
 20279   00A284  EF46  F051         	goto	u6691
 20280   00A288  EF48  F051         	goto	u6690
 20281   00A28C                     u6691:
 20282   00A28C  EF50  F051         	goto	l6618
 20283   00A290                     u6690:
 20284   00A290                     
 20285                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 219:             *ACK_State = (0);
 20286   00A290  C006  FFD9         	movff	MSSP_I2C_Master_Write_Blocking@ACK_State,fsr2l
 20287   00A294  C007  FFDA         	movff	MSSP_I2C_Master_Write_Blocking@ACK_State+1,fsr2h
 20288   00A298  0E00               	movlw	0
 20289   00A29A  6EDF               	movwf	indf2,c
 20290                           
 20291                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 220:         }
 20292   00A29C  EF56  F051         	goto	l6620
 20293   00A2A0                     l6618:
 20294                           
 20295                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 222:             *ACK_State = (1);
 20296   00A2A0  C006  FFD9         	movff	MSSP_I2C_Master_Write_Blocking@ACK_State,fsr2l
 20297   00A2A4  C007  FFDA         	movff	MSSP_I2C_Master_Write_Blocking@ACK_State+1,fsr2h
 20298   00A2A8  0E01               	movlw	1
 20299   00A2AA  6EDF               	movwf	indf2,c
 20300   00A2AC                     l6620:
 20301                           
 20302                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 225:     return ret;
 20303   00A2AC  5008               	movf	MSSP_I2C_Master_Write_Blocking@ret^0,w,c
 20304   00A2AE  0012               	return		;funcret
 20305   00A2B0                     __end_of_MSSP_I2C_Master_Write_Blocking:
 20306                           	callstack 0
 20307                           
 20308 ;; *************** function _MSSP_I2C_Master_Send_Stop *****************
 20309 ;; Defined at:
 20310 ;;		line 174 in file "MCAL_Layer/mcal_I2C/hal_I2C.c"
 20311 ;; Parameters:    Size  Location     Type
 20312 ;;  _i2c            2    2[COMRAM] PTR const struct .
 20313 ;;		 -> lcd(8), 
 20314 ;; Auto vars:     Size  Location     Type
 20315 ;;  ret             1    4[COMRAM] unsigned char 
 20316 ;; Return value:  Size  Location     Type
 20317 ;;                  1    wreg      unsigned char 
 20318 ;; Registers used:
 20319 ;;		wreg, status,2, status,0
 20320 ;; Tracked objects:
 20321 ;;		On entry : 0/0
 20322 ;;		On exit  : 0/0
 20323 ;;		Unchanged: 0/0
 20324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20325 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20326 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20328 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20329 ;;Total ram usage:        3 bytes
 20330 ;; Hardware stack levels used: 1
 20331 ;; Hardware stack levels required when called: 3
 20332 ;; This function calls:
 20333 ;;		Nothing
 20334 ;; This function is called by:
 20335 ;;		_I2C_Master_Transmit
 20336 ;; This function uses a non-reentrant model
 20337 ;;
 20338                           
 20339                           	psect	text67
 20340   00A7A6                     __ptext67:
 20341                           	callstack 0
 20342   00A7A6                     _MSSP_I2C_Master_Send_Stop:
 20343                           	callstack 20
 20344   00A7A6                     
 20345                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 174: Std_ReturnType MSSP_I2C_Master_Send_Stop(const mssp
      +                          _i2c_t * _i2c);MCAL_Layer/mcal_I2C/hal_I2C.c: 175: {;MCAL_Layer/mcal_I2C/hal_I2C.c: 176:
      +                               Std_ReturnType ret = ((Std_ReturnType)0X00);
 20346   00A7A6  0E00               	movlw	0
 20347   00A7A8  6E05               	movwf	MSSP_I2C_Master_Send_Stop@ret^0,c
 20348   00A7AA                     
 20349                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 177:     if(((void*)0) != _i2c)
 20350   00A7AA  5003               	movf	MSSP_I2C_Master_Send_Stop@_i2c^0,w,c
 20351   00A7AC  1004               	iorwf	(MSSP_I2C_Master_Send_Stop@_i2c+1)^0,w,c
 20352   00A7AE  B4D8               	btfsc	status,2,c
 20353   00A7B0  EFDC  F053         	goto	u6631
 20354   00A7B4  EFDE  F053         	goto	u6630
 20355   00A7B8                     u6631:
 20356   00A7B8  EFF4  F053         	goto	l478
 20357   00A7BC                     u6630:
 20358   00A7BC                     
 20359                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 178:     {;MCAL_Layer/mcal_I2C/hal_I2C.c: 180:         (
      +                          SSPCON2bits.PEN=1);
 20360   00A7BC  84C5               	bsf	197,2,c	;volatile
 20361   00A7BE                     l479:
 20362   00A7BE  B4C5               	btfsc	197,2,c	;volatile
 20363   00A7C0  EFE4  F053         	goto	u6641
 20364   00A7C4  EFE6  F053         	goto	u6640
 20365   00A7C8                     u6641:
 20366   00A7C8  EFDF  F053         	goto	l479
 20367   00A7CC                     u6640:
 20368   00A7CC                     
 20369                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 184:         PIR1bits.SSPIF=0;
 20370   00A7CC  969E               	bcf	158,3,c	;volatile
 20371                           
 20372                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 186:         if((1)==SSPSTATbits.P){
 20373   00A7CE  A8C7               	btfss	199,4,c	;volatile
 20374   00A7D0  EFEC  F053         	goto	u6651
 20375   00A7D4  EFEE  F053         	goto	u6650
 20376   00A7D8                     u6651:
 20377   00A7D8  EFF2  F053         	goto	l6602
 20378   00A7DC                     u6650:
 20379   00A7DC                     
 20380                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 187:             ret = ((Std_ReturnType)0X01);
 20381   00A7DC  0E01               	movlw	1
 20382   00A7DE  6E05               	movwf	MSSP_I2C_Master_Send_Stop@ret^0,c
 20383                           
 20384                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 188:         }
 20385   00A7E0  EFF4  F053         	goto	l478
 20386   00A7E4                     l6602:
 20387                           
 20388                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 190:             ret = ((Std_ReturnType)0X00);
 20389   00A7E4  0E00               	movlw	0
 20390   00A7E6  6E05               	movwf	MSSP_I2C_Master_Send_Stop@ret^0,c
 20391   00A7E8                     l478:
 20392                           
 20393                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 193:     return ret;
 20394   00A7E8  5005               	movf	MSSP_I2C_Master_Send_Stop@ret^0,w,c
 20395   00A7EA  0012               	return		;funcret
 20396   00A7EC                     __end_of_MSSP_I2C_Master_Send_Stop:
 20397                           	callstack 0
 20398                           
 20399 ;; *************** function _MSSP_I2C_Master_Send_Start *****************
 20400 ;; Defined at:
 20401 ;;		line 124 in file "MCAL_Layer/mcal_I2C/hal_I2C.c"
 20402 ;; Parameters:    Size  Location     Type
 20403 ;;  _i2c            2    2[COMRAM] PTR const struct .
 20404 ;;		 -> lcd(8), 
 20405 ;; Auto vars:     Size  Location     Type
 20406 ;;  ret             1    4[COMRAM] unsigned char 
 20407 ;; Return value:  Size  Location     Type
 20408 ;;                  1    wreg      unsigned char 
 20409 ;; Registers used:
 20410 ;;		wreg, status,2, status,0
 20411 ;; Tracked objects:
 20412 ;;		On entry : 0/0
 20413 ;;		On exit  : 0/0
 20414 ;;		Unchanged: 0/0
 20415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20416 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20417 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20419 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20420 ;;Total ram usage:        3 bytes
 20421 ;; Hardware stack levels used: 1
 20422 ;; Hardware stack levels required when called: 3
 20423 ;; This function calls:
 20424 ;;		Nothing
 20425 ;; This function is called by:
 20426 ;;		_I2C_Master_Transmit
 20427 ;; This function uses a non-reentrant model
 20428 ;;
 20429                           
 20430                           	psect	text68
 20431   00A7EC                     __ptext68:
 20432                           	callstack 0
 20433   00A7EC                     _MSSP_I2C_Master_Send_Start:
 20434                           	callstack 20
 20435   00A7EC                     
 20436                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 124: Std_ReturnType MSSP_I2C_Master_Send_Start(const mss
      +                          p_i2c_t * _i2c);MCAL_Layer/mcal_I2C/hal_I2C.c: 125: {;MCAL_Layer/mcal_I2C/hal_I2C.c: 126
      +                          :     Std_ReturnType ret = ((Std_ReturnType)0X00);
 20437   00A7EC  0E00               	movlw	0
 20438   00A7EE  6E05               	movwf	MSSP_I2C_Master_Send_Start@ret^0,c
 20439   00A7F0                     
 20440                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 127:     if(((void*)0) != _i2c)
 20441   00A7F0  5003               	movf	MSSP_I2C_Master_Send_Start@_i2c^0,w,c
 20442   00A7F2  1004               	iorwf	(MSSP_I2C_Master_Send_Start@_i2c+1)^0,w,c
 20443   00A7F4  B4D8               	btfsc	status,2,c
 20444   00A7F6  EFFF  F053         	goto	u6601
 20445   00A7FA  EF01  F054         	goto	u6600
 20446   00A7FE                     u6601:
 20447   00A7FE  EF17  F054         	goto	l462
 20448   00A802                     u6600:
 20449   00A802                     
 20450                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 128:     {;MCAL_Layer/mcal_I2C/hal_I2C.c: 130:         (
      +                          SSPCON2bits.SEN=1);
 20451   00A802  80C5               	bsf	197,0,c	;volatile
 20452   00A804                     l463:
 20453   00A804  B0C5               	btfsc	197,0,c	;volatile
 20454   00A806  EF07  F054         	goto	u6611
 20455   00A80A  EF09  F054         	goto	u6610
 20456   00A80E                     u6611:
 20457   00A80E  EF02  F054         	goto	l463
 20458   00A812                     u6610:
 20459   00A812                     
 20460                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 134:         PIR1bits.SSPIF=0;
 20461   00A812  969E               	bcf	158,3,c	;volatile
 20462                           
 20463                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 136:         if((1) == SSPSTATbits.S){
 20464   00A814  A6C7               	btfss	199,3,c	;volatile
 20465   00A816  EF0F  F054         	goto	u6621
 20466   00A81A  EF11  F054         	goto	u6620
 20467   00A81E                     u6621:
 20468   00A81E  EF15  F054         	goto	l6590
 20469   00A822                     u6620:
 20470   00A822                     
 20471                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 137:             ret = ((Std_ReturnType)0X01);
 20472   00A822  0E01               	movlw	1
 20473   00A824  6E05               	movwf	MSSP_I2C_Master_Send_Start@ret^0,c
 20474                           
 20475                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 138:         }
 20476   00A826  EF17  F054         	goto	l462
 20477   00A82A                     l6590:
 20478                           
 20479                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 140:             ret = ((Std_ReturnType)0X00);
 20480   00A82A  0E00               	movlw	0
 20481   00A82C  6E05               	movwf	MSSP_I2C_Master_Send_Start@ret^0,c
 20482   00A82E                     l462:
 20483                           
 20484                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 143:     return ret;
 20485   00A82E  5005               	movf	MSSP_I2C_Master_Send_Start@ret^0,w,c
 20486   00A830  0012               	return		;funcret
 20487   00A832                     __end_of_MSSP_I2C_Master_Send_Start:
 20488                           	callstack 0
 20489                           
 20490 ;; *************** function _keypad_init *****************
 20491 ;; Defined at:
 20492 ;;		line 23 in file "ECU_Layer/ECU_keypad/ECU_keypad.c"
 20493 ;; Parameters:    Size  Location     Type
 20494 ;;  keypad          2   24[COMRAM] PTR const struct .
 20495 ;;		 -> Keypad(8), 
 20496 ;; Auto vars:     Size  Location     Type
 20497 ;;  index           1   29[COMRAM] unsigned char 
 20498 ;;  ret             1   28[COMRAM] unsigned char 
 20499 ;; Return value:  Size  Location     Type
 20500 ;;                  1    wreg      unsigned char 
 20501 ;; Registers used:
 20502 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20503 ;; Tracked objects:
 20504 ;;		On entry : 0/0
 20505 ;;		On exit  : 0/0
 20506 ;;		Unchanged: 0/0
 20507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20508 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20509 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20510 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20511 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20512 ;;Total ram usage:        6 bytes
 20513 ;; Hardware stack levels used: 1
 20514 ;; Hardware stack levels required when called: 6
 20515 ;; This function calls:
 20516 ;;		_GPIO_pin_init
 20517 ;; This function is called by:
 20518 ;;		_Calculator_Init
 20519 ;; This function uses a non-reentrant model
 20520 ;;
 20521                           
 20522                           	psect	text69
 20523   00A15E                     __ptext69:
 20524                           	callstack 0
 20525   00A15E                     _keypad_init:
 20526                           	callstack 23
 20527   00A15E                     
 20528                           ;ECU_Layer/ECU_keypad/ECU_keypad.c: 26:     Std_ReturnType ret = ((Std_ReturnType)0X00);
 20529   00A15E  0E00               	movlw	0
 20530   00A160  6E1D               	movwf	keypad_init@ret^0,c
 20531   00A162                     
 20532                           ;ECU_Layer/ECU_keypad/ECU_keypad.c: 27:     if(((void*)0)!=keypad)
 20533   00A162  5019               	movf	keypad_init@keypad^0,w,c
 20534   00A164  101A               	iorwf	(keypad_init@keypad+1)^0,w,c
 20535   00A166  B4D8               	btfsc	status,2,c
 20536   00A168  EFB8  F050         	goto	u11391
 20537   00A16C  EFBA  F050         	goto	u11390
 20538   00A170                     u11391:
 20539   00A170  EFE8  F050         	goto	l9554
 20540   00A174                     u11390:
 20541   00A174                     
 20542                           ;ECU_Layer/ECU_keypad/ECU_keypad.c: 28:     {;ECU_Layer/ECU_keypad/ECU_keypad.c: 29:    
      +                               ret = ((Std_ReturnType)0X01);
 20543   00A174  0E01               	movlw	1
 20544   00A176  6E1D               	movwf	keypad_init@ret^0,c
 20545                           
 20546                           ;ECU_Layer/ECU_keypad/ECU_keypad.c: 30:         for(index=0;index<(4);index++)
 20547   00A178  0E00               	movlw	0
 20548   00A17A  6E1E               	movwf	keypad_init@index^0,c
 20549   00A17C                     l9536:
 20550                           
 20551                           ;ECU_Layer/ECU_keypad/ECU_keypad.c: 31:         {;ECU_Layer/ECU_keypad/ECU_keypad.c: 32:
      +                                       GPIO_pin_init(&keypad->keypad_row_pins[index]);
 20552   00A17C  501E               	movf	keypad_init@index^0,w,c
 20553   00A17E  2419               	addwf	keypad_init@keypad^0,w,c
 20554   00A180  6E16               	movwf	GPIO_pin_init@_pin_cfg^0,c
 20555   00A182  0E00               	movlw	0
 20556   00A184  201A               	addwfc	(keypad_init@keypad+1)^0,w,c
 20557   00A186  6E17               	movwf	(GPIO_pin_init@_pin_cfg+1)^0,c
 20558   00A188  EC42  F04F         	call	_GPIO_pin_init	;wreg free
 20559   00A18C                     
 20560                           ;ECU_Layer/ECU_keypad/ECU_keypad.c: 33:         }
 20561   00A18C  2A1E               	incf	keypad_init@index^0,f,c
 20562   00A18E  0E03               	movlw	3
 20563   00A190  641E               	cpfsgt	keypad_init@index^0,c
 20564   00A192  EFCD  F050         	goto	u11401
 20565   00A196  EFCF  F050         	goto	u11400
 20566   00A19A                     u11401:
 20567   00A19A  EFBE  F050         	goto	l9536
 20568   00A19E                     u11400:
 20569   00A19E                     
 20570                           ;ECU_Layer/ECU_keypad/ECU_keypad.c: 34:         for(index=0;index<(4);index++)
 20571   00A19E  0E00               	movlw	0
 20572   00A1A0  6E1E               	movwf	keypad_init@index^0,c
 20573   00A1A2                     l9548:
 20574                           
 20575                           ;ECU_Layer/ECU_keypad/ECU_keypad.c: 35:         {;ECU_Layer/ECU_keypad/ECU_keypad.c: 36:
      +                                       GPIO_pin_init(&keypad->keypad_col_pins[index]);
 20576   00A1A2  501E               	movf	keypad_init@index^0,w,c
 20577   00A1A4  2419               	addwf	keypad_init@keypad^0,w,c
 20578   00A1A6  6E1B               	movwf	??_keypad_init^0,c
 20579   00A1A8  0E00               	movlw	0
 20580   00A1AA  201A               	addwfc	(keypad_init@keypad+1)^0,w,c
 20581   00A1AC  6E1C               	movwf	(??_keypad_init+1)^0,c
 20582   00A1AE  0E04               	movlw	4
 20583   00A1B0  241B               	addwf	??_keypad_init^0,w,c
 20584   00A1B2  6E16               	movwf	GPIO_pin_init@_pin_cfg^0,c
 20585   00A1B4  0E00               	movlw	0
 20586   00A1B6  201C               	addwfc	(??_keypad_init+1)^0,w,c
 20587   00A1B8  6E17               	movwf	(GPIO_pin_init@_pin_cfg+1)^0,c
 20588   00A1BA  EC42  F04F         	call	_GPIO_pin_init	;wreg free
 20589   00A1BE                     
 20590                           ;ECU_Layer/ECU_keypad/ECU_keypad.c: 37:         }
 20591   00A1BE  2A1E               	incf	keypad_init@index^0,f,c
 20592   00A1C0  0E03               	movlw	3
 20593   00A1C2  641E               	cpfsgt	keypad_init@index^0,c
 20594   00A1C4  EFE6  F050         	goto	u11411
 20595   00A1C8  EFE8  F050         	goto	u11410
 20596   00A1CC                     u11411:
 20597   00A1CC  EFD1  F050         	goto	l9548
 20598   00A1D0                     u11410:
 20599   00A1D0                     l9554:
 20600                           
 20601                           ;ECU_Layer/ECU_keypad/ECU_keypad.c: 39:     return ret;
 20602   00A1D0  501D               	movf	keypad_init@ret^0,w,c
 20603   00A1D2  0012               	return		;funcret
 20604   00A1D4                     __end_of_keypad_init:
 20605                           	callstack 0
 20606                           
 20607 ;; *************** function _GPIO_pin_init *****************
 20608 ;; Defined at:
 20609 ;;		line 60 in file "MCAL_Layer/GPIO/hal_gpio.c"
 20610 ;; Parameters:    Size  Location     Type
 20611 ;;  _pin_cfg        2   21[COMRAM] PTR const struct .
 20612 ;;		 -> Keypad.keypad_col_pins(4), Keypad.keypad_row_pins(4), Keypad(8), 
 20613 ;; Auto vars:     Size  Location     Type
 20614 ;;  ret             1    0        unsigned char 
 20615 ;; Return value:  Size  Location     Type
 20616 ;;                  1    wreg      unsigned char 
 20617 ;; Registers used:
 20618 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20619 ;; Tracked objects:
 20620 ;;		On entry : 0/0
 20621 ;;		On exit  : 0/0
 20622 ;;		Unchanged: 0/0
 20623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20624 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20626 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20627 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20628 ;;Total ram usage:        3 bytes
 20629 ;; Hardware stack levels used: 1
 20630 ;; Hardware stack levels required when called: 5
 20631 ;; This function calls:
 20632 ;;		_GPIO_pin_dir_init
 20633 ;;		_GPIO_pin_write
 20634 ;; This function is called by:
 20635 ;;		_keypad_init
 20636 ;; This function uses a non-reentrant model
 20637 ;;
 20638                           
 20639                           	psect	text70
 20640   009E84                     __ptext70:
 20641                           	callstack 0
 20642   009E84                     _GPIO_pin_init:
 20643                           	callstack 23
 20644   009E84                     
 20645                           ;MCAL_Layer/GPIO/hal_gpio.c: 63:     if((((void*)0)!=_pin_cfg)&&(_pin_cfg->Pin < ((8)))&
      +                          &(_pin_cfg->Port < ((5))))
 20646   009E84  5016               	movf	GPIO_pin_init@_pin_cfg^0,w,c
 20647   009E86  1017               	iorwf	(GPIO_pin_init@_pin_cfg+1)^0,w,c
 20648   009E88  B4D8               	btfsc	status,2,c
 20649   009E8A  EF49  F04F         	goto	u10061
 20650   009E8E  EF4B  F04F         	goto	u10060
 20651   009E92                     u10061:
 20652   009E92  EF7F  F04F         	goto	l380
 20653   009E96                     u10060:
 20654   009E96  C016  FFD9         	movff	GPIO_pin_init@_pin_cfg,fsr2l
 20655   009E9A  C017  FFDA         	movff	GPIO_pin_init@_pin_cfg+1,fsr2h
 20656   009E9E  30DF               	rrcf	223,w,c
 20657   009EA0  32E8               	rrcf	wreg,f,c
 20658   009EA2  32E8               	rrcf	wreg,f,c
 20659   009EA4  0B07               	andlw	7
 20660   009EA6  6E18               	movwf	??_GPIO_pin_init^0,c
 20661   009EA8  0E08               	movlw	8
 20662   009EAA  6018               	cpfslt	??_GPIO_pin_init^0,c
 20663   009EAC  EF5A  F04F         	goto	u10071
 20664   009EB0  EF5C  F04F         	goto	u10070
 20665   009EB4                     u10071:
 20666   009EB4  EF7F  F04F         	goto	l380
 20667   009EB8                     u10070:
 20668   009EB8  C016  FFD9         	movff	GPIO_pin_init@_pin_cfg,fsr2l
 20669   009EBC  C017  FFDA         	movff	GPIO_pin_init@_pin_cfg+1,fsr2h
 20670   009EC0  50DF               	movf	223,w,c
 20671   009EC2  0B07               	andlw	7
 20672   009EC4  6E18               	movwf	??_GPIO_pin_init^0,c
 20673   009EC6  0E05               	movlw	5
 20674   009EC8  6018               	cpfslt	??_GPIO_pin_init^0,c
 20675   009ECA  EF69  F04F         	goto	u10081
 20676   009ECE  EF6B  F04F         	goto	u10080
 20677   009ED2                     u10081:
 20678   009ED2  EF7F  F04F         	goto	l380
 20679   009ED6                     u10080:
 20680   009ED6  C016  F00D         	movff	GPIO_pin_init@_pin_cfg,GPIO_pin_dir_init@_pin_cfg
 20681   009EDA  C017  F00E         	movff	GPIO_pin_init@_pin_cfg+1,GPIO_pin_dir_init@_pin_cfg+1
 20682   009EDE  ECDB  F040         	call	_GPIO_pin_dir_init	;wreg free
 20683   009EE2  C016  F003         	movff	GPIO_pin_init@_pin_cfg,GPIO_pin_write@_pin_cfg
 20684   009EE6  C017  F004         	movff	GPIO_pin_init@_pin_cfg+1,GPIO_pin_write@_pin_cfg+1
 20685   009EEA  C016  FFD9         	movff	GPIO_pin_init@_pin_cfg,fsr2l
 20686   009EEE  C017  FFDA         	movff	GPIO_pin_init@_pin_cfg+1,fsr2h
 20687   009EF2  0E00               	movlw	0
 20688   009EF4  BEDF               	btfsc	indf2,7,c
 20689   009EF6  0E01               	movlw	1
 20690   009EF8  6E05               	movwf	GPIO_pin_write@logic^0,c
 20691   009EFA  EC43  F045         	call	_GPIO_pin_write	;wreg free
 20692   009EFE                     l380:
 20693   009EFE  0012               	return		;funcret
 20694   009F00                     __end_of_GPIO_pin_init:
 20695                           	callstack 0
 20696                           
 20697 ;; *************** function _MSSP_I2C_init *****************
 20698 ;; Defined at:
 20699 ;;		line 59 in file "MCAL_Layer/mcal_I2C/hal_I2C.c"
 20700 ;; Parameters:    Size  Location     Type
 20701 ;;  _i2c            2  106[COMRAM] PTR const struct .
 20702 ;;		 -> I2C(8), 
 20703 ;; Auto vars:     Size  Location     Type
 20704 ;;  ret             1  108[COMRAM] unsigned char 
 20705 ;; Return value:  Size  Location     Type
 20706 ;;                  1    wreg      unsigned char 
 20707 ;; Registers used:
 20708 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20709 ;; Tracked objects:
 20710 ;;		On entry : 0/0
 20711 ;;		On exit  : 0/0
 20712 ;;		Unchanged: 0/0
 20713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20714 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20715 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20717 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20718 ;;Total ram usage:        3 bytes
 20719 ;; Hardware stack levels used: 1
 20720 ;; Hardware stack levels required when called: 6
 20721 ;; This function calls:
 20722 ;;		_I2C_Module_Interrupt_cfg
 20723 ;;		_MSSP_I2C_Cfg
 20724 ;; This function is called by:
 20725 ;;		_Calculator_Init
 20726 ;; This function uses a non-reentrant model
 20727 ;;
 20728                           
 20729                           	psect	text71
 20730   009A58                     __ptext71:
 20731                           	callstack 0
 20732   009A58                     _MSSP_I2C_init:
 20733                           	callstack 23
 20734   009A58                     
 20735                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 59: Std_ReturnType MSSP_I2C_init(const mssp_i2c_t * _i2c
      +                          );MCAL_Layer/mcal_I2C/hal_I2C.c: 60: {;MCAL_Layer/mcal_I2C/hal_I2C.c: 61:     Std_Return
      +                          Type ret = ((Std_ReturnType)0X00);
 20736   009A58  0E00               	movlw	0
 20737   009A5A  6E6D               	movwf	MSSP_I2C_init@ret^0,c
 20738   009A5C                     
 20739                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 62:     if(((void*)0) != _i2c)
 20740   009A5C  506B               	movf	MSSP_I2C_init@_i2c^0,w,c
 20741   009A5E  106C               	iorwf	(MSSP_I2C_init@_i2c+1)^0,w,c
 20742   009A60  B4D8               	btfsc	status,2,c
 20743   009A62  EF35  F04D         	goto	u16991
 20744   009A66  EF37  F04D         	goto	u16990
 20745   009A6A                     u16991:
 20746   009A6A  EF83  F04D         	goto	l13248
 20747   009A6E                     u16990:
 20748   009A6E                     
 20749                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 66:         (SSPCON1bits.SSPEN=(0));
 20750   009A6E  9AC6               	bcf	198,5,c	;volatile
 20751   009A70  C06B  F067         	movff	MSSP_I2C_init@_i2c,MSSP_I2C_Cfg@_i2c
 20752   009A74  C06C  F068         	movff	MSSP_I2C_init@_i2c+1,MSSP_I2C_Cfg@_i2c+1
 20753   009A78  EC78  F04E         	call	_MSSP_I2C_Cfg	;wreg free
 20754   009A7C                     
 20755                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 70:         if((0) == _i2c->I2C_SlewRate){
 20756   009A7C  EE20 F007          	lfsr	2,7
 20757   009A80  506B               	movf	MSSP_I2C_init@_i2c^0,w,c
 20758   009A82  26D9               	addwf	fsr2l,f,c
 20759   009A84  506C               	movf	(MSSP_I2C_init@_i2c+1)^0,w,c
 20760   009A86  22DA               	addwfc	fsr2h,f,c
 20761   009A88  B0DF               	btfsc	indf2,0,c
 20762   009A8A  EF49  F04D         	goto	u17001
 20763   009A8E  EF4B  F04D         	goto	u17000
 20764   009A92                     u17001:
 20765   009A92  EF4E  F04D         	goto	l13232
 20766   009A96                     u17000:
 20767   009A96                     
 20768                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 71:             (SSPSTATbits.SMP=(0));
 20769   009A96  9EC7               	bcf	199,7,c	;volatile
 20770                           
 20771                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 72:         }
 20772   009A98  EF5C  F04D         	goto	l13236
 20773   009A9C                     l13232:
 20774   009A9C  EE20 F007          	lfsr	2,7
 20775   009AA0  506B               	movf	MSSP_I2C_init@_i2c^0,w,c
 20776   009AA2  26D9               	addwf	fsr2l,f,c
 20777   009AA4  506C               	movf	(MSSP_I2C_init@_i2c+1)^0,w,c
 20778   009AA6  22DA               	addwfc	fsr2h,f,c
 20779   009AA8  A0DF               	btfss	indf2,0,c
 20780   009AAA  EF59  F04D         	goto	u17011
 20781   009AAE  EF5B  F04D         	goto	u17010
 20782   009AB2                     u17011:
 20783   009AB2  EF5C  F04D         	goto	l13236
 20784   009AB6                     u17010:
 20785   009AB6                     
 20786                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 74:             (SSPSTATbits.SMP=(1));
 20787   009AB6  8EC7               	bsf	199,7,c	;volatile
 20788   009AB8                     l13236:
 20789                           
 20790                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 78:         if((1) == _i2c->I2C_SMBus){
 20791   009AB8  EE20 F007          	lfsr	2,7
 20792   009ABC  506B               	movf	MSSP_I2C_init@_i2c^0,w,c
 20793   009ABE  26D9               	addwf	fsr2l,f,c
 20794   009AC0  506C               	movf	(MSSP_I2C_init@_i2c+1)^0,w,c
 20795   009AC2  22DA               	addwfc	fsr2h,f,c
 20796   009AC4  A4DF               	btfss	indf2,2,c
 20797   009AC6  EF67  F04D         	goto	u17021
 20798   009ACA  EF69  F04D         	goto	u17020
 20799   009ACE                     u17021:
 20800   009ACE  EF6C  F04D         	goto	l13240
 20801   009AD2                     u17020:
 20802   009AD2                     
 20803                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 79:             (SSPSTATbits.CKE=(1));
 20804   009AD2  8CC7               	bsf	199,6,c	;volatile
 20805                           
 20806                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 80:         }
 20807   009AD4  EF7A  F04D         	goto	l452
 20808   009AD8                     l13240:
 20809   009AD8  EE20 F007          	lfsr	2,7
 20810   009ADC  506B               	movf	MSSP_I2C_init@_i2c^0,w,c
 20811   009ADE  26D9               	addwf	fsr2l,f,c
 20812   009AE0  506C               	movf	(MSSP_I2C_init@_i2c+1)^0,w,c
 20813   009AE2  22DA               	addwfc	fsr2h,f,c
 20814   009AE4  B4DF               	btfsc	indf2,2,c
 20815   009AE6  EF77  F04D         	goto	u17031
 20816   009AEA  EF79  F04D         	goto	u17030
 20817   009AEE                     u17031:
 20818   009AEE  EF7A  F04D         	goto	l452
 20819   009AF2                     u17030:
 20820   009AF2                     
 20821                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 82:             (SSPSTATbits.CKE=(0));
 20822   009AF2  9CC7               	bcf	199,6,c	;volatile
 20823   009AF4                     l452:
 20824                           
 20825                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 86:         (SSPCON1bits.SSPOV=0);
 20826   009AF4  9CC6               	bcf	198,6,c	;volatile
 20827   009AF6                     
 20828                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 88:         ret = I2C_Module_Interrupt_cfg(_i2c);
 20829   009AF6  C06B  F003         	movff	MSSP_I2C_init@_i2c,I2C_Module_Interrupt_cfg@_i2c
 20830   009AFA  C06C  F004         	movff	MSSP_I2C_init@_i2c+1,I2C_Module_Interrupt_cfg@_i2c+1
 20831   009AFE  EC33  F056         	call	_I2C_Module_Interrupt_cfg	;wreg free
 20832   009B02  6E6D               	movwf	MSSP_I2C_init@ret^0,c
 20833   009B04                     
 20834                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 90:         (SSPCON1bits.SSPEN=(1));
 20835   009B04  8AC6               	bsf	198,5,c	;volatile
 20836   009B06                     l13248:
 20837                           
 20838                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 92:     return ret;
 20839   009B06  506D               	movf	MSSP_I2C_init@ret^0,w,c
 20840   009B08  0012               	return		;funcret
 20841   009B0A                     __end_of_MSSP_I2C_init:
 20842                           	callstack 0
 20843                           
 20844 ;; *************** function _MSSP_I2C_Cfg *****************
 20845 ;; Defined at:
 20846 ;;		line 301 in file "MCAL_Layer/mcal_I2C/hal_I2C.c"
 20847 ;; Parameters:    Size  Location     Type
 20848 ;;  _i2c            2  102[COMRAM] PTR const struct .
 20849 ;;		 -> I2C(8), 
 20850 ;; Auto vars:     Size  Location     Type
 20851 ;;  ret             1  105[COMRAM] unsigned char 
 20852 ;; Return value:  Size  Location     Type
 20853 ;;                  1    wreg      unsigned char 
 20854 ;; Registers used:
 20855 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20856 ;; Tracked objects:
 20857 ;;		On entry : 0/0
 20858 ;;		On exit  : 0/0
 20859 ;;		Unchanged: 0/0
 20860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20861 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20862 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20863 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20864 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20865 ;;Total ram usage:        4 bytes
 20866 ;; Hardware stack levels used: 1
 20867 ;; Hardware stack levels required when called: 5
 20868 ;; This function calls:
 20869 ;;		_Set_I2C_Master_cfg
 20870 ;;		_Slave_cfg
 20871 ;; This function is called by:
 20872 ;;		_MSSP_I2C_init
 20873 ;; This function uses a non-reentrant model
 20874 ;;
 20875                           
 20876                           	psect	text72
 20877   009CF0                     __ptext72:
 20878                           	callstack 0
 20879   009CF0                     _MSSP_I2C_Cfg:
 20880                           	callstack 23
 20881   009CF0                     
 20882                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 301: static Std_ReturnType MSSP_I2C_Cfg(const mssp_i2c_t
      +                           * _i2c);MCAL_Layer/mcal_I2C/hal_I2C.c: 302: {;MCAL_Layer/mcal_I2C/hal_I2C.c: 303:     S
      +                          td_ReturnType ret = ((Std_ReturnType)0X00);
 20883   009CF0  0E00               	movlw	0
 20884   009CF2  6E6A               	movwf	MSSP_I2C_Cfg@ret^0,c
 20885   009CF4                     
 20886                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 304:     if(((void*)0) != _i2c)
 20887   009CF4  5067               	movf	MSSP_I2C_Cfg@_i2c^0,w,c
 20888   009CF6  1068               	iorwf	(MSSP_I2C_Cfg@_i2c+1)^0,w,c
 20889   009CF8  B4D8               	btfsc	status,2,c
 20890   009CFA  EF81  F04E         	goto	u16001
 20891   009CFE  EF83  F04E         	goto	u16000
 20892   009D02                     u16001:
 20893   009D02  EFC0  F04E         	goto	l519
 20894   009D06                     u16000:
 20895   009D06                     
 20896                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 305:     {;MCAL_Layer/mcal_I2C/hal_I2C.c: 306:         r
      +                          et = ((Std_ReturnType)0X01);
 20897   009D06  0E01               	movlw	1
 20898   009D08  6E6A               	movwf	MSSP_I2C_Cfg@ret^0,c
 20899   009D0A                     
 20900                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 308:         (SSPCON1bits.SSPM = (uint8)_i2c->I2C_Mode);
 20901   009D0A  C067  FFD9         	movff	MSSP_I2C_Cfg@_i2c,fsr2l
 20902   009D0E  C068  FFDA         	movff	MSSP_I2C_Cfg@_i2c+1,fsr2h
 20903   009D12  50DF               	movf	indf2,w,c
 20904   009D14  6E69               	movwf	??_MSSP_I2C_Cfg^0,c
 20905   009D16  50C6               	movf	198,w,c	;volatile
 20906   009D18  1869               	xorwf	??_MSSP_I2C_Cfg^0,w,c
 20907   009D1A  0BF0               	andlw	-16
 20908   009D1C  1869               	xorwf	??_MSSP_I2C_Cfg^0,w,c
 20909   009D1E  6EC6               	movwf	198,c	;volatile
 20910   009D20                     
 20911                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 310:         if((0) == _i2c->I2C_Role){
 20912   009D20  EE20 F007          	lfsr	2,7
 20913   009D24  5067               	movf	MSSP_I2C_Cfg@_i2c^0,w,c
 20914   009D26  26D9               	addwf	fsr2l,f,c
 20915   009D28  5068               	movf	(MSSP_I2C_Cfg@_i2c+1)^0,w,c
 20916   009D2A  22DA               	addwfc	fsr2h,f,c
 20917   009D2C  B2DF               	btfsc	indf2,1,c
 20918   009D2E  EF9B  F04E         	goto	u16011
 20919   009D32  EF9D  F04E         	goto	u16010
 20920   009D36                     u16011:
 20921   009D36  EFA7  F04E         	goto	l12712
 20922   009D3A                     u16010:
 20923   009D3A                     
 20924                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 312:             TRISCbits.RC3=0;
 20925   009D3A  9694               	bcf	148,3,c	;volatile
 20926                           
 20927                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 313:             TRISCbits.RC4=0;
 20928   009D3C  9894               	bcf	148,4,c	;volatile
 20929   009D3E                     
 20930                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 314:             Slave_cfg(_i2c);
 20931   009D3E  C067  F003         	movff	MSSP_I2C_Cfg@_i2c,Slave_cfg@_i2c
 20932   009D42  C068  F004         	movff	MSSP_I2C_Cfg@_i2c+1,Slave_cfg@_i2c+1
 20933   009D46  EC2B  F04E         	call	_Slave_cfg	;wreg free
 20934                           
 20935                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 315:         }
 20936   009D4A  EFC0  F04E         	goto	l519
 20937   009D4E                     l12712:
 20938   009D4E  EE20 F007          	lfsr	2,7
 20939   009D52  5067               	movf	MSSP_I2C_Cfg@_i2c^0,w,c
 20940   009D54  26D9               	addwf	fsr2l,f,c
 20941   009D56  5068               	movf	(MSSP_I2C_Cfg@_i2c+1)^0,w,c
 20942   009D58  22DA               	addwfc	fsr2h,f,c
 20943   009D5A  A2DF               	btfss	indf2,1,c
 20944   009D5C  EFB2  F04E         	goto	u16021
 20945   009D60  EFB4  F04E         	goto	u16020
 20946   009D64                     u16021:
 20947   009D64  EFBE  F04E         	goto	l12718
 20948   009D68                     u16020:
 20949   009D68                     
 20950                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 318:             TRISCbits.RC3=1;
 20951   009D68  8694               	bsf	148,3,c	;volatile
 20952                           
 20953                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 319:             TRISCbits.RC4=1;
 20954   009D6A  8894               	bsf	148,4,c	;volatile
 20955   009D6C                     
 20956                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 320:             Set_I2C_Master_cfg(_i2c);
 20957   009D6C  C067  F065         	movff	MSSP_I2C_Cfg@_i2c,Set_I2C_Master_cfg@_i2c
 20958   009D70  C068  F066         	movff	MSSP_I2C_Cfg@_i2c+1,Set_I2C_Master_cfg@_i2c+1
 20959   009D74  EC6D  F04C         	call	_Set_I2C_Master_cfg	;wreg free
 20960                           
 20961                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 321:         }
 20962   009D78  EFC0  F04E         	goto	l519
 20963   009D7C                     l12718:
 20964                           
 20965                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 323:             ret = ((Std_ReturnType)0X00);
 20966   009D7C  0E00               	movlw	0
 20967   009D7E  6E6A               	movwf	MSSP_I2C_Cfg@ret^0,c
 20968   009D80                     l519:
 20969                           
 20970                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 326:     return ret;
 20971   009D80  506A               	movf	MSSP_I2C_Cfg@ret^0,w,c
 20972   009D82  0012               	return		;funcret
 20973   009D84                     __end_of_MSSP_I2C_Cfg:
 20974                           	callstack 0
 20975                           
 20976 ;; *************** function _Slave_cfg *****************
 20977 ;; Defined at:
 20978 ;;		line 351 in file "MCAL_Layer/mcal_I2C/hal_I2C.c"
 20979 ;; Parameters:    Size  Location     Type
 20980 ;;  _i2c            2    2[COMRAM] PTR const struct .
 20981 ;;		 -> I2C(8), 
 20982 ;; Auto vars:     Size  Location     Type
 20983 ;;		None
 20984 ;; Return value:  Size  Location     Type
 20985 ;;                  1    wreg      void 
 20986 ;; Registers used:
 20987 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20988 ;; Tracked objects:
 20989 ;;		On entry : 0/0
 20990 ;;		On exit  : 0/0
 20991 ;;		Unchanged: 0/0
 20992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20993 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20995 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20996 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20997 ;;Total ram usage:        3 bytes
 20998 ;; Hardware stack levels used: 1
 20999 ;; Hardware stack levels required when called: 3
 21000 ;; This function calls:
 21001 ;;		Nothing
 21002 ;; This function is called by:
 21003 ;;		_MSSP_I2C_Cfg
 21004 ;; This function uses a non-reentrant model
 21005 ;;
 21006                           
 21007                           	psect	text73
 21008   009C56                     __ptext73:
 21009                           	callstack 0
 21010   009C56                     _Slave_cfg:
 21011                           	callstack 24
 21012   009C56                     
 21013                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 351: static void Slave_cfg(const mssp_i2c_t * _i2c);MCAL
      +                          _Layer/mcal_I2C/hal_I2C.c: 352: {;MCAL_Layer/mcal_I2C/hal_I2C.c: 353:     if((I2C_Slave_
      +                          7Bit_Interrupt == _i2c->I2C_Mode ) ||(I2C_Slave_7Bit == _i2c->I2C_Mode))
 21014   009C56  C003  FFD9         	movff	Slave_cfg@_i2c,fsr2l
 21015   009C5A  C004  FFDA         	movff	Slave_cfg@_i2c+1,fsr2h
 21016   009C5E  0E0E               	movlw	14
 21017   009C60  18DE               	xorwf	postinc2,w,c
 21018   009C62  B4D8               	btfsc	status,2,c
 21019   009C64  EF36  F04E         	goto	u9121
 21020   009C68  EF38  F04E         	goto	u9120
 21021   009C6C                     u9121:
 21022   009C6C  EF45  F04E         	goto	l8078
 21023   009C70                     u9120:
 21024   009C70  C003  FFD9         	movff	Slave_cfg@_i2c,fsr2l
 21025   009C74  C004  FFDA         	movff	Slave_cfg@_i2c+1,fsr2h
 21026   009C78  0E06               	movlw	6
 21027   009C7A  18DE               	xorwf	postinc2,w,c
 21028   009C7C  A4D8               	btfss	status,2,c
 21029   009C7E  EF43  F04E         	goto	u9131
 21030   009C82  EF45  F04E         	goto	u9130
 21031   009C86                     u9131:
 21032   009C86  EF4F  F04E         	goto	l8080
 21033   009C8A                     u9130:
 21034   009C8A                     l8078:
 21035                           
 21036                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 354:     {;MCAL_Layer/mcal_I2C/hal_I2C.c: 355:         S
      +                          SPADD = (_i2c->I2C_Frequency & 0x00ff);
 21037   009C8A  EE20 F001          	lfsr	2,1
 21038   009C8E  5003               	movf	Slave_cfg@_i2c^0,w,c
 21039   009C90  26D9               	addwf	fsr2l,f,c
 21040   009C92  5004               	movf	(Slave_cfg@_i2c+1)^0,w,c
 21041   009C94  22DA               	addwfc	fsr2h,f,c
 21042   009C96  50DF               	movf	indf2,w,c
 21043   009C98  6EC8               	movwf	200,c	;volatile
 21044                           
 21045                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 356:     }
 21046   009C9A  EF57  F04E         	goto	l8082
 21047   009C9E                     l8080:
 21048                           
 21049                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 358:         SSPADD = (_i2c->I2C_Frequency & 0x03FF);
 21050   009C9E  EE20 F001          	lfsr	2,1
 21051   009CA2  5003               	movf	Slave_cfg@_i2c^0,w,c
 21052   009CA4  26D9               	addwf	fsr2l,f,c
 21053   009CA6  5004               	movf	(Slave_cfg@_i2c+1)^0,w,c
 21054   009CA8  22DA               	addwfc	fsr2h,f,c
 21055   009CAA  50DF               	movf	indf2,w,c
 21056   009CAC  6EC8               	movwf	200,c	;volatile
 21057   009CAE                     l8082:
 21058                           
 21059                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 361:     (SSPCON1bits.WCOL=0);
 21060   009CAE  9EC6               	bcf	198,7,c	;volatile
 21061   009CB0                     
 21062                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 363:     (SSPCON1bits.CKP=0);
 21063   009CB0  98C6               	bcf	198,4,c	;volatile
 21064                           
 21065                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 365:     if((1) == _i2c->I2C_GeneralCall)
 21066   009CB2  EE20 F007          	lfsr	2,7
 21067   009CB6  5003               	movf	Slave_cfg@_i2c^0,w,c
 21068   009CB8  26D9               	addwf	fsr2l,f,c
 21069   009CBA  5004               	movf	(Slave_cfg@_i2c+1)^0,w,c
 21070   009CBC  22DA               	addwfc	fsr2h,f,c
 21071   009CBE  A6DF               	btfss	indf2,3,c
 21072   009CC0  EF64  F04E         	goto	u9141
 21073   009CC4  EF66  F04E         	goto	u9140
 21074   009CC8                     u9141:
 21075   009CC8  EF69  F04E         	goto	l8088
 21076   009CCC                     u9140:
 21077   009CCC                     
 21078                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 366:     {;MCAL_Layer/mcal_I2C/hal_I2C.c: 367:         (
      +                          SSPCON2bits.GCEN=(1));
 21079   009CCC  8EC5               	bsf	197,7,c	;volatile
 21080                           
 21081                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 368:     }
 21082   009CCE  EF77  F04E         	goto	l542
 21083   009CD2                     l8088:
 21084   009CD2  EE20 F007          	lfsr	2,7
 21085   009CD6  5003               	movf	Slave_cfg@_i2c^0,w,c
 21086   009CD8  26D9               	addwf	fsr2l,f,c
 21087   009CDA  5004               	movf	(Slave_cfg@_i2c+1)^0,w,c
 21088   009CDC  22DA               	addwfc	fsr2h,f,c
 21089   009CDE  B6DF               	btfsc	indf2,3,c
 21090   009CE0  EF74  F04E         	goto	u9151
 21091   009CE4  EF76  F04E         	goto	u9150
 21092   009CE8                     u9151:
 21093   009CE8  EF77  F04E         	goto	l542
 21094   009CEC                     u9150:
 21095   009CEC                     
 21096                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 370:     {;MCAL_Layer/mcal_I2C/hal_I2C.c: 371:         (
      +                          SSPCON2bits.GCEN=(0));
 21097   009CEC  9EC5               	bcf	197,7,c	;volatile
 21098   009CEE                     l542:
 21099   009CEE  0012               	return		;funcret
 21100   009CF0                     __end_of_Slave_cfg:
 21101                           	callstack 0
 21102                           
 21103 ;; *************** function _Set_I2C_Master_cfg *****************
 21104 ;; Defined at:
 21105 ;;		line 332 in file "MCAL_Layer/mcal_I2C/hal_I2C.c"
 21106 ;; Parameters:    Size  Location     Type
 21107 ;;  _i2c            2  100[COMRAM] PTR const struct .
 21108 ;;		 -> I2C(8), 
 21109 ;; Auto vars:     Size  Location     Type
 21110 ;;		None
 21111 ;; Return value:  Size  Location     Type
 21112 ;;                  1    wreg      void 
 21113 ;; Registers used:
 21114 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21115 ;; Tracked objects:
 21116 ;;		On entry : 0/0
 21117 ;;		On exit  : 0/0
 21118 ;;		Unchanged: 0/0
 21119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21120 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21123 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21124 ;;Total ram usage:        2 bytes
 21125 ;; Hardware stack levels used: 1
 21126 ;; Hardware stack levels required when called: 4
 21127 ;; This function calls:
 21128 ;;		___fladd
 21129 ;;		___fldiv
 21130 ;;		___fltol
 21131 ;;		___xxtofl
 21132 ;; This function is called by:
 21133 ;;		_MSSP_I2C_Cfg
 21134 ;; This function uses a non-reentrant model
 21135 ;;
 21136                           
 21137                           	psect	text74
 21138   0098DA                     __ptext74:
 21139                           	callstack 0
 21140   0098DA                     _Set_I2C_Master_cfg:
 21141                           	callstack 23
 21142   0098DA                     
 21143                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 332: static void Set_I2C_Master_cfg(const mssp_i2c_t * _
      +                          i2c);MCAL_Layer/mcal_I2C/hal_I2C.c: 333: {;MCAL_Layer/mcal_I2C/hal_I2C.c: 335:     SSPAD
      +                          D = (uint8)(((4000000ul /4.0) / _i2c->I2C_Frequency)-1);
 21144   0098DA  0E00               	movlw	0
 21145   0098DC  6E15               	movwf	___fladd@a^0,c
 21146   0098DE  0E00               	movlw	0
 21147   0098E0  6E16               	movwf	(___fladd@a+1)^0,c
 21148   0098E2  0E80               	movlw	128
 21149   0098E4  6E17               	movwf	(___fladd@a+2)^0,c
 21150   0098E6  0EBF               	movlw	191
 21151   0098E8  6E18               	movwf	(___fladd@a+3)^0,c
 21152   0098EA  EE20 F001          	lfsr	2,1
 21153   0098EE  5065               	movf	Set_I2C_Master_cfg@_i2c^0,w,c
 21154   0098F0  26D9               	addwf	fsr2l,f,c
 21155   0098F2  5066               	movf	(Set_I2C_Master_cfg@_i2c+1)^0,w,c
 21156   0098F4  22DA               	addwfc	fsr2h,f,c
 21157   0098F6  CFDE F003          	movff	postinc2,___xxtofl@val
 21158   0098FA  CFDE F004          	movff	postinc2,___xxtofl@val+1
 21159   0098FE  CFDE F005          	movff	postinc2,___xxtofl@val+2
 21160   009902  CFDE F006          	movff	postinc2,___xxtofl@val+3
 21161   009906  0E00               	movlw	0
 21162   009908  EC01  F040         	call	___xxtofl
 21163   00990C  C003  F046         	movff	?___xxtofl,___fldiv@a
 21164   009910  C004  F047         	movff	?___xxtofl+1,___fldiv@a+1
 21165   009914  C005  F048         	movff	?___xxtofl+2,___fldiv@a+2
 21166   009918  C006  F049         	movff	?___xxtofl+3,___fldiv@a+3
 21167   00991C  0E00               	movlw	0
 21168   00991E  6E42               	movwf	___fldiv@b^0,c
 21169   009920  0E24               	movlw	36
 21170   009922  6E43               	movwf	(___fldiv@b+1)^0,c
 21171   009924  0E74               	movlw	116
 21172   009926  6E44               	movwf	(___fldiv@b+2)^0,c
 21173   009928  0E49               	movlw	73
 21174   00992A  6E45               	movwf	(___fldiv@b+3)^0,c
 21175   00992C  EC09  F034         	call	___fldiv	;wreg free
 21176   009930  C042  F011         	movff	?___fldiv,___fladd@b
 21177   009934  C043  F012         	movff	?___fldiv+1,___fladd@b+1
 21178   009938  C044  F013         	movff	?___fldiv+2,___fladd@b+2
 21179   00993C  C045  F014         	movff	?___fldiv+3,___fladd@b+3
 21180   009940  EC00  F02B         	call	___fladd	;wreg free
 21181   009944  C011  F05B         	movff	?___fladd,___fltol@f1
 21182   009948  C012  F05C         	movff	?___fladd+1,___fltol@f1+1
 21183   00994C  C013  F05D         	movff	?___fladd+2,___fltol@f1+2
 21184   009950  C014  F05E         	movff	?___fladd+3,___fltol@f1+3
 21185   009954  EC60  F048         	call	___fltol	;wreg free
 21186   009958  505B               	movf	?___fltol^0,w,c
 21187   00995A  6EC8               	movwf	200,c	;volatile
 21188   00995C                     
 21189                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 337:     if((1) == _i2c->I2C_MasterReceive)
 21190   00995C  EE20 F007          	lfsr	2,7
 21191   009960  5065               	movf	Set_I2C_Master_cfg@_i2c^0,w,c
 21192   009962  26D9               	addwf	fsr2l,f,c
 21193   009964  5066               	movf	(Set_I2C_Master_cfg@_i2c+1)^0,w,c
 21194   009966  22DA               	addwfc	fsr2h,f,c
 21195   009968  A8DF               	btfss	indf2,4,c
 21196   00996A  EFB9  F04C         	goto	u15121
 21197   00996E  EFBB  F04C         	goto	u15120
 21198   009972                     u15121:
 21199   009972  EFBE  F04C         	goto	l12052
 21200   009976                     u15120:
 21201   009976                     
 21202                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 338:     {;MCAL_Layer/mcal_I2C/hal_I2C.c: 339:         (
      +                          SSPCON2bits.RCEN=(1));
 21203   009976  86C5               	bsf	197,3,c	;volatile
 21204                           
 21205                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 340:     }
 21206   009978  EFCC  F04C         	goto	l531
 21207   00997C                     l12052:
 21208   00997C  EE20 F007          	lfsr	2,7
 21209   009980  5065               	movf	Set_I2C_Master_cfg@_i2c^0,w,c
 21210   009982  26D9               	addwf	fsr2l,f,c
 21211   009984  5066               	movf	(Set_I2C_Master_cfg@_i2c+1)^0,w,c
 21212   009986  22DA               	addwfc	fsr2h,f,c
 21213   009988  B8DF               	btfsc	indf2,4,c
 21214   00998A  EFC9  F04C         	goto	u15131
 21215   00998E  EFCB  F04C         	goto	u15130
 21216   009992                     u15131:
 21217   009992  EFCC  F04C         	goto	l531
 21218   009996                     u15130:
 21219   009996                     
 21220                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 342:     {;MCAL_Layer/mcal_I2C/hal_I2C.c: 343:         (
      +                          SSPCON2bits.RCEN=(0));
 21221   009996  96C5               	bcf	197,3,c	;volatile
 21222   009998                     l531:
 21223   009998  0012               	return		;funcret
 21224   00999A                     __end_of_Set_I2C_Master_cfg:
 21225                           	callstack 0
 21226                           
 21227 ;; *************** function ___xxtofl *****************
 21228 ;; Defined at:
 21229 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
 21230 ;; Parameters:    Size  Location     Type
 21231 ;;  sign            1    wreg     unsigned char 
 21232 ;;  val             4    2[COMRAM] long 
 21233 ;; Auto vars:     Size  Location     Type
 21234 ;;  sign            1   10[COMRAM] unsigned char 
 21235 ;;  arg             4   12[COMRAM] unsigned long 
 21236 ;;  exp             1   11[COMRAM] unsigned char 
 21237 ;; Return value:  Size  Location     Type
 21238 ;;                  4    2[COMRAM] unsigned char 
 21239 ;; Registers used:
 21240 ;;		wreg, status,2, status,0
 21241 ;; Tracked objects:
 21242 ;;		On entry : 0/0
 21243 ;;		On exit  : 0/0
 21244 ;;		Unchanged: 0/0
 21245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21246 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21247 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21248 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21249 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21250 ;;Total ram usage:       14 bytes
 21251 ;; Hardware stack levels used: 1
 21252 ;; Hardware stack levels required when called: 3
 21253 ;; This function calls:
 21254 ;;		Nothing
 21255 ;; This function is called by:
 21256 ;;		_Set_I2C_Master_cfg
 21257 ;;		_powf
 21258 ;;		_strtof
 21259 ;; This function uses a non-reentrant model
 21260 ;;
 21261                           
 21262                           	psect	text75
 21263   008002                     __ptext75:
 21264                           	callstack 0
 21265   008002                     ___xxtofl:
 21266                           	callstack 24
 21267                           
 21268                           ;incstack = 0
 21269                           ;___xxtofl@sign stored from wreg
 21270   008002  6E0B               	movwf	___xxtofl@sign^0,c
 21271   008004  500B               	movf	___xxtofl@sign^0,w,c
 21272   008006  B4D8               	btfsc	status,2,c
 21273   008008  EF08  F040         	goto	u8801
 21274   00800C  EF0A  F040         	goto	u8800
 21275   008010                     u8801:
 21276   008010  EF2C  F040         	goto	l1508
 21277   008014                     u8800:
 21278   008014  BE06               	btfsc	(___xxtofl@val+3)^0,7,c
 21279   008016  EF11  F040         	goto	u8810
 21280   00801A  EF0F  F040         	goto	u8811
 21281   00801E                     u8811:
 21282   00801E  EF2C  F040         	goto	l1508
 21283   008022                     u8810:
 21284   008022  C003  F007         	movff	___xxtofl@val,??___xxtofl
 21285   008026  C004  F008         	movff	___xxtofl@val+1,??___xxtofl+1
 21286   00802A  C005  F009         	movff	___xxtofl@val+2,??___xxtofl+2
 21287   00802E  C006  F00A         	movff	___xxtofl@val+3,??___xxtofl+3
 21288   008032  1E07               	comf	??___xxtofl^0,f,c
 21289   008034  1E08               	comf	(??___xxtofl+1)^0,f,c
 21290   008036  1E09               	comf	(??___xxtofl+2)^0,f,c
 21291   008038  1E0A               	comf	(??___xxtofl+3)^0,f,c
 21292   00803A  2A07               	incf	??___xxtofl^0,f,c
 21293   00803C  0E00               	movlw	0
 21294   00803E  2208               	addwfc	(??___xxtofl+1)^0,f,c
 21295   008040  2209               	addwfc	(??___xxtofl+2)^0,f,c
 21296   008042  220A               	addwfc	(??___xxtofl+3)^0,f,c
 21297   008044  C007  F00D         	movff	??___xxtofl,___xxtofl@arg
 21298   008048  C008  F00E         	movff	??___xxtofl+1,___xxtofl@arg+1
 21299   00804C  C009  F00F         	movff	??___xxtofl+2,___xxtofl@arg+2
 21300   008050  C00A  F010         	movff	??___xxtofl+3,___xxtofl@arg+3
 21301   008054  EF34  F040         	goto	l7830
 21302   008058                     l1508:
 21303   008058  C003  F00D         	movff	___xxtofl@val,___xxtofl@arg
 21304   00805C  C004  F00E         	movff	___xxtofl@val+1,___xxtofl@arg+1
 21305   008060  C005  F00F         	movff	___xxtofl@val+2,___xxtofl@arg+2
 21306   008064  C006  F010         	movff	___xxtofl@val+3,___xxtofl@arg+3
 21307   008068                     l7830:
 21308   008068  5003               	movf	___xxtofl@val^0,w,c
 21309   00806A  1004               	iorwf	(___xxtofl@val+1)^0,w,c
 21310   00806C  1005               	iorwf	(___xxtofl@val+2)^0,w,c
 21311   00806E  1006               	iorwf	(___xxtofl@val+3)^0,w,c
 21312   008070  A4D8               	btfss	status,2,c
 21313   008072  EF3D  F040         	goto	u8821
 21314   008076  EF3F  F040         	goto	u8820
 21315   00807A                     u8821:
 21316   00807A  EF49  F040         	goto	l7836
 21317   00807E                     u8820:
 21318   00807E  0E00               	movlw	0
 21319   008080  6E03               	movwf	?___xxtofl^0,c
 21320   008082  0E00               	movlw	0
 21321   008084  6E04               	movwf	(?___xxtofl+1)^0,c
 21322   008086  0E00               	movlw	0
 21323   008088  6E05               	movwf	(?___xxtofl+2)^0,c
 21324   00808A  0E00               	movlw	0
 21325   00808C  6E06               	movwf	(?___xxtofl+3)^0,c
 21326   00808E  EFDA  F040         	goto	l1511
 21327   008092                     l7836:
 21328   008092  0E96               	movlw	150
 21329   008094  6E0C               	movwf	___xxtofl@exp^0,c
 21330   008096  EF53  F040         	goto	l7840
 21331   00809A                     l7838:
 21332   00809A  2A0C               	incf	___xxtofl@exp^0,f,c
 21333   00809C  90D8               	bcf	status,0,c
 21334   00809E  3210               	rrcf	(___xxtofl@arg+3)^0,f,c
 21335   0080A0  320F               	rrcf	(___xxtofl@arg+2)^0,f,c
 21336   0080A2  320E               	rrcf	(___xxtofl@arg+1)^0,f,c
 21337   0080A4  320D               	rrcf	___xxtofl@arg^0,f,c
 21338   0080A6                     l7840:
 21339   0080A6  0E00               	movlw	0
 21340   0080A8  140D               	andwf	___xxtofl@arg^0,w,c
 21341   0080AA  6E07               	movwf	??___xxtofl^0,c
 21342   0080AC  0E00               	movlw	0
 21343   0080AE  140E               	andwf	(___xxtofl@arg+1)^0,w,c
 21344   0080B0  6E08               	movwf	(??___xxtofl+1)^0,c
 21345   0080B2  0E00               	movlw	0
 21346   0080B4  140F               	andwf	(___xxtofl@arg+2)^0,w,c
 21347   0080B6  6E09               	movwf	(??___xxtofl+2)^0,c
 21348   0080B8  0EFE               	movlw	254
 21349   0080BA  1410               	andwf	(___xxtofl@arg+3)^0,w,c
 21350   0080BC  6E0A               	movwf	(??___xxtofl+3)^0,c
 21351   0080BE  5007               	movf	??___xxtofl^0,w,c
 21352   0080C0  1008               	iorwf	(??___xxtofl+1)^0,w,c
 21353   0080C2  1009               	iorwf	(??___xxtofl+2)^0,w,c
 21354   0080C4  100A               	iorwf	(??___xxtofl+3)^0,w,c
 21355   0080C6  A4D8               	btfss	status,2,c
 21356   0080C8  EF68  F040         	goto	u8831
 21357   0080CC  EF6A  F040         	goto	u8830
 21358   0080D0                     u8831:
 21359   0080D0  EF4D  F040         	goto	l7838
 21360   0080D4                     u8830:
 21361   0080D4  EF78  F040         	goto	l1515
 21362   0080D8                     l7842:
 21363   0080D8  2A0C               	incf	___xxtofl@exp^0,f,c
 21364   0080DA  0E01               	movlw	1
 21365   0080DC  260D               	addwf	___xxtofl@arg^0,f,c
 21366   0080DE  0E00               	movlw	0
 21367   0080E0  220E               	addwfc	(___xxtofl@arg+1)^0,f,c
 21368   0080E2  220F               	addwfc	(___xxtofl@arg+2)^0,f,c
 21369   0080E4  2210               	addwfc	(___xxtofl@arg+3)^0,f,c
 21370   0080E6  90D8               	bcf	status,0,c
 21371   0080E8  3210               	rrcf	(___xxtofl@arg+3)^0,f,c
 21372   0080EA  320F               	rrcf	(___xxtofl@arg+2)^0,f,c
 21373   0080EC  320E               	rrcf	(___xxtofl@arg+1)^0,f,c
 21374   0080EE  320D               	rrcf	___xxtofl@arg^0,f,c
 21375   0080F0                     l1515:
 21376   0080F0  0E00               	movlw	0
 21377   0080F2  140D               	andwf	___xxtofl@arg^0,w,c
 21378   0080F4  6E07               	movwf	??___xxtofl^0,c
 21379   0080F6  0E00               	movlw	0
 21380   0080F8  140E               	andwf	(___xxtofl@arg+1)^0,w,c
 21381   0080FA  6E08               	movwf	(??___xxtofl+1)^0,c
 21382   0080FC  0E00               	movlw	0
 21383   0080FE  140F               	andwf	(___xxtofl@arg+2)^0,w,c
 21384   008100  6E09               	movwf	(??___xxtofl+2)^0,c
 21385   008102  0EFF               	movlw	255
 21386   008104  1410               	andwf	(___xxtofl@arg+3)^0,w,c
 21387   008106  6E0A               	movwf	(??___xxtofl+3)^0,c
 21388   008108  5007               	movf	??___xxtofl^0,w,c
 21389   00810A  1008               	iorwf	(??___xxtofl+1)^0,w,c
 21390   00810C  1009               	iorwf	(??___xxtofl+2)^0,w,c
 21391   00810E  100A               	iorwf	(??___xxtofl+3)^0,w,c
 21392   008110  A4D8               	btfss	status,2,c
 21393   008112  EF8D  F040         	goto	u8841
 21394   008116  EF8F  F040         	goto	u8840
 21395   00811A                     u8841:
 21396   00811A  EF6C  F040         	goto	l7842
 21397   00811E                     u8840:
 21398   00811E  EF97  F040         	goto	l7850
 21399   008122                     l7848:
 21400   008122  060C               	decf	___xxtofl@exp^0,f,c
 21401   008124  90D8               	bcf	status,0,c
 21402   008126  360D               	rlcf	___xxtofl@arg^0,f,c
 21403   008128  360E               	rlcf	(___xxtofl@arg+1)^0,f,c
 21404   00812A  360F               	rlcf	(___xxtofl@arg+2)^0,f,c
 21405   00812C  3610               	rlcf	(___xxtofl@arg+3)^0,f,c
 21406   00812E                     l7850:
 21407   00812E  BE0F               	btfsc	(___xxtofl@arg+2)^0,7,c
 21408   008130  EF9C  F040         	goto	u8851
 21409   008134  EF9E  F040         	goto	u8850
 21410   008138                     u8851:
 21411   008138  EFA6  F040         	goto	l1522
 21412   00813C                     u8850:
 21413   00813C  0E02               	movlw	2
 21414   00813E  600C               	cpfslt	___xxtofl@exp^0,c
 21415   008140  EFA4  F040         	goto	u8861
 21416   008144  EFA6  F040         	goto	u8860
 21417   008148                     u8861:
 21418   008148  EF91  F040         	goto	l7848
 21419   00814C                     u8860:
 21420   00814C                     l1522:
 21421   00814C  B00C               	btfsc	___xxtofl@exp^0,0,c
 21422   00814E  EFAB  F040         	goto	u8871
 21423   008152  EFAD  F040         	goto	u8870
 21424   008156                     u8871:
 21425   008156  EFAE  F040         	goto	l7856
 21426   00815A                     u8870:
 21427   00815A  9E0F               	bcf	(___xxtofl@arg+2)^0,7,c
 21428   00815C                     l7856:
 21429   00815C  90D8               	bcf	status,0,c
 21430   00815E  320C               	rrcf	___xxtofl@exp^0,f,c
 21431   008160  C00C  F007         	movff	___xxtofl@exp,??___xxtofl
 21432   008164  6A08               	clrf	(??___xxtofl+1)^0,c
 21433   008166  6A09               	clrf	(??___xxtofl+2)^0,c
 21434   008168  6A0A               	clrf	(??___xxtofl+3)^0,c
 21435   00816A  C007  F00A         	movff	??___xxtofl,??___xxtofl+3
 21436   00816E  6A09               	clrf	(??___xxtofl+2)^0,c
 21437   008170  6A08               	clrf	(??___xxtofl+1)^0,c
 21438   008172  6A07               	clrf	??___xxtofl^0,c
 21439   008174  5007               	movf	??___xxtofl^0,w,c
 21440   008176  120D               	iorwf	___xxtofl@arg^0,f,c
 21441   008178  5008               	movf	(??___xxtofl+1)^0,w,c
 21442   00817A  120E               	iorwf	(___xxtofl@arg+1)^0,f,c
 21443   00817C  5009               	movf	(??___xxtofl+2)^0,w,c
 21444   00817E  120F               	iorwf	(___xxtofl@arg+2)^0,f,c
 21445   008180  500A               	movf	(??___xxtofl+3)^0,w,c
 21446   008182  1210               	iorwf	(___xxtofl@arg+3)^0,f,c
 21447   008184  500B               	movf	___xxtofl@sign^0,w,c
 21448   008186  B4D8               	btfsc	status,2,c
 21449   008188  EFC8  F040         	goto	u8881
 21450   00818C  EFCA  F040         	goto	u8880
 21451   008190                     u8881:
 21452   008190  EFD2  F040         	goto	l7866
 21453   008194                     u8880:
 21454   008194  BE06               	btfsc	(___xxtofl@val+3)^0,7,c
 21455   008196  EFD1  F040         	goto	u8890
 21456   00819A  EFCF  F040         	goto	u8891
 21457   00819E                     u8891:
 21458   00819E  EFD2  F040         	goto	l7866
 21459   0081A2                     u8890:
 21460   0081A2  8E10               	bsf	(___xxtofl@arg+3)^0,7,c
 21461   0081A4                     l7866:
 21462   0081A4  C00D  F003         	movff	___xxtofl@arg,?___xxtofl
 21463   0081A8  C00E  F004         	movff	___xxtofl@arg+1,?___xxtofl+1
 21464   0081AC  C00F  F005         	movff	___xxtofl@arg+2,?___xxtofl+2
 21465   0081B0  C010  F006         	movff	___xxtofl@arg+3,?___xxtofl+3
 21466   0081B4                     l1511:
 21467   0081B4  0012               	return		;funcret
 21468   0081B6                     __end_of___xxtofl:
 21469                           	callstack 0
 21470                           
 21471 ;; *************** function ___fltol *****************
 21472 ;; Defined at:
 21473 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
 21474 ;; Parameters:    Size  Location     Type
 21475 ;;  f1              4   90[COMRAM] unsigned char 
 21476 ;; Auto vars:     Size  Location     Type
 21477 ;;  exp1            1   99[COMRAM] unsigned char 
 21478 ;;  sign1           1   98[COMRAM] unsigned char 
 21479 ;; Return value:  Size  Location     Type
 21480 ;;                  4   90[COMRAM] long 
 21481 ;; Registers used:
 21482 ;;		wreg, status,2, status,0
 21483 ;; Tracked objects:
 21484 ;;		On entry : 0/0
 21485 ;;		On exit  : 0/0
 21486 ;;		Unchanged: 0/0
 21487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21488 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21489 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21490 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21491 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21492 ;;Total ram usage:       10 bytes
 21493 ;; Hardware stack levels used: 1
 21494 ;; Hardware stack levels required when called: 3
 21495 ;; This function calls:
 21496 ;;		Nothing
 21497 ;; This function is called by:
 21498 ;;		_Set_I2C_Master_cfg
 21499 ;;		_Calculator_display_result
 21500 ;;		_efgtoa
 21501 ;; This function uses a non-reentrant model
 21502 ;;
 21503                           
 21504                           	psect	text76
 21505   0090C0                     __ptext76:
 21506                           	callstack 0
 21507   0090C0                     ___fltol:
 21508                           	callstack 21
 21509   0090C0  345D               	rlcf	(___fltol@f1+2)^0,w,c
 21510   0090C2  345E               	rlcf	(___fltol@f1+3)^0,w,c
 21511   0090C4  6E64               	movwf	___fltol@exp1^0,c
 21512   0090C6  5064               	movf	___fltol@exp1^0,w,c
 21513   0090C8  A4D8               	btfss	status,2,c
 21514   0090CA  EF69  F048         	goto	u14231
 21515   0090CE  EF6B  F048         	goto	u14230
 21516   0090D2                     u14231:
 21517   0090D2  EF75  F048         	goto	l11486
 21518   0090D6                     u14230:
 21519   0090D6                     l11482:
 21520   0090D6  0E00               	movlw	0
 21521   0090D8  6E5B               	movwf	?___fltol^0,c
 21522   0090DA  0E00               	movlw	0
 21523   0090DC  6E5C               	movwf	(?___fltol+1)^0,c
 21524   0090DE  0E00               	movlw	0
 21525   0090E0  6E5D               	movwf	(?___fltol+2)^0,c
 21526   0090E2  0E00               	movlw	0
 21527   0090E4  6E5E               	movwf	(?___fltol+3)^0,c
 21528   0090E6  EFE2  F048         	goto	l1150
 21529   0090EA                     l11486:
 21530   0090EA  C05B  F05F         	movff	___fltol@f1,??___fltol
 21531   0090EE  C05C  F060         	movff	___fltol@f1+1,??___fltol+1
 21532   0090F2  C05D  F061         	movff	___fltol@f1+2,??___fltol+2
 21533   0090F6  C05E  F062         	movff	___fltol@f1+3,??___fltol+3
 21534   0090FA  0E20               	movlw	32
 21535   0090FC  EF85  F048         	goto	u14240
 21536   009100                     u14245:
 21537   009100  90D8               	bcf	status,0,c
 21538   009102  3262               	rrcf	(??___fltol+3)^0,f,c
 21539   009104  3261               	rrcf	(??___fltol+2)^0,f,c
 21540   009106  3260               	rrcf	(??___fltol+1)^0,f,c
 21541   009108  325F               	rrcf	??___fltol^0,f,c
 21542   00910A                     u14240:
 21543   00910A  2EE8               	decfsz	wreg,f,c
 21544   00910C  EF80  F048         	goto	u14245
 21545   009110  505F               	movf	??___fltol^0,w,c
 21546   009112  6E63               	movwf	___fltol@sign1^0,c
 21547   009114  8E5D               	bsf	(___fltol@f1+2)^0,7,c
 21548   009116  0EFF               	movlw	255
 21549   009118  165B               	andwf	___fltol@f1^0,f,c
 21550   00911A  0EFF               	movlw	255
 21551   00911C  165C               	andwf	(___fltol@f1+1)^0,f,c
 21552   00911E  0EFF               	movlw	255
 21553   009120  165D               	andwf	(___fltol@f1+2)^0,f,c
 21554   009122  0E00               	movlw	0
 21555   009124  165E               	andwf	(___fltol@f1+3)^0,f,c
 21556   009126  0E96               	movlw	150
 21557   009128  5E64               	subwf	___fltol@exp1^0,f,c
 21558   00912A  BE64               	btfsc	___fltol@exp1^0,7,c
 21559   00912C  EF9C  F048         	goto	u14250
 21560   009130  EF9A  F048         	goto	u14251
 21561   009134                     u14251:
 21562   009134  EFB2  F048         	goto	l11506
 21563   009138                     u14250:
 21564   009138  5064               	movf	___fltol@exp1^0,w,c
 21565   00913A  0A80               	xorlw	128
 21566   00913C  0F97               	addlw	151
 21567   00913E  B0D8               	btfsc	status,0,c
 21568   009140  EFA4  F048         	goto	u14261
 21569   009144  EFA6  F048         	goto	u14260
 21570   009148                     u14261:
 21571   009148  EFA8  F048         	goto	l11502
 21572   00914C                     u14260:
 21573   00914C  EF6B  F048         	goto	l11482
 21574   009150                     l11502:
 21575   009150  90D8               	bcf	status,0,c
 21576   009152  325E               	rrcf	(___fltol@f1+3)^0,f,c
 21577   009154  325D               	rrcf	(___fltol@f1+2)^0,f,c
 21578   009156  325C               	rrcf	(___fltol@f1+1)^0,f,c
 21579   009158  325B               	rrcf	___fltol@f1^0,f,c
 21580   00915A  3E64               	incfsz	___fltol@exp1^0,f,c
 21581   00915C  EFA8  F048         	goto	l11502
 21582   009160  EFCA  F048         	goto	l11516
 21583   009164                     l11506:
 21584   009164  0E1F               	movlw	31
 21585   009166  6464               	cpfsgt	___fltol@exp1^0,c
 21586   009168  EFB8  F048         	goto	u14271
 21587   00916C  EFBA  F048         	goto	u14270
 21588   009170                     u14271:
 21589   009170  EFC2  F048         	goto	l11514
 21590   009174                     u14270:
 21591   009174  EF6B  F048         	goto	l11482
 21592   009178                     l11512:
 21593   009178  90D8               	bcf	status,0,c
 21594   00917A  365B               	rlcf	___fltol@f1^0,f,c
 21595   00917C  365C               	rlcf	(___fltol@f1+1)^0,f,c
 21596   00917E  365D               	rlcf	(___fltol@f1+2)^0,f,c
 21597   009180  365E               	rlcf	(___fltol@f1+3)^0,f,c
 21598   009182  0664               	decf	___fltol@exp1^0,f,c
 21599   009184                     l11514:
 21600   009184  5064               	movf	___fltol@exp1^0,w,c
 21601   009186  A4D8               	btfss	status,2,c
 21602   009188  EFC8  F048         	goto	u14281
 21603   00918C  EFCA  F048         	goto	u14280
 21604   009190                     u14281:
 21605   009190  EFBC  F048         	goto	l11512
 21606   009194                     u14280:
 21607   009194                     l11516:
 21608   009194  5063               	movf	___fltol@sign1^0,w,c
 21609   009196  B4D8               	btfsc	status,2,c
 21610   009198  EFD0  F048         	goto	u14291
 21611   00919C  EFD2  F048         	goto	u14290
 21612   0091A0                     u14291:
 21613   0091A0  EFDA  F048         	goto	l11520
 21614   0091A4                     u14290:
 21615   0091A4  1E5E               	comf	(___fltol@f1+3)^0,f,c
 21616   0091A6  1E5D               	comf	(___fltol@f1+2)^0,f,c
 21617   0091A8  1E5C               	comf	(___fltol@f1+1)^0,f,c
 21618   0091AA  6C5B               	negf	___fltol@f1^0,c
 21619   0091AC  0E00               	movlw	0
 21620   0091AE  225C               	addwfc	(___fltol@f1+1)^0,f,c
 21621   0091B0  225D               	addwfc	(___fltol@f1+2)^0,f,c
 21622   0091B2  225E               	addwfc	(___fltol@f1+3)^0,f,c
 21623   0091B4                     l11520:
 21624   0091B4  C05B  F05B         	movff	___fltol@f1,?___fltol
 21625   0091B8  C05C  F05C         	movff	___fltol@f1+1,?___fltol+1
 21626   0091BC  C05D  F05D         	movff	___fltol@f1+2,?___fltol+2
 21627   0091C0  C05E  F05E         	movff	___fltol@f1+3,?___fltol+3
 21628   0091C4                     l1150:
 21629   0091C4  0012               	return		;funcret
 21630   0091C6                     __end_of___fltol:
 21631                           	callstack 0
 21632                           
 21633 ;; *************** function ___fldiv *****************
 21634 ;; Defined at:
 21635 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 21636 ;; Parameters:    Size  Location     Type
 21637 ;;  b               4   65[COMRAM] long 
 21638 ;;  a               4   69[COMRAM] long 
 21639 ;; Auto vars:     Size  Location     Type
 21640 ;;  grs             4   84[COMRAM] unsigned long 
 21641 ;;  rem             4   77[COMRAM] unsigned long 
 21642 ;;  new_exp         2   82[COMRAM] short 
 21643 ;;  aexp            1   89[COMRAM] unsigned char 
 21644 ;;  bexp            1   88[COMRAM] unsigned char 
 21645 ;;  sign            1   81[COMRAM] unsigned char 
 21646 ;; Return value:  Size  Location     Type
 21647 ;;                  4   65[COMRAM] unsigned char 
 21648 ;; Registers used:
 21649 ;;		wreg, status,2, status,0
 21650 ;; Tracked objects:
 21651 ;;		On entry : 0/0
 21652 ;;		On exit  : 0/0
 21653 ;;		Unchanged: 0/0
 21654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21655 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21656 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21657 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21658 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21659 ;;Total ram usage:       25 bytes
 21660 ;; Hardware stack levels used: 1
 21661 ;; Hardware stack levels required when called: 3
 21662 ;; This function calls:
 21663 ;;		Nothing
 21664 ;; This function is called by:
 21665 ;;		_Calculate
 21666 ;;		_Set_I2C_Master_cfg
 21667 ;;		_efgtoa
 21668 ;;		_powf
 21669 ;;		_strtof
 21670 ;; This function uses a non-reentrant model
 21671 ;;
 21672                           
 21673                           	psect	text77
 21674   006812                     __ptext77:
 21675                           	callstack 0
 21676   006812                     ___fldiv:
 21677                           	callstack 24
 21678   006812  5045               	movf	(___fldiv@b+3)^0,w,c
 21679   006814  0B80               	andlw	128
 21680   006816  6E52               	movwf	___fldiv@sign^0,c
 21681   006818  5045               	movf	(___fldiv@b+3)^0,w,c
 21682   00681A  2445               	addwf	(___fldiv@b+3)^0,w,c
 21683   00681C  6E59               	movwf	___fldiv@bexp^0,c
 21684   00681E  AE44               	btfss	(___fldiv@b+2)^0,7,c
 21685   006820  EF14  F034         	goto	u13721
 21686   006824  EF16  F034         	goto	u13720
 21687   006828                     u13721:
 21688   006828  EF17  F034         	goto	l11166
 21689   00682C                     u13720:
 21690   00682C  8059               	bsf	___fldiv@bexp^0,0,c
 21691   00682E                     l11166:
 21692   00682E  5059               	movf	___fldiv@bexp^0,w,c
 21693   006830  B4D8               	btfsc	status,2,c
 21694   006832  EF1D  F034         	goto	u13731
 21695   006836  EF1F  F034         	goto	u13730
 21696   00683A                     u13731:
 21697   00683A  EF34  F034         	goto	l11176
 21698   00683E                     u13730:
 21699   00683E  2859               	incf	___fldiv@bexp^0,w,c
 21700   006840  A4D8               	btfss	status,2,c
 21701   006842  EF25  F034         	goto	u13741
 21702   006846  EF27  F034         	goto	u13740
 21703   00684A                     u13741:
 21704   00684A  EF2F  F034         	goto	l11172
 21705   00684E                     u13740:
 21706   00684E  0E00               	movlw	0
 21707   006850  6E42               	movwf	___fldiv@b^0,c
 21708   006852  0E00               	movlw	0
 21709   006854  6E43               	movwf	(___fldiv@b+1)^0,c
 21710   006856  0E00               	movlw	0
 21711   006858  6E44               	movwf	(___fldiv@b+2)^0,c
 21712   00685A  0E00               	movlw	0
 21713   00685C  6E45               	movwf	(___fldiv@b+3)^0,c
 21714   00685E                     l11172:
 21715   00685E  8E44               	bsf	(___fldiv@b+2)^0,7,c
 21716   006860  0E00               	movlw	0
 21717   006862  6E45               	movwf	(___fldiv@b+3)^0,c
 21718   006864  EF3C  F034         	goto	l11178
 21719   006868                     l11176:
 21720   006868  0E00               	movlw	0
 21721   00686A  6E42               	movwf	___fldiv@b^0,c
 21722   00686C  0E00               	movlw	0
 21723   00686E  6E43               	movwf	(___fldiv@b+1)^0,c
 21724   006870  0E00               	movlw	0
 21725   006872  6E44               	movwf	(___fldiv@b+2)^0,c
 21726   006874  0E00               	movlw	0
 21727   006876  6E45               	movwf	(___fldiv@b+3)^0,c
 21728   006878                     l11178:
 21729   006878  5049               	movf	(___fldiv@a+3)^0,w,c
 21730   00687A  0B80               	andlw	128
 21731   00687C  1A52               	xorwf	___fldiv@sign^0,f,c
 21732   00687E  5049               	movf	(___fldiv@a+3)^0,w,c
 21733   006880  2449               	addwf	(___fldiv@a+3)^0,w,c
 21734   006882  6E5A               	movwf	___fldiv@aexp^0,c
 21735   006884  AE48               	btfss	(___fldiv@a+2)^0,7,c
 21736   006886  EF47  F034         	goto	u13751
 21737   00688A  EF49  F034         	goto	u13750
 21738   00688E                     u13751:
 21739   00688E  EF4A  F034         	goto	l11186
 21740   006892                     u13750:
 21741   006892  805A               	bsf	___fldiv@aexp^0,0,c
 21742   006894                     l11186:
 21743   006894  505A               	movf	___fldiv@aexp^0,w,c
 21744   006896  B4D8               	btfsc	status,2,c
 21745   006898  EF50  F034         	goto	u13761
 21746   00689C  EF52  F034         	goto	u13760
 21747   0068A0                     u13761:
 21748   0068A0  EF67  F034         	goto	l11196
 21749   0068A4                     u13760:
 21750   0068A4  285A               	incf	___fldiv@aexp^0,w,c
 21751   0068A6  A4D8               	btfss	status,2,c
 21752   0068A8  EF58  F034         	goto	u13771
 21753   0068AC  EF5A  F034         	goto	u13770
 21754   0068B0                     u13771:
 21755   0068B0  EF62  F034         	goto	l11192
 21756   0068B4                     u13770:
 21757   0068B4  0E00               	movlw	0
 21758   0068B6  6E46               	movwf	___fldiv@a^0,c
 21759   0068B8  0E00               	movlw	0
 21760   0068BA  6E47               	movwf	(___fldiv@a+1)^0,c
 21761   0068BC  0E00               	movlw	0
 21762   0068BE  6E48               	movwf	(___fldiv@a+2)^0,c
 21763   0068C0  0E00               	movlw	0
 21764   0068C2  6E49               	movwf	(___fldiv@a+3)^0,c
 21765   0068C4                     l11192:
 21766   0068C4  8E48               	bsf	(___fldiv@a+2)^0,7,c
 21767   0068C6  0E00               	movlw	0
 21768   0068C8  6E49               	movwf	(___fldiv@a+3)^0,c
 21769   0068CA  EF6F  F034         	goto	l11198
 21770   0068CE                     l11196:
 21771   0068CE  0E00               	movlw	0
 21772   0068D0  6E46               	movwf	___fldiv@a^0,c
 21773   0068D2  0E00               	movlw	0
 21774   0068D4  6E47               	movwf	(___fldiv@a+1)^0,c
 21775   0068D6  0E00               	movlw	0
 21776   0068D8  6E48               	movwf	(___fldiv@a+2)^0,c
 21777   0068DA  0E00               	movlw	0
 21778   0068DC  6E49               	movwf	(___fldiv@a+3)^0,c
 21779   0068DE                     l11198:
 21780   0068DE  5046               	movf	___fldiv@a^0,w,c
 21781   0068E0  1047               	iorwf	(___fldiv@a+1)^0,w,c
 21782   0068E2  1048               	iorwf	(___fldiv@a+2)^0,w,c
 21783   0068E4  1049               	iorwf	(___fldiv@a+3)^0,w,c
 21784   0068E6  A4D8               	btfss	status,2,c
 21785   0068E8  EF78  F034         	goto	u13781
 21786   0068EC  EF7A  F034         	goto	u13780
 21787   0068F0                     u13781:
 21788   0068F0  EF92  F034         	goto	l11210
 21789   0068F4                     u13780:
 21790   0068F4  0E00               	movlw	0
 21791   0068F6  6E42               	movwf	___fldiv@b^0,c
 21792   0068F8  0E00               	movlw	0
 21793   0068FA  6E43               	movwf	(___fldiv@b+1)^0,c
 21794   0068FC  0E00               	movlw	0
 21795   0068FE  6E44               	movwf	(___fldiv@b+2)^0,c
 21796   006900  0E00               	movlw	0
 21797   006902  6E45               	movwf	(___fldiv@b+3)^0,c
 21798   006904  0E80               	movlw	128
 21799   006906  1244               	iorwf	(___fldiv@b+2)^0,f,c
 21800   006908  0E7F               	movlw	127
 21801   00690A  1245               	iorwf	(___fldiv@b+3)^0,f,c
 21802   00690C                     l11204:
 21803   00690C  5052               	movf	___fldiv@sign^0,w,c
 21804   00690E  1245               	iorwf	(___fldiv@b+3)^0,f,c
 21805   006910  C042  F042         	movff	___fldiv@b,?___fldiv
 21806   006914  C043  F043         	movff	___fldiv@b+1,?___fldiv+1
 21807   006918  C044  F044         	movff	___fldiv@b+2,?___fldiv+2
 21808   00691C  C045  F045         	movff	___fldiv@b+3,?___fldiv+3
 21809   006920  EFD5  F035         	goto	l1435
 21810   006924                     l11210:
 21811   006924  5059               	movf	___fldiv@bexp^0,w,c
 21812   006926  A4D8               	btfss	status,2,c
 21813   006928  EF98  F034         	goto	u13791
 21814   00692C  EF9A  F034         	goto	u13790
 21815   006930                     u13791:
 21816   006930  EFA4  F034         	goto	l11218
 21817   006934                     u13790:
 21818   006934  0E00               	movlw	0
 21819   006936  6E42               	movwf	?___fldiv^0,c
 21820   006938  0E00               	movlw	0
 21821   00693A  6E43               	movwf	(?___fldiv+1)^0,c
 21822   00693C  0E00               	movlw	0
 21823   00693E  6E44               	movwf	(?___fldiv+2)^0,c
 21824   006940  0E00               	movlw	0
 21825   006942  6E45               	movwf	(?___fldiv+3)^0,c
 21826   006944  EFD5  F035         	goto	l1435
 21827   006948                     l11218:
 21828   006948  505A               	movf	___fldiv@aexp^0,w,c
 21829   00694A  C059  F04A         	movff	___fldiv@bexp,??___fldiv
 21830   00694E  6A4B               	clrf	(??___fldiv+1)^0,c
 21831   006950  5E4A               	subwf	??___fldiv^0,f,c
 21832   006952  0E00               	movlw	0
 21833   006954  5A4B               	subwfb	(??___fldiv+1)^0,f,c
 21834   006956  0E7F               	movlw	127
 21835   006958  244A               	addwf	??___fldiv^0,w,c
 21836   00695A  6E53               	movwf	___fldiv@new_exp^0,c
 21837   00695C  0E00               	movlw	0
 21838   00695E  204B               	addwfc	(??___fldiv+1)^0,w,c
 21839   006960  6E54               	movwf	(___fldiv@new_exp+1)^0,c
 21840   006962  C042  F04E         	movff	___fldiv@b,___fldiv@rem
 21841   006966  C043  F04F         	movff	___fldiv@b+1,___fldiv@rem+1
 21842   00696A  C044  F050         	movff	___fldiv@b+2,___fldiv@rem+2
 21843   00696E  C045  F051         	movff	___fldiv@b+3,___fldiv@rem+3
 21844   006972  0E00               	movlw	0
 21845   006974  6E42               	movwf	___fldiv@b^0,c
 21846   006976  0E00               	movlw	0
 21847   006978  6E43               	movwf	(___fldiv@b+1)^0,c
 21848   00697A  0E00               	movlw	0
 21849   00697C  6E44               	movwf	(___fldiv@b+2)^0,c
 21850   00697E  0E00               	movlw	0
 21851   006980  6E45               	movwf	(___fldiv@b+3)^0,c
 21852   006982  0E00               	movlw	0
 21853   006984  6E55               	movwf	___fldiv@grs^0,c
 21854   006986  0E00               	movlw	0
 21855   006988  6E56               	movwf	(___fldiv@grs+1)^0,c
 21856   00698A  0E00               	movlw	0
 21857   00698C  6E57               	movwf	(___fldiv@grs+2)^0,c
 21858   00698E  0E00               	movlw	0
 21859   006990  6E58               	movwf	(___fldiv@grs+3)^0,c
 21860   006992  0E00               	movlw	0
 21861   006994  6E5A               	movwf	___fldiv@aexp^0,c
 21862   006996  EF05  F035         	goto	l1437
 21863   00699A                     l11228:
 21864   00699A  505A               	movf	___fldiv@aexp^0,w,c
 21865   00699C  B4D8               	btfsc	status,2,c
 21866   00699E  EFD3  F034         	goto	u13801
 21867   0069A2  EFD5  F034         	goto	u13800
 21868   0069A6                     u13801:
 21869   0069A6  EFEC  F034         	goto	l11236
 21870   0069AA                     u13800:
 21871   0069AA  90D8               	bcf	status,0,c
 21872   0069AC  364E               	rlcf	___fldiv@rem^0,f,c
 21873   0069AE  364F               	rlcf	(___fldiv@rem+1)^0,f,c
 21874   0069B0  3650               	rlcf	(___fldiv@rem+2)^0,f,c
 21875   0069B2  3651               	rlcf	(___fldiv@rem+3)^0,f,c
 21876   0069B4  90D8               	bcf	status,0,c
 21877   0069B6  3642               	rlcf	___fldiv@b^0,f,c
 21878   0069B8  3643               	rlcf	(___fldiv@b+1)^0,f,c
 21879   0069BA  3644               	rlcf	(___fldiv@b+2)^0,f,c
 21880   0069BC  3645               	rlcf	(___fldiv@b+3)^0,f,c
 21881   0069BE  AE58               	btfss	(___fldiv@grs+3)^0,7,c
 21882   0069C0  EFE4  F034         	goto	u13811
 21883   0069C4  EFE6  F034         	goto	u13810
 21884   0069C8                     u13811:
 21885   0069C8  EFE7  F034         	goto	l1440
 21886   0069CC                     u13810:
 21887   0069CC  8042               	bsf	___fldiv@b^0,0,c
 21888   0069CE                     l1440:
 21889   0069CE  90D8               	bcf	status,0,c
 21890   0069D0  3655               	rlcf	___fldiv@grs^0,f,c
 21891   0069D2  3656               	rlcf	(___fldiv@grs+1)^0,f,c
 21892   0069D4  3657               	rlcf	(___fldiv@grs+2)^0,f,c
 21893   0069D6  3658               	rlcf	(___fldiv@grs+3)^0,f,c
 21894   0069D8                     l11236:
 21895   0069D8  5046               	movf	___fldiv@a^0,w,c
 21896   0069DA  5C4E               	subwf	___fldiv@rem^0,w,c
 21897   0069DC  5047               	movf	(___fldiv@a+1)^0,w,c
 21898   0069DE  584F               	subwfb	(___fldiv@rem+1)^0,w,c
 21899   0069E0  5048               	movf	(___fldiv@a+2)^0,w,c
 21900   0069E2  5850               	subwfb	(___fldiv@rem+2)^0,w,c
 21901   0069E4  5049               	movf	(___fldiv@a+3)^0,w,c
 21902   0069E6  5851               	subwfb	(___fldiv@rem+3)^0,w,c
 21903   0069E8  A0D8               	btfss	status,0,c
 21904   0069EA  EFF9  F034         	goto	u13821
 21905   0069EE  EFFB  F034         	goto	u13820
 21906   0069F2                     u13821:
 21907   0069F2  EF04  F035         	goto	l11242
 21908   0069F6                     u13820:
 21909   0069F6  8C58               	bsf	(___fldiv@grs+3)^0,6,c
 21910   0069F8  5046               	movf	___fldiv@a^0,w,c
 21911   0069FA  5E4E               	subwf	___fldiv@rem^0,f,c
 21912   0069FC  5047               	movf	(___fldiv@a+1)^0,w,c
 21913   0069FE  5A4F               	subwfb	(___fldiv@rem+1)^0,f,c
 21914   006A00  5048               	movf	(___fldiv@a+2)^0,w,c
 21915   006A02  5A50               	subwfb	(___fldiv@rem+2)^0,f,c
 21916   006A04  5049               	movf	(___fldiv@a+3)^0,w,c
 21917   006A06  5A51               	subwfb	(___fldiv@rem+3)^0,f,c
 21918   006A08                     l11242:
 21919   006A08  2A5A               	incf	___fldiv@aexp^0,f,c
 21920   006A0A                     l1437:
 21921   006A0A  0E19               	movlw	25
 21922   006A0C  645A               	cpfsgt	___fldiv@aexp^0,c
 21923   006A0E  EF0B  F035         	goto	u13831
 21924   006A12  EF0D  F035         	goto	u13830
 21925   006A16                     u13831:
 21926   006A16  EFCD  F034         	goto	l11228
 21927   006A1A                     u13830:
 21928   006A1A  504E               	movf	___fldiv@rem^0,w,c
 21929   006A1C  104F               	iorwf	(___fldiv@rem+1)^0,w,c
 21930   006A1E  1050               	iorwf	(___fldiv@rem+2)^0,w,c
 21931   006A20  1051               	iorwf	(___fldiv@rem+3)^0,w,c
 21932   006A22  B4D8               	btfsc	status,2,c
 21933   006A24  EF16  F035         	goto	u13841
 21934   006A28  EF18  F035         	goto	u13840
 21935   006A2C                     u13841:
 21936   006A2C  EF30  F035         	goto	l11254
 21937   006A30                     u13840:
 21938   006A30  8055               	bsf	___fldiv@grs^0,0,c
 21939   006A32  EF30  F035         	goto	l11254
 21940   006A36                     l11248:
 21941   006A36  90D8               	bcf	status,0,c
 21942   006A38  3642               	rlcf	___fldiv@b^0,f,c
 21943   006A3A  3643               	rlcf	(___fldiv@b+1)^0,f,c
 21944   006A3C  3644               	rlcf	(___fldiv@b+2)^0,f,c
 21945   006A3E  3645               	rlcf	(___fldiv@b+3)^0,f,c
 21946   006A40  AE58               	btfss	(___fldiv@grs+3)^0,7,c
 21947   006A42  EF25  F035         	goto	u13851
 21948   006A46  EF27  F035         	goto	u13850
 21949   006A4A                     u13851:
 21950   006A4A  EF28  F035         	goto	l1446
 21951   006A4E                     u13850:
 21952   006A4E  8042               	bsf	___fldiv@b^0,0,c
 21953   006A50                     l1446:
 21954   006A50  90D8               	bcf	status,0,c
 21955   006A52  3655               	rlcf	___fldiv@grs^0,f,c
 21956   006A54  3656               	rlcf	(___fldiv@grs+1)^0,f,c
 21957   006A56  3657               	rlcf	(___fldiv@grs+2)^0,f,c
 21958   006A58  3658               	rlcf	(___fldiv@grs+3)^0,f,c
 21959   006A5A  0653               	decf	___fldiv@new_exp^0,f,c
 21960   006A5C  A0D8               	btfss	status,0,c
 21961   006A5E  0654               	decf	(___fldiv@new_exp+1)^0,f,c
 21962   006A60                     l11254:
 21963   006A60  AE44               	btfss	(___fldiv@b+2)^0,7,c
 21964   006A62  EF35  F035         	goto	u13861
 21965   006A66  EF37  F035         	goto	u13860
 21966   006A6A                     u13861:
 21967   006A6A  EF1B  F035         	goto	l11248
 21968   006A6E                     u13860:
 21969   006A6E  0E00               	movlw	0
 21970   006A70  6E5A               	movwf	___fldiv@aexp^0,c
 21971   006A72  AE58               	btfss	(___fldiv@grs+3)^0,7,c
 21972   006A74  EF3E  F035         	goto	u13871
 21973   006A78  EF40  F035         	goto	u13870
 21974   006A7C                     u13871:
 21975   006A7C  EF64  F035         	goto	l1448
 21976   006A80                     u13870:
 21977   006A80  0EFF               	movlw	255
 21978   006A82  1455               	andwf	___fldiv@grs^0,w,c
 21979   006A84  6E4A               	movwf	??___fldiv^0,c
 21980   006A86  0EFF               	movlw	255
 21981   006A88  1456               	andwf	(___fldiv@grs+1)^0,w,c
 21982   006A8A  6E4B               	movwf	(??___fldiv+1)^0,c
 21983   006A8C  0EFF               	movlw	255
 21984   006A8E  1457               	andwf	(___fldiv@grs+2)^0,w,c
 21985   006A90  6E4C               	movwf	(??___fldiv+2)^0,c
 21986   006A92  0E7F               	movlw	127
 21987   006A94  1458               	andwf	(___fldiv@grs+3)^0,w,c
 21988   006A96  6E4D               	movwf	(??___fldiv+3)^0,c
 21989   006A98  504A               	movf	??___fldiv^0,w,c
 21990   006A9A  104B               	iorwf	(??___fldiv+1)^0,w,c
 21991   006A9C  104C               	iorwf	(??___fldiv+2)^0,w,c
 21992   006A9E  104D               	iorwf	(??___fldiv+3)^0,w,c
 21993   006AA0  B4D8               	btfsc	status,2,c
 21994   006AA2  EF55  F035         	goto	u13881
 21995   006AA6  EF57  F035         	goto	u13880
 21996   006AAA                     u13881:
 21997   006AAA  EF5B  F035         	goto	l1449
 21998   006AAE                     u13880:
 21999   006AAE                     l11262:
 22000   006AAE  0E01               	movlw	1
 22001   006AB0  6E5A               	movwf	___fldiv@aexp^0,c
 22002   006AB2  EF64  F035         	goto	l1448
 22003   006AB6                     l1449:
 22004   006AB6  A042               	btfss	___fldiv@b^0,0,c
 22005   006AB8  EF60  F035         	goto	u13891
 22006   006ABC  EF62  F035         	goto	u13890
 22007   006AC0                     u13891:
 22008   006AC0  EF64  F035         	goto	l1448
 22009   006AC4                     u13890:
 22010   006AC4  EF57  F035         	goto	l11262
 22011   006AC8                     l1448:
 22012   006AC8  505A               	movf	___fldiv@aexp^0,w,c
 22013   006ACA  B4D8               	btfsc	status,2,c
 22014   006ACC  EF6A  F035         	goto	u13901
 22015   006AD0  EF6C  F035         	goto	u13900
 22016   006AD4                     u13901:
 22017   006AD4  EF90  F035         	goto	l11274
 22018   006AD8                     u13900:
 22019   006AD8  0E01               	movlw	1
 22020   006ADA  2642               	addwf	___fldiv@b^0,f,c
 22021   006ADC  0E00               	movlw	0
 22022   006ADE  2243               	addwfc	(___fldiv@b+1)^0,f,c
 22023   006AE0  2244               	addwfc	(___fldiv@b+2)^0,f,c
 22024   006AE2  2245               	addwfc	(___fldiv@b+3)^0,f,c
 22025   006AE4  A045               	btfss	(___fldiv@b+3)^0,0,c
 22026   006AE6  EF77  F035         	goto	u13911
 22027   006AEA  EF79  F035         	goto	u13910
 22028   006AEE                     u13911:
 22029   006AEE  EF90  F035         	goto	l11274
 22030   006AF2                     u13910:
 22031   006AF2  C042  F04A         	movff	___fldiv@b,??___fldiv
 22032   006AF6  C043  F04B         	movff	___fldiv@b+1,??___fldiv+1
 22033   006AFA  C044  F04C         	movff	___fldiv@b+2,??___fldiv+2
 22034   006AFE  C045  F04D         	movff	___fldiv@b+3,??___fldiv+3
 22035   006B02  344D               	rlcf	(??___fldiv+3)^0,w,c
 22036   006B04  324D               	rrcf	(??___fldiv+3)^0,f,c
 22037   006B06  324C               	rrcf	(??___fldiv+2)^0,f,c
 22038   006B08  324B               	rrcf	(??___fldiv+1)^0,f,c
 22039   006B0A  324A               	rrcf	??___fldiv^0,f,c
 22040   006B0C  C04A  F042         	movff	??___fldiv,___fldiv@b
 22041   006B10  C04B  F043         	movff	??___fldiv+1,___fldiv@b+1
 22042   006B14  C04C  F044         	movff	??___fldiv+2,___fldiv@b+2
 22043   006B18  C04D  F045         	movff	??___fldiv+3,___fldiv@b+3
 22044   006B1C  4A53               	infsnz	___fldiv@new_exp^0,f,c
 22045   006B1E  2A54               	incf	(___fldiv@new_exp+1)^0,f,c
 22046   006B20                     l11274:
 22047   006B20  BE54               	btfsc	(___fldiv@new_exp+1)^0,7,c
 22048   006B22  EF9B  F035         	goto	u13921
 22049   006B26  5054               	movf	(___fldiv@new_exp+1)^0,w,c
 22050   006B28  E108               	bnz	u13920
 22051   006B2A  2853               	incf	___fldiv@new_exp^0,w,c
 22052   006B2C  A0D8               	btfss	status,0,c
 22053   006B2E  EF9B  F035         	goto	u13921
 22054   006B32  EF9D  F035         	goto	u13920
 22055   006B36                     u13921:
 22056   006B36  EFA8  F035         	goto	l11278
 22057   006B3A                     u13920:
 22058   006B3A  0E00               	movlw	0
 22059   006B3C  6E54               	movwf	(___fldiv@new_exp+1)^0,c
 22060   006B3E  6853               	setf	___fldiv@new_exp^0,c
 22061   006B40  0E00               	movlw	0
 22062   006B42  6E42               	movwf	___fldiv@b^0,c
 22063   006B44  0E00               	movlw	0
 22064   006B46  6E43               	movwf	(___fldiv@b+1)^0,c
 22065   006B48  0E00               	movlw	0
 22066   006B4A  6E44               	movwf	(___fldiv@b+2)^0,c
 22067   006B4C  0E00               	movlw	0
 22068   006B4E  6E45               	movwf	(___fldiv@b+3)^0,c
 22069   006B50                     l11278:
 22070   006B50  BE54               	btfsc	(___fldiv@new_exp+1)^0,7,c
 22071   006B52  EFB5  F035         	goto	u13930
 22072   006B56  5054               	movf	(___fldiv@new_exp+1)^0,w,c
 22073   006B58  E106               	bnz	u13931
 22074   006B5A  0453               	decf	___fldiv@new_exp^0,w,c
 22075   006B5C  B0D8               	btfsc	status,0,c
 22076   006B5E  EFB3  F035         	goto	u13931
 22077   006B62  EFB5  F035         	goto	u13930
 22078   006B66                     u13931:
 22079   006B66  EFC3  F035         	goto	l11282
 22080   006B6A                     u13930:
 22081   006B6A  0E00               	movlw	0
 22082   006B6C  6E54               	movwf	(___fldiv@new_exp+1)^0,c
 22083   006B6E  0E00               	movlw	0
 22084   006B70  6E53               	movwf	___fldiv@new_exp^0,c
 22085   006B72  0E00               	movlw	0
 22086   006B74  6E42               	movwf	___fldiv@b^0,c
 22087   006B76  0E00               	movlw	0
 22088   006B78  6E43               	movwf	(___fldiv@b+1)^0,c
 22089   006B7A  0E00               	movlw	0
 22090   006B7C  6E44               	movwf	(___fldiv@b+2)^0,c
 22091   006B7E  0E00               	movlw	0
 22092   006B80  6E45               	movwf	(___fldiv@b+3)^0,c
 22093   006B82  0E00               	movlw	0
 22094   006B84  6E52               	movwf	___fldiv@sign^0,c
 22095   006B86                     l11282:
 22096   006B86  C053  F059         	movff	___fldiv@new_exp,___fldiv@bexp
 22097   006B8A  A059               	btfss	___fldiv@bexp^0,0,c
 22098   006B8C  EFCA  F035         	goto	u13941
 22099   006B90  EFCC  F035         	goto	u13940
 22100   006B94                     u13941:
 22101   006B94  EFCF  F035         	goto	l11288
 22102   006B98                     u13940:
 22103   006B98  8E44               	bsf	(___fldiv@b+2)^0,7,c
 22104   006B9A  EFD0  F035         	goto	l11290
 22105   006B9E                     l11288:
 22106   006B9E  9E44               	bcf	(___fldiv@b+2)^0,7,c
 22107   006BA0                     l11290:
 22108   006BA0  90D8               	bcf	status,0,c
 22109   006BA2  3059               	rrcf	___fldiv@bexp^0,w,c
 22110   006BA4  6E45               	movwf	(___fldiv@b+3)^0,c
 22111   006BA6  EF86  F034         	goto	l11204
 22112   006BAA                     l1435:
 22113   006BAA  0012               	return		;funcret
 22114   006BAC                     __end_of___fldiv:
 22115                           	callstack 0
 22116                           
 22117 ;; *************** function ___fladd *****************
 22118 ;; Defined at:
 22119 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 22120 ;; Parameters:    Size  Location     Type
 22121 ;;  b               4   16[COMRAM] unsigned char 
 22122 ;;  a               4   20[COMRAM] unsigned char 
 22123 ;; Auto vars:     Size  Location     Type
 22124 ;;  grs             1   31[COMRAM] unsigned char 
 22125 ;;  bexp            1   30[COMRAM] unsigned char 
 22126 ;;  aexp            1   29[COMRAM] unsigned char 
 22127 ;;  signs           1   28[COMRAM] unsigned char 
 22128 ;; Return value:  Size  Location     Type
 22129 ;;                  4   16[COMRAM] unsigned char 
 22130 ;; Registers used:
 22131 ;;		wreg, status,2, status,0
 22132 ;; Tracked objects:
 22133 ;;		On entry : 0/0
 22134 ;;		On exit  : 0/0
 22135 ;;		Unchanged: 0/0
 22136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22137 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22138 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22139 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22140 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22141 ;;Total ram usage:       16 bytes
 22142 ;; Hardware stack levels used: 1
 22143 ;; Hardware stack levels required when called: 3
 22144 ;; This function calls:
 22145 ;;		Nothing
 22146 ;; This function is called by:
 22147 ;;		_Calculate
 22148 ;;		_Set_I2C_Master_cfg
 22149 ;;		___flsub
 22150 ;;		_efgtoa
 22151 ;;		_powf
 22152 ;;		_sqrtf
 22153 ;; This function uses a non-reentrant model
 22154 ;;
 22155                           
 22156                           	psect	text78
 22157   005600                     __ptext78:
 22158                           	callstack 0
 22159   005600                     ___fladd:
 22160                           	callstack 23
 22161   005600  5014               	movf	(___fladd@b+3)^0,w,c
 22162   005602  0B80               	andlw	128
 22163   005604  6E1D               	movwf	___fladd@signs^0,c
 22164   005606  5014               	movf	(___fladd@b+3)^0,w,c
 22165   005608  2414               	addwf	(___fladd@b+3)^0,w,c
 22166   00560A  6E1F               	movwf	___fladd@bexp^0,c
 22167   00560C  AE13               	btfss	(___fladd@b+2)^0,7,c
 22168   00560E  EF0B  F02B         	goto	u13091
 22169   005612  EF0D  F02B         	goto	u13090
 22170   005616                     u13091:
 22171   005616  EF0E  F02B         	goto	l10842
 22172   00561A                     u13090:
 22173   00561A  801F               	bsf	___fladd@bexp^0,0,c
 22174   00561C                     l10842:
 22175   00561C  501F               	movf	___fladd@bexp^0,w,c
 22176   00561E  B4D8               	btfsc	status,2,c
 22177   005620  EF14  F02B         	goto	u13101
 22178   005624  EF16  F02B         	goto	u13100
 22179   005628                     u13101:
 22180   005628  EF2B  F02B         	goto	l10852
 22181   00562C                     u13100:
 22182   00562C  281F               	incf	___fladd@bexp^0,w,c
 22183   00562E  A4D8               	btfss	status,2,c
 22184   005630  EF1C  F02B         	goto	u13111
 22185   005634  EF1E  F02B         	goto	u13110
 22186   005638                     u13111:
 22187   005638  EF26  F02B         	goto	l10848
 22188   00563C                     u13110:
 22189   00563C  0E00               	movlw	0
 22190   00563E  6E11               	movwf	___fladd@b^0,c
 22191   005640  0E00               	movlw	0
 22192   005642  6E12               	movwf	(___fladd@b+1)^0,c
 22193   005644  0E00               	movlw	0
 22194   005646  6E13               	movwf	(___fladd@b+2)^0,c
 22195   005648  0E00               	movlw	0
 22196   00564A  6E14               	movwf	(___fladd@b+3)^0,c
 22197   00564C                     l10848:
 22198   00564C  8E13               	bsf	(___fladd@b+2)^0,7,c
 22199   00564E  0E00               	movlw	0
 22200   005650  6E14               	movwf	(___fladd@b+3)^0,c
 22201   005652  EF33  F02B         	goto	l10854
 22202   005656                     l10852:
 22203   005656  0E00               	movlw	0
 22204   005658  6E11               	movwf	___fladd@b^0,c
 22205   00565A  0E00               	movlw	0
 22206   00565C  6E12               	movwf	(___fladd@b+1)^0,c
 22207   00565E  0E00               	movlw	0
 22208   005660  6E13               	movwf	(___fladd@b+2)^0,c
 22209   005662  0E00               	movlw	0
 22210   005664  6E14               	movwf	(___fladd@b+3)^0,c
 22211   005666                     l10854:
 22212   005666  5018               	movf	(___fladd@a+3)^0,w,c
 22213   005668  0B80               	andlw	128
 22214   00566A  6E1E               	movwf	___fladd@aexp^0,c
 22215   00566C  501D               	movf	___fladd@signs^0,w,c
 22216   00566E  181E               	xorwf	___fladd@aexp^0,w,c
 22217   005670  B4D8               	btfsc	status,2,c
 22218   005672  EF3D  F02B         	goto	u13121
 22219   005676  EF3F  F02B         	goto	u13120
 22220   00567A                     u13121:
 22221   00567A  EF40  F02B         	goto	l10860
 22222   00567E                     u13120:
 22223   00567E  8C1D               	bsf	___fladd@signs^0,6,c
 22224   005680                     l10860:
 22225   005680  5018               	movf	(___fladd@a+3)^0,w,c
 22226   005682  2418               	addwf	(___fladd@a+3)^0,w,c
 22227   005684  6E1E               	movwf	___fladd@aexp^0,c
 22228   005686  AE17               	btfss	(___fladd@a+2)^0,7,c
 22229   005688  EF48  F02B         	goto	u13131
 22230   00568C  EF4A  F02B         	goto	u13130
 22231   005690                     u13131:
 22232   005690  EF4B  F02B         	goto	l10866
 22233   005694                     u13130:
 22234   005694  801E               	bsf	___fladd@aexp^0,0,c
 22235   005696                     l10866:
 22236   005696  501E               	movf	___fladd@aexp^0,w,c
 22237   005698  B4D8               	btfsc	status,2,c
 22238   00569A  EF51  F02B         	goto	u13141
 22239   00569E  EF53  F02B         	goto	u13140
 22240   0056A2                     u13141:
 22241   0056A2  EF68  F02B         	goto	l10876
 22242   0056A6                     u13140:
 22243   0056A6  281E               	incf	___fladd@aexp^0,w,c
 22244   0056A8  A4D8               	btfss	status,2,c
 22245   0056AA  EF59  F02B         	goto	u13151
 22246   0056AE  EF5B  F02B         	goto	u13150
 22247   0056B2                     u13151:
 22248   0056B2  EF63  F02B         	goto	l10872
 22249   0056B6                     u13150:
 22250   0056B6  0E00               	movlw	0
 22251   0056B8  6E15               	movwf	___fladd@a^0,c
 22252   0056BA  0E00               	movlw	0
 22253   0056BC  6E16               	movwf	(___fladd@a+1)^0,c
 22254   0056BE  0E00               	movlw	0
 22255   0056C0  6E17               	movwf	(___fladd@a+2)^0,c
 22256   0056C2  0E00               	movlw	0
 22257   0056C4  6E18               	movwf	(___fladd@a+3)^0,c
 22258   0056C6                     l10872:
 22259   0056C6  8E17               	bsf	(___fladd@a+2)^0,7,c
 22260   0056C8  0E00               	movlw	0
 22261   0056CA  6E18               	movwf	(___fladd@a+3)^0,c
 22262   0056CC  EF70  F02B         	goto	l10878
 22263   0056D0                     l10876:
 22264   0056D0  0E00               	movlw	0
 22265   0056D2  6E15               	movwf	___fladd@a^0,c
 22266   0056D4  0E00               	movlw	0
 22267   0056D6  6E16               	movwf	(___fladd@a+1)^0,c
 22268   0056D8  0E00               	movlw	0
 22269   0056DA  6E17               	movwf	(___fladd@a+2)^0,c
 22270   0056DC  0E00               	movlw	0
 22271   0056DE  6E18               	movwf	(___fladd@a+3)^0,c
 22272   0056E0                     l10878:
 22273   0056E0  501F               	movf	___fladd@bexp^0,w,c
 22274   0056E2  5C1E               	subwf	___fladd@aexp^0,w,c
 22275   0056E4  B0D8               	btfsc	status,0,c
 22276   0056E6  EF77  F02B         	goto	u13161
 22277   0056EA  EF79  F02B         	goto	u13160
 22278   0056EE                     u13161:
 22279   0056EE  EFA0  F02B         	goto	l10914
 22280   0056F2                     u13160:
 22281   0056F2  AC1D               	btfss	___fladd@signs^0,6,c
 22282   0056F4  EF7E  F02B         	goto	u13171
 22283   0056F8  EF80  F02B         	goto	u13170
 22284   0056FC                     u13171:
 22285   0056FC  EF82  F02B         	goto	l10884
 22286   005700                     u13170:
 22287   005700  0E80               	movlw	128
 22288   005702  1A1D               	xorwf	___fladd@signs^0,f,c
 22289   005704                     l10884:
 22290   005704  C01F  F020         	movff	___fladd@bexp,___fladd@grs
 22291   005708  C01E  F01F         	movff	___fladd@aexp,___fladd@bexp
 22292   00570C  C020  F01E         	movff	___fladd@grs,___fladd@aexp
 22293   005710  C011  F020         	movff	___fladd@b,___fladd@grs
 22294   005714  C015  F011         	movff	___fladd@a,___fladd@b
 22295   005718  C020  F015         	movff	___fladd@grs,___fladd@a
 22296   00571C  C012  F020         	movff	___fladd@b+1,___fladd@grs
 22297   005720  C016  F012         	movff	___fladd@a+1,___fladd@b+1
 22298   005724  C020  F016         	movff	___fladd@grs,___fladd@a+1
 22299   005728  C013  F020         	movff	___fladd@b+2,___fladd@grs
 22300   00572C  C017  F013         	movff	___fladd@a+2,___fladd@b+2
 22301   005730  C020  F017         	movff	___fladd@grs,___fladd@a+2
 22302   005734  C014  F020         	movff	___fladd@b+3,___fladd@grs
 22303   005738  C018  F014         	movff	___fladd@a+3,___fladd@b+3
 22304   00573C  C020  F018         	movff	___fladd@grs,___fladd@a+3
 22305   005740                     l10914:
 22306   005740  0E00               	movlw	0
 22307   005742  6E20               	movwf	___fladd@grs^0,c
 22308   005744  501F               	movf	___fladd@bexp^0,w,c
 22309   005746  C01E  F019         	movff	___fladd@aexp,??___fladd
 22310   00574A  6A1A               	clrf	(??___fladd+1)^0,c
 22311   00574C  5E19               	subwf	??___fladd^0,f,c
 22312   00574E  0E00               	movlw	0
 22313   005750  5A1A               	subwfb	(??___fladd+1)^0,f,c
 22314   005752  BE1A               	btfsc	(??___fladd+1)^0,7,c
 22315   005754  EFB5  F02B         	goto	u13181
 22316   005758  501A               	movf	(??___fladd+1)^0,w,c
 22317   00575A  E109               	bnz	u13180
 22318   00575C  0E1A               	movlw	26
 22319   00575E  5C19               	subwf	??___fladd^0,w,c
 22320   005760  A0D8               	btfss	status,0,c
 22321   005762  EFB5  F02B         	goto	u13181
 22322   005766  EFB7  F02B         	goto	u13180
 22323   00576A                     u13181:
 22324   00576A  EFEE  F02B         	goto	l1382
 22325   00576E                     u13180:
 22326   00576E  5011               	movf	___fladd@b^0,w,c
 22327   005770  1012               	iorwf	(___fladd@b+1)^0,w,c
 22328   005772  1013               	iorwf	(___fladd@b+2)^0,w,c
 22329   005774  1014               	iorwf	(___fladd@b+3)^0,w,c
 22330   005776  A4D8               	btfss	status,2,c
 22331   005778  EFC0  F02B         	goto	u13191
 22332   00577C  EFC3  F02B         	goto	u13190
 22333   005780                     u13191:
 22334   005780  0E01               	movlw	1
 22335   005782  EFC4  F02B         	goto	u13200
 22336   005786                     u13190:
 22337   005786  0E00               	movlw	0
 22338   005788                     u13200:
 22339   005788  6E20               	movwf	___fladd@grs^0,c
 22340   00578A  0E00               	movlw	0
 22341   00578C  6E11               	movwf	___fladd@b^0,c
 22342   00578E  0E00               	movlw	0
 22343   005790  6E12               	movwf	(___fladd@b+1)^0,c
 22344   005792  0E00               	movlw	0
 22345   005794  6E13               	movwf	(___fladd@b+2)^0,c
 22346   005796  0E00               	movlw	0
 22347   005798  6E14               	movwf	(___fladd@b+3)^0,c
 22348   00579A  C01E  F01F         	movff	___fladd@aexp,___fladd@bexp
 22349   00579E  EFF7  F02B         	goto	l1381
 22350   0057A2                     l1383:
 22351   0057A2  A020               	btfss	___fladd@grs^0,0,c
 22352   0057A4  EFD6  F02B         	goto	u13211
 22353   0057A8  EFD8  F02B         	goto	u13210
 22354   0057AC                     u13211:
 22355   0057AC  EFDE  F02B         	goto	l10926
 22356   0057B0                     u13210:
 22357   0057B0  90D8               	bcf	status,0,c
 22358   0057B2  3020               	rrcf	___fladd@grs^0,w,c
 22359   0057B4  0901               	iorlw	1
 22360   0057B6  6E20               	movwf	___fladd@grs^0,c
 22361   0057B8  EFE0  F02B         	goto	l10928
 22362   0057BC                     l10926:
 22363   0057BC  90D8               	bcf	status,0,c
 22364   0057BE  3220               	rrcf	___fladd@grs^0,f,c
 22365   0057C0                     l10928:
 22366   0057C0  A011               	btfss	___fladd@b^0,0,c
 22367   0057C2  EFE5  F02B         	goto	u13221
 22368   0057C6  EFE7  F02B         	goto	u13220
 22369   0057CA                     u13221:
 22370   0057CA  EFE8  F02B         	goto	l10932
 22371   0057CE                     u13220:
 22372   0057CE  8E20               	bsf	___fladd@grs^0,7,c
 22373   0057D0                     l10932:
 22374   0057D0  3414               	rlcf	(___fladd@b+3)^0,w,c
 22375   0057D2  3214               	rrcf	(___fladd@b+3)^0,f,c
 22376   0057D4  3213               	rrcf	(___fladd@b+2)^0,f,c
 22377   0057D6  3212               	rrcf	(___fladd@b+1)^0,f,c
 22378   0057D8  3211               	rrcf	___fladd@b^0,f,c
 22379   0057DA  2A1F               	incf	___fladd@bexp^0,f,c
 22380   0057DC                     l1382:
 22381   0057DC  501E               	movf	___fladd@aexp^0,w,c
 22382   0057DE  5C1F               	subwf	___fladd@bexp^0,w,c
 22383   0057E0  A0D8               	btfss	status,0,c
 22384   0057E2  EFF5  F02B         	goto	u13231
 22385   0057E6  EFF7  F02B         	goto	u13230
 22386   0057EA                     u13231:
 22387   0057EA  EFD1  F02B         	goto	l1383
 22388   0057EE                     u13230:
 22389   0057EE                     l1381:
 22390   0057EE  BC1D               	btfsc	___fladd@signs^0,6,c
 22391   0057F0  EFFC  F02B         	goto	u13241
 22392   0057F4  EFFE  F02B         	goto	u13240
 22393   0057F8                     u13241:
 22394   0057F8  EF3E  F02C         	goto	l10960
 22395   0057FC                     u13240:
 22396   0057FC  501F               	movf	___fladd@bexp^0,w,c
 22397   0057FE  A4D8               	btfss	status,2,c
 22398   005800  EF04  F02C         	goto	u13251
 22399   005804  EF06  F02C         	goto	u13250
 22400   005808                     u13251:
 22401   005808  EF10  F02C         	goto	l10942
 22402   00580C                     u13250:
 22403   00580C  0E00               	movlw	0
 22404   00580E  6E11               	movwf	?___fladd^0,c
 22405   005810  0E00               	movlw	0
 22406   005812  6E12               	movwf	(?___fladd+1)^0,c
 22407   005814  0E00               	movlw	0
 22408   005816  6E13               	movwf	(?___fladd+2)^0,c
 22409   005818  0E00               	movlw	0
 22410   00581A  6E14               	movwf	(?___fladd+3)^0,c
 22411   00581C  EF5F  F02D         	goto	l1390
 22412   005820                     l10942:
 22413   005820  5015               	movf	___fladd@a^0,w,c
 22414   005822  2611               	addwf	___fladd@b^0,f,c
 22415   005824  5016               	movf	(___fladd@a+1)^0,w,c
 22416   005826  2212               	addwfc	(___fladd@b+1)^0,f,c
 22417   005828  5017               	movf	(___fladd@a+2)^0,w,c
 22418   00582A  2213               	addwfc	(___fladd@b+2)^0,f,c
 22419   00582C  5018               	movf	(___fladd@a+3)^0,w,c
 22420   00582E  2214               	addwfc	(___fladd@b+3)^0,f,c
 22421   005830  A014               	btfss	(___fladd@b+3)^0,0,c
 22422   005832  EF1D  F02C         	goto	u13261
 22423   005836  EF1F  F02C         	goto	u13260
 22424   00583A                     u13261:
 22425   00583A  EFCB  F02C         	goto	l10996
 22426   00583E                     u13260:
 22427   00583E  A020               	btfss	___fladd@grs^0,0,c
 22428   005840  EF24  F02C         	goto	u13271
 22429   005844  EF26  F02C         	goto	u13270
 22430   005848                     u13271:
 22431   005848  EF2C  F02C         	goto	l10950
 22432   00584C                     u13270:
 22433   00584C  90D8               	bcf	status,0,c
 22434   00584E  3020               	rrcf	___fladd@grs^0,w,c
 22435   005850  0901               	iorlw	1
 22436   005852  6E20               	movwf	___fladd@grs^0,c
 22437   005854  EF2E  F02C         	goto	l10952
 22438   005858                     l10950:
 22439   005858  90D8               	bcf	status,0,c
 22440   00585A  3220               	rrcf	___fladd@grs^0,f,c
 22441   00585C                     l10952:
 22442   00585C  A011               	btfss	___fladd@b^0,0,c
 22443   00585E  EF33  F02C         	goto	u13281
 22444   005862  EF35  F02C         	goto	u13280
 22445   005866                     u13281:
 22446   005866  EF36  F02C         	goto	l10956
 22447   00586A                     u13280:
 22448   00586A  8E20               	bsf	___fladd@grs^0,7,c
 22449   00586C                     l10956:
 22450   00586C  3414               	rlcf	(___fladd@b+3)^0,w,c
 22451   00586E  3214               	rrcf	(___fladd@b+3)^0,f,c
 22452   005870  3213               	rrcf	(___fladd@b+2)^0,f,c
 22453   005872  3212               	rrcf	(___fladd@b+1)^0,f,c
 22454   005874  3211               	rrcf	___fladd@b^0,f,c
 22455   005876  2A1F               	incf	___fladd@bexp^0,f,c
 22456   005878  EFCB  F02C         	goto	l10996
 22457   00587C                     l10960:
 22458   00587C  5015               	movf	___fladd@a^0,w,c
 22459   00587E  5C11               	subwf	___fladd@b^0,w,c
 22460   005880  5016               	movf	(___fladd@a+1)^0,w,c
 22461   005882  5812               	subwfb	(___fladd@b+1)^0,w,c
 22462   005884  5017               	movf	(___fladd@a+2)^0,w,c
 22463   005886  5813               	subwfb	(___fladd@b+2)^0,w,c
 22464   005888  5014               	movf	(___fladd@b+3)^0,w,c
 22465   00588A  0A80               	xorlw	128
 22466   00588C  6E19               	movwf	??___fladd^0,c
 22467   00588E  5018               	movf	(___fladd@a+3)^0,w,c
 22468   005890  0A80               	xorlw	128
 22469   005892  5819               	subwfb	??___fladd^0,w,c
 22470   005894  B0D8               	btfsc	status,0,c
 22471   005896  EF4F  F02C         	goto	u13291
 22472   00589A  EF51  F02C         	goto	u13290
 22473   00589E                     u13291:
 22474   00589E  EF7C  F02C         	goto	l10970
 22475   0058A2                     u13290:
 22476   0058A2  5011               	movf	___fladd@b^0,w,c
 22477   0058A4  5C15               	subwf	___fladd@a^0,w,c
 22478   0058A6  6E19               	movwf	??___fladd^0,c
 22479   0058A8  5012               	movf	(___fladd@b+1)^0,w,c
 22480   0058AA  5816               	subwfb	(___fladd@a+1)^0,w,c
 22481   0058AC  6E1A               	movwf	(??___fladd+1)^0,c
 22482   0058AE  5013               	movf	(___fladd@b+2)^0,w,c
 22483   0058B0  5817               	subwfb	(___fladd@a+2)^0,w,c
 22484   0058B2  6E1B               	movwf	(??___fladd+2)^0,c
 22485   0058B4  5014               	movf	(___fladd@b+3)^0,w,c
 22486   0058B6  5818               	subwfb	(___fladd@a+3)^0,w,c
 22487   0058B8  6E1C               	movwf	(??___fladd+3)^0,c
 22488   0058BA  0EFF               	movlw	255
 22489   0058BC  2419               	addwf	??___fladd^0,w,c
 22490   0058BE  6E11               	movwf	___fladd@b^0,c
 22491   0058C0  0EFF               	movlw	255
 22492   0058C2  201A               	addwfc	(??___fladd+1)^0,w,c
 22493   0058C4  6E12               	movwf	(___fladd@b+1)^0,c
 22494   0058C6  0EFF               	movlw	255
 22495   0058C8  201B               	addwfc	(??___fladd+2)^0,w,c
 22496   0058CA  6E13               	movwf	(___fladd@b+2)^0,c
 22497   0058CC  0EFF               	movlw	255
 22498   0058CE  201C               	addwfc	(??___fladd+3)^0,w,c
 22499   0058D0  6E14               	movwf	(___fladd@b+3)^0,c
 22500   0058D2  0E80               	movlw	128
 22501   0058D4  1A1D               	xorwf	___fladd@signs^0,f,c
 22502   0058D6  6C20               	negf	___fladd@grs^0,c
 22503   0058D8  5020               	movf	___fladd@grs^0,w,c
 22504   0058DA  A4D8               	btfss	status,2,c
 22505   0058DC  EF72  F02C         	goto	u13301
 22506   0058E0  EF74  F02C         	goto	u13300
 22507   0058E4                     u13301:
 22508   0058E4  EF84  F02C         	goto	l1398
 22509   0058E8                     u13300:
 22510   0058E8  0E01               	movlw	1
 22511   0058EA  2611               	addwf	___fladd@b^0,f,c
 22512   0058EC  0E00               	movlw	0
 22513   0058EE  2212               	addwfc	(___fladd@b+1)^0,f,c
 22514   0058F0  2213               	addwfc	(___fladd@b+2)^0,f,c
 22515   0058F2  2214               	addwfc	(___fladd@b+3)^0,f,c
 22516   0058F4  EF84  F02C         	goto	l1398
 22517   0058F8                     l10970:
 22518   0058F8  5015               	movf	___fladd@a^0,w,c
 22519   0058FA  5E11               	subwf	___fladd@b^0,f,c
 22520   0058FC  5016               	movf	(___fladd@a+1)^0,w,c
 22521   0058FE  5A12               	subwfb	(___fladd@b+1)^0,f,c
 22522   005900  5017               	movf	(___fladd@a+2)^0,w,c
 22523   005902  5A13               	subwfb	(___fladd@b+2)^0,f,c
 22524   005904  5018               	movf	(___fladd@a+3)^0,w,c
 22525   005906  5A14               	subwfb	(___fladd@b+3)^0,f,c
 22526   005908                     l1398:
 22527   005908  5011               	movf	___fladd@b^0,w,c
 22528   00590A  1012               	iorwf	(___fladd@b+1)^0,w,c
 22529   00590C  1013               	iorwf	(___fladd@b+2)^0,w,c
 22530   00590E  1014               	iorwf	(___fladd@b+3)^0,w,c
 22531   005910  A4D8               	btfss	status,2,c
 22532   005912  EF8D  F02C         	goto	u13311
 22533   005916  EF8F  F02C         	goto	u13310
 22534   00591A                     u13311:
 22535   00591A  EFC4  F02C         	goto	l10994
 22536   00591E                     u13310:
 22537   00591E  5020               	movf	___fladd@grs^0,w,c
 22538   005920  A4D8               	btfss	status,2,c
 22539   005922  EF95  F02C         	goto	u13321
 22540   005926  EF97  F02C         	goto	u13320
 22541   00592A                     u13321:
 22542   00592A  EFC4  F02C         	goto	l10994
 22543   00592E                     u13320:
 22544   00592E  0E00               	movlw	0
 22545   005930  6E11               	movwf	?___fladd^0,c
 22546   005932  0E00               	movlw	0
 22547   005934  6E12               	movwf	(?___fladd+1)^0,c
 22548   005936  0E00               	movlw	0
 22549   005938  6E13               	movwf	(?___fladd+2)^0,c
 22550   00593A  0E00               	movlw	0
 22551   00593C  6E14               	movwf	(?___fladd+3)^0,c
 22552   00593E  EF5F  F02D         	goto	l1390
 22553   005942                     l10978:
 22554   005942  90D8               	bcf	status,0,c
 22555   005944  3611               	rlcf	___fladd@b^0,f,c
 22556   005946  3612               	rlcf	(___fladd@b+1)^0,f,c
 22557   005948  3613               	rlcf	(___fladd@b+2)^0,f,c
 22558   00594A  3614               	rlcf	(___fladd@b+3)^0,f,c
 22559   00594C  AE20               	btfss	___fladd@grs^0,7,c
 22560   00594E  EFAB  F02C         	goto	u13331
 22561   005952  EFAD  F02C         	goto	u13330
 22562   005956                     u13331:
 22563   005956  EFAE  F02C         	goto	l10984
 22564   00595A                     u13330:
 22565   00595A  8011               	bsf	___fladd@b^0,0,c
 22566   00595C                     l10984:
 22567   00595C  A020               	btfss	___fladd@grs^0,0,c
 22568   00595E  EFB3  F02C         	goto	u13341
 22569   005962  EFB5  F02C         	goto	u13340
 22570   005966                     u13341:
 22571   005966  EFB9  F02C         	goto	l10988
 22572   00596A                     u13340:
 22573   00596A  80D8               	bsf	status,0,c
 22574   00596C  3620               	rlcf	___fladd@grs^0,f,c
 22575   00596E  EFBB  F02C         	goto	l10990
 22576   005972                     l10988:
 22577   005972  90D8               	bcf	status,0,c
 22578   005974  3620               	rlcf	___fladd@grs^0,f,c
 22579   005976                     l10990:
 22580   005976  501F               	movf	___fladd@bexp^0,w,c
 22581   005978  B4D8               	btfsc	status,2,c
 22582   00597A  EFC1  F02C         	goto	u13351
 22583   00597E  EFC3  F02C         	goto	u13350
 22584   005982                     u13351:
 22585   005982  EFC4  F02C         	goto	l10994
 22586   005986                     u13350:
 22587   005986  061F               	decf	___fladd@bexp^0,f,c
 22588   005988                     l10994:
 22589   005988  AE13               	btfss	(___fladd@b+2)^0,7,c
 22590   00598A  EFC9  F02C         	goto	u13361
 22591   00598E  EFCB  F02C         	goto	u13360
 22592   005992                     u13361:
 22593   005992  EFA1  F02C         	goto	l10978
 22594   005996                     u13360:
 22595   005996                     l10996:
 22596   005996  0E00               	movlw	0
 22597   005998  6E1E               	movwf	___fladd@aexp^0,c
 22598   00599A  AE20               	btfss	___fladd@grs^0,7,c
 22599   00599C  EFD2  F02C         	goto	u13371
 22600   0059A0  EFD4  F02C         	goto	u13370
 22601   0059A4                     u13371:
 22602   0059A4  EFEC  F02C         	goto	l1407
 22603   0059A8                     u13370:
 22604   0059A8  C020  F019         	movff	___fladd@grs,??___fladd
 22605   0059AC  0E7F               	movlw	127
 22606   0059AE  1619               	andwf	??___fladd^0,f,c
 22607   0059B0  B4D8               	btfsc	status,2,c
 22608   0059B2  EFDD  F02C         	goto	u13381
 22609   0059B6  EFDF  F02C         	goto	u13380
 22610   0059BA                     u13381:
 22611   0059BA  EFE3  F02C         	goto	l1408
 22612   0059BE                     u13380:
 22613   0059BE                     l11002:
 22614   0059BE  0E01               	movlw	1
 22615   0059C0  6E1E               	movwf	___fladd@aexp^0,c
 22616   0059C2  EFEC  F02C         	goto	l1407
 22617   0059C6                     l1408:
 22618   0059C6  A011               	btfss	___fladd@b^0,0,c
 22619   0059C8  EFE8  F02C         	goto	u13391
 22620   0059CC  EFEA  F02C         	goto	u13390
 22621   0059D0                     u13391:
 22622   0059D0  EFEC  F02C         	goto	l1407
 22623   0059D4                     u13390:
 22624   0059D4  EFDF  F02C         	goto	l11002
 22625   0059D8                     l1407:
 22626   0059D8  501E               	movf	___fladd@aexp^0,w,c
 22627   0059DA  B4D8               	btfsc	status,2,c
 22628   0059DC  EFF2  F02C         	goto	u13401
 22629   0059E0  EFF4  F02C         	goto	u13400
 22630   0059E4                     u13401:
 22631   0059E4  EF1F  F02D         	goto	l11014
 22632   0059E8                     u13400:
 22633   0059E8  0E01               	movlw	1
 22634   0059EA  2611               	addwf	___fladd@b^0,f,c
 22635   0059EC  0E00               	movlw	0
 22636   0059EE  2212               	addwfc	(___fladd@b+1)^0,f,c
 22637   0059F0  2213               	addwfc	(___fladd@b+2)^0,f,c
 22638   0059F2  2214               	addwfc	(___fladd@b+3)^0,f,c
 22639   0059F4  A014               	btfss	(___fladd@b+3)^0,0,c
 22640   0059F6  EFFF  F02C         	goto	u13411
 22641   0059FA  EF01  F02D         	goto	u13410
 22642   0059FE                     u13411:
 22643   0059FE  EF1F  F02D         	goto	l11014
 22644   005A02                     u13410:
 22645   005A02  C011  F019         	movff	___fladd@b,??___fladd
 22646   005A06  C012  F01A         	movff	___fladd@b+1,??___fladd+1
 22647   005A0A  C013  F01B         	movff	___fladd@b+2,??___fladd+2
 22648   005A0E  C014  F01C         	movff	___fladd@b+3,??___fladd+3
 22649   005A12  341C               	rlcf	(??___fladd+3)^0,w,c
 22650   005A14  321C               	rrcf	(??___fladd+3)^0,f,c
 22651   005A16  321B               	rrcf	(??___fladd+2)^0,f,c
 22652   005A18  321A               	rrcf	(??___fladd+1)^0,f,c
 22653   005A1A  3219               	rrcf	??___fladd^0,f,c
 22654   005A1C  C019  F011         	movff	??___fladd,___fladd@b
 22655   005A20  C01A  F012         	movff	??___fladd+1,___fladd@b+1
 22656   005A24  C01B  F013         	movff	??___fladd+2,___fladd@b+2
 22657   005A28  C01C  F014         	movff	??___fladd+3,___fladd@b+3
 22658   005A2C  281F               	incf	___fladd@bexp^0,w,c
 22659   005A2E  B4D8               	btfsc	status,2,c
 22660   005A30  EF1C  F02D         	goto	u13421
 22661   005A34  EF1E  F02D         	goto	u13420
 22662   005A38                     u13421:
 22663   005A38  EF1F  F02D         	goto	l11014
 22664   005A3C                     u13420:
 22665   005A3C  2A1F               	incf	___fladd@bexp^0,f,c
 22666   005A3E                     l11014:
 22667   005A3E  281F               	incf	___fladd@bexp^0,w,c
 22668   005A40  B4D8               	btfsc	status,2,c
 22669   005A42  EF25  F02D         	goto	u13431
 22670   005A46  EF27  F02D         	goto	u13430
 22671   005A4A                     u13431:
 22672   005A4A  EF2F  F02D         	goto	l11018
 22673   005A4E                     u13430:
 22674   005A4E  501F               	movf	___fladd@bexp^0,w,c
 22675   005A50  A4D8               	btfss	status,2,c
 22676   005A52  EF2D  F02D         	goto	u13441
 22677   005A56  EF2F  F02D         	goto	u13440
 22678   005A5A                     u13441:
 22679   005A5A  EF41  F02D         	goto	l11022
 22680   005A5E                     u13440:
 22681   005A5E                     l11018:
 22682   005A5E  0E00               	movlw	0
 22683   005A60  6E11               	movwf	___fladd@b^0,c
 22684   005A62  0E00               	movlw	0
 22685   005A64  6E12               	movwf	(___fladd@b+1)^0,c
 22686   005A66  0E00               	movlw	0
 22687   005A68  6E13               	movwf	(___fladd@b+2)^0,c
 22688   005A6A  0E00               	movlw	0
 22689   005A6C  6E14               	movwf	(___fladd@b+3)^0,c
 22690   005A6E  501F               	movf	___fladd@bexp^0,w,c
 22691   005A70  A4D8               	btfss	status,2,c
 22692   005A72  EF3D  F02D         	goto	u13451
 22693   005A76  EF3F  F02D         	goto	u13450
 22694   005A7A                     u13451:
 22695   005A7A  EF41  F02D         	goto	l11022
 22696   005A7E                     u13450:
 22697   005A7E  0E00               	movlw	0
 22698   005A80  6E1D               	movwf	___fladd@signs^0,c
 22699   005A82                     l11022:
 22700   005A82  A01F               	btfss	___fladd@bexp^0,0,c
 22701   005A84  EF46  F02D         	goto	u13461
 22702   005A88  EF48  F02D         	goto	u13460
 22703   005A8C                     u13461:
 22704   005A8C  EF4B  F02D         	goto	l11026
 22705   005A90                     u13460:
 22706   005A90  8E13               	bsf	(___fladd@b+2)^0,7,c
 22707   005A92  EF4C  F02D         	goto	l11028
 22708   005A96                     l11026:
 22709   005A96  9E13               	bcf	(___fladd@b+2)^0,7,c
 22710   005A98                     l11028:
 22711   005A98  90D8               	bcf	status,0,c
 22712   005A9A  301F               	rrcf	___fladd@bexp^0,w,c
 22713   005A9C  6E14               	movwf	(___fladd@b+3)^0,c
 22714   005A9E  AE1D               	btfss	___fladd@signs^0,7,c
 22715   005AA0  EF54  F02D         	goto	u13471
 22716   005AA4  EF56  F02D         	goto	u13470
 22717   005AA8                     u13471:
 22718   005AA8  EF57  F02D         	goto	l11034
 22719   005AAC                     u13470:
 22720   005AAC  8E14               	bsf	(___fladd@b+3)^0,7,c
 22721   005AAE                     l11034:
 22722   005AAE  C011  F011         	movff	___fladd@b,?___fladd
 22723   005AB2  C012  F012         	movff	___fladd@b+1,?___fladd+1
 22724   005AB6  C013  F013         	movff	___fladd@b+2,?___fladd+2
 22725   005ABA  C014  F014         	movff	___fladd@b+3,?___fladd+3
 22726   005ABE                     l1390:
 22727   005ABE  0012               	return		;funcret
 22728   005AC0                     __end_of___fladd:
 22729                           	callstack 0
 22730                           
 22731 ;; *************** function _I2C_Module_Interrupt_cfg *****************
 22732 ;; Defined at:
 22733 ;;		line 382 in file "MCAL_Layer/mcal_I2C/hal_I2C.c"
 22734 ;; Parameters:    Size  Location     Type
 22735 ;;  _i2c            2    2[COMRAM] PTR const struct .
 22736 ;;		 -> I2C(8), 
 22737 ;; Auto vars:     Size  Location     Type
 22738 ;;  ret             1    4[COMRAM] unsigned char 
 22739 ;; Return value:  Size  Location     Type
 22740 ;;                  1    wreg      unsigned char 
 22741 ;; Registers used:
 22742 ;;		wreg, status,2, status,0
 22743 ;; Tracked objects:
 22744 ;;		On entry : 0/0
 22745 ;;		On exit  : 0/0
 22746 ;;		Unchanged: 0/0
 22747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22748 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22749 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22751 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22752 ;;Total ram usage:        3 bytes
 22753 ;; Hardware stack levels used: 1
 22754 ;; Hardware stack levels required when called: 3
 22755 ;; This function calls:
 22756 ;;		Nothing
 22757 ;; This function is called by:
 22758 ;;		_MSSP_I2C_init
 22759 ;; This function uses a non-reentrant model
 22760 ;;
 22761                           
 22762                           	psect	text79
 22763   00AC66                     __ptext79:
 22764                           	callstack 0
 22765   00AC66                     _I2C_Module_Interrupt_cfg:
 22766                           	callstack 25
 22767   00AC66                     
 22768                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 382: static Std_ReturnType I2C_Module_Interrupt_cfg(cons
      +                          t mssp_i2c_t * _i2c);MCAL_Layer/mcal_I2C/hal_I2C.c: 383: {;MCAL_Layer/mcal_I2C/hal_I2C.c
      +                          : 384:     Std_ReturnType ret = ((Std_ReturnType)0X00);
 22769   00AC66  0E00               	movlw	0
 22770   00AC68  6E05               	movwf	I2C_Module_Interrupt_cfg@ret^0,c
 22771   00AC6A                     
 22772                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 385:     if(((void*)0) != _i2c)
 22773   00AC6A  5003               	movf	I2C_Module_Interrupt_cfg@_i2c^0,w,c
 22774   00AC6C  1004               	iorwf	(I2C_Module_Interrupt_cfg@_i2c+1)^0,w,c
 22775   00AC6E  B4D8               	btfsc	status,2,c
 22776   00AC70  EF3C  F056         	goto	u10211
 22777   00AC74  EF3E  F056         	goto	u10210
 22778   00AC78                     u10211:
 22779   00AC78  EF40  F056         	goto	l545
 22780   00AC7C                     u10210:
 22781   00AC7C                     
 22782                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 386:     {;MCAL_Layer/mcal_I2C/hal_I2C.c: 387:         r
      +                          et = ((Std_ReturnType)0X01);
 22783   00AC7C  0E01               	movlw	1
 22784   00AC7E  6E05               	movwf	I2C_Module_Interrupt_cfg@ret^0,c
 22785   00AC80                     l545:
 22786                           
 22787                           ;MCAL_Layer/mcal_I2C/hal_I2C.c: 420:     return ret;
 22788   00AC80  5005               	movf	I2C_Module_Interrupt_cfg@ret^0,w,c
 22789   00AC82  0012               	return		;funcret
 22790   00AC84                     __end_of_I2C_Module_Interrupt_cfg:
 22791                           	callstack 0
 22792                           
 22793 ;; *************** function _INTx_interrupt_init *****************
 22794 ;; Defined at:
 22795 ;;		line 155 in file "MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c"
 22796 ;; Parameters:    Size  Location     Type
 22797 ;;  pin             2   21[COMRAM] PTR const struct .
 22798 ;;		 -> NB1(6), NB0(6), 
 22799 ;; Auto vars:     Size  Location     Type
 22800 ;;  ret             1   23[COMRAM] unsigned char 
 22801 ;; Return value:  Size  Location     Type
 22802 ;;                  1    wreg      unsigned char 
 22803 ;; Registers used:
 22804 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22805 ;; Tracked objects:
 22806 ;;		On entry : 0/0
 22807 ;;		On exit  : 0/0
 22808 ;;		Unchanged: 0/0
 22809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22810 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22811 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22813 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22814 ;;Total ram usage:        3 bytes
 22815 ;; Hardware stack levels used: 1
 22816 ;; Hardware stack levels required when called: 5
 22817 ;; This function calls:
 22818 ;;		_GPIO_pin_dir_init
 22819 ;;		_INTx_Clear_Flag
 22820 ;;		_INTx_Disable
 22821 ;;		_INTx_Enable
 22822 ;;		_INTx_SetHandler
 22823 ;;		_INTx_Set_Polarity
 22824 ;;		_INTx_Set_Priority
 22825 ;; This function is called by:
 22826 ;;		_Calculator_Init
 22827 ;; This function uses a non-reentrant model
 22828 ;;
 22829                           
 22830                           	psect	text80
 22831   009D84                     __ptext80:
 22832                           	callstack 0
 22833   009D84                     _INTx_interrupt_init:
 22834                           	callstack 24
 22835   009D84                     
 22836                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 155: Std_ReturnType INTx_interrupt
      +                          _init(const INTx_t * pin);MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 156: {;MC
      +                          AL_Layer/mcal_interrupt/mcal_external_interrupt.c: 157:     Std_ReturnType ret=((Std_Ret
      +                          urnType)0X00);
 22837   009D84  0E00               	movlw	0
 22838   009D86  6E18               	movwf	INTx_interrupt_init@ret^0,c
 22839   009D88                     
 22840                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 158:     if(((void*)0)!=pin)
 22841   009D88  5016               	movf	INTx_interrupt_init@pin^0,w,c
 22842   009D8A  1017               	iorwf	(INTx_interrupt_init@pin+1)^0,w,c
 22843   009D8C  B4D8               	btfsc	status,2,c
 22844   009D8E  EFCB  F04E         	goto	u11641
 22845   009D92  EFCD  F04E         	goto	u11640
 22846   009D96                     u11641:
 22847   009D96  EF02  F04F         	goto	l9726
 22848   009D9A                     u11640:
 22849   009D9A                     
 22850                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 159:     {;MCAL_Layer/mcal_interru
      +                          pt/mcal_external_interrupt.c: 160:         ret=((Std_ReturnType)0X01);
 22851   009D9A  0E01               	movlw	1
 22852   009D9C  6E18               	movwf	INTx_interrupt_init@ret^0,c
 22853   009D9E                     
 22854                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 162:         ret &= (INTx_Disable(
      +                          pin));
 22855   009D9E  C016  F003         	movff	INTx_interrupt_init@pin,INTx_Disable@pin
 22856   009DA2  C017  F004         	movff	INTx_interrupt_init@pin+1,INTx_Disable@pin+1
 22857   009DA6  ECFA  F04F         	call	_INTx_Disable	;wreg free
 22858   009DAA  1618               	andwf	INTx_interrupt_init@ret^0,f,c
 22859   009DAC                     
 22860                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 164:         ret &= (INTx_Clear_Fl
      +                          ag(pin));
 22861   009DAC  C016  F003         	movff	INTx_interrupt_init@pin,INTx_Clear_Flag@pin
 22862   009DB0  C017  F004         	movff	INTx_interrupt_init@pin+1,INTx_Clear_Flag@pin+1
 22863   009DB4  EC37  F050         	call	_INTx_Clear_Flag	;wreg free
 22864   009DB8  1618               	andwf	INTx_interrupt_init@ret^0,f,c
 22865   009DBA                     
 22866                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 166:         ret &= (INTx_Set_Pola
      +                          rity(pin));
 22867   009DBA  C016  F003         	movff	INTx_interrupt_init@pin,INTx_Set_Polarity@pin
 22868   009DBE  C017  F004         	movff	INTx_interrupt_init@pin+1,INTx_Set_Polarity@pin+1
 22869   009DC2  EC34  F047         	call	_INTx_Set_Polarity	;wreg free
 22870   009DC6  1618               	andwf	INTx_interrupt_init@ret^0,f,c
 22871   009DC8                     
 22872                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 168:         ret &= (INTx_Set_Prio
      +                          rity(pin));
 22873   009DC8  C016  F003         	movff	INTx_interrupt_init@pin,INTx_Set_Priority@pin
 22874   009DCC  C017  F004         	movff	INTx_interrupt_init@pin+1,INTx_Set_Priority@pin+1
 22875   009DD0  EC42  F056         	call	_INTx_Set_Priority	;wreg free
 22876   009DD4  1618               	andwf	INTx_interrupt_init@ret^0,f,c
 22877   009DD6                     
 22878                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 170:         ret &= (GPIO_pin_dir_
      +                          init(&(pin->pin)));
 22879   009DD6  0E02               	movlw	2
 22880   009DD8  2416               	addwf	INTx_interrupt_init@pin^0,w,c
 22881   009DDA  6E0D               	movwf	GPIO_pin_dir_init@_pin_cfg^0,c
 22882   009DDC  0E00               	movlw	0
 22883   009DDE  2017               	addwfc	(INTx_interrupt_init@pin+1)^0,w,c
 22884   009DE0  6E0E               	movwf	(GPIO_pin_dir_init@_pin_cfg+1)^0,c
 22885   009DE2  ECDB  F040         	call	_GPIO_pin_dir_init	;wreg free
 22886   009DE6  1618               	andwf	INTx_interrupt_init@ret^0,f,c
 22887   009DE8                     
 22888                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 172:         INTx_SetHandler(pin);
 22889   009DE8  C016  F006         	movff	INTx_interrupt_init@pin,INTx_SetHandler@pin
 22890   009DEC  C017  F007         	movff	INTx_interrupt_init@pin+1,INTx_SetHandler@pin+1
 22891   009DF0  ECDA  F04D         	call	_INTx_SetHandler	;wreg free
 22892   009DF4                     
 22893                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 174:         ret &= ret & (INTx_En
      +                          able(pin));
 22894   009DF4  C016  F003         	movff	INTx_interrupt_init@pin,INTx_Enable@pin
 22895   009DF8  C017  F004         	movff	INTx_interrupt_init@pin+1,INTx_Enable@pin+1
 22896   009DFC  ECBD  F04F         	call	_INTx_Enable	;wreg free
 22897   009E00  1418               	andwf	INTx_interrupt_init@ret^0,w,c
 22898   009E02  1618               	andwf	INTx_interrupt_init@ret^0,f,c
 22899   009E04                     l9726:
 22900                           
 22901                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 176:     return ret;
 22902   009E04  5018               	movf	INTx_interrupt_init@ret^0,w,c
 22903   009E06  0012               	return		;funcret
 22904   009E08                     __end_of_INTx_interrupt_init:
 22905                           	callstack 0
 22906                           
 22907 ;; *************** function _INTx_Set_Priority *****************
 22908 ;; Defined at:
 22909 ;;		line 412 in file "MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c"
 22910 ;; Parameters:    Size  Location     Type
 22911 ;;  pin             2    2[COMRAM] PTR const struct .
 22912 ;;		 -> NB1(6), NB0(6), 
 22913 ;; Auto vars:     Size  Location     Type
 22914 ;;  ret             1    4[COMRAM] unsigned char 
 22915 ;; Return value:  Size  Location     Type
 22916 ;;                  1    wreg      unsigned char 
 22917 ;; Registers used:
 22918 ;;		wreg, status,2, status,0
 22919 ;; Tracked objects:
 22920 ;;		On entry : 0/0
 22921 ;;		On exit  : 0/0
 22922 ;;		Unchanged: 0/0
 22923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22924 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22925 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22927 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22928 ;;Total ram usage:        3 bytes
 22929 ;; Hardware stack levels used: 1
 22930 ;; Hardware stack levels required when called: 3
 22931 ;; This function calls:
 22932 ;;		Nothing
 22933 ;; This function is called by:
 22934 ;;		_INTx_interrupt_init
 22935 ;; This function uses a non-reentrant model
 22936 ;;
 22937                           
 22938                           	psect	text81
 22939   00AC84                     __ptext81:
 22940                           	callstack 0
 22941   00AC84                     _INTx_Set_Priority:
 22942                           	callstack 25
 22943   00AC84                     
 22944                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 412: static Std_ReturnType INTx_Se
      +                          t_Priority(const INTx_t * pin);MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 413:
      +                           {;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 414:     Std_ReturnType ret=((St
      +                          d_ReturnType)0X00);
 22945   00AC84  0E00               	movlw	0
 22946   00AC86  6E05               	movwf	INTx_Set_Priority@ret^0,c
 22947   00AC88                     
 22948                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 415:     if(((void*)0)!=pin)
 22949   00AC88  5003               	movf	INTx_Set_Priority@pin^0,w,c
 22950   00AC8A  1004               	iorwf	(INTx_Set_Priority@pin+1)^0,w,c
 22951   00AC8C  B4D8               	btfsc	status,2,c
 22952   00AC8E  EF4B  F056         	goto	u10311
 22953   00AC92  EF4D  F056         	goto	u10310
 22954   00AC96                     u10311:
 22955   00AC96  EF4F  F056         	goto	l740
 22956   00AC9A                     u10310:
 22957   00AC9A                     
 22958                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 416:     {;MCAL_Layer/mcal_interru
      +                          pt/mcal_external_interrupt.c: 417:         ret=((Std_ReturnType)0X01);
 22959   00AC9A  0E01               	movlw	1
 22960   00AC9C  6E05               	movwf	INTx_Set_Priority@ret^0,c
 22961   00AC9E                     l740:
 22962                           
 22963                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 459:     return ret;
 22964   00AC9E  5005               	movf	INTx_Set_Priority@ret^0,w,c
 22965   00ACA0  0012               	return		;funcret
 22966   00ACA2                     __end_of_INTx_Set_Priority:
 22967                           	callstack 0
 22968                           
 22969 ;; *************** function _INTx_Set_Polarity *****************
 22970 ;; Defined at:
 22971 ;;		line 329 in file "MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c"
 22972 ;; Parameters:    Size  Location     Type
 22973 ;;  pin             2    2[COMRAM] PTR const struct .
 22974 ;;		 -> NB1(6), NB0(6), 
 22975 ;; Auto vars:     Size  Location     Type
 22976 ;;  ret             1    6[COMRAM] unsigned char 
 22977 ;; Return value:  Size  Location     Type
 22978 ;;                  1    wreg      unsigned char 
 22979 ;; Registers used:
 22980 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22981 ;; Tracked objects:
 22982 ;;		On entry : 0/0
 22983 ;;		On exit  : 0/0
 22984 ;;		Unchanged: 0/0
 22985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22986 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22987 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22988 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22989 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22990 ;;Total ram usage:        5 bytes
 22991 ;; Hardware stack levels used: 1
 22992 ;; Hardware stack levels required when called: 3
 22993 ;; This function calls:
 22994 ;;		Nothing
 22995 ;; This function is called by:
 22996 ;;		_INTx_interrupt_init
 22997 ;; This function uses a non-reentrant model
 22998 ;;
 22999                           
 23000                           	psect	text82
 23001   008E68                     __ptext82:
 23002                           	callstack 0
 23003   008E68                     _INTx_Set_Polarity:
 23004                           	callstack 25
 23005   008E68                     
 23006                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 329: static Std_ReturnType INTx_Se
      +                          t_Polarity(const INTx_t * pin);MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 330:
      +                           {;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 331:     Std_ReturnType ret=((St
      +                          d_ReturnType)0X00);
 23007   008E68  0E00               	movlw	0
 23008   008E6A  6E07               	movwf	INTx_Set_Polarity@ret^0,c
 23009   008E6C                     
 23010                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 332:     if(((void*)0)!=pin)
 23011   008E6C  5003               	movf	INTx_Set_Polarity@pin^0,w,c
 23012   008E6E  1004               	iorwf	(INTx_Set_Polarity@pin+1)^0,w,c
 23013   008E70  B4D8               	btfsc	status,2,c
 23014   008E72  EF3D  F047         	goto	u10241
 23015   008E76  EF3F  F047         	goto	u10240
 23016   008E7A                     u10241:
 23017   008E7A  EFCC  F047         	goto	l8956
 23018   008E7E                     u10240:
 23019   008E7E                     
 23020                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 333:     {;MCAL_Layer/mcal_interru
      +                          pt/mcal_external_interrupt.c: 334:         ret=((Std_ReturnType)0X01);
 23021   008E7E  0E01               	movlw	1
 23022   008E80  6E07               	movwf	INTx_Set_Polarity@ret^0,c
 23023                           
 23024                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 335:         switch(pin->source)
 23025   008E82  EFAD  F047         	goto	l8954
 23026   008E86                     l8928:
 23027                           
 23028                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 338:                 if(RisingEdge
      +                          ==pin->edge)
 23029   008E86  EE20 F004          	lfsr	2,4
 23030   008E8A  5003               	movf	INTx_Set_Polarity@pin^0,w,c
 23031   008E8C  26D9               	addwf	fsr2l,f,c
 23032   008E8E  5004               	movf	(INTx_Set_Polarity@pin+1)^0,w,c
 23033   008E90  22DA               	addwfc	fsr2h,f,c
 23034   008E92  50DF               	movf	indf2,w,c
 23035   008E94  A4D8               	btfss	status,2,c
 23036   008E96  EF4F  F047         	goto	u10251
 23037   008E9A  EF51  F047         	goto	u10250
 23038   008E9E                     u10251:
 23039   008E9E  EF54  F047         	goto	l8932
 23040   008EA2                     u10250:
 23041   008EA2                     
 23042                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 339:                 {;MCAL_Layer/
      +                          mcal_interrupt/mcal_external_interrupt.c: 340:                     (INTCON2bits.INTEDG0=
      +                          1);
 23043   008EA2  8CF1               	bsf	241,6,c	;volatile
 23044                           
 23045                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 341:                 }
 23046   008EA4  EFCC  F047         	goto	l8956
 23047   008EA8                     l8932:
 23048   008EA8  EE20 F004          	lfsr	2,4
 23049   008EAC  5003               	movf	INTx_Set_Polarity@pin^0,w,c
 23050   008EAE  26D9               	addwf	fsr2l,f,c
 23051   008EB0  5004               	movf	(INTx_Set_Polarity@pin+1)^0,w,c
 23052   008EB2  22DA               	addwfc	fsr2h,f,c
 23053   008EB4  04DE               	decf	postinc2,w,c
 23054   008EB6  A4D8               	btfss	status,2,c
 23055   008EB8  EF60  F047         	goto	u10261
 23056   008EBC  EF62  F047         	goto	u10260
 23057   008EC0                     u10261:
 23058   008EC0  EFCC  F047         	goto	l715
 23059   008EC4                     u10260:
 23060   008EC4                     
 23061                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 343:                 {;MCAL_Layer/
      +                          mcal_interrupt/mcal_external_interrupt.c: 344:                     (INTCON2bits.INTEDG0=
      +                          0);
 23062   008EC4  9CF1               	bcf	241,6,c	;volatile
 23063                           
 23064                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 345:                 }
 23065   008EC6  EFCC  F047         	goto	l8956
 23066   008ECA                     l8936:
 23067                           
 23068                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 349:                 if(RisingEdge
      +                          ==pin->edge)
 23069   008ECA  EE20 F004          	lfsr	2,4
 23070   008ECE  5003               	movf	INTx_Set_Polarity@pin^0,w,c
 23071   008ED0  26D9               	addwf	fsr2l,f,c
 23072   008ED2  5004               	movf	(INTx_Set_Polarity@pin+1)^0,w,c
 23073   008ED4  22DA               	addwfc	fsr2h,f,c
 23074   008ED6  50DF               	movf	indf2,w,c
 23075   008ED8  A4D8               	btfss	status,2,c
 23076   008EDA  EF71  F047         	goto	u10271
 23077   008EDE  EF73  F047         	goto	u10270
 23078   008EE2                     u10271:
 23079   008EE2  EF76  F047         	goto	l8940
 23080   008EE6                     u10270:
 23081   008EE6                     
 23082                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 350:                 {;MCAL_Layer/
      +                          mcal_interrupt/mcal_external_interrupt.c: 351:                     (INTCON2bits.INTEDG1=
      +                          1);
 23083   008EE6  8AF1               	bsf	241,5,c	;volatile
 23084                           
 23085                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 352:                 }
 23086   008EE8  EFCC  F047         	goto	l8956
 23087   008EEC                     l8940:
 23088   008EEC  EE20 F004          	lfsr	2,4
 23089   008EF0  5003               	movf	INTx_Set_Polarity@pin^0,w,c
 23090   008EF2  26D9               	addwf	fsr2l,f,c
 23091   008EF4  5004               	movf	(INTx_Set_Polarity@pin+1)^0,w,c
 23092   008EF6  22DA               	addwfc	fsr2h,f,c
 23093   008EF8  04DE               	decf	postinc2,w,c
 23094   008EFA  A4D8               	btfss	status,2,c
 23095   008EFC  EF82  F047         	goto	u10281
 23096   008F00  EF84  F047         	goto	u10280
 23097   008F04                     u10281:
 23098   008F04  EFCC  F047         	goto	l8956
 23099   008F08                     u10280:
 23100   008F08                     
 23101                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 354:                 {;MCAL_Layer/
      +                          mcal_interrupt/mcal_external_interrupt.c: 355:                     (INTCON2bits.INTEDG1=
      +                          0);
 23102   008F08  9AF1               	bcf	241,5,c	;volatile
 23103                           
 23104                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 356:                 }
 23105   008F0A  EFCC  F047         	goto	l8956
 23106   008F0E                     l8944:
 23107                           
 23108                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 360:                 if(RisingEdge
      +                          ==pin->edge)
 23109   008F0E  EE20 F004          	lfsr	2,4
 23110   008F12  5003               	movf	INTx_Set_Polarity@pin^0,w,c
 23111   008F14  26D9               	addwf	fsr2l,f,c
 23112   008F16  5004               	movf	(INTx_Set_Polarity@pin+1)^0,w,c
 23113   008F18  22DA               	addwfc	fsr2h,f,c
 23114   008F1A  50DF               	movf	indf2,w,c
 23115   008F1C  A4D8               	btfss	status,2,c
 23116   008F1E  EF93  F047         	goto	u10291
 23117   008F22  EF95  F047         	goto	u10290
 23118   008F26                     u10291:
 23119   008F26  EF98  F047         	goto	l8948
 23120   008F2A                     u10290:
 23121   008F2A                     
 23122                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 361:                 {;MCAL_Layer/
      +                          mcal_interrupt/mcal_external_interrupt.c: 362:                     (INTCON2bits.INTEDG2=
      +                          1);
 23123   008F2A  88F1               	bsf	241,4,c	;volatile
 23124                           
 23125                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 363:                 }
 23126   008F2C  EFCC  F047         	goto	l8956
 23127   008F30                     l8948:
 23128   008F30  EE20 F004          	lfsr	2,4
 23129   008F34  5003               	movf	INTx_Set_Polarity@pin^0,w,c
 23130   008F36  26D9               	addwf	fsr2l,f,c
 23131   008F38  5004               	movf	(INTx_Set_Polarity@pin+1)^0,w,c
 23132   008F3A  22DA               	addwfc	fsr2h,f,c
 23133   008F3C  04DE               	decf	postinc2,w,c
 23134   008F3E  A4D8               	btfss	status,2,c
 23135   008F40  EFA4  F047         	goto	u10301
 23136   008F44  EFA6  F047         	goto	u10300
 23137   008F48                     u10301:
 23138   008F48  EFCC  F047         	goto	l8956
 23139   008F4C                     u10300:
 23140   008F4C                     
 23141                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 365:                 {;MCAL_Layer/
      +                          mcal_interrupt/mcal_external_interrupt.c: 366:                     (INTCON2bits.INTEDG2=
      +                          0);
 23142   008F4C  98F1               	bcf	241,4,c	;volatile
 23143                           
 23144                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 367:                 }
 23145   008F4E  EFCC  F047         	goto	l8956
 23146   008F52                     l8952:
 23147   008F52  0E00               	movlw	0
 23148   008F54  6E07               	movwf	INTx_Set_Polarity@ret^0,c
 23149                           
 23150                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 371:         }
 23151   008F56  EFCC  F047         	goto	l8956
 23152   008F5A                     l8954:
 23153   008F5A  EE20 F003          	lfsr	2,3
 23154   008F5E  5003               	movf	INTx_Set_Polarity@pin^0,w,c
 23155   008F60  26D9               	addwf	fsr2l,f,c
 23156   008F62  5004               	movf	(INTx_Set_Polarity@pin+1)^0,w,c
 23157   008F64  22DA               	addwfc	fsr2h,f,c
 23158   008F66  50DF               	movf	indf2,w,c
 23159   008F68  6E05               	movwf	??_INTx_Set_Polarity^0,c
 23160   008F6A  6A06               	clrf	(??_INTx_Set_Polarity+1)^0,c
 23161                           
 23162                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23163                           ; Switch size 1, requested type "simple"
 23164                           ; Number of cases is 1, Range of values is 0 to 0
 23165                           ; switch strategies available:
 23166                           ; Name         Instructions Cycles
 23167                           ; simple_byte            4     3 (average)
 23168                           ;	Chosen strategy is simple_byte
 23169   008F6C  5006               	movf	(??_INTx_Set_Polarity+1)^0,w,c
 23170   008F6E  0A00               	xorlw	0	; case 0
 23171   008F70  B4D8               	btfsc	status,2,c
 23172   008F72  EFBD  F047         	goto	l13854
 23173   008F76  EFA9  F047         	goto	l8952
 23174   008F7A                     l13854:
 23175                           
 23176                           ; Switch size 1, requested type "simple"
 23177                           ; Number of cases is 3, Range of values is 0 to 2
 23178                           ; switch strategies available:
 23179                           ; Name         Instructions Cycles
 23180                           ; simple_byte           10     6 (average)
 23181                           ;	Chosen strategy is simple_byte
 23182   008F7A  5005               	movf	??_INTx_Set_Polarity^0,w,c
 23183   008F7C  0A00               	xorlw	0	; case 0
 23184   008F7E  B4D8               	btfsc	status,2,c
 23185   008F80  EF43  F047         	goto	l8928
 23186   008F84  0A01               	xorlw	1	; case 1
 23187   008F86  B4D8               	btfsc	status,2,c
 23188   008F88  EF65  F047         	goto	l8936
 23189   008F8C  0A03               	xorlw	3	; case 2
 23190   008F8E  B4D8               	btfsc	status,2,c
 23191   008F90  EF87  F047         	goto	l8944
 23192   008F94  EFA9  F047         	goto	l8952
 23193   008F98                     l715:
 23194   008F98                     l8956:
 23195                           
 23196                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 373:     return ret;
 23197   008F98  5007               	movf	INTx_Set_Polarity@ret^0,w,c
 23198   008F9A  0012               	return		;funcret
 23199   008F9C                     __end_of_INTx_Set_Polarity:
 23200                           	callstack 0
 23201                           
 23202 ;; *************** function _INTx_SetHandler *****************
 23203 ;; Defined at:
 23204 ;;		line 526 in file "MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c"
 23205 ;; Parameters:    Size  Location     Type
 23206 ;;  pin             2    5[COMRAM] PTR const struct .
 23207 ;;		 -> NB1(6), NB0(6), 
 23208 ;; Auto vars:     Size  Location     Type
 23209 ;;  ret             1    0        unsigned char 
 23210 ;; Return value:  Size  Location     Type
 23211 ;;                  1    wreg      unsigned char 
 23212 ;; Registers used:
 23213 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23214 ;; Tracked objects:
 23215 ;;		On entry : 0/0
 23216 ;;		On exit  : 0/0
 23217 ;;		Unchanged: 0/0
 23218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23219 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23221 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23222 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23223 ;;Total ram usage:        4 bytes
 23224 ;; Hardware stack levels used: 1
 23225 ;; Hardware stack levels required when called: 4
 23226 ;; This function calls:
 23227 ;;		_INT0_SetHandler
 23228 ;;		_INT1_SetHandler
 23229 ;;		_INT2_SetHandler
 23230 ;; This function is called by:
 23231 ;;		_INTx_interrupt_init
 23232 ;; This function uses a non-reentrant model
 23233 ;;
 23234                           
 23235                           	psect	text83
 23236   009BB4                     __ptext83:
 23237                           	callstack 0
 23238   009BB4                     _INTx_SetHandler:
 23239                           	callstack 24
 23240   009BB4                     
 23241                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 529:     if(((void*)0)!=pin)
 23242   009BB4  5006               	movf	INTx_SetHandler@pin^0,w,c
 23243   009BB6  1007               	iorwf	(INTx_SetHandler@pin+1)^0,w,c
 23244   009BB8  B4D8               	btfsc	status,2,c
 23245   009BBA  EFE1  F04D         	goto	u10321
 23246   009BBE  EFE3  F04D         	goto	u10320
 23247   009BC2                     u10321:
 23248   009BC2  EF2A  F04E         	goto	l763
 23249   009BC6                     u10320:
 23250   009BC6                     
 23251                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 532:         switch(pin->source)
 23252   009BC6  EF0B  F04E         	goto	l8986
 23253   009BCA                     l8978:
 23254   009BCA  C006  FFD9         	movff	INTx_SetHandler@pin,fsr2l
 23255   009BCE  C007  FFDA         	movff	INTx_SetHandler@pin+1,fsr2h
 23256   009BD2  CFDE F003          	movff	postinc2,INT0_SetHandler@InterruptHandler
 23257   009BD6  CFDD F004          	movff	postdec2,INT0_SetHandler@InterruptHandler+1
 23258   009BDA  EC00  F056         	call	_INT0_SetHandler	;wreg free
 23259                           
 23260                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 535:                 break;
 23261   009BDE  EF2A  F04E         	goto	l763
 23262   009BE2                     l8980:
 23263   009BE2  C006  FFD9         	movff	INTx_SetHandler@pin,fsr2l
 23264   009BE6  C007  FFDA         	movff	INTx_SetHandler@pin+1,fsr2h
 23265   009BEA  CFDE F003          	movff	postinc2,INT1_SetHandler@InterruptHandler
 23266   009BEE  CFDD F004          	movff	postdec2,INT1_SetHandler@InterruptHandler+1
 23267   009BF2  ECED  F055         	call	_INT1_SetHandler	;wreg free
 23268                           
 23269                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 537:                 break;
 23270   009BF6  EF2A  F04E         	goto	l763
 23271   009BFA                     l8982:
 23272   009BFA  C006  FFD9         	movff	INTx_SetHandler@pin,fsr2l
 23273   009BFE  C007  FFDA         	movff	INTx_SetHandler@pin+1,fsr2h
 23274   009C02  CFDE F003          	movff	postinc2,INT2_SetHandler@InterruptHandler
 23275   009C06  CFDD F004          	movff	postdec2,INT2_SetHandler@InterruptHandler+1
 23276   009C0A  ECDA  F055         	call	_INT2_SetHandler	;wreg free
 23277                           
 23278                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 539:                 break;
 23279   009C0E  EF2A  F04E         	goto	l763
 23280   009C12                     l8984:
 23281                           
 23282                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 541:         }
 23283   009C12  EF2A  F04E         	goto	l763
 23284   009C16                     l8986:
 23285   009C16  EE20 F003          	lfsr	2,3
 23286   009C1A  5006               	movf	INTx_SetHandler@pin^0,w,c
 23287   009C1C  26D9               	addwf	fsr2l,f,c
 23288   009C1E  5007               	movf	(INTx_SetHandler@pin+1)^0,w,c
 23289   009C20  22DA               	addwfc	fsr2h,f,c
 23290   009C22  50DF               	movf	indf2,w,c
 23291   009C24  6E08               	movwf	??_INTx_SetHandler^0,c
 23292   009C26  6A09               	clrf	(??_INTx_SetHandler+1)^0,c
 23293                           
 23294                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23295                           ; Switch size 1, requested type "simple"
 23296                           ; Number of cases is 1, Range of values is 0 to 0
 23297                           ; switch strategies available:
 23298                           ; Name         Instructions Cycles
 23299                           ; simple_byte            4     3 (average)
 23300                           ;	Chosen strategy is simple_byte
 23301   009C28  5009               	movf	(??_INTx_SetHandler+1)^0,w,c
 23302   009C2A  0A00               	xorlw	0	; case 0
 23303   009C2C  B4D8               	btfsc	status,2,c
 23304   009C2E  EF1B  F04E         	goto	l13856
 23305   009C32  EF09  F04E         	goto	l8984
 23306   009C36                     l13856:
 23307                           
 23308                           ; Switch size 1, requested type "simple"
 23309                           ; Number of cases is 3, Range of values is 0 to 2
 23310                           ; switch strategies available:
 23311                           ; Name         Instructions Cycles
 23312                           ; simple_byte           10     6 (average)
 23313                           ;	Chosen strategy is simple_byte
 23314   009C36  5008               	movf	??_INTx_SetHandler^0,w,c
 23315   009C38  0A00               	xorlw	0	; case 0
 23316   009C3A  B4D8               	btfsc	status,2,c
 23317   009C3C  EFE5  F04D         	goto	l8978
 23318   009C40  0A01               	xorlw	1	; case 1
 23319   009C42  B4D8               	btfsc	status,2,c
 23320   009C44  EFF1  F04D         	goto	l8980
 23321   009C48  0A03               	xorlw	3	; case 2
 23322   009C4A  B4D8               	btfsc	status,2,c
 23323   009C4C  EFFD  F04D         	goto	l8982
 23324   009C50  EF09  F04E         	goto	l8984
 23325   009C54                     l763:
 23326   009C54  0012               	return		;funcret
 23327   009C56                     __end_of_INTx_SetHandler:
 23328                           	callstack 0
 23329                           
 23330 ;; *************** function _INT2_SetHandler *****************
 23331 ;; Defined at:
 23332 ;;		line 508 in file "MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c"
 23333 ;; Parameters:    Size  Location     Type
 23334 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
 23335 ;;		 -> EXTINT1(1), EXTINT0(1), 
 23336 ;; Auto vars:     Size  Location     Type
 23337 ;;  ret             1    4[COMRAM] unsigned char 
 23338 ;; Return value:  Size  Location     Type
 23339 ;;                  1    wreg      unsigned char 
 23340 ;; Registers used:
 23341 ;;		wreg, status,2, status,0
 23342 ;; Tracked objects:
 23343 ;;		On entry : 0/0
 23344 ;;		On exit  : 0/0
 23345 ;;		Unchanged: 0/0
 23346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23347 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23348 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23350 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23351 ;;Total ram usage:        3 bytes
 23352 ;; Hardware stack levels used: 1
 23353 ;; Hardware stack levels required when called: 3
 23354 ;; This function calls:
 23355 ;;		Nothing
 23356 ;; This function is called by:
 23357 ;;		_INTx_SetHandler
 23358 ;; This function uses a non-reentrant model
 23359 ;;
 23360                           
 23361                           	psect	text84
 23362   00ABB4                     __ptext84:
 23363                           	callstack 0
 23364   00ABB4                     _INT2_SetHandler:
 23365                           	callstack 24
 23366   00ABB4                     
 23367                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 508: static Std_ReturnType INT2_Se
      +                          tHandler(void(*InterruptHandler)(void));MCAL_Layer/mcal_interrupt/mcal_external_interrup
      +                          t.c: 509: {;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 510:     Std_ReturnType
      +                           ret=((Std_ReturnType)0X00);
 23368   00ABB4  0E00               	movlw	0
 23369   00ABB6  6E05               	movwf	INT2_SetHandler@ret^0,c
 23370   00ABB8                     
 23371                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 511:     if(((void*)0)!=InterruptH
      +                          andler)
 23372   00ABB8  5003               	movf	INT2_SetHandler@InterruptHandler^0,w,c
 23373   00ABBA  1004               	iorwf	(INT2_SetHandler@InterruptHandler+1)^0,w,c
 23374   00ABBC  B4D8               	btfsc	status,2,c
 23375   00ABBE  EFE3  F055         	goto	u9201
 23376   00ABC2  EFE5  F055         	goto	u9200
 23377   00ABC6                     u9201:
 23378   00ABC6  EFEB  F055         	goto	l8134
 23379   00ABCA                     u9200:
 23380   00ABCA                     
 23381                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 512:     {;MCAL_Layer/mcal_interru
      +                          pt/mcal_external_interrupt.c: 513:         ret=((Std_ReturnType)0X01);
 23382   00ABCA  0E01               	movlw	1
 23383   00ABCC  6E05               	movwf	INT2_SetHandler@ret^0,c
 23384   00ABCE                     
 23385                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 514:         INT2_InterruptHandler
      +                          =InterruptHandler;
 23386   00ABCE  C003  F22F         	movff	INT2_SetHandler@InterruptHandler,_INT2_InterruptHandler
 23387   00ABD2  C004  F230         	movff	INT2_SetHandler@InterruptHandler+1,_INT2_InterruptHandler+1
 23388   00ABD6                     l8134:
 23389                           
 23390                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 516:     return ret;
 23391   00ABD6  5005               	movf	INT2_SetHandler@ret^0,w,c
 23392   00ABD8  0012               	return		;funcret
 23393   00ABDA                     __end_of_INT2_SetHandler:
 23394                           	callstack 0
 23395                           
 23396 ;; *************** function _INT1_SetHandler *****************
 23397 ;; Defined at:
 23398 ;;		line 489 in file "MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c"
 23399 ;; Parameters:    Size  Location     Type
 23400 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
 23401 ;;		 -> EXTINT1(1), EXTINT0(1), 
 23402 ;; Auto vars:     Size  Location     Type
 23403 ;;  ret             1    4[COMRAM] unsigned char 
 23404 ;; Return value:  Size  Location     Type
 23405 ;;                  1    wreg      unsigned char 
 23406 ;; Registers used:
 23407 ;;		wreg, status,2, status,0
 23408 ;; Tracked objects:
 23409 ;;		On entry : 0/0
 23410 ;;		On exit  : 0/0
 23411 ;;		Unchanged: 0/0
 23412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23413 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23414 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23416 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23417 ;;Total ram usage:        3 bytes
 23418 ;; Hardware stack levels used: 1
 23419 ;; Hardware stack levels required when called: 3
 23420 ;; This function calls:
 23421 ;;		Nothing
 23422 ;; This function is called by:
 23423 ;;		_INTx_SetHandler
 23424 ;; This function uses a non-reentrant model
 23425 ;;
 23426                           
 23427                           	psect	text85
 23428   00ABDA                     __ptext85:
 23429                           	callstack 0
 23430   00ABDA                     _INT1_SetHandler:
 23431                           	callstack 24
 23432   00ABDA                     
 23433                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 489: static Std_ReturnType INT1_Se
      +                          tHandler(void(*InterruptHandler)(void));MCAL_Layer/mcal_interrupt/mcal_external_interrup
      +                          t.c: 490: {;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 491:     Std_ReturnType
      +                           ret=((Std_ReturnType)0X00);
 23434   00ABDA  0E00               	movlw	0
 23435   00ABDC  6E05               	movwf	INT1_SetHandler@ret^0,c
 23436   00ABDE                     
 23437                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 492:     if(((void*)0)!=InterruptH
      +                          andler)
 23438   00ABDE  5003               	movf	INT1_SetHandler@InterruptHandler^0,w,c
 23439   00ABE0  1004               	iorwf	(INT1_SetHandler@InterruptHandler+1)^0,w,c
 23440   00ABE2  B4D8               	btfsc	status,2,c
 23441   00ABE4  EFF6  F055         	goto	u9191
 23442   00ABE8  EFF8  F055         	goto	u9190
 23443   00ABEC                     u9191:
 23444   00ABEC  EFFE  F055         	goto	l8122
 23445   00ABF0                     u9190:
 23446   00ABF0                     
 23447                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 493:     {;MCAL_Layer/mcal_interru
      +                          pt/mcal_external_interrupt.c: 494:         ret=((Std_ReturnType)0X01);
 23448   00ABF0  0E01               	movlw	1
 23449   00ABF2  6E05               	movwf	INT1_SetHandler@ret^0,c
 23450   00ABF4                     
 23451                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 495:         INT1_InterruptHandler
      +                          =InterruptHandler;
 23452   00ABF4  C003  F231         	movff	INT1_SetHandler@InterruptHandler,_INT1_InterruptHandler
 23453   00ABF8  C004  F232         	movff	INT1_SetHandler@InterruptHandler+1,_INT1_InterruptHandler+1
 23454   00ABFC                     l8122:
 23455                           
 23456                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 497:     return ret;
 23457   00ABFC  5005               	movf	INT1_SetHandler@ret^0,w,c
 23458   00ABFE  0012               	return		;funcret
 23459   00AC00                     __end_of_INT1_SetHandler:
 23460                           	callstack 0
 23461                           
 23462 ;; *************** function _INT0_SetHandler *****************
 23463 ;; Defined at:
 23464 ;;		line 470 in file "MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c"
 23465 ;; Parameters:    Size  Location     Type
 23466 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
 23467 ;;		 -> EXTINT1(1), EXTINT0(1), 
 23468 ;; Auto vars:     Size  Location     Type
 23469 ;;  ret             1    4[COMRAM] unsigned char 
 23470 ;; Return value:  Size  Location     Type
 23471 ;;                  1    wreg      unsigned char 
 23472 ;; Registers used:
 23473 ;;		wreg, status,2, status,0
 23474 ;; Tracked objects:
 23475 ;;		On entry : 0/0
 23476 ;;		On exit  : 0/0
 23477 ;;		Unchanged: 0/0
 23478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23479 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23480 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23482 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23483 ;;Total ram usage:        3 bytes
 23484 ;; Hardware stack levels used: 1
 23485 ;; Hardware stack levels required when called: 3
 23486 ;; This function calls:
 23487 ;;		Nothing
 23488 ;; This function is called by:
 23489 ;;		_INTx_SetHandler
 23490 ;; This function uses a non-reentrant model
 23491 ;;
 23492                           
 23493                           	psect	text86
 23494   00AC00                     __ptext86:
 23495                           	callstack 0
 23496   00AC00                     _INT0_SetHandler:
 23497                           	callstack 24
 23498   00AC00                     
 23499                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 470: static Std_ReturnType INT0_Se
      +                          tHandler(void(*InterruptHandler)(void));MCAL_Layer/mcal_interrupt/mcal_external_interrup
      +                          t.c: 471: {;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 472:     Std_ReturnType
      +                           ret=((Std_ReturnType)0X00);
 23500   00AC00  0E00               	movlw	0
 23501   00AC02  6E05               	movwf	INT0_SetHandler@ret^0,c
 23502   00AC04                     
 23503                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 473:     if(((void*)0)!=InterruptH
      +                          andler)
 23504   00AC04  5003               	movf	INT0_SetHandler@InterruptHandler^0,w,c
 23505   00AC06  1004               	iorwf	(INT0_SetHandler@InterruptHandler+1)^0,w,c
 23506   00AC08  B4D8               	btfsc	status,2,c
 23507   00AC0A  EF09  F056         	goto	u9181
 23508   00AC0E  EF0B  F056         	goto	u9180
 23509   00AC12                     u9181:
 23510   00AC12  EF11  F056         	goto	l8110
 23511   00AC16                     u9180:
 23512   00AC16                     
 23513                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 474:     {;MCAL_Layer/mcal_interru
      +                          pt/mcal_external_interrupt.c: 475:         ret=((Std_ReturnType)0X01);
 23514   00AC16  0E01               	movlw	1
 23515   00AC18  6E05               	movwf	INT0_SetHandler@ret^0,c
 23516   00AC1A                     
 23517                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 476:         INT0_InterruptHandler
      +                          =InterruptHandler;
 23518   00AC1A  C003  F233         	movff	INT0_SetHandler@InterruptHandler,_INT0_InterruptHandler
 23519   00AC1E  C004  F234         	movff	INT0_SetHandler@InterruptHandler+1,_INT0_InterruptHandler+1
 23520   00AC22                     l8110:
 23521                           
 23522                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 478:     return ret;
 23523   00AC22  5005               	movf	INT0_SetHandler@ret^0,w,c
 23524   00AC24  0012               	return		;funcret
 23525   00AC26                     __end_of_INT0_SetHandler:
 23526                           	callstack 0
 23527                           
 23528 ;; *************** function _INTx_Enable *****************
 23529 ;; Defined at:
 23530 ;;		line 269 in file "MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c"
 23531 ;; Parameters:    Size  Location     Type
 23532 ;;  pin             2    2[COMRAM] PTR const struct .
 23533 ;;		 -> NB1(6), NB0(6), 
 23534 ;; Auto vars:     Size  Location     Type
 23535 ;;  ret             1    6[COMRAM] unsigned char 
 23536 ;; Return value:  Size  Location     Type
 23537 ;;                  1    wreg      unsigned char 
 23538 ;; Registers used:
 23539 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23540 ;; Tracked objects:
 23541 ;;		On entry : 0/0
 23542 ;;		On exit  : 0/0
 23543 ;;		Unchanged: 0/0
 23544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23545 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23546 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23547 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23548 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23549 ;;Total ram usage:        5 bytes
 23550 ;; Hardware stack levels used: 1
 23551 ;; Hardware stack levels required when called: 3
 23552 ;; This function calls:
 23553 ;;		Nothing
 23554 ;; This function is called by:
 23555 ;;		_INTx_interrupt_init
 23556 ;; This function uses a non-reentrant model
 23557 ;;
 23558                           
 23559                           	psect	text87
 23560   009F7A                     __ptext87:
 23561                           	callstack 0
 23562   009F7A                     _INTx_Enable:
 23563                           	callstack 25
 23564   009F7A                     
 23565                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 269: static Std_ReturnType INTx_En
      +                          able(const INTx_t * pin);MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 270: {;MCA
      +                          L_Layer/mcal_interrupt/mcal_external_interrupt.c: 271:     Std_ReturnType ret=((Std_Retu
      +                          rnType)0X00);
 23566   009F7A  0E00               	movlw	0
 23567   009F7C  6E07               	movwf	INTx_Enable@ret^0,c
 23568   009F7E                     
 23569                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 272:     if(((void*)0)!=pin)
 23570   009F7E  5003               	movf	INTx_Enable@pin^0,w,c
 23571   009F80  1004               	iorwf	(INTx_Enable@pin+1)^0,w,c
 23572   009F82  B4D8               	btfsc	status,2,c
 23573   009F84  EFC6  F04F         	goto	u10331
 23574   009F88  EFC8  F04F         	goto	u10330
 23575   009F8C                     u10331:
 23576   009F8C  EFF8  F04F         	goto	l9002
 23577   009F90                     u10330:
 23578   009F90                     
 23579                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 273:     {;MCAL_Layer/mcal_interru
      +                          pt/mcal_external_interrupt.c: 274:         ret=((Std_ReturnType)0X01);
 23580   009F90  0E01               	movlw	1
 23581   009F92  6E07               	movwf	INTx_Enable@ret^0,c
 23582                           
 23583                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 275:         switch(pin->source)
 23584   009F94  EFD9  F04F         	goto	l9000
 23585   009F98                     l690:
 23586                           
 23587                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 278:                 (INTCONbits.I
      +                          NT0E=1);
 23588   009F98  88F2               	bsf	242,4,c	;volatile
 23589                           
 23590                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 279:                 break;
 23591   009F9A  EFF8  F04F         	goto	l9002
 23592   009F9E                     l692:
 23593                           
 23594                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 281:                 (INTCON3bits.
      +                          INT1E=1);
 23595   009F9E  86F0               	bsf	240,3,c	;volatile
 23596                           
 23597                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 282:                 break;
 23598   009FA0  EFF8  F04F         	goto	l9002
 23599   009FA4                     l693:
 23600                           
 23601                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 284:                 (INTCON3bits.
      +                          INT2E=1);
 23602   009FA4  88F0               	bsf	240,4,c	;volatile
 23603                           
 23604                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 285:                 break;
 23605   009FA6  EFF8  F04F         	goto	l9002
 23606   009FAA                     l8998:
 23607   009FAA  0E00               	movlw	0
 23608   009FAC  6E07               	movwf	INTx_Enable@ret^0,c
 23609                           
 23610                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 287:         }
 23611   009FAE  EFF8  F04F         	goto	l9002
 23612   009FB2                     l9000:
 23613   009FB2  EE20 F003          	lfsr	2,3
 23614   009FB6  5003               	movf	INTx_Enable@pin^0,w,c
 23615   009FB8  26D9               	addwf	fsr2l,f,c
 23616   009FBA  5004               	movf	(INTx_Enable@pin+1)^0,w,c
 23617   009FBC  22DA               	addwfc	fsr2h,f,c
 23618   009FBE  50DF               	movf	indf2,w,c
 23619   009FC0  6E05               	movwf	??_INTx_Enable^0,c
 23620   009FC2  6A06               	clrf	(??_INTx_Enable+1)^0,c
 23621                           
 23622                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23623                           ; Switch size 1, requested type "simple"
 23624                           ; Number of cases is 1, Range of values is 0 to 0
 23625                           ; switch strategies available:
 23626                           ; Name         Instructions Cycles
 23627                           ; simple_byte            4     3 (average)
 23628                           ;	Chosen strategy is simple_byte
 23629   009FC4  5006               	movf	(??_INTx_Enable+1)^0,w,c
 23630   009FC6  0A00               	xorlw	0	; case 0
 23631   009FC8  B4D8               	btfsc	status,2,c
 23632   009FCA  EFE9  F04F         	goto	l13858
 23633   009FCE  EFD5  F04F         	goto	l8998
 23634   009FD2                     l13858:
 23635                           
 23636                           ; Switch size 1, requested type "simple"
 23637                           ; Number of cases is 3, Range of values is 0 to 2
 23638                           ; switch strategies available:
 23639                           ; Name         Instructions Cycles
 23640                           ; simple_byte           10     6 (average)
 23641                           ;	Chosen strategy is simple_byte
 23642   009FD2  5005               	movf	??_INTx_Enable^0,w,c
 23643   009FD4  0A00               	xorlw	0	; case 0
 23644   009FD6  B4D8               	btfsc	status,2,c
 23645   009FD8  EFCC  F04F         	goto	l690
 23646   009FDC  0A01               	xorlw	1	; case 1
 23647   009FDE  B4D8               	btfsc	status,2,c
 23648   009FE0  EFCF  F04F         	goto	l692
 23649   009FE4  0A03               	xorlw	3	; case 2
 23650   009FE6  B4D8               	btfsc	status,2,c
 23651   009FE8  EFD2  F04F         	goto	l693
 23652   009FEC  EFD5  F04F         	goto	l8998
 23653   009FF0                     l9002:
 23654                           
 23655                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 289:     return ret;
 23656   009FF0  5007               	movf	INTx_Enable@ret^0,w,c
 23657   009FF2  0012               	return		;funcret
 23658   009FF4                     __end_of_INTx_Enable:
 23659                           	callstack 0
 23660                           
 23661 ;; *************** function _INTx_Disable *****************
 23662 ;; Defined at:
 23663 ;;		line 299 in file "MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c"
 23664 ;; Parameters:    Size  Location     Type
 23665 ;;  pin             2    2[COMRAM] PTR const struct .
 23666 ;;		 -> NB1(6), NB0(6), 
 23667 ;; Auto vars:     Size  Location     Type
 23668 ;;  ret             1    6[COMRAM] unsigned char 
 23669 ;; Return value:  Size  Location     Type
 23670 ;;                  1    wreg      unsigned char 
 23671 ;; Registers used:
 23672 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23673 ;; Tracked objects:
 23674 ;;		On entry : 0/0
 23675 ;;		On exit  : 0/0
 23676 ;;		Unchanged: 0/0
 23677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23678 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23679 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23680 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23681 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23682 ;;Total ram usage:        5 bytes
 23683 ;; Hardware stack levels used: 1
 23684 ;; Hardware stack levels required when called: 3
 23685 ;; This function calls:
 23686 ;;		Nothing
 23687 ;; This function is called by:
 23688 ;;		_INTx_interrupt_init
 23689 ;;		_INTx_interrupt_deinit
 23690 ;; This function uses a non-reentrant model
 23691 ;;
 23692                           
 23693                           	psect	text88
 23694   009FF4                     __ptext88:
 23695                           	callstack 0
 23696   009FF4                     _INTx_Disable:
 23697                           	callstack 25
 23698   009FF4                     
 23699                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 299: static Std_ReturnType INTx_Di
      +                          sable(const INTx_t * pin);MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 300: {;MC
      +                          AL_Layer/mcal_interrupt/mcal_external_interrupt.c: 301:     Std_ReturnType ret=((Std_Ret
      +                          urnType)0X00);
 23700   009FF4  0E00               	movlw	0
 23701   009FF6  6E07               	movwf	INTx_Disable@ret^0,c
 23702   009FF8                     
 23703                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 302:     if(((void*)0)!=pin)
 23704   009FF8  5003               	movf	INTx_Disable@pin^0,w,c
 23705   009FFA  1004               	iorwf	(INTx_Disable@pin+1)^0,w,c
 23706   009FFC  B4D8               	btfsc	status,2,c
 23707   009FFE  EF03  F050         	goto	u10221
 23708   00A002  EF05  F050         	goto	u10220
 23709   00A006                     u10221:
 23710   00A006  EF35  F050         	goto	l8896
 23711   00A00A                     u10220:
 23712   00A00A                     
 23713                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 303:     {;MCAL_Layer/mcal_interru
      +                          pt/mcal_external_interrupt.c: 304:         ret=((Std_ReturnType)0X01);
 23714   00A00A  0E01               	movlw	1
 23715   00A00C  6E07               	movwf	INTx_Disable@ret^0,c
 23716                           
 23717                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 305:         switch(pin->source)
 23718   00A00E  EF16  F050         	goto	l8894
 23719   00A012                     l700:
 23720                           
 23721                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 308:                 (INTCONbits.I
      +                          NT0E=0);
 23722   00A012  98F2               	bcf	242,4,c	;volatile
 23723                           
 23724                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 309:                 break;
 23725   00A014  EF35  F050         	goto	l8896
 23726   00A018                     l702:
 23727                           
 23728                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 311:                 (INTCON3bits.
      +                          INT1E=0);
 23729   00A018  96F0               	bcf	240,3,c	;volatile
 23730                           
 23731                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 312:                 break;
 23732   00A01A  EF35  F050         	goto	l8896
 23733   00A01E                     l703:
 23734                           
 23735                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 314:                 (INTCON3bits.
      +                          INT2E=0);
 23736   00A01E  98F0               	bcf	240,4,c	;volatile
 23737                           
 23738                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 315:                 break;
 23739   00A020  EF35  F050         	goto	l8896
 23740   00A024                     l8892:
 23741   00A024  0E00               	movlw	0
 23742   00A026  6E07               	movwf	INTx_Disable@ret^0,c
 23743                           
 23744                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 317:         }
 23745   00A028  EF35  F050         	goto	l8896
 23746   00A02C                     l8894:
 23747   00A02C  EE20 F003          	lfsr	2,3
 23748   00A030  5003               	movf	INTx_Disable@pin^0,w,c
 23749   00A032  26D9               	addwf	fsr2l,f,c
 23750   00A034  5004               	movf	(INTx_Disable@pin+1)^0,w,c
 23751   00A036  22DA               	addwfc	fsr2h,f,c
 23752   00A038  50DF               	movf	indf2,w,c
 23753   00A03A  6E05               	movwf	??_INTx_Disable^0,c
 23754   00A03C  6A06               	clrf	(??_INTx_Disable+1)^0,c
 23755                           
 23756                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23757                           ; Switch size 1, requested type "simple"
 23758                           ; Number of cases is 1, Range of values is 0 to 0
 23759                           ; switch strategies available:
 23760                           ; Name         Instructions Cycles
 23761                           ; simple_byte            4     3 (average)
 23762                           ;	Chosen strategy is simple_byte
 23763   00A03E  5006               	movf	(??_INTx_Disable+1)^0,w,c
 23764   00A040  0A00               	xorlw	0	; case 0
 23765   00A042  B4D8               	btfsc	status,2,c
 23766   00A044  EF26  F050         	goto	l13860
 23767   00A048  EF12  F050         	goto	l8892
 23768   00A04C                     l13860:
 23769                           
 23770                           ; Switch size 1, requested type "simple"
 23771                           ; Number of cases is 3, Range of values is 0 to 2
 23772                           ; switch strategies available:
 23773                           ; Name         Instructions Cycles
 23774                           ; simple_byte           10     6 (average)
 23775                           ;	Chosen strategy is simple_byte
 23776   00A04C  5005               	movf	??_INTx_Disable^0,w,c
 23777   00A04E  0A00               	xorlw	0	; case 0
 23778   00A050  B4D8               	btfsc	status,2,c
 23779   00A052  EF09  F050         	goto	l700
 23780   00A056  0A01               	xorlw	1	; case 1
 23781   00A058  B4D8               	btfsc	status,2,c
 23782   00A05A  EF0C  F050         	goto	l702
 23783   00A05E  0A03               	xorlw	3	; case 2
 23784   00A060  B4D8               	btfsc	status,2,c
 23785   00A062  EF0F  F050         	goto	l703
 23786   00A066  EF12  F050         	goto	l8892
 23787   00A06A                     l8896:
 23788                           
 23789                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 319:     return ret;
 23790   00A06A  5007               	movf	INTx_Disable@ret^0,w,c
 23791   00A06C  0012               	return		;funcret
 23792   00A06E                     __end_of_INTx_Disable:
 23793                           	callstack 0
 23794                           
 23795 ;; *************** function _INTx_Clear_Flag *****************
 23796 ;; Defined at:
 23797 ;;		line 383 in file "MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c"
 23798 ;; Parameters:    Size  Location     Type
 23799 ;;  pin             2    2[COMRAM] PTR const struct .
 23800 ;;		 -> NB1(6), NB0(6), 
 23801 ;; Auto vars:     Size  Location     Type
 23802 ;;  ret             1    6[COMRAM] unsigned char 
 23803 ;; Return value:  Size  Location     Type
 23804 ;;                  1    wreg      unsigned char 
 23805 ;; Registers used:
 23806 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23807 ;; Tracked objects:
 23808 ;;		On entry : 0/0
 23809 ;;		On exit  : 0/0
 23810 ;;		Unchanged: 0/0
 23811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23812 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23813 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23814 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23815 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23816 ;;Total ram usage:        5 bytes
 23817 ;; Hardware stack levels used: 1
 23818 ;; Hardware stack levels required when called: 3
 23819 ;; This function calls:
 23820 ;;		Nothing
 23821 ;; This function is called by:
 23822 ;;		_INTx_interrupt_init
 23823 ;; This function uses a non-reentrant model
 23824 ;;
 23825                           
 23826                           	psect	text89
 23827   00A06E                     __ptext89:
 23828                           	callstack 0
 23829   00A06E                     _INTx_Clear_Flag:
 23830                           	callstack 25
 23831   00A06E                     
 23832                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 383: static Std_ReturnType INTx_Cl
      +                          ear_Flag(const INTx_t * pin);MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 384: {
      +                          ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 385:     Std_ReturnType ret=((Std_
      +                          ReturnType)0X00);
 23833   00A06E  0E00               	movlw	0
 23834   00A070  6E07               	movwf	INTx_Clear_Flag@ret^0,c
 23835   00A072                     
 23836                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 386:     if(((void*)0)!=pin)
 23837   00A072  5003               	movf	INTx_Clear_Flag@pin^0,w,c
 23838   00A074  1004               	iorwf	(INTx_Clear_Flag@pin+1)^0,w,c
 23839   00A076  B4D8               	btfsc	status,2,c
 23840   00A078  EF40  F050         	goto	u10231
 23841   00A07C  EF42  F050         	goto	u10230
 23842   00A080                     u10231:
 23843   00A080  EF72  F050         	goto	l8914
 23844   00A084                     u10230:
 23845   00A084                     
 23846                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 387:     {;MCAL_Layer/mcal_interru
      +                          pt/mcal_external_interrupt.c: 388:         ret=((Std_ReturnType)0X01);
 23847   00A084  0E01               	movlw	1
 23848   00A086  6E07               	movwf	INTx_Clear_Flag@ret^0,c
 23849                           
 23850                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 389:         switch(pin->source)
 23851   00A088  EF53  F050         	goto	l8912
 23852   00A08C                     l732:
 23853                           
 23854                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 392:                 (INTCONbits.I
      +                          NT0IF=0);
 23855   00A08C  92F2               	bcf	242,1,c	;volatile
 23856                           
 23857                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 393:                 break;
 23858   00A08E  EF72  F050         	goto	l8914
 23859   00A092                     l734:
 23860                           
 23861                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 395:                 (INTCON3bits.
      +                          INT1IF=0);
 23862   00A092  90F0               	bcf	240,0,c	;volatile
 23863                           
 23864                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 396:                 break;
 23865   00A094  EF72  F050         	goto	l8914
 23866   00A098                     l735:
 23867                           
 23868                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 398:                 (INTCON3bits.
      +                          INT2IF=0);
 23869   00A098  92F0               	bcf	240,1,c	;volatile
 23870                           
 23871                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 399:                 break;
 23872   00A09A  EF72  F050         	goto	l8914
 23873   00A09E                     l8910:
 23874   00A09E  0E00               	movlw	0
 23875   00A0A0  6E07               	movwf	INTx_Clear_Flag@ret^0,c
 23876                           
 23877                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 401:         }
 23878   00A0A2  EF72  F050         	goto	l8914
 23879   00A0A6                     l8912:
 23880   00A0A6  EE20 F003          	lfsr	2,3
 23881   00A0AA  5003               	movf	INTx_Clear_Flag@pin^0,w,c
 23882   00A0AC  26D9               	addwf	fsr2l,f,c
 23883   00A0AE  5004               	movf	(INTx_Clear_Flag@pin+1)^0,w,c
 23884   00A0B0  22DA               	addwfc	fsr2h,f,c
 23885   00A0B2  50DF               	movf	indf2,w,c
 23886   00A0B4  6E05               	movwf	??_INTx_Clear_Flag^0,c
 23887   00A0B6  6A06               	clrf	(??_INTx_Clear_Flag+1)^0,c
 23888                           
 23889                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23890                           ; Switch size 1, requested type "simple"
 23891                           ; Number of cases is 1, Range of values is 0 to 0
 23892                           ; switch strategies available:
 23893                           ; Name         Instructions Cycles
 23894                           ; simple_byte            4     3 (average)
 23895                           ;	Chosen strategy is simple_byte
 23896   00A0B8  5006               	movf	(??_INTx_Clear_Flag+1)^0,w,c
 23897   00A0BA  0A00               	xorlw	0	; case 0
 23898   00A0BC  B4D8               	btfsc	status,2,c
 23899   00A0BE  EF63  F050         	goto	l13862
 23900   00A0C2  EF4F  F050         	goto	l8910
 23901   00A0C6                     l13862:
 23902                           
 23903                           ; Switch size 1, requested type "simple"
 23904                           ; Number of cases is 3, Range of values is 0 to 2
 23905                           ; switch strategies available:
 23906                           ; Name         Instructions Cycles
 23907                           ; simple_byte           10     6 (average)
 23908                           ;	Chosen strategy is simple_byte
 23909   00A0C6  5005               	movf	??_INTx_Clear_Flag^0,w,c
 23910   00A0C8  0A00               	xorlw	0	; case 0
 23911   00A0CA  B4D8               	btfsc	status,2,c
 23912   00A0CC  EF46  F050         	goto	l732
 23913   00A0D0  0A01               	xorlw	1	; case 1
 23914   00A0D2  B4D8               	btfsc	status,2,c
 23915   00A0D4  EF49  F050         	goto	l734
 23916   00A0D8  0A03               	xorlw	3	; case 2
 23917   00A0DA  B4D8               	btfsc	status,2,c
 23918   00A0DC  EF4C  F050         	goto	l735
 23919   00A0E0  EF4F  F050         	goto	l8910
 23920   00A0E4                     l8914:
 23921                           
 23922                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 403:     return ret;
 23923   00A0E4  5007               	movf	INTx_Clear_Flag@ret^0,w,c
 23924   00A0E6  0012               	return		;funcret
 23925   00A0E8                     __end_of_INTx_Clear_Flag:
 23926                           	callstack 0
 23927                           
 23928 ;; *************** function _GPIO_pin_dir_init *****************
 23929 ;; Defined at:
 23930 ;;		line 29 in file "MCAL_Layer/GPIO/hal_gpio.c"
 23931 ;; Parameters:    Size  Location     Type
 23932 ;;  _pin_cfg        2   12[COMRAM] PTR const struct .
 23933 ;;		 -> NB1(6), NB0(6), Keypad.keypad_col_pins(4), Keypad.keypad_row_pins(4), 
 23934 ;;		 -> Keypad(8), 
 23935 ;; Auto vars:     Size  Location     Type
 23936 ;;  ret             1   20[COMRAM] unsigned char 
 23937 ;; Return value:  Size  Location     Type
 23938 ;;                  1    wreg      unsigned char 
 23939 ;; Registers used:
 23940 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23941 ;; Tracked objects:
 23942 ;;		On entry : 0/0
 23943 ;;		On exit  : 0/0
 23944 ;;		Unchanged: 0/0
 23945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23946 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23947 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23948 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23949 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23950 ;;Total ram usage:        9 bytes
 23951 ;; Hardware stack levels used: 1
 23952 ;; Hardware stack levels required when called: 4
 23953 ;; This function calls:
 23954 ;;		_GPIO_pin_write
 23955 ;; This function is called by:
 23956 ;;		_GPIO_pin_init
 23957 ;;		_INTx_interrupt_init
 23958 ;;		_button_init
 23959 ;;		_RBx_interrupt_init
 23960 ;; This function uses a non-reentrant model
 23961 ;;
 23962                           
 23963                           	psect	text90
 23964   0081B6                     __ptext90:
 23965                           	callstack 0
 23966   0081B6                     _GPIO_pin_dir_init:
 23967                           	callstack 23
 23968   0081B6                     
 23969                           ;MCAL_Layer/GPIO/hal_gpio.c: 29: Std_ReturnType GPIO_pin_dir_init(const Pin_config_t * _
      +                          pin_cfg);MCAL_Layer/GPIO/hal_gpio.c: 30: {;MCAL_Layer/GPIO/hal_gpio.c: 31:     Std_Retur
      +                          nType ret = ((Std_ReturnType)0X00);
 23970   0081B6  0E00               	movlw	0
 23971   0081B8  6E15               	movwf	GPIO_pin_dir_init@ret^0,c
 23972   0081BA                     
 23973                           ;MCAL_Layer/GPIO/hal_gpio.c: 32:     if((((void*)0)!=_pin_cfg)&&(_pin_cfg->Pin < ((8)))&
      +                          &(_pin_cfg->Port < ((5))))
 23974   0081BA  500D               	movf	GPIO_pin_dir_init@_pin_cfg^0,w,c
 23975   0081BC  100E               	iorwf	(GPIO_pin_dir_init@_pin_cfg+1)^0,w,c
 23976   0081BE  B4D8               	btfsc	status,2,c
 23977   0081C0  EFE4  F040         	goto	u9001
 23978   0081C4  EFE6  F040         	goto	u9000
 23979   0081C8                     u9001:
 23980   0081C8  EFAA  F041         	goto	l8024
 23981   0081CC                     u9000:
 23982   0081CC  C00D  FFD9         	movff	GPIO_pin_dir_init@_pin_cfg,fsr2l
 23983   0081D0  C00E  FFDA         	movff	GPIO_pin_dir_init@_pin_cfg+1,fsr2h
 23984   0081D4  30DF               	rrcf	223,w,c
 23985   0081D6  32E8               	rrcf	wreg,f,c
 23986   0081D8  32E8               	rrcf	wreg,f,c
 23987   0081DA  0B07               	andlw	7
 23988   0081DC  6E0F               	movwf	??_GPIO_pin_dir_init^0,c
 23989   0081DE  0E08               	movlw	8
 23990   0081E0  600F               	cpfslt	??_GPIO_pin_dir_init^0,c
 23991   0081E2  EFF5  F040         	goto	u9011
 23992   0081E6  EFF7  F040         	goto	u9010
 23993   0081EA                     u9011:
 23994   0081EA  EFAA  F041         	goto	l8024
 23995   0081EE                     u9010:
 23996   0081EE  C00D  FFD9         	movff	GPIO_pin_dir_init@_pin_cfg,fsr2l
 23997   0081F2  C00E  FFDA         	movff	GPIO_pin_dir_init@_pin_cfg+1,fsr2h
 23998   0081F6  50DF               	movf	223,w,c
 23999   0081F8  0B07               	andlw	7
 24000   0081FA  6E0F               	movwf	??_GPIO_pin_dir_init^0,c
 24001   0081FC  0E05               	movlw	5
 24002   0081FE  600F               	cpfslt	??_GPIO_pin_dir_init^0,c
 24003   008200  EF04  F041         	goto	u9021
 24004   008204  EF06  F041         	goto	u9020
 24005   008208                     u9021:
 24006   008208  EFAA  F041         	goto	l8024
 24007   00820C                     u9020:
 24008   00820C                     
 24009                           ;MCAL_Layer/GPIO/hal_gpio.c: 33:     {;MCAL_Layer/GPIO/hal_gpio.c: 34:         ret=((Std
      +                          _ReturnType)0X01);
 24010   00820C  0E01               	movlw	1
 24011   00820E  6E15               	movwf	GPIO_pin_dir_init@ret^0,c
 24012                           
 24013                           ;MCAL_Layer/GPIO/hal_gpio.c: 35:         switch(_pin_cfg->Direction)
 24014   008210  EF89  F041         	goto	l8022
 24015   008214                     l8010:
 24016                           
 24017                           ;MCAL_Layer/GPIO/hal_gpio.c: 38:                 (*tris_registers[_pin_cfg->Port]&=~(1<<
      +                          _pin_cfg->Pin));
 24018   008214  C00D  FFD9         	movff	GPIO_pin_dir_init@_pin_cfg,fsr2l
 24019   008218  C00E  FFDA         	movff	GPIO_pin_dir_init@_pin_cfg+1,fsr2h
 24020   00821C  30DF               	rrcf	223,w,c
 24021   00821E  32E8               	rrcf	wreg,f,c
 24022   008220  32E8               	rrcf	wreg,f,c
 24023   008222  0B07               	andlw	7
 24024   008224  6E0F               	movwf	??_GPIO_pin_dir_init^0,c
 24025   008226  0E01               	movlw	1
 24026   008228  6E10               	movwf	(??_GPIO_pin_dir_init+1)^0,c
 24027   00822A  2A0F               	incf	??_GPIO_pin_dir_init^0,f,c
 24028   00822C  EF1A  F041         	goto	u9034
 24029   008230                     u9035:
 24030   008230  90D8               	bcf	status,0,c
 24031   008232  3610               	rlcf	(??_GPIO_pin_dir_init+1)^0,f,c
 24032   008234                     u9034:
 24033   008234  2E0F               	decfsz	??_GPIO_pin_dir_init^0,f,c
 24034   008236  EF18  F041         	goto	u9035
 24035   00823A  5010               	movf	(??_GPIO_pin_dir_init+1)^0,w,c
 24036   00823C  0AFF               	xorlw	255
 24037   00823E  6E11               	movwf	(??_GPIO_pin_dir_init+2)^0,c
 24038   008240  C00D  FFD9         	movff	GPIO_pin_dir_init@_pin_cfg,fsr2l
 24039   008244  C00E  FFDA         	movff	GPIO_pin_dir_init@_pin_cfg+1,fsr2h
 24040   008248  50DF               	movf	223,w,c
 24041   00824A  0B07               	andlw	7
 24042   00824C  6E12               	movwf	(??_GPIO_pin_dir_init+3)^0,c
 24043   00824E  5012               	movf	(??_GPIO_pin_dir_init+3)^0,w,c
 24044   008250  0D02               	mullw	2
 24045   008252  0EBD               	movlw	low _tris_registers
 24046   008254  24F3               	addwf	243,w,c
 24047   008256  6ED9               	movwf	fsr2l,c
 24048   008258  0E02               	movlw	high _tris_registers
 24049   00825A  20F4               	addwfc	prodh,w,c
 24050   00825C  6EDA               	movwf	fsr2h,c
 24051   00825E  CFDE F013          	movff	postinc2,??_GPIO_pin_dir_init+4
 24052   008262  CFDD F014          	movff	postdec2,??_GPIO_pin_dir_init+5
 24053   008266  C013  FFD9         	movff	??_GPIO_pin_dir_init+4,fsr2l
 24054   00826A  C014  FFDA         	movff	??_GPIO_pin_dir_init+5,fsr2h
 24055   00826E  5011               	movf	(??_GPIO_pin_dir_init+2)^0,w,c
 24056   008270  16DF               	andwf	indf2,f,c
 24057   008272                     
 24058                           ;MCAL_Layer/GPIO/hal_gpio.c: 39:                 GPIO_pin_write(_pin_cfg,_pin_cfg->Logic
      +                          );
 24059   008272  C00D  F003         	movff	GPIO_pin_dir_init@_pin_cfg,GPIO_pin_write@_pin_cfg
 24060   008276  C00E  F004         	movff	GPIO_pin_dir_init@_pin_cfg+1,GPIO_pin_write@_pin_cfg+1
 24061   00827A  C00D  FFD9         	movff	GPIO_pin_dir_init@_pin_cfg,fsr2l
 24062   00827E  C00E  FFDA         	movff	GPIO_pin_dir_init@_pin_cfg+1,fsr2h
 24063   008282  0E00               	movlw	0
 24064   008284  BEDF               	btfsc	indf2,7,c
 24065   008286  0E01               	movlw	1
 24066   008288  6E05               	movwf	GPIO_pin_write@logic^0,c
 24067   00828A  EC43  F045         	call	_GPIO_pin_write	;wreg free
 24068                           
 24069                           ;MCAL_Layer/GPIO/hal_gpio.c: 40:                 break;
 24070   00828E  EFAA  F041         	goto	l8024
 24071   008292                     l8014:
 24072                           
 24073                           ;MCAL_Layer/GPIO/hal_gpio.c: 42:                 (*tris_registers[_pin_cfg->Port]|=(1<<_
      +                          pin_cfg->Pin));
 24074   008292  C00D  FFD9         	movff	GPIO_pin_dir_init@_pin_cfg,fsr2l
 24075   008296  C00E  FFDA         	movff	GPIO_pin_dir_init@_pin_cfg+1,fsr2h
 24076   00829A  30DF               	rrcf	223,w,c
 24077   00829C  32E8               	rrcf	wreg,f,c
 24078   00829E  32E8               	rrcf	wreg,f,c
 24079   0082A0  0B07               	andlw	7
 24080   0082A2  6E0F               	movwf	??_GPIO_pin_dir_init^0,c
 24081   0082A4  0E01               	movlw	1
 24082   0082A6  6E10               	movwf	(??_GPIO_pin_dir_init+1)^0,c
 24083   0082A8  2A0F               	incf	??_GPIO_pin_dir_init^0,f,c
 24084   0082AA  EF59  F041         	goto	u9044
 24085   0082AE                     u9045:
 24086   0082AE  90D8               	bcf	status,0,c
 24087   0082B0  3610               	rlcf	(??_GPIO_pin_dir_init+1)^0,f,c
 24088   0082B2                     u9044:
 24089   0082B2  2E0F               	decfsz	??_GPIO_pin_dir_init^0,f,c
 24090   0082B4  EF57  F041         	goto	u9045
 24091   0082B8  C00D  FFD9         	movff	GPIO_pin_dir_init@_pin_cfg,fsr2l
 24092   0082BC  C00E  FFDA         	movff	GPIO_pin_dir_init@_pin_cfg+1,fsr2h
 24093   0082C0  50DF               	movf	223,w,c
 24094   0082C2  0B07               	andlw	7
 24095   0082C4  6E11               	movwf	(??_GPIO_pin_dir_init+2)^0,c
 24096   0082C6  5011               	movf	(??_GPIO_pin_dir_init+2)^0,w,c
 24097   0082C8  0D02               	mullw	2
 24098   0082CA  0EBD               	movlw	low _tris_registers
 24099   0082CC  24F3               	addwf	243,w,c
 24100   0082CE  6ED9               	movwf	fsr2l,c
 24101   0082D0  0E02               	movlw	high _tris_registers
 24102   0082D2  20F4               	addwfc	prodh,w,c
 24103   0082D4  6EDA               	movwf	fsr2h,c
 24104   0082D6  CFDE F012          	movff	postinc2,??_GPIO_pin_dir_init+3
 24105   0082DA  CFDD F013          	movff	postdec2,??_GPIO_pin_dir_init+4
 24106   0082DE  C012  FFD9         	movff	??_GPIO_pin_dir_init+3,fsr2l
 24107   0082E2  C013  FFDA         	movff	??_GPIO_pin_dir_init+4,fsr2h
 24108   0082E6  5010               	movf	(??_GPIO_pin_dir_init+1)^0,w,c
 24109   0082E8  12DF               	iorwf	indf2,f,c
 24110   0082EA                     
 24111                           ;MCAL_Layer/GPIO/hal_gpio.c: 43:                 GPIO_pin_write(_pin_cfg,_pin_cfg->Logic
      +                          );
 24112   0082EA  C00D  F003         	movff	GPIO_pin_dir_init@_pin_cfg,GPIO_pin_write@_pin_cfg
 24113   0082EE  C00E  F004         	movff	GPIO_pin_dir_init@_pin_cfg+1,GPIO_pin_write@_pin_cfg+1
 24114   0082F2  C00D  FFD9         	movff	GPIO_pin_dir_init@_pin_cfg,fsr2l
 24115   0082F6  C00E  FFDA         	movff	GPIO_pin_dir_init@_pin_cfg+1,fsr2h
 24116   0082FA  0E00               	movlw	0
 24117   0082FC  BEDF               	btfsc	indf2,7,c
 24118   0082FE  0E01               	movlw	1
 24119   008300  6E05               	movwf	GPIO_pin_write@logic^0,c
 24120   008302  EC43  F045         	call	_GPIO_pin_write	;wreg free
 24121                           
 24122                           ;MCAL_Layer/GPIO/hal_gpio.c: 44:                 break;
 24123   008306  EFAA  F041         	goto	l8024
 24124   00830A                     l8018:
 24125                           
 24126                           ;MCAL_Layer/GPIO/hal_gpio.c: 46:                 ret = ((Std_ReturnType)0X00);
 24127   00830A  0E00               	movlw	0
 24128   00830C  6E15               	movwf	GPIO_pin_dir_init@ret^0,c
 24129                           
 24130                           ;MCAL_Layer/GPIO/hal_gpio.c: 47:                 break;
 24131   00830E  EFAA  F041         	goto	l8024
 24132   008312                     l8022:
 24133   008312  C00D  FFD9         	movff	GPIO_pin_dir_init@_pin_cfg,fsr2l
 24134   008316  C00E  FFDA         	movff	GPIO_pin_dir_init@_pin_cfg+1,fsr2h
 24135   00831A  BCDF               	btfsc	indf2,6,c
 24136   00831C  EF92  F041         	goto	u9051
 24137   008320  EF95  F041         	goto	u9050
 24138   008324                     u9051:
 24139   008324  0E01               	movlw	1
 24140   008326  EF96  F041         	goto	u9060
 24141   00832A                     u9050:
 24142   00832A  0E00               	movlw	0
 24143   00832C                     u9060:
 24144   00832C  6E0F               	movwf	??_GPIO_pin_dir_init^0,c
 24145   00832E  6A10               	clrf	(??_GPIO_pin_dir_init+1)^0,c
 24146                           
 24147                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24148                           ; Switch size 1, requested type "simple"
 24149                           ; Number of cases is 1, Range of values is 0 to 0
 24150                           ; switch strategies available:
 24151                           ; Name         Instructions Cycles
 24152                           ; simple_byte            4     3 (average)
 24153                           ;	Chosen strategy is simple_byte
 24154   008330  5010               	movf	(??_GPIO_pin_dir_init+1)^0,w,c
 24155   008332  0A00               	xorlw	0	; case 0
 24156   008334  B4D8               	btfsc	status,2,c
 24157   008336  EF9F  F041         	goto	l13864
 24158   00833A  EF85  F041         	goto	l8018
 24159   00833E                     l13864:
 24160                           
 24161                           ; Switch size 1, requested type "simple"
 24162                           ; Number of cases is 2, Range of values is 0 to 1
 24163                           ; switch strategies available:
 24164                           ; Name         Instructions Cycles
 24165                           ; simple_byte            7     4 (average)
 24166                           ;	Chosen strategy is simple_byte
 24167   00833E  500F               	movf	??_GPIO_pin_dir_init^0,w,c
 24168   008340  0A00               	xorlw	0	; case 0
 24169   008342  B4D8               	btfsc	status,2,c
 24170   008344  EF0A  F041         	goto	l8010
 24171   008348  0A01               	xorlw	1	; case 1
 24172   00834A  B4D8               	btfsc	status,2,c
 24173   00834C  EF49  F041         	goto	l8014
 24174   008350  EF85  F041         	goto	l8018
 24175   008354                     l8024:
 24176                           
 24177                           ;MCAL_Layer/GPIO/hal_gpio.c: 50:     return ret;
 24178   008354  5015               	movf	GPIO_pin_dir_init@ret^0,w,c
 24179   008356  0012               	return		;funcret
 24180   008358                     __end_of_GPIO_pin_dir_init:
 24181                           	callstack 0
 24182                           
 24183 ;; *************** function _GPIO_pin_write *****************
 24184 ;; Defined at:
 24185 ;;		line 99 in file "MCAL_Layer/GPIO/hal_gpio.c"
 24186 ;; Parameters:    Size  Location     Type
 24187 ;;  _pin_cfg        2    2[COMRAM] PTR const struct .
 24188 ;;		 -> NB1(6), NB0(6), Keypad.keypad_col_pins(4), Keypad.keypad_row_pins(4), 
 24189 ;;		 -> Keypad(8), 
 24190 ;;  logic           1    4[COMRAM] enum E3401
 24191 ;; Auto vars:     Size  Location     Type
 24192 ;;  ret             1   11[COMRAM] unsigned char 
 24193 ;; Return value:  Size  Location     Type
 24194 ;;                  1    wreg      unsigned char 
 24195 ;; Registers used:
 24196 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24197 ;; Tracked objects:
 24198 ;;		On entry : 0/0
 24199 ;;		On exit  : 0/0
 24200 ;;		Unchanged: 0/0
 24201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24202 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24203 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24204 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24205 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24206 ;;Total ram usage:       10 bytes
 24207 ;; Hardware stack levels used: 1
 24208 ;; Hardware stack levels required when called: 3
 24209 ;; This function calls:
 24210 ;;		Nothing
 24211 ;; This function is called by:
 24212 ;;		_keypad_get_val
 24213 ;;		_GPIO_pin_dir_init
 24214 ;;		_GPIO_pin_init
 24215 ;; This function uses a non-reentrant model
 24216 ;;
 24217                           
 24218                           	psect	text91
 24219   008A86                     __ptext91:
 24220                           	callstack 0
 24221   008A86                     _GPIO_pin_write:
 24222                           	callstack 26
 24223   008A86                     
 24224                           ;MCAL_Layer/GPIO/hal_gpio.c: 99: Std_ReturnType GPIO_pin_write(const Pin_config_t * _pin
      +                          _cfg,Logic_t logic);MCAL_Layer/GPIO/hal_gpio.c: 100: {;MCAL_Layer/GPIO/hal_gpio.c: 101: 
      +                              Std_ReturnType ret = ((Std_ReturnType)0X00);
 24225   008A86  0E00               	movlw	0
 24226   008A88  6E0C               	movwf	GPIO_pin_write@ret^0,c
 24227   008A8A                     
 24228                           ;MCAL_Layer/GPIO/hal_gpio.c: 102:     if((((void*)0)!=_pin_cfg)&&(_pin_cfg->Pin < ((8)))
      +                          &&(_pin_cfg->Port < ((5))))
 24229   008A8A  5003               	movf	GPIO_pin_write@_pin_cfg^0,w,c
 24230   008A8C  1004               	iorwf	(GPIO_pin_write@_pin_cfg+1)^0,w,c
 24231   008A8E  B4D8               	btfsc	status,2,c
 24232   008A90  EF4C  F045         	goto	u8741
 24233   008A94  EF4E  F045         	goto	u8740
 24234   008A98                     u8741:
 24235   008A98  EFEA  F045         	goto	l7804
 24236   008A9C                     u8740:
 24237   008A9C  C003  FFD9         	movff	GPIO_pin_write@_pin_cfg,fsr2l
 24238   008AA0  C004  FFDA         	movff	GPIO_pin_write@_pin_cfg+1,fsr2h
 24239   008AA4  30DF               	rrcf	223,w,c
 24240   008AA6  32E8               	rrcf	wreg,f,c
 24241   008AA8  32E8               	rrcf	wreg,f,c
 24242   008AAA  0B07               	andlw	7
 24243   008AAC  6E06               	movwf	??_GPIO_pin_write^0,c
 24244   008AAE  0E08               	movlw	8
 24245   008AB0  6006               	cpfslt	??_GPIO_pin_write^0,c
 24246   008AB2  EF5D  F045         	goto	u8751
 24247   008AB6  EF5F  F045         	goto	u8750
 24248   008ABA                     u8751:
 24249   008ABA  EFEA  F045         	goto	l7804
 24250   008ABE                     u8750:
 24251   008ABE  C003  FFD9         	movff	GPIO_pin_write@_pin_cfg,fsr2l
 24252   008AC2  C004  FFDA         	movff	GPIO_pin_write@_pin_cfg+1,fsr2h
 24253   008AC6  50DF               	movf	223,w,c
 24254   008AC8  0B07               	andlw	7
 24255   008ACA  6E06               	movwf	??_GPIO_pin_write^0,c
 24256   008ACC  0E05               	movlw	5
 24257   008ACE  6006               	cpfslt	??_GPIO_pin_write^0,c
 24258   008AD0  EF6C  F045         	goto	u8761
 24259   008AD4  EF6E  F045         	goto	u8760
 24260   008AD8                     u8761:
 24261   008AD8  EFEA  F045         	goto	l7804
 24262   008ADC                     u8760:
 24263   008ADC                     
 24264                           ;MCAL_Layer/GPIO/hal_gpio.c: 103:     {;MCAL_Layer/GPIO/hal_gpio.c: 104:         ret=((S
      +                          td_ReturnType)0X01);
 24265   008ADC  0E01               	movlw	1
 24266   008ADE  6E0C               	movwf	GPIO_pin_write@ret^0,c
 24267                           
 24268                           ;MCAL_Layer/GPIO/hal_gpio.c: 105:         switch(logic)
 24269   008AE0  EFD5  F045         	goto	l7802
 24270   008AE4                     l7794:
 24271                           
 24272                           ;MCAL_Layer/GPIO/hal_gpio.c: 108:                 (*lat_registers[_pin_cfg->Port]&=~(1<<
      +                          _pin_cfg->Pin));
 24273   008AE4  C003  FFD9         	movff	GPIO_pin_write@_pin_cfg,fsr2l
 24274   008AE8  C004  FFDA         	movff	GPIO_pin_write@_pin_cfg+1,fsr2h
 24275   008AEC  30DF               	rrcf	223,w,c
 24276   008AEE  32E8               	rrcf	wreg,f,c
 24277   008AF0  32E8               	rrcf	wreg,f,c
 24278   008AF2  0B07               	andlw	7
 24279   008AF4  6E06               	movwf	??_GPIO_pin_write^0,c
 24280   008AF6  0E01               	movlw	1
 24281   008AF8  6E07               	movwf	(??_GPIO_pin_write+1)^0,c
 24282   008AFA  2A06               	incf	??_GPIO_pin_write^0,f,c
 24283   008AFC  EF82  F045         	goto	u8774
 24284   008B00                     u8775:
 24285   008B00  90D8               	bcf	status,0,c
 24286   008B02  3607               	rlcf	(??_GPIO_pin_write+1)^0,f,c
 24287   008B04                     u8774:
 24288   008B04  2E06               	decfsz	??_GPIO_pin_write^0,f,c
 24289   008B06  EF80  F045         	goto	u8775
 24290   008B0A  5007               	movf	(??_GPIO_pin_write+1)^0,w,c
 24291   008B0C  0AFF               	xorlw	255
 24292   008B0E  6E08               	movwf	(??_GPIO_pin_write+2)^0,c
 24293   008B10  C003  FFD9         	movff	GPIO_pin_write@_pin_cfg,fsr2l
 24294   008B14  C004  FFDA         	movff	GPIO_pin_write@_pin_cfg+1,fsr2h
 24295   008B18  50DF               	movf	223,w,c
 24296   008B1A  0B07               	andlw	7
 24297   008B1C  6E09               	movwf	(??_GPIO_pin_write+3)^0,c
 24298   008B1E  5009               	movf	(??_GPIO_pin_write+3)^0,w,c
 24299   008B20  0D02               	mullw	2
 24300   008B22  0EB3               	movlw	low _lat_registers
 24301   008B24  24F3               	addwf	243,w,c
 24302   008B26  6ED9               	movwf	fsr2l,c
 24303   008B28  0E02               	movlw	high _lat_registers
 24304   008B2A  20F4               	addwfc	prodh,w,c
 24305   008B2C  6EDA               	movwf	fsr2h,c
 24306   008B2E  CFDE F00A          	movff	postinc2,??_GPIO_pin_write+4
 24307   008B32  CFDD F00B          	movff	postdec2,??_GPIO_pin_write+5
 24308   008B36  C00A  FFD9         	movff	??_GPIO_pin_write+4,fsr2l
 24309   008B3A  C00B  FFDA         	movff	??_GPIO_pin_write+5,fsr2h
 24310   008B3E  5008               	movf	(??_GPIO_pin_write+2)^0,w,c
 24311   008B40  16DF               	andwf	indf2,f,c
 24312                           
 24313                           ;MCAL_Layer/GPIO/hal_gpio.c: 109:                 break;
 24314   008B42  EFEA  F045         	goto	l7804
 24315   008B46                     l7796:
 24316                           
 24317                           ;MCAL_Layer/GPIO/hal_gpio.c: 111:                 (*lat_registers[_pin_cfg->Port]|=(1<<_
      +                          pin_cfg->Pin));
 24318   008B46  C003  FFD9         	movff	GPIO_pin_write@_pin_cfg,fsr2l
 24319   008B4A  C004  FFDA         	movff	GPIO_pin_write@_pin_cfg+1,fsr2h
 24320   008B4E  30DF               	rrcf	223,w,c
 24321   008B50  32E8               	rrcf	wreg,f,c
 24322   008B52  32E8               	rrcf	wreg,f,c
 24323   008B54  0B07               	andlw	7
 24324   008B56  6E06               	movwf	??_GPIO_pin_write^0,c
 24325   008B58  0E01               	movlw	1
 24326   008B5A  6E07               	movwf	(??_GPIO_pin_write+1)^0,c
 24327   008B5C  2A06               	incf	??_GPIO_pin_write^0,f,c
 24328   008B5E  EFB3  F045         	goto	u8784
 24329   008B62                     u8785:
 24330   008B62  90D8               	bcf	status,0,c
 24331   008B64  3607               	rlcf	(??_GPIO_pin_write+1)^0,f,c
 24332   008B66                     u8784:
 24333   008B66  2E06               	decfsz	??_GPIO_pin_write^0,f,c
 24334   008B68  EFB1  F045         	goto	u8785
 24335   008B6C  C003  FFD9         	movff	GPIO_pin_write@_pin_cfg,fsr2l
 24336   008B70  C004  FFDA         	movff	GPIO_pin_write@_pin_cfg+1,fsr2h
 24337   008B74  50DF               	movf	223,w,c
 24338   008B76  0B07               	andlw	7
 24339   008B78  6E08               	movwf	(??_GPIO_pin_write+2)^0,c
 24340   008B7A  5008               	movf	(??_GPIO_pin_write+2)^0,w,c
 24341   008B7C  0D02               	mullw	2
 24342   008B7E  0EB3               	movlw	low _lat_registers
 24343   008B80  24F3               	addwf	243,w,c
 24344   008B82  6ED9               	movwf	fsr2l,c
 24345   008B84  0E02               	movlw	high _lat_registers
 24346   008B86  20F4               	addwfc	prodh,w,c
 24347   008B88  6EDA               	movwf	fsr2h,c
 24348   008B8A  CFDE F009          	movff	postinc2,??_GPIO_pin_write+3
 24349   008B8E  CFDD F00A          	movff	postdec2,??_GPIO_pin_write+4
 24350   008B92  C009  FFD9         	movff	??_GPIO_pin_write+3,fsr2l
 24351   008B96  C00A  FFDA         	movff	??_GPIO_pin_write+4,fsr2h
 24352   008B9A  5007               	movf	(??_GPIO_pin_write+1)^0,w,c
 24353   008B9C  12DF               	iorwf	indf2,f,c
 24354                           
 24355                           ;MCAL_Layer/GPIO/hal_gpio.c: 112:                 break;
 24356   008B9E  EFEA  F045         	goto	l7804
 24357   008BA2                     l7798:
 24358                           
 24359                           ;MCAL_Layer/GPIO/hal_gpio.c: 114:                 ret = ((Std_ReturnType)0X00);
 24360   008BA2  0E00               	movlw	0
 24361   008BA4  6E0C               	movwf	GPIO_pin_write@ret^0,c
 24362                           
 24363                           ;MCAL_Layer/GPIO/hal_gpio.c: 115:                 break;
 24364   008BA6  EFEA  F045         	goto	l7804
 24365   008BAA                     l7802:
 24366   008BAA  5005               	movf	GPIO_pin_write@logic^0,w,c
 24367   008BAC  6E06               	movwf	??_GPIO_pin_write^0,c
 24368   008BAE  6A07               	clrf	(??_GPIO_pin_write+1)^0,c
 24369                           
 24370                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24371                           ; Switch size 1, requested type "simple"
 24372                           ; Number of cases is 1, Range of values is 0 to 0
 24373                           ; switch strategies available:
 24374                           ; Name         Instructions Cycles
 24375                           ; simple_byte            4     3 (average)
 24376                           ;	Chosen strategy is simple_byte
 24377   008BB0  5007               	movf	(??_GPIO_pin_write+1)^0,w,c
 24378   008BB2  0A00               	xorlw	0	; case 0
 24379   008BB4  B4D8               	btfsc	status,2,c
 24380   008BB6  EFDF  F045         	goto	l13866
 24381   008BBA  EFD1  F045         	goto	l7798
 24382   008BBE                     l13866:
 24383                           
 24384                           ; Switch size 1, requested type "simple"
 24385                           ; Number of cases is 2, Range of values is 0 to 1
 24386                           ; switch strategies available:
 24387                           ; Name         Instructions Cycles
 24388                           ; simple_byte            7     4 (average)
 24389                           ;	Chosen strategy is simple_byte
 24390   008BBE  5006               	movf	??_GPIO_pin_write^0,w,c
 24391   008BC0  0A00               	xorlw	0	; case 0
 24392   008BC2  B4D8               	btfsc	status,2,c
 24393   008BC4  EF72  F045         	goto	l7794
 24394   008BC8  0A01               	xorlw	1	; case 1
 24395   008BCA  B4D8               	btfsc	status,2,c
 24396   008BCC  EFA3  F045         	goto	l7796
 24397   008BD0  EFD1  F045         	goto	l7798
 24398   008BD4                     l7804:
 24399                           
 24400                           ;MCAL_Layer/GPIO/hal_gpio.c: 118:      return ret;
 24401   008BD4  500C               	movf	GPIO_pin_write@ret^0,w,c
 24402   008BD6  0012               	return		;funcret
 24403   008BD8                     __end_of_GPIO_pin_write:
 24404                           	callstack 0
 24405                           
 24406 ;; *************** function _InterruptMananger *****************
 24407 ;; Defined at:
 24408 ;;		line 29 in file "MCAL_Layer/mcal_interrupt/interrupt_manager.c"
 24409 ;; Parameters:    Size  Location     Type
 24410 ;;		None
 24411 ;; Auto vars:     Size  Location     Type
 24412 ;;		None
 24413 ;; Return value:  Size  Location     Type
 24414 ;;                  1    wreg      void 
 24415 ;; Registers used:
 24416 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 24417 ;; Tracked objects:
 24418 ;;		On entry : 0/0
 24419 ;;		On exit  : 0/0
 24420 ;;		Unchanged: 0/0
 24421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24424 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24425 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24426 ;;Total ram usage:        2 bytes
 24427 ;; Hardware stack levels used: 1
 24428 ;; Hardware stack levels required when called: 2
 24429 ;; This function calls:
 24430 ;;		_INT0_ISR
 24431 ;;		_INT1_ISR
 24432 ;; This function is called by:
 24433 ;;		Interrupt level 2
 24434 ;; This function uses a non-reentrant model
 24435 ;;
 24436                           
 24437                           	psect	intcode
 24438   000008                     __pintcode:
 24439                           	callstack 0
 24440   000008                     _InterruptMananger:
 24441                           	callstack 18
 24442                           
 24443                           ;incstack = 0
 24444   000008  827D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 24445   00000A  ED4C  F052         	call	int_func,f	;refresh shadow registers
 24446                           
 24447                           	psect	intcode_body
 24448   00A498                     __pintcode_body:
 24449                           	callstack 18
 24450   00A498                     int_func:
 24451                           	callstack 18
 24452   00A498  0006               	pop		; remove dummy address from shadow register refresh
 24453   00A49A  CFFA F001          	movff	pclath,??_InterruptMananger
 24454   00A49E  CFFB F002          	movff	pclatu,??_InterruptMananger+1
 24455   00A4A2                     
 24456                           ;MCAL_Layer/mcal_interrupt/interrupt_manager.c: 32:     if(((1) == INTCONbits.INT0IE)&&(
      +                          ((1) == INTCONbits.INT0F)))
 24457   00A4A2  A8F2               	btfss	242,4,c	;volatile
 24458   00A4A4  EF56  F052         	goto	i2u1282_41
 24459   00A4A8  EF58  F052         	goto	i2u1282_40
 24460   00A4AC                     i2u1282_41:
 24461   00A4AC  EF61  F052         	goto	i2l560
 24462   00A4B0                     i2u1282_40:
 24463   00A4B0  A2F2               	btfss	242,1,c	;volatile
 24464   00A4B2  EF5D  F052         	goto	i2u1283_41
 24465   00A4B6  EF5F  F052         	goto	i2u1283_40
 24466   00A4BA                     i2u1283_41:
 24467   00A4BA  EF61  F052         	goto	i2l560
 24468   00A4BE                     i2u1283_40:
 24469   00A4BE                     
 24470                           ;MCAL_Layer/mcal_interrupt/interrupt_manager.c: 33:     {;MCAL_Layer/mcal_interrupt/inte
      +                          rrupt_manager.c: 34:         INT0_ISR();
 24471   00A4BE  EC59  F055         	call	_INT0_ISR	;wreg free
 24472   00A4C2                     i2l560:
 24473                           
 24474                           ;MCAL_Layer/mcal_interrupt/interrupt_manager.c: 37:     if(((1) == INTCON3bits.INT1IE)&&
      +                          (((1) == INTCON3bits.INT1F)))
 24475   00A4C2  A6F0               	btfss	240,3,c	;volatile
 24476   00A4C4  EF66  F052         	goto	i2u1284_41
 24477   00A4C8  EF68  F052         	goto	i2u1284_40
 24478   00A4CC                     i2u1284_41:
 24479   00A4CC  EF71  F052         	goto	i2l563
 24480   00A4D0                     i2u1284_40:
 24481   00A4D0  A0F0               	btfss	240,0,c	;volatile
 24482   00A4D2  EF6D  F052         	goto	i2u1285_41
 24483   00A4D6  EF6F  F052         	goto	i2u1285_40
 24484   00A4DA                     i2u1285_41:
 24485   00A4DA  EF71  F052         	goto	i2l563
 24486   00A4DE                     i2u1285_40:
 24487   00A4DE                     
 24488                           ;MCAL_Layer/mcal_interrupt/interrupt_manager.c: 38:     {;MCAL_Layer/mcal_interrupt/inte
      +                          rrupt_manager.c: 39:         INT1_ISR();
 24489   00A4DE  EC41  F055         	call	_INT1_ISR	;wreg free
 24490   00A4E2                     i2l563:
 24491   00A4E2  C002  FFFB         	movff	??_InterruptMananger+1,pclatu
 24492   00A4E6  C001  FFFA         	movff	??_InterruptMananger,pclath
 24493   00A4EA  927D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 24494   00A4EC  0011               	retfie		f
 24495   00A4EE                     __end_of_InterruptMananger:
 24496                           	callstack 0
 24497                           
 24498 ;; *************** function _INT1_ISR *****************
 24499 ;; Defined at:
 24500 ;;		line 53 in file "MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c"
 24501 ;; Parameters:    Size  Location     Type
 24502 ;;		None
 24503 ;; Auto vars:     Size  Location     Type
 24504 ;;		None
 24505 ;; Return value:  Size  Location     Type
 24506 ;;                  1    wreg      void 
 24507 ;; Registers used:
 24508 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 24509 ;; Tracked objects:
 24510 ;;		On entry : 0/0
 24511 ;;		On exit  : 0/0
 24512 ;;		Unchanged: 0/0
 24513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24518 ;;Total ram usage:        0 bytes
 24519 ;; Hardware stack levels used: 1
 24520 ;; Hardware stack levels required when called: 1
 24521 ;; This function calls:
 24522 ;;		Absolute function
 24523 ;;		_EXTINT0
 24524 ;;		_EXTINT1
 24525 ;; This function is called by:
 24526 ;;		_InterruptMananger
 24527 ;; This function uses a non-reentrant model
 24528 ;;
 24529                           
 24530                           	psect	text93
 24531   00AA82                     __ptext93:
 24532                           	callstack 0
 24533   00AA82                     _INT1_ISR:
 24534                           	callstack 18
 24535   00AA82                     
 24536                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 55:     (INTCON3bits.INT1IF=0);
 24537   00AA82  90F0               	bcf	240,0,c	;volatile
 24538   00AA84                     
 24539                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 56:     if(INT1_InterruptHandler)
 24540   00AA84  0102               	movlb	2	; () banked
 24541   00AA86  5131               	movf	_INT1_InterruptHandler& (0+255),w,b
 24542   00AA88  1132               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 24543   00AA8A  B4D8               	btfsc	status,2,c
 24544   00AA8C  EF4A  F055         	goto	i2u1244_41
 24545   00AA90  EF4C  F055         	goto	i2u1244_40
 24546   00AA94                     i2u1244_41:
 24547   00AA94  EF58  F055         	goto	i2l615
 24548   00AA98                     i2u1244_40:
 24549   00AA98                     
 24550                           ; BSR set to: 2
 24551                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 57:     {;MCAL_Layer/mcal_interrup
      +                          t/mcal_external_interrupt.c: 58:         INT1_InterruptHandler();
 24552   00AA98  D802               	call	i2u1245_48
 24553   00AA9A  EF58  F055         	goto	i2u1245_49
 24554   00AA9E                     i2u1245_48:
 24555   00AA9E  0005               	push	
 24556   00AAA0  6EFA               	movwf	pclath,c
 24557   00AAA2  5131               	movf	_INT1_InterruptHandler& (0+255),w,b
 24558   00AAA4  6EFD               	movwf	tosl,c
 24559   00AAA6  5132               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 24560   00AAA8  6EFE               	movwf	tosh,c
 24561   00AAAA  6AFF               	clrf	tosu,c
 24562   00AAAC  50FA               	movf	pclath,w,c
 24563   00AAAE  0012               	return		;indir
 24564   00AAB0                     i2u1245_49:
 24565   00AAB0                     i2l615:
 24566   00AAB0  0012               	return		;funcret
 24567   00AAB2                     __end_of_INT1_ISR:
 24568                           	callstack 0
 24569                           
 24570 ;; *************** function _INT0_ISR *****************
 24571 ;; Defined at:
 24572 ;;		line 45 in file "MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c"
 24573 ;; Parameters:    Size  Location     Type
 24574 ;;		None
 24575 ;; Auto vars:     Size  Location     Type
 24576 ;;		None
 24577 ;; Return value:  Size  Location     Type
 24578 ;;                  1    wreg      void 
 24579 ;; Registers used:
 24580 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 24581 ;; Tracked objects:
 24582 ;;		On entry : 0/0
 24583 ;;		On exit  : 0/0
 24584 ;;		Unchanged: 0/0
 24585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24590 ;;Total ram usage:        0 bytes
 24591 ;; Hardware stack levels used: 1
 24592 ;; Hardware stack levels required when called: 1
 24593 ;; This function calls:
 24594 ;;		Absolute function
 24595 ;;		_EXTINT0
 24596 ;;		_EXTINT1
 24597 ;; This function is called by:
 24598 ;;		_InterruptMananger
 24599 ;; This function uses a non-reentrant model
 24600 ;;
 24601                           
 24602                           	psect	text94
 24603   00AAB2                     __ptext94:
 24604                           	callstack 0
 24605   00AAB2                     _INT0_ISR:
 24606                           	callstack 18
 24607   00AAB2                     
 24608                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 47:     (INTCONbits.INT0IF=0);
 24609   00AAB2  92F2               	bcf	242,1,c	;volatile
 24610   00AAB4                     
 24611                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 48:     if(INT0_InterruptHandler)
 24612   00AAB4  0102               	movlb	2	; () banked
 24613   00AAB6  5133               	movf	_INT0_InterruptHandler& (0+255),w,b
 24614   00AAB8  1134               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 24615   00AABA  B4D8               	btfsc	status,2,c
 24616   00AABC  EF62  F055         	goto	i2u1242_41
 24617   00AAC0  EF64  F055         	goto	i2u1242_40
 24618   00AAC4                     i2u1242_41:
 24619   00AAC4  EF70  F055         	goto	i2l611
 24620   00AAC8                     i2u1242_40:
 24621   00AAC8                     
 24622                           ; BSR set to: 2
 24623                           ;MCAL_Layer/mcal_interrupt/mcal_external_interrupt.c: 49:     {;MCAL_Layer/mcal_interrup
      +                          t/mcal_external_interrupt.c: 50:         INT0_InterruptHandler();
 24624   00AAC8  D802               	call	i2u1243_48
 24625   00AACA  EF70  F055         	goto	i2u1243_49
 24626   00AACE                     i2u1243_48:
 24627   00AACE  0005               	push	
 24628   00AAD0  6EFA               	movwf	pclath,c
 24629   00AAD2  5133               	movf	_INT0_InterruptHandler& (0+255),w,b
 24630   00AAD4  6EFD               	movwf	tosl,c
 24631   00AAD6  5134               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 24632   00AAD8  6EFE               	movwf	tosh,c
 24633   00AADA  6AFF               	clrf	tosu,c
 24634   00AADC  50FA               	movf	pclath,w,c
 24635   00AADE  0012               	return		;indir
 24636   00AAE0                     i2u1243_49:
 24637   00AAE0                     i2l611:
 24638   00AAE0  0012               	return		;funcret
 24639   00AAE2                     __end_of_INT0_ISR:
 24640                           	callstack 0
 24641                           
 24642 ;; *************** function _EXTINT0 *****************
 24643 ;; Defined at:
 24644 ;;		line 102 in file "Calculator.c"
 24645 ;; Parameters:    Size  Location     Type
 24646 ;;		None
 24647 ;; Auto vars:     Size  Location     Type
 24648 ;;		None
 24649 ;; Return value:  Size  Location     Type
 24650 ;;                  1    wreg      void 
 24651 ;; Registers used:
 24652 ;;		wreg, status,2
 24653 ;; Tracked objects:
 24654 ;;		On entry : 0/0
 24655 ;;		On exit  : 0/0
 24656 ;;		Unchanged: 0/0
 24657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24662 ;;Total ram usage:        0 bytes
 24663 ;; Hardware stack levels used: 1
 24664 ;; This function calls:
 24665 ;;		Nothing
 24666 ;; This function is called by:
 24667 ;;		_INT0_ISR
 24668 ;;		_INT1_ISR
 24669 ;;		_INT2_ISR
 24670 ;; This function uses a non-reentrant model
 24671 ;;
 24672                           
 24673                           	psect	text95
 24674   00ACA2                     __ptext95:
 24675                           	callstack 0
 24676   00ACA2                     _EXTINT0:
 24677                           	callstack 18
 24678   00ACA2                     
 24679                           ;Calculator.c: 103:     keypadder = '.';
 24680   00ACA2  0E2E               	movlw	46
 24681   00ACA4  0101               	movlb	1	; () banked
 24682   00ACA6  6FFE               	movwf	_keypadder& (0+255),b	;volatile
 24683   00ACA8                     
 24684                           ; BSR set to: 1
 24685   00ACA8  0012               	return		;funcret
 24686   00ACAA                     __end_of_EXTINT0:
 24687                           	callstack 0
 24688                           
 24689 ;; *************** function _EXTINT1 *****************
 24690 ;; Defined at:
 24691 ;;		line 110 in file "Calculator.c"
 24692 ;; Parameters:    Size  Location     Type
 24693 ;;		None
 24694 ;; Auto vars:     Size  Location     Type
 24695 ;;		None
 24696 ;; Return value:  Size  Location     Type
 24697 ;;                  1    wreg      void 
 24698 ;; Registers used:
 24699 ;;		wreg, status,2
 24700 ;; Tracked objects:
 24701 ;;		On entry : 0/0
 24702 ;;		On exit  : 0/0
 24703 ;;		Unchanged: 0/0
 24704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24709 ;;Total ram usage:        0 bytes
 24710 ;; Hardware stack levels used: 1
 24711 ;; This function calls:
 24712 ;;		Nothing
 24713 ;; This function is called by:
 24714 ;;		_INT0_ISR
 24715 ;;		_INT1_ISR
 24716 ;;		_INT2_ISR
 24717 ;; This function uses a non-reentrant model
 24718 ;;
 24719                           
 24720                           	psect	text96
 24721   00ACAA                     __ptext96:
 24722                           	callstack 0
 24723   00ACAA                     _EXTINT1:
 24724                           	callstack 18
 24725   00ACAA                     
 24726                           ;Calculator.c: 111:     keypadder = ('@');
 24727   00ACAA  0E40               	movlw	64
 24728   00ACAC  0101               	movlb	1	; () banked
 24729   00ACAE  6FFE               	movwf	_keypadder& (0+255),b	;volatile
 24730   00ACB0                     
 24731                           ; BSR set to: 1
 24732   00ACB0  0012               	return		;funcret
 24733   00ACB2                     __end_of_EXTINT1:
 24734                           	callstack 0
 24735                           
 24736                           	psect	text97
 24737   000000                     __ptext97:
 24738                           	callstack 0
 24739   000000                     
 24740                           	psect	rparam
 24741   000000                     
 24742                           	psect	temp
 24743   00007D                     btemp:
 24744                           	callstack 0
 24745   00007D                     	ds	1
 24746   000000                     int$flags	set	btemp
 24747   000000                     wtemp8	set	btemp+1
 24748   000000                     ttemp5	set	btemp+1
 24749   000000                     ttemp6	set	btemp+4
 24750   000000                     ttemp7	set	btemp+8
 24751                           
 24752                           	psect	idloc
 24753                           
 24754                           ;Config register IDLOC0 @ 0x200000
 24755                           ;	unspecified, using default values
 24756   200000                     	org	2097152
 24757   200000  FF                 	db	255
 24758                           
 24759                           ;Config register IDLOC1 @ 0x200001
 24760                           ;	unspecified, using default values
 24761   200001                     	org	2097153
 24762   200001  FF                 	db	255
 24763                           
 24764                           ;Config register IDLOC2 @ 0x200002
 24765                           ;	unspecified, using default values
 24766   200002                     	org	2097154
 24767   200002  FF                 	db	255
 24768                           
 24769                           ;Config register IDLOC3 @ 0x200003
 24770                           ;	unspecified, using default values
 24771   200003                     	org	2097155
 24772   200003  FF                 	db	255
 24773                           
 24774                           ;Config register IDLOC4 @ 0x200004
 24775                           ;	unspecified, using default values
 24776   200004                     	org	2097156
 24777   200004  FF                 	db	255
 24778                           
 24779                           ;Config register IDLOC5 @ 0x200005
 24780                           ;	unspecified, using default values
 24781   200005                     	org	2097157
 24782   200005  FF                 	db	255
 24783                           
 24784                           ;Config register IDLOC6 @ 0x200006
 24785                           ;	unspecified, using default values
 24786   200006                     	org	2097158
 24787   200006  FF                 	db	255
 24788                           
 24789                           ;Config register IDLOC7 @ 0x200007
 24790                           ;	unspecified, using default values
 24791   200007                     	org	2097159
 24792   200007  FF                 	db	255
 24793                           
 24794                           	psect	config
 24795                           
 24796                           ; Padding undefined space
 24797   300000                     	org	3145728
 24798   300000  FF                 	db	255
 24799                           
 24800                           ;Config register CONFIG1H @ 0x300001
 24801                           ;	Oscillator Selection bits
 24802                           ;	OSC = HS, HS oscillator
 24803                           ;	Fail-Safe Clock Monitor Enable bit
 24804                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 24805                           ;	Internal/External Oscillator Switchover bit
 24806                           ;	IESO = OFF, Oscillator Switchover mode disabled
 24807   300001                     	org	3145729
 24808   300001  02                 	db	2
 24809                           
 24810                           ;Config register CONFIG2L @ 0x300002
 24811                           ;	Power-up Timer Enable bit
 24812                           ;	PWRT = OFF, PWRT disabled
 24813                           ;	Brown-out Reset Enable bits
 24814                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
 24815                           ;	Brown Out Reset Voltage bits
 24816                           ;	BORV = 1, 
 24817   300002                     	org	3145730
 24818   300002  09                 	db	9
 24819                           
 24820                           ;Config register CONFIG2H @ 0x300003
 24821                           ;	Watchdog Timer Enable bit
 24822                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 24823                           ;	Watchdog Timer Postscale Select bits
 24824                           ;	WDTPS = 32768, 1:32768
 24825   300003                     	org	3145731
 24826   300003  1E                 	db	30
 24827                           
 24828                           ; Padding undefined space
 24829   300004                     	org	3145732
 24830   300004  FF                 	db	255
 24831                           
 24832                           ;Config register CONFIG3H @ 0x300005
 24833                           ;	CCP2 MUX bit
 24834                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 24835                           ;	PORTB A/D Enable bit
 24836                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 24837                           ;	Low-Power Timer1 Oscillator Enable bit
 24838                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 24839                           ;	MCLR Pin Enable bit
 24840                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 24841   300005                     	org	3145733
 24842   300005  81                 	db	129
 24843                           
 24844                           ;Config register CONFIG4L @ 0x300006
 24845                           ;	Stack Full/Underflow Reset Enable bit
 24846                           ;	STVREN = ON, Stack full/underflow will cause Reset
 24847                           ;	Single-Supply ICSP Enable bit
 24848                           ;	LVP = OFF, Single-Supply ICSP disabled
 24849                           ;	Extended Instruction Set Enable bit
 24850                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 24851                           ;	Background Debugger Enable bit
 24852                           ;	DEBUG = 0x1, unprogrammed default
 24853   300006                     	org	3145734
 24854   300006  81                 	db	129
 24855                           
 24856                           ; Padding undefined space
 24857   300007                     	org	3145735
 24858   300007  FF                 	db	255
 24859                           
 24860                           ;Config register CONFIG5L @ 0x300008
 24861                           ;	Code Protection bit
 24862                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 24863                           ;	Code Protection bit
 24864                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 24865                           ;	Code Protection bit
 24866                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 24867                           ;	Code Protection bit
 24868                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 24869   300008                     	org	3145736
 24870   300008  0F                 	db	15
 24871                           
 24872                           ;Config register CONFIG5H @ 0x300009
 24873                           ;	Boot Block Code Protection bit
 24874                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 24875                           ;	Data EEPROM Code Protection bit
 24876                           ;	CPD = OFF, Data EEPROM not code-protected
 24877   300009                     	org	3145737
 24878   300009  C0                 	db	192
 24879                           
 24880                           ;Config register CONFIG6L @ 0x30000A
 24881                           ;	Write Protection bit
 24882                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 24883                           ;	Write Protection bit
 24884                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 24885                           ;	Write Protection bit
 24886                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 24887                           ;	Write Protection bit
 24888                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 24889   30000A                     	org	3145738
 24890   30000A  0F                 	db	15
 24891                           
 24892                           ;Config register CONFIG6H @ 0x30000B
 24893                           ;	Configuration Register Write Protection bit
 24894                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 24895                           ;	Boot Block Write Protection bit
 24896                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 24897                           ;	Data EEPROM Write Protection bit
 24898                           ;	WRTD = OFF, Data EEPROM not write-protected
 24899   30000B                     	org	3145739
 24900   30000B  E0                 	db	224
 24901                           
 24902                           ;Config register CONFIG7L @ 0x30000C
 24903                           ;	Table Read Protection bit
 24904                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 24905                           ;	Table Read Protection bit
 24906                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 24907                           ;	Table Read Protection bit
 24908                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 24909                           ;	Table Read Protection bit
 24910                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 24911   30000C                     	org	3145740
 24912   30000C  0F                 	db	15
 24913                           
 24914                           ;Config register CONFIG7H @ 0x30000D
 24915                           ;	Boot Block Table Read Protection bit
 24916                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 24917   30000D                     	org	3145741
 24918   30000D  40                 	db	64
 24919                           tosu	equ	0xFFF
 24920                           tosh	equ	0xFFE
 24921                           tosl	equ	0xFFD
 24922                           stkptr	equ	0xFFC
 24923                           pclatu	equ	0xFFB
 24924                           pclath	equ	0xFFA
 24925                           pcl	equ	0xFF9
 24926                           tblptru	equ	0xFF8
 24927                           tblptrh	equ	0xFF7
 24928                           tblptrl	equ	0xFF6
 24929                           tablat	equ	0xFF5
 24930                           prodh	equ	0xFF4
 24931                           prodl	equ	0xFF3
 24932                           indf0	equ	0xFEF
 24933                           postinc0	equ	0xFEE
 24934                           postdec0	equ	0xFED
 24935                           preinc0	equ	0xFEC
 24936                           plusw0	equ	0xFEB
 24937                           fsr0h	equ	0xFEA
 24938                           fsr0l	equ	0xFE9
 24939                           wreg	equ	0xFE8
 24940                           indf1	equ	0xFE7
 24941                           postinc1	equ	0xFE6
 24942                           postdec1	equ	0xFE5
 24943                           preinc1	equ	0xFE4
 24944                           plusw1	equ	0xFE3
 24945                           fsr1h	equ	0xFE2
 24946                           fsr1l	equ	0xFE1
 24947                           bsr	equ	0xFE0
 24948                           indf2	equ	0xFDF
 24949                           postinc2	equ	0xFDE
 24950                           postdec2	equ	0xFDD
 24951                           preinc2	equ	0xFDC
 24952                           plusw2	equ	0xFDB
 24953                           fsr2h	equ	0xFDA
 24954                           fsr2l	equ	0xFD9
 24955                           status	equ	0xFD8

Data Sizes:
    Strings     63
    Constant    140
    Data        86
    BSS         146
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    122     124
    BANK0           128    123     125
    BANK1           256    254     255
    BANK2           256      0     227
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    nanf@s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_22(CODE[1]), STR_13(CODE[1]), 

    atof@s	PTR const unsigned char  size(2) Largest target is 60
		 -> main@MATH_STR(BANK1[60]), 

    strtof@s	PTR const unsigned char  size(2) Largest target is 60
		 -> main@MATH_STR(BANK1[60]), 

    strtof@res	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncat@s	PTR const unsigned char  size(2) Largest target is 1
		 -> String_Append_Char@Data(COMRAM[1]), 

    strncat@d	PTR unsigned char  size(2) Largest target is 60
		 -> main@MATH_STR(BANK1[60]), 

    strncat@a	PTR unsigned char  size(2) Largest target is 60
		 -> main@MATH_STR(BANK1[60]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 60
		 -> main@MATH_STR(BANK1[60]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 60
		 -> main@MATH_STR(BANK1[60]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_10(CODE[4]), STR_7(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_10(CODE[4]), STR_7(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_4(CODE[6]), STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_4(CODE[6]), STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 6
		 -> STR_4(CODE[6]), STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S2206$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_4(CODE[6]), STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> convert_float_to_string@Temp_String(BANK1[16]), convert_int32_to_string@Temp_String(BANK0[12]), convert_uint16_to_string@Temp_String(COMRAM[6]), convert_uint8_to_string@Temp_String(COMRAM[5]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2126$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2126$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 60
		 -> Calculator_display_result@result_str(BANK1[20]), main@MATH_STR(BANK1[60]), 

    memset@s	PTR unsigned char  size(2) Largest target is 60
		 -> Calculator_display_result@result_str(BANK1[20]), main@MATH_STR(BANK1[60]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 60
		 -> main@MATH_STR(BANK1[60]), STR_4(CODE[6]), STR_3(CODE[3]), STR_2(CODE[3]), 
		 -> STR_1(CODE[3]), 

    sp__strncat	PTR unsigned char  size(2) Largest target is 60
		 -> main@MATH_STR(BANK1[60]), 

    String_Append_Char@str	PTR unsigned char  size(2) Largest target is 60
		 -> main@MATH_STR(BANK1[60]), 

    String_Remove_Char@str	PTR unsigned char  size(2) Largest target is 60
		 -> main@MATH_STR(BANK1[60]), 

    INTx_SetHandler@pin.Ext_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EXTINT1(), EXTINT0(), 

    INTx_SetHandler@pin	PTR const struct . size(2) Largest target is 6
		 -> NB1(BANK2[6]), NB0(BANK2[6]), 

    INT2_SetHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EXTINT1(), EXTINT0(), 

    INT1_SetHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EXTINT1(), EXTINT0(), 

    INT0_SetHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EXTINT1(), EXTINT0(), 

    INTx_Set_Priority@pin	PTR const struct . size(2) Largest target is 6
		 -> NB1(BANK2[6]), NB0(BANK2[6]), 

    INTx_Clear_Flag@pin.Ext_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EXTINT1(), EXTINT0(), 

    INTx_Clear_Flag@pin	PTR const struct . size(2) Largest target is 6
		 -> NB1(BANK2[6]), NB0(BANK2[6]), 

    INTx_Set_Polarity@pin.Ext_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EXTINT1(), EXTINT0(), 

    INTx_Set_Polarity@pin	PTR const struct . size(2) Largest target is 6
		 -> NB1(BANK2[6]), NB0(BANK2[6]), 

    INTx_Disable@pin.Ext_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EXTINT1(), EXTINT0(), 

    INTx_Disable@pin	PTR const struct . size(2) Largest target is 6
		 -> NB1(BANK2[6]), NB0(BANK2[6]), 

    INTx_Enable@pin.Ext_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EXTINT1(), EXTINT0(), 

    INTx_Enable@pin	PTR const struct . size(2) Largest target is 6
		 -> NB1(BANK2[6]), NB0(BANK2[6]), 

    S1304$Ext_InterruptLowHandler	PTR FTN()void  size(2) Largest target is 0

    RBx_interrupt_init@pin.Ext_InterruptLowHandler	PTR FTN()void  size(2) Largest target is 0

    S1304$Ext_InterruptHighHandler	PTR FTN()void  size(2) Largest target is 0

    RBx_interrupt_init@pin.Ext_InterruptHighHandler	PTR FTN()void  size(2) Largest target is 0

    INTx_interrupt_init@pin.Ext_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EXTINT1(), EXTINT0(), 

    INTx_interrupt_init@pin	PTR const struct . size(2) Largest target is 6
		 -> NB1(BANK2[6]), NB0(BANK2[6]), 

    RB7_InterruptLowHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB7_InterruptHighHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_InterruptLowHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_InterruptHighHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_InterruptLowHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_InterruptHighHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_InterruptLowHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_InterruptHighHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EXTINT1(), EXTINT0(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EXTINT1(), EXTINT0(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EXTINT1(), EXTINT0(), 

    I2C_Module_Interrupt_cfg@_i2c	PTR const struct . size(2) Largest target is 8
		 -> I2C(BANK2[8]), 

    Slave_cfg@_i2c	PTR const struct . size(2) Largest target is 8
		 -> I2C(BANK2[8]), 

    Set_I2C_Master_cfg@_i2c	PTR const struct . size(2) Largest target is 8
		 -> I2C(BANK2[8]), 

    MSSP_I2C_Cfg@_i2c	PTR const struct . size(2) Largest target is 8
		 -> I2C(BANK2[8]), 

    I2C_Master_Transmit@str	PTR unsigned char  size(2) Largest target is 1
		 -> IO_expander_write@data(COMRAM[1]), 

    I2C_Master_Transmit@ACK_State	PTR unsigned char  size(2) Largest target is 1
		 -> IO_expander_write@ack_St(COMRAM[1]), 

    I2C_Master_Transmit@_i2c	PTR const struct . size(2) Largest target is 8
		 -> lcd(BANK2[8]), 

    MSSP_I2C_Master_Write_Blocking@ACK_State	PTR unsigned char  size(2) Largest target is 1
		 -> I2C_Master_Transmit@ack(COMRAM[1]), 

    MSSP_I2C_Master_Write_Blocking@_i2c	PTR const struct . size(2) Largest target is 8
		 -> lcd(BANK2[8]), 

    MSSP_I2C_Master_Send_Stop@_i2c	PTR const struct . size(2) Largest target is 8
		 -> lcd(BANK2[8]), 

    MSSP_I2C_Master_Send_Start@_i2c	PTR const struct . size(2) Largest target is 8
		 -> lcd(BANK2[8]), 

    MSSP_I2C_init@_i2c	PTR const struct . size(2) Largest target is 8
		 -> I2C(BANK2[8]), 

    GPIO_pin_read_logic@logic	PTR enum E3401 size(2) Largest target is 1
		 -> keypad_get_val@col_logic(COMRAM[1]), button_read_state@button_logic(COMRAM[1]), 

    GPIO_pin_read_logic@_pin_cfg	PTR const struct . size(2) Largest target is 8
		 -> Keypad.keypad_col_pins(BANK2[4]), Keypad(BANK2[8]), 

    GPIO_pin_write@_pin_cfg	PTR const struct . size(2) Largest target is 8
		 -> NB1(BANK2[6]), NB0(BANK2[6]), Keypad.keypad_col_pins(BANK2[4]), Keypad.keypad_row_pins(BANK2[4]), 
		 -> Keypad(BANK2[8]), 

    GPIO_pin_init@_pin_cfg	PTR const struct . size(2) Largest target is 8
		 -> Keypad.keypad_col_pins(BANK2[4]), Keypad.keypad_row_pins(BANK2[4]), Keypad(BANK2[8]), 

    GPIO_pin_dir_init@_pin_cfg	PTR const struct . size(2) Largest target is 8
		 -> NB1(BANK2[6]), NB0(BANK2[6]), Keypad.keypad_col_pins(BANK2[4]), Keypad.keypad_row_pins(BANK2[4]), 
		 -> Keypad(BANK2[8]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRlll[1]), PORTD(BITBIGSFRlll[1]), PORTC(BITBIGSFRlll[1]), PORTB(BITBIGSFRlll[1]), 
		 -> PORTA(BITBIGSFRlll[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRllh[1]), LATD(BITBIGSFRllh[1]), LATC(BITBIGSFRllh[1]), LATB(BITBIGSFRllh[1]), 
		 -> LATA(BITBIGSFRlll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRlhll[1]), TRISD(BITBIGSFRlhll[1]), TRISC(BITBIGSFRlhll[1]), TRISB(BITBIGSFRlhll[1]), 
		 -> TRISA(BITBIGSFRlll[1]), 

    NB1.Ext_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EXTINT1(), EXTINT0(), 

    S428$Ext_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EXTINT1(), EXTINT0(), 

    NB0.Ext_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EXTINT1(), EXTINT0(), 

    IO_expander_write@lcd	PTR const struct . size(2) Largest target is 8
		 -> lcd(BANK2[8]), 

    lcd_set_cursor@lcd	PTR const struct . size(2) Largest target is 8
		 -> lcd(BANK2[8]), 

    lcd_send_4bits@lcd	PTR const struct . size(2) Largest target is 8
		 -> lcd(BANK2[8]), 

    convert_float_to_string@str	PTR unsigned char  size(2) Largest target is 20
		 -> Calculator_display_result@result_str(BANK1[20]), 

    convert_int32_to_string@str	PTR unsigned char  size(2) Largest target is 20
		 -> Calculator_display_result@result_str(BANK1[20]), 

    sp__memset	PTR void  size(2) Largest target is 60
		 -> Calculator_display_result@result_str(BANK1[20]), main@MATH_STR(BANK1[60]), 

    lcd_send_data@str	PTR unsigned char  size(2) Largest target is 60
		 -> Calculator_display_result@result_str(BANK1[20]), STR_6(CODE[13]), STR_5(CODE[11]), main@MATH_STR(BANK1[60]), 

    lcd_send_data@lcd	PTR const struct . size(2) Largest target is 8
		 -> lcd(BANK2[8]), 

    lcd_send_char_at@lcd	PTR const struct . size(2) Largest target is 8
		 -> lcd(BANK2[8]), 

    lcd_send_char@lcd	PTR const struct . size(2) Largest target is 8
		 -> lcd(BANK2[8]), 

    lcd_send_command@lcd	PTR const struct . size(2) Largest target is 8
		 -> lcd(BANK2[8]), 

    lcd_init@lcd	PTR const struct . size(2) Largest target is 8
		 -> lcd(BANK2[8]), 

    keypad_get_val@val	PTR unsigned char  size(2) Largest target is 1
		 -> keypadder(BANK1[1]), 

    keypad_get_val@keypad	PTR const struct . size(2) Largest target is 8
		 -> Keypad(BANK2[8]), 

    keypad_init@keypad	PTR const struct . size(2) Largest target is 8
		 -> Keypad(BANK2[8]), 

    is_power@x	PTR unsigned char  size(2) Largest target is 60
		 -> main@MATH_STR(BANK1[60]), 

    is_power@temp	PTR unsigned char  size(2) Largest target is 60
		 -> main@MATH_STR(BANK1[60]), 

    MathError@str	PTR unsigned char  size(2) Largest target is 60
		 -> main@MATH_STR(BANK1[60]), 

    MathError@temp	PTR unsigned char  size(2) Largest target is 60
		 -> main@MATH_STR(BANK1[60]), 

    SyntaxErr@temp	PTR unsigned char  size(2) Largest target is 60
		 -> main@MATH_STR(BANK1[60]), 

    SyntaxErr@str	PTR unsigned char  size(2) Largest target is 60
		 -> main@MATH_STR(BANK1[60]), 

    HandleString@str	PTR unsigned char  size(2) Largest target is 60
		 -> main@MATH_STR(BANK1[60]), 


Critical Paths under _main in COMRAM

    _keypad_get_val->_GPIO_pin_read_logic
    _keypad_get_val->_GPIO_pin_write
    _SyntaxErr->_is_power
    _String_Append_Char->_strncat
    _strncat->_strlen
    _MathError->_atoi
    _strtof->___fleq
    _toupper->_islower
    _isxdigit->_isdigit
    _powf->_sqrtf
    _sqrtf->___flge
    _scalbnf->___flmul
    _Calculator_display_result->___fleq
    _lcd_send_data->_lcd_send_char_at
    _lcd_send_char_at->_lcd_set_cursor
    _lcd_set_cursor->_lcd_send_command
    _lcd_send_char->_lcd_send_4bits
    _efgtoa->___fleq
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___fladd
    ___flge->___flsub
    ___fleq->_floorf
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->___wmul
    _Calculator_Init->_MSSP_I2C_init
    _lcd_init->_lcd_send_command
    _lcd_send_command->_lcd_send_4bits
    _lcd_send_4bits->_IO_expander_write
    _IO_expander_write->_I2C_Master_Transmit
    _I2C_Master_Transmit->_MSSP_I2C_Master_Write_Blocking
    _keypad_init->_GPIO_pin_init
    _GPIO_pin_init->_GPIO_pin_dir_init
    _MSSP_I2C_init->_MSSP_I2C_Cfg
    _MSSP_I2C_Cfg->_Set_I2C_Master_cfg
    _Set_I2C_Master_cfg->___fltol
    ___fltol->___fldiv
    ___fldiv->___flsub
    ___fladd->___xxtofl
    _INTx_interrupt_init->_GPIO_pin_dir_init
    _INTx_SetHandler->_INT0_SetHandler
    _INTx_SetHandler->_INT1_SetHandler
    _INTx_SetHandler->_INT2_SetHandler
    _GPIO_pin_dir_init->_GPIO_pin_write

Critical Paths under _InterruptMananger in COMRAM

    None.

Critical Paths under _main in BANK0

    _HandleString->_Calculate
    _atof->_strtof
    _Calculate->_powf
    _Calculator_display_result->_convert_int32_to_string
    _convert_int32_to_string->_sprintf
    _convert_float_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _InterruptMananger in BANK0

    None.

Critical Paths under _main in BANK1

    _Calculate->_powf
    _Calculator_display_result->_convert_float_to_string

Critical Paths under _InterruptMananger in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptMananger in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptMananger in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptMananger in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptMananger in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptMananger in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptMananger in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptMananger in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptMananger in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptMananger in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptMananger in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptMananger in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptMananger in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptMananger in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptMananger in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                66    66      0  431613
                                            188 BANK1     66    66      0
                    _Calculator_Init
          _Calculator_display_result
                       _HandleString
                          _MathError
                 _String_Append_Char
                 _String_Remove_Char
                          _SyntaxErr
                     _keypad_get_val
                   _lcd_send_command
                      _lcd_send_data
                             _memset
 ---------------------------------------------------------------------------------
 (1) _keypad_get_val                                      11     7      4    2283
                                             12 COMRAM    11     7      4
                _GPIO_pin_read_logic
                     _GPIO_pin_write
 ---------------------------------------------------------------------------------
 (2) _GPIO_pin_read_logic                                 10     6      4     634
                                              2 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (1) _SyntaxErr                                            9     7      2    1549
                                              7 COMRAM     9     7      2
                             _is_num
                              _is_op
                           _is_power
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _is_num                                               1     1      0      44
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _String_Remove_Char                                   5     2      3     218
                                              2 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (1) _String_Append_Char                                   3     0      3     834
                                             12 COMRAM     3     0      3
                            _strncat
 ---------------------------------------------------------------------------------
 (2) _strncat                                              8     2      6     636
                                              6 COMRAM     6     0      6
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     242
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _MathError                                            5     3      2    4186
                                             17 COMRAM     5     3      2
                               _atoi
                           _is_power
 ---------------------------------------------------------------------------------
 (1) _HandleString                                        24    20      4  193606
                                             28 BANK0     23    19      4
                          _Calculate
                               _atof
                              _is_op
                           _is_power
 ---------------------------------------------------------------------------------
 (2) _is_power                                             5     3      2     340
                                              2 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _is_op                                                1     1      0      88
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _atof                                                 4     0      4   36571
                                             21 BANK0      4     0      4
                             _strtof
 ---------------------------------------------------------------------------------
 (3) _strtof                                              21    17      4   36360
                                              0 BANK0     21    17      4
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                             ___lmul
                             ___wmul
                           ___xxtofl
                            _isdigit
                            _isspace
                           _isxdigit
                               _nanf
                            _toupper
 ---------------------------------------------------------------------------------
 (4) _toupper                                              4     2      2     464
                                              6 COMRAM     4     2      2
                            _islower
 ---------------------------------------------------------------------------------
 (5) _islower                                              4     2      2     161
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _isxdigit                                             8     6      2    1387
                                              6 COMRAM     7     5      2
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     370
                                              2 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _Calculate                                           11     2      9  155141
                                             17 BANK0     11     2      9
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                               _powf
 ---------------------------------------------------------------------------------
 (3) _powf                                               205   197      8  106835
                                              0 BANK0     17     9      8
                                              0 BANK1    188   188      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                           ___xxtofl
                              _fabsf
                            _scalbnf
                              _sqrtf
 ---------------------------------------------------------------------------------
 (4) _sqrtf                                               49    45      4   29654
                                             77 COMRAM    45    41      4
                            ___fladd
                             ___flge
                            ___flmul
                               _nanf
 ---------------------------------------------------------------------------------
 (4) _nanf                                                 8     4      4     175
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _scalbnf                                             18    12      6   16517
                                             57 COMRAM    18    12      6
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) _fabsf                                                8     4      4     123
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Calculator_display_result                           28    24      4  174967
                                             17 BANK1     28    24      4
                             ___fleq
                             ___flge
                            ___fltol
                              _ceilf
            _convert_float_to_string
            _convert_int32_to_string
                             _floorf
                      _lcd_send_data
 ---------------------------------------------------------------------------------
 (1) _lcd_send_data                                        7     1      6   12432
                                             44 COMRAM     7     1      6
                   _lcd_send_char_at
 ---------------------------------------------------------------------------------
 (2) _lcd_send_char_at                                     6     1      5   10938
                                             38 COMRAM     6     1      5
                      _lcd_send_char
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (3) _lcd_set_cursor                                       7     3      4    6593
                                             31 COMRAM     7     3      4
                   _lcd_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_send_char                                        4     1      3    3468
                                             27 COMRAM     4     1      3
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (2) _convert_int32_to_string                             20    14      6   78281
                                            104 BANK0     19    13      6
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _convert_float_to_string                             24    18      6   78281
                                            104 BANK0      6     0      6
                                              0 BANK1     17    17      0
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             23    15      8   75083
                                             83 BANK0     21    13      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   74039
                                             75 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           24    18      6   73527
                                             53 BANK0     22    16      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              54    47      7   61120
                                              0 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (7) _strcpy                                               8     4      4     497
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) _memcpy                                              11     5      6     478
                                              2 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (7) _labs                                                 8     4      4     363
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _floorf                                              20    16      4     759
                                             90 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     375
                                              2 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8   16727
                                             57 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     425
                                              2 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8   15833
                                             32 COMRAM    25    17      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8    2426
                                             65 COMRAM    12     4      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fleq                                              12     4      8    1130
                                            110 COMRAM    12     4      8
                              _ceilf (ARG)
                             _floorf (ARG)
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                35    25     10    5643
                                             29 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    3343
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1177
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     857
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                             20 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     613
                                              2 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     625
                                              2 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _atoi                                                 9     7      2    3394
                                              8 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (3) _isspace                                              5     3      2     349
                                              2 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              4     2      2    1001
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1502
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _memset                                              12     6      6    2637
                                              2 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) _ceilf                                               20    16      4     414
                                              2 COMRAM    20    16      4
 ---------------------------------------------------------------------------------
 (1) _Calculator_Init                                      1     1      0   32002
                                            109 COMRAM     1     1      0
                _INTx_interrupt_init
                      _MSSP_I2C_init
                        _keypad_init
                           _lcd_init
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             5     3      2    8607
                                             31 COMRAM     4     2      2
                  _IO_expander_write
                   _lcd_send_command
 ---------------------------------------------------------------------------------
 (4) _lcd_send_command                                     4     1      3    6052
                                             27 COMRAM     4     1      3
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (5) _lcd_send_4bits                                       4     1      3    2877
                                             24 COMRAM     3     0      3
                  _IO_expander_write
 ---------------------------------------------------------------------------------
 (6) _IO_expander_write                                    5     2      3    2157
                                             19 COMRAM     5     2      3
                _I2C_Master_Transmit
 ---------------------------------------------------------------------------------
 (7) _I2C_Master_Transmit                                 11     3      8    1583
                                              8 COMRAM    11     3      8
         _MSSP_I2C_Master_Send_Start
          _MSSP_I2C_Master_Send_Stop
     _MSSP_I2C_Master_Write_Blocking
 ---------------------------------------------------------------------------------
 (8) _MSSP_I2C_Master_Write_Blocking                       6     1      5     590
                                              2 COMRAM     6     1      5
 ---------------------------------------------------------------------------------
 (8) _MSSP_I2C_Master_Send_Stop                            3     1      2     123
                                              2 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (8) _MSSP_I2C_Master_Send_Start                           3     1      2     123
                                              2 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _keypad_init                                          6     4      2    3112
                                             24 COMRAM     6     4      2
                      _GPIO_pin_init
 ---------------------------------------------------------------------------------
 (3) _GPIO_pin_init                                        4     2      2    2809
                                             21 COMRAM     3     1      2
                  _GPIO_pin_dir_init
                     _GPIO_pin_write
 ---------------------------------------------------------------------------------
 (2) _MSSP_I2C_init                                        3     1      2   16784
                                            106 COMRAM     3     1      2
           _I2C_Module_Interrupt_cfg
                       _MSSP_I2C_Cfg
 ---------------------------------------------------------------------------------
 (3) _MSSP_I2C_Cfg                                         4     2      2   16312
                                            102 COMRAM     4     2      2
                 _Set_I2C_Master_cfg
                          _Slave_cfg
 ---------------------------------------------------------------------------------
 (4) _Slave_cfg                                            3     1      2     208
                                              2 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _Set_I2C_Master_cfg                                   2     0      2   15788
                                            100 COMRAM     2     0      2
                            ___fladd
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     523
                                              2 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             10     6      4     757
                                             90 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    4463
                                             65 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             16     8      8    9862
                                             16 COMRAM    16     8      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _I2C_Module_Interrupt_cfg                             3     1      2     122
                                              2 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _INTx_interrupt_init                                  3     1      2    3474
                                             21 COMRAM     3     1      2
                  _GPIO_pin_dir_init
                    _INTx_Clear_Flag
                       _INTx_Disable
                        _INTx_Enable
                    _INTx_SetHandler
                  _INTx_Set_Polarity
                  _INTx_Set_Priority
 ---------------------------------------------------------------------------------
 (3) _INTx_Set_Priority                                    3     1      2     122
                                              2 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _INTx_Set_Polarity                                    5     3      2     277
                                              2 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _INTx_SetHandler                                      5     3      2     630
                                              5 COMRAM     4     2      2
                    _INT0_SetHandler
                    _INT1_SetHandler
                    _INT2_SetHandler
 ---------------------------------------------------------------------------------
 (4) _INT2_SetHandler                                      3     1      2     144
                                              2 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _INT1_SetHandler                                      3     1      2     144
                                              2 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _INT0_SetHandler                                      3     1      2     144
                                              2 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _INTx_Enable                                          5     3      2     145
                                              2 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _INTx_Disable                                         5     3      2     221
                                              2 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _INTx_Clear_Flag                                      5     3      2     145
                                              2 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _GPIO_pin_dir_init                                    9     7      2    1554
                                             12 COMRAM     9     7      2
                     _GPIO_pin_write
 ---------------------------------------------------------------------------------
 (2) _GPIO_pin_write                                      10     7      3     961
                                              2 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _InterruptMananger                                   2     2      0       0
                                              0 COMRAM     2     2      0
                           _INT0_ISR
                           _INT1_ISR
 ---------------------------------------------------------------------------------
 (12) _INT1_ISR                                            0     0      0       0
                   Absolute function *
                            _EXTINT0 *
                            _EXTINT1 *
 ---------------------------------------------------------------------------------
 (12) _INT0_ISR                                            0     0      0       0
                   Absolute function *
                            _EXTINT0 *
                            _EXTINT1 *
 ---------------------------------------------------------------------------------
 (13) _EXTINT1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EXTINT0                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Calculator_Init
     _INTx_interrupt_init
       _GPIO_pin_dir_init
         _GPIO_pin_write
       _INTx_Clear_Flag
       _INTx_Disable
       _INTx_Enable
       _INTx_SetHandler
         _INT0_SetHandler
         _INT1_SetHandler
         _INT2_SetHandler
       _INTx_Set_Polarity
       _INTx_Set_Priority
     _MSSP_I2C_init
       _I2C_Module_Interrupt_cfg
       _MSSP_I2C_Cfg
         _Set_I2C_Master_cfg
           ___fladd
             ___xxtofl (ARG)
           ___fldiv
             ___fladd (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
             ___flsub (ARG)
               ___fladd
               ___flmul (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___fladd (ARG)
             ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl
         _Slave_cfg
     _keypad_init
       _GPIO_pin_init
         _GPIO_pin_dir_init
         _GPIO_pin_write
     _lcd_init
       _IO_expander_write
         _I2C_Master_Transmit
           _MSSP_I2C_Master_Send_Start
           _MSSP_I2C_Master_Send_Stop
           _MSSP_I2C_Master_Write_Blocking
       _lcd_send_command
         _lcd_send_4bits
           _IO_expander_write
   _Calculator_display_result
     ___fleq
       _ceilf (ARG)
       _floorf (ARG)
         ___fldiv (ARG)
     ___flge
       ___fladd (ARG)
       ___flmul (ARG)
       ___flsub (ARG)
     ___fltol
     _ceilf
     _convert_float_to_string
       _memset
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
             _efgtoa
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
               ___fltol
               ___fpclassifyf
               _floorf
               _labs
               _memcpy
               _pad
               _strcpy
             _fputc
             _isdigit
     _convert_int32_to_string
       _memset
       _sprintf
     _floorf
     _lcd_send_data
       _lcd_send_char_at
         _lcd_send_char
           _lcd_send_4bits
         _lcd_set_cursor
           _lcd_send_command
   _HandleString
     _Calculate
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
       _powf
         ___fladd
         ___fldiv
         ___flge
         ___flmul
         ___flneg
         ___flsub
         ___xxtofl
         _fabsf
         _scalbnf
           ___flmul
         _sqrtf
           ___fladd
           ___flge
           ___flmul
           _nanf
     _atof
       _strtof
         ___fldiv
         ___fleq
         ___flge
         ___flmul
         ___flneg
         ___lmul
         ___wmul
         ___xxtofl
         _isdigit
         _isspace
         _isxdigit
           _isdigit
         _nanf
         _toupper
           _islower
     _is_op
     _is_power
   _MathError
     _atoi
     _is_power
   _String_Append_Char
     _strncat
       _strlen
   _String_Remove_Char
   _SyntaxErr
     _is_num
     _is_op
     _is_power
     _strlen
   _keypad_get_val
     _GPIO_pin_read_logic
     _GPIO_pin_write
   _lcd_send_command
   _lcd_send_data
   _memset

 _InterruptMananger (ROOT)
   _INT0_ISR
     Absolute function(Fake) *
     _EXTINT0 *
     _EXTINT1 *
   _INT1_ISR
     Absolute function(Fake) *
     _EXTINT0 *
     _EXTINT1 *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      43        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E3       9       88.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100     FE      FF       7       99.6%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     7B      7D       5       97.7%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7A      7C       1       98.4%
BITBIGSFRlhhhl      26      0       0      37        0.0%
BITBIGSFRlhlh       26      0       0      38        0.0%
BITBIGSFRh           D      0       0      36        0.0%
BITBIGSFRlhll        7      0       0      39        0.0%
BITBIGSFRllh         4      0       0      40        0.0%
BITBIGSFRlll         4      0       0      41        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2DB      42        0.0%
DATA                 0      0     2DB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Dec 14 16:06:51 2023

        __end_of_convert_int32_to_string 9A58                      ??_InterruptMananger 0001  
                           ___fldiv@aexp 005A                             ___fldiv@bexp 0059  
                           ___fldiv@sign 0052                          ?_lcd_send_4bits 0019  
                         ?_lcd_send_char 001C                           ?_lcd_send_data 002D  
                            _SSPSTATbits 000FC7                                       _L1 1069  
                                     _L2 1065                                       _L3 1061  
                                     _L4 105D                                       _L5 1059  
                                     _L6 1055                                       l35 7160  
                                     l44 7250                                       l45 7298  
                                     _P1 1051                                       _P2 104D  
                                     _P3 1049                                       _P4 1045  
                                     l49 6F38                                       _P5 1041  
                                     l91 909C                                       l75 6EBC  
                                     l89 90BE                                       l98 AB0C  
                                     _RS 00FC                                       _bp 1079  
                                     _cp 102D                      ___wmul@multiplicand 0005  
                                    l111 A240                                      l104 A540  
                                    l212 A716                                      l220 9E80  
                                    l116 87C6                                      l108 A23E  
                                    l301 A682                                      l213 A718  
                                    l302 A684                                      l222 9E82  
                                    l216 A6CC                                      l209 8A84  
                                    l217 A6CE                                      l241 93C6  
                                    _I2C 02C7                                      l173 A1D2  
                                    l502 98D8                                      l329 A3E0  
                                    l274 9A56                                      l531 9998  
                                    l283 9810                                      l187 8D26  
                                    l700 A012                                      l524 9D82  
                                    l452 9AF4                                      l380 9EFE  
                                    l702 A018                                      l542 9CEE  
                                    l462 A82E                                      l286 AA4C  
                                    l703 A01E                                      l519 9D80  
                                    l455 9B08                                      l463 A804  
                                    l376 8356                                      l393 8BD6  
                                    l705 A06C                                      l545 AC80  
                                    l465 A812                                      l481 A7CC  
                                    l297 95AC                                      l546 AC82  
                                    l490 A280                                      l715 8F98  
                                    l732 A08C                                      l740 AC9E  
                                    l468 A830                                      l484 A7EA  
                                    l741 ACA0                                      l493 A2AE  
                                    l397 967E                                      l734 A092  
                                    l478 A7E8                                      l735 A098  
                                    l727 8F9A                                      l479 A7BE  
                                    l488 A272                                      l737 A0E6  
                                    l745 AC24                                      l753 ABD8  
                                    l841 A9E0                                      l690 9F98  
                                    l666 9E06                                      l850 8E66  
                                    l763 9C54                                      l692 9F9E  
                                    l693 9FA4                                      l749 ABFE  
                                    l853 ABB2                                      l845 AC64  
                                    l695 9FF2                                      l864 A308  
                                    l865 A318                                      l980 892A  
                                    _NB0 02DD                                      _NB1 02D7  
                                    l967 84DE                       INT0_SetHandler@ret 0005  
                 INTx_interrupt_init@pin 0016                   INTx_interrupt_init@ret 0018  
                     INTx_SetHandler@pin 0006                                      _lg2 103D  
                                    _abs A8FC                                      _lcd 0285  
                                    _pad 9F00                                      _ovt 1031  
                            lcd_init@lcd 0020                              lcd_init@ret 0023  
                                    prod 000FF3                                      tosl 000FFD  
                                    wreg 000FE8                        ??_INT0_SetHandler 0005  
                           ___flmul@aexp 002E                             ___flmul@bexp 0033  
            lcd_send_4bits@_data_command 001B                  _convert_float_to_string 974A  
                           ___flmul@sign 002D                             ___flmul@temp 0038  
                           ___flmul@prod 0034           _Calculator_display_result$2920 0129  
                        ?_lcd_set_cursor 0020                __end_of_InterruptMananger A4EE  
                           ___fltol@exp1 0064                                     l1112 9BB2  
                                   l1123 92C8                                     l2011 AA80  
                                   l2003 3ABE                                     ?_abs 0015  
                                   l1150 91C4                                     l2014 ACB2  
                                   l1118 9282                                     l2110 4B54  
                                   l1127 A9AA                                     l2024 7A20  
                                   l2040 5CBC                                     l2202 4676  
                                   l2203 461C                                     l2044 5D1A  
                                   l2036 5F74                                     l2204 4688  
                                   l1407 59D8                                     l1511 81B4  
                                   l1423 A75E                                     l2063 A8FA  
                                   l2047 5DDE                                     l1408 59C6  
                                   l1440 69CE                                     l2057 AC46  
                                   l2049 5EE0                                     l1522 814C  
                                   l2154 4B98                                     l1435 6BAA  
                                   l1515 80F0                                     l1508 8058  
                                   l1381 57EE                                     l1437 6A0A  
                                   l2069 AA16                                     l1390 5ABE  
                                   l1382 57DC                                     l1446 6A50  
                                   l1606 A5E6                                     l1383 57A2  
                                   l1471 6810                                     l2079 A15C  
                                   l1448 6AC8                                     l1712 5376  
                                   l2264 A440                                     l2272 A96A  
                                   l2184 43C4                                     l1449 6AB6  
                                   l1801 A636                                     l2281 AB38  
                                   l2249 AB8C                                     l1546 7FF8  
                                   l1642 9F22                                     l1474 66A2  
                                   l1555 7E44                                     l1467 64AC  
                                   l1571 7B76                                     l2275 A972  
                                   l2195 458E                                     l1652 7336  
                                   l1484 67D2                                     l1476 671A  
                                   l1549 8000                                     l1813 9748  
                                   l1821 A8B8                                     l1477 6708  
                                   l1398 5908                                     l1558 7D88  
                                   l1646 9F78                                     l1654 733E  
                                   l1655 7384                                     l1568 7C32  
                                   l1593 8654                                     l1578 AB64  
                                   l1586 A7A4                                     l1682 4F2C  
                                   l1770 A594                                     l1906 1466  
                        __end_of_EXTINT0 ACAA                          __end_of_EXTINT1 ACB2  
                                   l1668 7550                                     l1780 94C4  
                                   l1684 4D72                                     l1748 63E6  
                                   l1924 164E                                     l1916 1528  
                                   l1679 55FE                                     l1792 A36E  
                                   l1785 A932                                     l1795 A37E  
                                   l1891 3B12                                     l1788 A93A  
                                   l1886 10CE                                     ?_pad 0013  
                                   l8000 81B6                                     l1992 330C  
                                   l1896 13D0                                     l1888 10EE  
                                   l1993 3388                                     l8010 8214  
                                   l8002 81BA                                     l8012 8272  
                                   l8004 81CC                                     l8014 8292  
                                   l8022 8312                                     l8006 81EE  
                                   l8110 AC22                                     l8102 AC00  
                                   l8016 82EA                                     l8008 820C  
                                   l8024 8354                                     l9000 9FB2  
                                   l8104 AC04                                     l8120 ABF4  
                                   l6600 A7DC                                     l8040 A6B6  
                                   l8032 A686                                     l8018 830A  
                                   l9002 9FF0                                     l8106 AC16  
                                   l8122 ABFC                                     l8114 ABDA  
                                   l8130 ABCA                                     l6602 A7E4  
                                   l6610 A258                                     l8034 A68A  
                                   l8050 94EC                                     l8108 AC1A  
                                   l8116 ABDE                                     l8132 ABCE  
                                   l6612 A26A                                     l6620 A2AC  
                                   l8036 A69C                                     l8060 9540  
                                   l8052 94FC                                     l8044 94C6  
                                   l8140 A2C0                                     l8118 ABF0  
                                   l8134 ABD6                                     l8126 ABB4  
                                   l6614 A26E                                     l6606 A242  
                                   l8038 A6A2                                     l8062 9558  
                                   l8046 94CA                                     l8142 A2CE  
                                   l8302 A93C                                     l8128 ABB8  
                                   l8080 9C9E                                     l6616 A290  
                                   l6608 A246                                     l6640 981E  
                                   l8056 9510                                     l8064 9570  
                                   l8048 94DC                                     l8144 A2DE  
                                   l8312 A9E2                                     l8090 9CEC  
                                   l8082 9CAE                                     l8074 9C56  
                                   l6618 A2A0                                     l6650 9872  
                                   l6642 9830                                     l8058 9528  
                                   l8066 95AA                                     l8234 AA4E  
                                   l8146 A2E8                                     l8138 A2B0  
                                   l8306 A93C                                     l8314 A9EE  
                                   l8084 9CB0                                     l8076 9C70  
                                   l6660 98BC                                     l6652 9894  
                                   l6644 9842                                     l8236 AA6E  
                                   l8308 A95E                                     l8316 A9F2  
                                   l8086 9CCC                                     l8078 9C8A  
                                   l6590 A82A                                     l6582 A7EC  
                                   l6662 98CA                                     l6654 9898  
                                   l6646 9842                                     l6638 9812  
                                   l8238 AA70                                     l8318 AA0A  
                                   l8088 9CD2                                     l6584 A7F0  
                                   l6656 989A                                     l6648 9854  
                                   l6664 98D6                                     l7480 AA1E  
                                   l7802 8BAA                                     l6586 A802  
                                   l6594 A7A6                                     l6658 98AC  
                                   l7482 AA30                                     l7804 8BD4  
                                   l6588 A822                                     l6596 A7AA  
                                   l7484 AA42                                     l7476 AA18  
                                   l7820 A700                                     l7812 A6D0  
                                   l9420 A4F0                                     l9500 AB04  
                                   l7830 8068                                     l6598 A7BC  
                                   l7486 AA4A                                     l7478 AA18  
                                   l7814 A6D4                                     l9422 A502  
                                   l9510 95B2                                     l7840 80A6  
                                   l7832 807E                                     l7824 8004  
                                   l6880 A640                                     l7816 A6E6  
                                   l8800 9E40                                     l9600 92DC  
                                   l9432 A53E                                     l9424 A514  
                                   l9440 A208                                     l9504 AB0A  
                                   l9520 9678                                     l9512 95C4  
                                   l7850 812E                                     l7842 80D8  
                                   l7826 8014                                     l9530 A174  
                                   l6882 A666                                     l7818 A6EC  
                                   l8802 9E50                                     l9610 9326  
                                   l9602 92EE                                     l9426 A526  
                                   l9442 A20C                                     l9450 A23E  
                                   l9514 95E6                                     l9522 967C  
                                   l7860 8184                                     l7852 813C  
                                   l7844 80DA                                     l7836 8092  
                                   l7828 8022                                     l9540 A18E  
                                   l6884 A676                                     l8804 9E54  
                                   l9620 937A                                     l9612 9360  
                                   l9604 9302                                     l9428 A538  
                                   l9444 A21E                                     l9436 A1D4  
                                   l9516 9604                                     l9508 95AE  
                                   l7790 8ABE                                     l8910 A09E  
                                   l9710 9D9A                                     l7862 8194  
                                   l7854 815A                                     l7846 80E6  
                                   l7838 809A                                     l9550 A1BE  
                                   l9542 A19E                                     l9526 A15E  
                                   l6886 A67E                                     l6878 A638  
                                   l8806 9E6C                                     l9622 938A  
                                   l9614 9364                                     l9606 9312  
                                   l9446 A238                                     l9438 A1EE  
                                   l9518 9616                                     l7792 8ADC  
                                   l7784 8A86                                     l8912 A0A6  
                                   l8904 A06E                                     l9720 9DD6  
                                   l9712 9D9E                                     l7864 81A2  
                                   l7856 815C                                     l7848 8122  
                                   l9552 A1C0                                     l9536 A17C  
                                   l9528 A162                                     l9560 8930  
                                   l9624 9390                                     l9616 9366  
                                   l7794 8AE4                                     l7786 8A8A  
                                   l8914 A0E4                                     l8906 A072  
                                   l8930 8EA2                                     l8922 8E68  
                                   l9722 9DE8                                     l9714 9DAC  
                                   l9706 9D84                                     l7866 81A4  
                                   l7858 8160                                     l9538 A18C  
                                   l9554 A1D0                                     l9570 8996  
                                   l9562 8942                                     l9618 9376  
                                   l9626 9394                                     l7796 8B46  
                                   l7788 8A9C                                     l8908 A084  
                                   l8940 8EEC                                     l8932 8EA8  
                                   l8924 8E6C                                     l9724 9DF4  
                                   l9716 9DBA                                     l9708 9D88  
                                   l8780 9EB8                                     l9548 A1A2  
                                   l9580 8A1E                                     l9572 89B8  
                                   l9564 8952                                     l9740 A106  
                                   l9900 6D22                                     l7798 8BA2  
                                   l8950 8F4C                                     l8942 8F08  
                                   l8934 8EC4                                     l8926 8E7E  
                                   l9718 9DC8                                     l9726 9E04  
                                   l8782 9ED6                                     l8774 9E84  
                                   l9590 8A70                                     l9582 8A30  
                                   l9574 89CA                                     l9566 8964  
                                   l9558 892C                                     l8790 9E08  
                                   l7990 AC26                                     l9750 A14C  
                                   l9742 A11A                                     l9734 A0E8  
                                   l9902 6D2A                                     l8952 8F52  
                                   l8944 8F0E                                     l8936 8ECA  
                                   l8928 8E86                                     l8880 AC6A  
                                   l8784 9ED6                                     l8776 9E84  
                                   l9584 8A40                                     l9576 89EC  
                                   l9568 8986                                     l9592 8A82  
                                   l9760 7CAA                                     l8792 9E0A  
                                   l7992 AC36                                     l9752 A158  
                                   l9744 A11E                                     l9736 A0E8  
                                   l9496 AAE4                                     l9920 6DB6  
                                   l8890 A00A                                     l8946 8F2A  
                                   l8938 8EE6                                     l8954 8F5A  
                                   l8882 AC7C                                     l8786 9EE2  
                                   l8778 9E96                                     l9586 8A50  
                                   l9578 89FC                                     l9770 7D78  
                                   l9762 7CBE                                     l8794 9E0E  
                                   l9738 A100                                     l9746 A122  
                                   l9498 AAF4                                     l9922 6DBA  
                                   l9930 6DF4                                     l9914 6D6A  
                                   l8892 A024                                     l8980 9BE2  
                                   l8972 9BB4                                     l8948 8F30  
                                   l8956 8F98                                     l8964 AC84  
                                   l9588 8A60                                     l9780 7E34  
                                   l9764 7CCC                                     l9772 7DAC  
                                   l9756 7C34                                     l8796 9E20  
                                   l9596 92CA                                     l7996 AB0E  
                                   l9748 A134                                     l9940 6E64  
                                   l9932 6E0E                                     l9924 6DD2  
                                   l9908 6D48                                     l9916 6D82  
                                   l8894 A02C                                     l8886 9FF4  
                                   l8982 9BFA                                     l8974 9BB4  
                                   l8966 AC88                                     l8878 AC66  
                                   l9774 7DE8                                     l9758 7C54  
                                   l8798 9E30                                     l9598 92CA  
                                   l9950 6E9E                                     l9934 6E2A  
                                   l9918 6D9C                                     l9870 6C2C  
                                   l9862 6BAC                                     STR_1 10C9  
                                   l8896 A06A                                     l8888 9FF8  
                                   l8992 9F7A                                     l8984 9C12  
                                   l8976 9BC6                                     l8968 AC9A  
                                   l9776 7DFC                                     l9768 7D3C  
                                   l9960 6EF8                                     l9936 6E32  
                                   l9864 6BDE                                     STR_3 10C9  
                                   l8994 9F7E                                     l8978 9BCA  
                                   l8986 9C16                                     l9778 7E24  
                                   l9938 6E4A                                     l9946 6E82  
                                   l9890 6CD0                                     l9970 6F1E  
                                   l9882 6C8E                                     l9866 6BF8  
                                   l9874 6C32                                     STR_4 10B7  
                                   STR_5 109A                                     l8996 9F90  
                                   l9972 6F36                                     l9948 6E86  
                                   l9956 6EBC                                     l9892 6CEA  
                                   l9884 6C9A                                     l9876 6C60  
                                   l9868 6C12                                     STR_6 108D  
                                   STR_7 10C1                                     l8998 9FAA  
                                   l9958 6EDA                                     l9966 6F16  
                                   l9886 6CB4                                     l9888 6CB8  
                                   l9898 6D08                                     _LATA 000F89  
                                   _LATB 000F8A                                     _LATC 000F8B  
                                   _LATD 000F8C                                     _LATE 000F8D  
                                   u9000 81CC                                     u6600 A802  
                                   u9001 81C8                                     u6601 A7FE  
                                   u9010 81EE                                     u6610 A812  
                                   u9011 81EA                                     u6611 A80E  
                                   u9020 820C                                     u6620 A822  
                                   u7180 A676                                     u9100 94FC  
                                   u9021 8208                                     u6621 A81E  
                                   u7181 A672                                     u9101 94F8  
                                   u6630 A7BC                                     u9110 950C  
                                   u6631 A7B8                                     u9111 9508  
                                   u9200 ABCA                                     u9120 9C70  
                                   u6640 A7CC                                     u9201 ABC6  
                                   u9121 9C6C                                     u6641 A7C8  
                                   u9050 832A                                     u9034 8234  
                                   u9130 9C8A                                     u6650 A7DC  
                                   u9210 A2CE                                     u9051 8324  
                                   u9035 8230                                     u9131 9C86  
                                   u6651 A7D8                                     u9211 A2CA  
                                   u9060 832C                                     u9044 82B2  
                                   u9140 9CCC                                     u6660 A258  
                                   u6740 9830                                     u9220 A308  
                                   u9045 82AE                                     u9141 9CC8  
                                   u6661 A254                                     u6741 982C  
                                   u9221 A304                                     u9150 9CEC  
                                   u6670 A26A                                     u6750 9842  
                                   u9070 A69C                                     u9151 9CE8  
                                   u6671 A266                                     u6751 983E  
                                   u9071 A698                                     u6680 A280  
                                   u6760 98AC                                     u9080 94DC  
                                   u6681 A27C                                     u6761 98A8  
                                   u9081 94D8                                     u6690 A290  
                                   u6770 98BC                                     u9090 94EC  
                                   u6691 A28C                                     u6771 98B8  
                                   u9091 94E8                                     u9180 AC16  
                                   u9181 AC12                                     u9190 ABF0  
                                   u9191 ABEC                                     u8800 8014  
                                   u8801 8010                                     u8810 8022  
                                   u8811 801E                                     u8740 8A9C  
                                   u8820 807E                                     u8741 8A98  
                                   u8821 807A                                     u8750 8ABE  
                                   u8830 80D4                                     u9470 A95E  
                                   u8751 8ABA                                     u8831 80D0  
                                   u9471 A95A                                     u8760 8ADC  
                                   u8840 811E                                     u9480 AA0A  
                                   u8761 8AD8                                     u8841 811A  
                                   u9481 AA06                                     u8850 813C  
                                   u8851 8138                                     u8860 814C  
                                   u8861 8148                                     u8774 8B04  
                                   u8870 815A                                     u8790 A6E6  
                                   u8775 8B00                                     u8871 8156  
                                   u8791 A6E2                                     u8784 8B66  
                                   u8880 8194                                     u8785 8B62  
                                   u8881 8190                                     u8890 81A2  
                                   u8891 819E                                     u8980 AB32  
                                   u8981 AB2C                                     u8990 AB34  
                     main@Calculate_flag 01FC                                     abs@a 0015  
                                   _dbuf 0235                                     _cp_h 1089  
                                   _cp_l 1085                                     _dp_h 1019  
                                   _dp_l 1011                                     _labs A31A  
                                   _atof AB66                                     _atoi 7E46  
                                   _main 7552                                     _dtoa 729A  
                                   _nanf AC26                                     _huge 1071  
                                   _prec 007B                                     _powf 10CE  
                                   pad@i 001A                                     pad@p 0017  
                                   fsr0h 000FEA                                     _tiny 106D  
                                   fsr1h 000FE2                                     indf0 000FEF  
                                   fsr2h 000FDA                                     fsr0l 000FE9  
                                   indf1 000FE7                                     indf2 000FDF  
                                   fsr1l 000FE1                                     pad@w 001C  
                                   fsr2l 000FD9                                     btemp 007D  
                          ___fpclassifyf 93C8                                     prodh 000FF4  
                                   prodl 000FF3                                     start 000E  
               _RB4_InterruptHighHandler 022D                          ___fldiv@new_exp 0053  
               _RB7_InterruptHighHandler 0221                        ??_INT1_SetHandler 0005  
                           ___param_bank 000000                     __end_of_HandleString 729A  
                                  ??_abs 0017                                    ??_pad 0019  
                       __end_of_INT0_ISR AAE2                         __end_of_INT1_ISR AAB2  
                      GPIO_pin_write@ret 000C                                    l10100 8D16  
                                  l11000 59A8                                    l11010 5A02  
                                  l11002 59BE                                    l10050 8BD8  
                                  l11020 5A7E                                    l11012 5A3C  
                                  l11100 83F2                                    l10140 AC48  
                                  l10132 A9AC                                    l10052 8BE8  
                                  l11030 5A9E                                    l11022 5A82  
                                  l11006 59E8                                    l11014 5A3E  
                                  l11110 8474                                    l11102 8406  
                                  l10134 A9C4                                    l10070 8C28  
                                  l10062 8C10                                    l10054 8BFA  
                                  l11032 5AAC                                    l11024 5A90  
                                  l11016 5A4E                                    l11008 59F4  
                                  l11200 68F4                                    l11120 84BE  
                                  l11112 8476                                    l11104 8414  
                                  l11040 A882                                    l12000 6302  
                                  l10072 8C2A                                    l10056 8C0C  
                                  l11034 5AAE                                    l11026 5A96  
                                  l11018 5A5E                                    l11202 6904  
                                  l11210 6924                                    l11114 8488  
                                  l11106 8426                                    l11130 87FA  
                                  l11042 A894                                    l11050 7A98  
                                  l12010 637C                                    l12002 632C  
                                  l10090 8CCA                                    l10074 8C3A  
                                  l11028 5A98                                    l11220 6962  
                                  l11212 6934                                    l11204 690C  
                                  l11108 8454                                    l11116 848E  
                                  l11140 8852                                    l11132 87FE  
                                  l11124 87C8                                    l11044 A898  
                                  l11300 63F4                                    l11060 7B66  
                                  l11052 7AAC                                    l12004 634C  
                                  l12012 63AA                                    l12100 5C86  
                                  l10092 8CEE                                    l10084 8C62  
                                  l10076 8C4E                                    l10068 8C14  
                                  l11230 69AA                                    l11222 6972  
                                  l11214 6934                                    l11206 6910  
                                  l11118 849E                                    l11150 88D4  
                                  l11142 8866                                    l11134 880C  
                                  l11126 87CC                                    l11038 A876  
                                  l11310 6434                                    l11302 6402  
                                  l11070 7C22                                    l11054 7ABA  
                                  l11062 7B9A                                    l11046 7A22  
                                  l12110 5D54                                    l12102 5C94  
                                  l10094 8D02                                    l10086 8C86  
                                  l10078 8C5E                                    l11240 69F8  
                                  l11232 69BE                                    l11224 6982  
                                  l11160 6812                                    l11080 8358  
                                  l11144 8874                                    l11152 88DA  
                                  l11136 882C                                    l11128 87DA  
                                  l11400 6736                                    l11320 6464  
                                  l11312 643A                                    l11304 6404  
                                  l11064 7BD6                                    l11048 7A42  
                                  l12016 63BC                                    l12120 5E0E  
                                  l12112 5D68                                    l12104 5CFC  
                                  l13000 4620                                    l10096 8D04  
                                  l10088 8C96                                    l11250 6A40  
                                  l11242 6A08                                    l11234 69CC  
                                  l11226 6992                                    l11218 6948  
                                  l11170 684E                                    l11162 681E  
                                  l12050 9976                                    l11074 AB8E  
                                  l11090 839C                                    l11082 835C  
                                  l11154 88EA                                    l11146 88A2  
                                  l11138 884A                                    l11410 67A0  
                                  l11402 6744                                    l11330 649C  
                                  l11322 6466                                    l11314 644A  
                                  l11306 6414                                    l11066 7BEA  
                                  l11058 7B2A                                    l12130 5EA8  
                                  l12122 5E24                                    l12114 5DA6  
                                  l12106 5D0A                                    l12210 1188  
                                  l12202 110E                                    l13010 46B2  
                                  l13002 4654                                    l10098 8D14  
                                  l11260 6A80                                    l11252 6A4E  
                                  l11244 6A1A                                    l11236 69D8  
                                  l11228 699A                                    l11180 687E  
                                  l11172 685E                                    l11164 682C  
                                  l12052 997C                                    l11076 ABAA  
                                  l11092 83BC                                    l11084 836A  
                                  l11156 890A                                    l11148 88C2  
                                  l11420 67F6                                    l11412 67BA  
                                  l11404 676E                                    l11340 64EC  
                                  l11332 64BC                                    l11324 6476  
                                  l11316 6450                                    l11308 6424  
                                  l11068 7C12                                    l12060 A56C  
                                  l12132 5EB8                                    l12124 5E34  
                                  l12116 5DEE                                    l12108 5D34  
                                  l12300 179E                                    l12204 1156  
                                  l13100 4A78                                    l13012 46CC  
                                  l13004 4684                                    l11270 6AF2  
                                  l11262 6AAE                                    l11246 6A30  
                                  l11254 6A60                                    l11238 69F6  
                                  l11190 68B4                                    l11182 6884  
                                  l11174 6860                                    l11166 682E  
                                  l11502 9150                                    l12054 9996  
                                  l12046 98DA                                    l11094 83C0  
                                  l11086 838A                                    l11414 67D6  
                                  l11422 67FC                                    l11406 6772  
                                  l11350 653C                                    l11342 64F6  
                                  l11334 64CC                                    l11326 6486  
                                  l11318 6456                                    l11430 A72A  
                                  l12062 A58A                                    l12150 7856  
                                  l12142 77EE                                    l12134 5F44  
                                  l12126 5E66                                    l12118 5DF8  
                                  l12070 5AD0                                    l12310 17FE  
                                  l12302 17B6                                    l12230 1268  
                                  l12222 121A                                    l12214 119E  
                                  l13110 4AEA                                    l13102 4A82  
                                  l13030 4770                                    l13022 4712  
                                  l13014 46EA                                    l13006 4690  
                                  l11280 6B6A                                    l11272 6B1C  
                                  l11256 6A6E                                    l11248 6A36  
                                  l11192 68C4                                    l11184 6892  
                                  l11168 683E                                    l11176 6868  
                                  l11520 91B4                                    l11512 9178  
                                  l11504 915A                                    l12048 995C  
                                  l11600 7E46                                    l11096 83CC  
                                  l11088 838E                                    l11440 9B76  
                                  l11424 6800                                    l11416 67E6  
                                  l11408 678C                                    l11360 657E  
                                  l11352 6548                                    l11344 650C  
                                  l11328 6496                                    l12056 A542  
                                  l13200 975C                                    l12152 7872  
                                  l12160 78D6                                    l12144 77FE  
                                  l12136 5F54                                    l12128 5E76  
                                  l12080 5B8E                                    l12072 5AE0  
                                  l12400 1FA8                                    l12320 18AC  
                                  l12312 180C                                    l12304 17DA  
                                  l12232 1284                                    l12224 122A  
                                  l12216 11C0                                    l12208 116C  
                                  l13112 4B1C                                    l13104 4A9C  
                                  l13016 46F4                                    l13008 4698  
                                  l11290 6BA0                                    l11282 6B86  
                                  l11266 6AD8                                    l11274 6B20  
                                  l11258 6A72                                    l11194 68C6  
                                  l11186 6894                                    l11178 6878  
                                  l11514 9184                                    l11506 9164  
                                  l11530 A79A                                    l11610 7EDA  
                                  l11602 7E5A                                    l11098 83EA  
                                  l11442 9B86                                    l11434 9B0A  
                                  l11450 91C6                                    l11418 67F4  
                                  l11370 65E0                                    l11362 658E  
                                  l11354 6556                                    l11346 6518  
                                  l11338 64E0                                    l12058 A54E  
                                  l13210 97A4                                    l13202 9762  
                                  l12170 797E                                    l12162 78F2  
                                  l12154 78A6                                    l12146 781A  
                                  l12138 5F64                                    l12082 5BBC  
                                  l12074 5B14                                    l12066 5AC0  
                                  l12410 2048                                    l12402 1FB4  
                                  l12330 1926                                    l12322 18C2  
                                  l12314 1822                                    l12234 1382  
                                  l12226 1238                                    l12218 11E2  
                                  l13122 4B64                                    l13114 4B2C  
                                  l13106 4AD0                                    l13042 47D8  
                                  l13034 4774                                    l13026 472C  
                                  l13018 470E                                    l13050 484E  
                                  l10900 5724                                    l11284 6B8A  
                                  l11276 6B3A                                    l11268 6AE4  
                                  l11188 68A4                                    l11196 68CE  
                                  l11516 9194                                    l13220 9A5C  
                                  l11532 A79E                                    l11524 A760  
                                  l11612 7EE2                                    l11540 9F00  
                                  l11444 9BAA                                    l11436 9B38  
                                  l11460 9250                                    l11452 91F4  
                                  l11380 6688                                    l11372 65FC  
                                  l11364 65A8                                    l11356 6562  
                                  l11348 6530                                    l11428 A71A  
                                  l11700 4BC2                                    l13212 97CC  
                                  l13204 9776                                    l12180 7A10  
                                  l12172 7986                                    l12164 7926  
                                  l12156 78AE                                    l12148 784E  
                                  l12084 5BD0                                    l12092 5C08  
                                  l12068 5AC0                                    l12500 29E2  
                                  l12420 2134                                    l12412 20D0  
                                  l12404 1FC4                                    l12340 1A40  
                                  l12332 1992                                    l12316 182C  
                                  l12324 18D2                                    l12308 17EE  
                                  l12252 147A                                    l12244 1420  
                                  l12236 13EE                                    l12260 14C6  
                                  l12228 1254                                    l13140 8692  
                                  l13132 8656                                    l13124 4B88  
                                  l13108 4AD8                                    l13060 48AC  
                                  l13052 4856                                    l13044 4806  
                                  l13036 47A2                                    l13028 475A  
                                  l13300 713C                                    l10910 5738  
                                  l10902 5728                                    l11286 6B98  
                                  l11278 6B50                                    l11198 68DE  
                                  l11518 91A4                                    l13230 9A96  
                                  l13222 9A6E                                    l11526 A764  
                                  l11622 7F84                                    l11614 7EEA  
                                  l11606 7E5E                                    l10830 96CC  
                                  l10822 9680                                    l11550 9F46  
                                  l11542 9F0E                                    l11446 9BB0  
                                  l11438 9B48                                    l11462 9262  
                                  l11454 9204                                    l11390 66C4  
                                  l11382 6692                                    l11374 6626  
                                  l11366 65B8                                    l11358 6572  
                                  l11710 4C18                                    l11702 4BE6  
                                  l13214 97EE                                    l13206 9776  
                                  l12174 79A2                                    l12166 792E  
                                  l12158 78CA                                    l12094 5C5C  
                                  l12086 5BDE                                    l12078 5B70  
                                  l12510 2B80                                    l12502 2A5E  
                                  l12430 223A                                    l12422 214E  
                                  l12414 2104                                    l12406 1FD4  
                                  l12350 1BA4                                    l12342 1AAC  
                                  l12326 18F4                                    l12262 14E2  
                                  l12254 1488                                    l12246 1442  
                                  l12238 140A                                    l13134 865A  
                                  l12190 A3E2                                    l13118 4B40  
                                  l13070 4910                                    l13062 48DE  
                                  l13054 4868                                    l13038 47D4  
                                  l13046 4838                                    l13310 71C4  
                                  l13302 714E                                    l10920 578A  
                                  l10912 573C                                    l10904 572C  
                                  l10840 561A                                    l11288 6B9E  
                                  l11480 90C0                                    l13240 9AD8  
                                  l13232 9A9C                                    l13224 9A6E  
                                  l11536 AB3A                                    l11528 A778  
                                  l11624 7FCA                                    l11616 7F34  
                                  l11608 7E90                                    l10832 9702  
                                  l10824 9692                                    l11552 9F64  
                                  l11544 9F1A                                    l11640 72FE  
                                  l11632 729A                                    l11464 9270  
                                  l11456 9232                                    l11392 66D2  
                                  l11384 66A0                                    l11376 665C  
                                  l11368 65D4                                    l11472 A974  
                                  l11560 93E8                                    l11800 4FB8  
                                  l11720 4C68                                    l11712 4C24  
                                  l11704 4BF0                                    l13216 97F2  
                                  l13208 9792                                    l13400 8E2C  
                                  l12168 794A                                    l12176 79AA  
                                  l12096 5C70                                    l12088 5BE8  
                                  l12600 34A2                                    l12520 2BFE  
                                  l12512 2BB4                                    l12504 2AC2  
                                  l12440 23B6                                    l12432 229E  
                                  l12424 215E                                    l12416 2114  
                                  l12408 1FE4                                    l12360 1D48  
                                  l12352 1BD8                                    l12328 1918  
                                  l12336 19FE                                    l12280 15DA  
                                  l12272 158C                                    l12264 14F0  
                                  l12256 14B0                                    l12248 1450  
                                  l13152 8702                                    l12192 A3E6  
                                  l12184 A3E2                                    l13080 49AA  
                                  l13072 4944                                    l13056 4876  
                                  l13048 4846                                    l13128 AB66  
                                  l13320 71F8                                    l13304 7180  
                                  l13312 71CA                                    l10930 57CE  
                                  l10922 579A                                    l10906 5730  
                                  l10914 5740                                    l10850 564E  
                                  l10842 561C                                    l11490 9116  
                                  l11482 90D6                                    l13242 9AF2  
                                  l13234 9AB6                                    l13226 9A70  
                                  l13218 9A58                                    l11626 7FDC  
                                  l11554 A8FC                                    l10826 96A4  
                                  l11546 9F2E                                    l11650 7356  
                                  l11642 730C                                    l11634 72BA  
                                  l11466 92C0                                    l11458 9242  
                                  l11394 6700                                    l11386 66B2  
                                  l11378 666A                                    l11298 63E8  
                                  l11474 A98A                                    l11562 9426  
                                  l11570 9466                                    l11810 50A0  
                                  l11802 4FC0                                    l11730 4C9C  
                                  l11722 4C6C                                    l11714 4C2C  
                                  l11706 4BF8                                    l13402 8E4A  
                                  l12178 79DC                                    l12098 5C7A  
                                  l12610 358C                                    l12602 34BC  
                                  l12530 2D0E                                    l12522 2C32  
                                  l12514 2BC4                                    l12506 2AE8  
                                  l12450 254A                                    l12442 23EA  
                                  l12434 22D2                                    l12426 21B8  
                                  l12418 2124                                    l12370 1DC6  
                                  l12362 1D58                                    l12354 1C30  
                                  l12338 1A22                                    l12346 1B18  
                                  l12290 166C                                    l12282 15FE  
                                  l12274 15A4                                    l12266 153C  
                                  l13146 86CA                                    l12194 A408  
                                  l13090 4A12                                    l13082 49BC  
                                  l13074 494E                                    l13066 48F4  
                                  l13058 4886                                    l13322 7208  
                                  l13314 71CA                                    l13306 7188  
                                  l13330 8F9C                                    l10932 57D0  
                                  l10924 57B0                                    l10916 5744  
                                  l10908 5734                                    l10860 5680  
                                  l10844 562C                                    l10852 5656  
                                  l10836 5600                                    l11492 9126  
                                  l12700 9CF4                                    l13244 9AF6  
                                  l13236 9AB8                                    l13228 9A7C  
                                  l11556 A916                                    l10828 96AE  
                                  l11548 9F42                                    l11660 738C  
                                  l11652 735C                                    l11644 7310  
                                  l11636 72CE                                    l11468 92C6  
                                  l11388 66C0                                    l11476 A99A  
                                  l11572 9478                                    l11564 944E  
                                  l11580 A8BA                                    l11900 5520  
                                  l11820 515E                                    l11812 50D4  
                                  l11804 4FD0                                    l11740 4CF8  
                                  l11724 4C72                                    l11708 4C08  
                                  l11716 4C30                                    l13180 99B2  
                                  l12620 36B4                                    l12612 35E4  
                                  l12604 34CC                                    l12540 2DF8  
                                  l12532 2D1E                                    l12524 2C96  
                                  l12516 2BD4                                    l12508 2B1C  
                                  l12460 2696                                    l12452 25A2  
                                  l12444 2442                                    l12436 232A  
                                  l12428 222A                                    l12380 1E70  
                                  l12364 1D68                                    l12356 1C64  
                                  l12348 1B4C                                    l12372 1DFE  
                                  l12292 16A0                                    l12284 161C  
                                  l12276 15B2                                    l12268 1554  
                                  l13164 8772                                    l12196 A436  
                                  l13084 49EE                                    l13076 496E  
                                  l13068 4904                                    l13324 7240  
                                  l13308 71C0                                    l13260 6FC4  
                                  l13316 71D0                                    l13252 6F3A  
                                  l13340 8FF8                                    l13332 8FA8  
                                  l13500 772C                                    l10950 5858  
                                  l10942 5820                                    l10934 57DA  
                                  l10926 57BC                                    l10918 576E  
                                  l10870 56B6                                    l10862 5686  
                                  l10854 5666                                    l10846 563C  
                                  l10838 560C                                    l11494 912A  
                                  l11486 90EA                                    l12710 9D3E  
                                  l12702 9D06                                    l13246 9B04  
                                  l13238 9AD2                                    l11670 742A  
                                  l11662 7396                                    l11654 736C  
                                  l11646 732A                                    l11638 72DE  
                                  l11398 672A                                    l11566 945A  
                                  l11558 93C8                                    l11590 A5FC  
                                  l11582 A8CA                                    l11910 556E  
                                  l11902 552E                                    l11830 51FA  
                                  l11822 5174                                    l11806 4FE4  
                                  l11814 50DA                                    l11742 4CFE  
                                  l11726 4C7A                                    l11718 4C56  
                                  l11734 4CBC                                    l13190 9A1A  
                                  l13182 99C4                                    l13174 999A  
                                  l12630 386C                                    l12622 370C  
                                  l12614 3618                                    l12606 3500  
                                  l12550 2EA4                                    l12542 2E2C  
                                  l12534 2D38                                    l12526 2CCA  
                                  l12518 2BEE                                    l12470 2752  
                                  l12462 26CA                                    l12454 25D6  
                                  l12446 249A                                    l12438 2382  
                                  l12390 1F28                                    l12382 1E80  
                                  l12374 1E0E                                    l12366 1D82  
                                  l12358 1C98                                    l12294 16B0  
                                  l12286 1632                                    l13166 87B6  
                                  l13158 873A                                    l12198 A43A  
                                  l13086 49FE                                    l13078 49A2  
                                  l13094 4A26                                    l13326 7288  
                                  l13318 71E8                                    l13262 6FD4  
                                  l13270 702C                                    l13254 6F84  
                                  l13350 9036                                    l13342 9012  
                                  l13334 8FC2                                    l13510 77A8  
                                  l13502 7744                                    l10952 585C  
                                  l10944 5830                                    l10936 57FC  
                                  l10960 587C                                    l10928 57C0  
                                  l10880 56F2                                    l10872 56C6  
                                  l10864 5694                                    l10856 566C  
                                  l10848 564C                                    l11496 9138  
                                  l11488 9114                                    l12712 9D4E  
                                  l12704 9D0A                                    l13248 9B06  
                                  l11680 74FA                                    l11664 739C  
                                  l11672 748E                                    l11656 7378  
                                  l11648 7346                                    l11576 94BC  
                                  l11584 A31A                                    l11592 A608  
                                  l11920 55D6                                    l11912 5574  
                                  l11904 5546                                    l11832 5250  
                                  l11840 52A2                                    l11824 51A6  
                                  l11816 50F8                                    l11808 5048  
                                  l11760 4D88                                    l11744 4D06  
                                  l11736 4CE2                                    l11752 4D22  
                                  l11728 4C92                                    l13192 9A36  
                                  l13184 99C4                                    l13176 999A  
                                  l12640 39DC                                    l12632 38E8  
                                  l12624 3764                                    l12616 364C  
                                  l12608 3534                                    l12560 2FA2  
                                  l12544 2E60                                    l12536 2D48  
                                  l12480 2818                                    l12472 276C  
                                  l12464 26FE                                    l12456 260A  
                                  l12448 24F2                                    l12392 1F4C  
                                  l12376 1E2A                                    l12384 1E90  
                                  l12528 2CFE                                    l12368 1D92  
                                  l12296 1714                                    l12288 165E  
                                  l12800 3E4C                                    l13280 7082  
                                  l13272 704A                                    l13264 6FE8  
                                  l13256 6F9E                                    l13352 9052  
                                  l13336 8FC6                                    l13504 7758  
                                  l13512 77AE                                    l13440 7552  
                                  l10962 58A2                                    l10970 58F8  
                                  l10954 586A                                    l10946 583E  
                                  l10938 580C                                    l10890 5710  
                                  l10882 5700                                    l10874 56C8  
                                  l10866 5696                                    l10858 567E  
                                  l12714 9D68                                    l12706 9D20  
                                  l11674 74A8                                    l11682 750A  
                                  l11666 741E                                    l11658 7380  
                                  l11586 A338                                    l11594 A60C  
                                  l11922 55DE                                    l11914 5592  
                                  l11850 52D4                                    l11842 52B2  
                                  l11834 5256                                    l11826 51B6  
                                  l11818 512C                                    l11770 4E7E  
                                  l11762 4DBC                                    l11754 4D3C  
                                  l11738 4CF4                                    l11930 5FAA  
                                  l13194 9A38                                    l13186 99E0  
                                  l13178 99AC                                    l12650 3ADE  
                                  l12642 39EC                                    l12634 3940  
                                  l12626 37BC                                    l12618 3680  
                                  l12546 2E70                                    l12538 2DA0  
                                  l12490 291C                                    l12482 284C  
                                  l12474 277C                                    l12466 2732  
                                  l12458 2662                                    l12394 1F60  
                                  l12386 1EF8                                    l12378 1E5E  
                                  l12298 171E                                    l13098 4A44  
                                  l12810 3EB8                                    l12802 3E60  
                                  l12730 3B40                                    l12722 3B14  
                                  l13290 70F0                                    l13282 7092  
                                  l13274 7066                                    l13266 6FEC  
                                  l13258 6FB8                                    l13354 905A  
                                  l13362 909C                                    l13338 8FDE  
                                  l13346 9018                                    l13514 77C0  
                                  l13506 7778                                    l13450 7574  
                                  l13442 7556                                    l10980 594C  
                                  l10972 591E                                    l10964 58D6  
                                  l10956 586C                                    l10948 584C  
                                  l10892 5714                                    l10884 5704  
                                  l10868 56A6                                    l10876 56D0  
                                  l12716 9D6C                                    l12708 9D3A  
                                  l13380 A3A4                                    l13372 A380  
                                  l12660 850A                                    l11684 751A  
                                  l11676 74C6                                    l11668 7424  
                                  l11596 A618                                    l11588 A5E8  
                                  l11908 5558                                    l11916 55B0  
                                  l11860 53A6                                    l11852 534C  
                                  l11844 52BA                                    l11836 528A  
                                  l11828 51C6                                    l11780 4F34  
                                  l11772 4EB2                                    l11764 4DFA  
                                  l11692 4B9A                                    l11940 5FDE  
                                  l11932 5FB8                                    l13196 974A  
                                  l13188 99F2                                    l12644 39FC  
                                  l12636 3974                                    l12628 3814  
                                  l12572 30C2                                    l12580 31A2  
                                  l12564 300E                                    l12556 2F10  
                                  l12548 2E80                                    l12492 2936  
                                  l12484 28C8                                    l12476 27B0  
                                  l12468 2742                                    l12396 1F84  
                                  l12388 1F10                                    l12900 4282  
                                  l12820 3F14                                    l12812 3ED6  
                                  l12804 3E88                                    l12740 3BC4  
                                  l12732 3B74                                    l12724 3B28  
                                  l13292 70F4                                    l13284 70CA  
                                  l13276 706C                                    l13268 700C  
                                  l13356 9072                                    l13348 9032  
                                  l13516 77DC                                    l13508 778C  
                                  l13460 75CC                                    l13452 7586  
                                  l13444 7556                                    l10990 5976  
                                  l10982 595A                                    l10974 592E  
                                  l10966 58D8                                    l10958 5876  
                                  l10894 5718                                    l10886 5708  
                                  l10878 56E0                                    l12718 9D7C  
                                  l13382 A3B2                                    l13374 A384  
                                  l12670 85B2                                    l12654 84E0  
                                  l11686 7520                                    l11678 74E0  
                                  l11598 A61C                                    l11918 55C0  
                                  l11870 53CC                                    l11862 53AA  
                                  l11854 536C                                    l11846 52C0  
                                  l11838 529E                                    l11790 4F66  
                                  l11782 4F42                                    l11774 4EBA  
                                  l11766 4E2C                                    l11758 4D82  
                                  l11694 4BA0                                    l11950 6058  
                                  l11934 5FBC                                    l11926 5F76  
                                  l13198 974A                                    l13390 8D28  
                                  l12646 3A3E                                    l12638 39A8  
                                  l12590 340A                                    l12582 3214  
                                  l12574 30E0                                    l12566 3056  
                                  l12558 2F28                                    l12494 2946  
                                  l12486 28FC                                    l12478 27E4  
                                  l12398 1F98                                    l12910 42BC  
                                  l12830 3F76                                    l12822 3F32  
                                  l12814 3EF4                                    l12806 3E8A  
                                  l12750 3BEE                                    l12742 3BCC  
                                  l12734 3BA8                                    l12726 3B3C  
                                  l13294 7106                                    l13286 70DA  
                                  l13278 7074                                    l13366 90A4  
                                  l13518 77E2                                    l13470 7614  
                                  l13462 75D0                                    l13454 7598  
                                  l13446 755C                                    l10992 5986  
                                  l10984 595C                                    l10968 58E8  
                                  l10896 571C                                    l10888 570C  
                                  l13384 A3C4                                    l13376 A388  
                                  l12680 8638                                    l12672 85DE  
                                  l12664 8540                                    l11688 7530  
                                  l11880 5400                                    l11872 53D2  
                                  l11864 53B0                                    l11856 5388  
                                  l11848 52C8                                    l11792 4F78  
                                  l11784 4F4E                                    l11768 4E6A  
                                  l11696 4BB0                                    l11960 60EE  
                                  l11952 6060                                    l11944 5FEA  
                                  l11936 5FCA                                    l11928 5F9C  
                                  l13392 8D82                                    l12648 3A8E  
                                  l12592 341A                                    l12584 3224  
                                  l12576 3136                                    l12496 297A  
                                  l12488 290C                                    l12920 42F0  
                                  l12912 42DA                                    l12904 4296  
                                  l12832 3F94                                    l12824 3F36  
                                  l12816 3F0A                                    l12808 3EA8  
                                  l12760 3C96                                    l12752 3C0A  
                                  l12736 3BAC                                    l13296 7118  
                                  l13288 70E0                                    l13368 90BC  
                                  l13480 7664                                    l13472 7624  
                                  l13464 75E4                                    l13456 75AA  
                                  l13448 7560                                    l10986 596A  
                                  l10978 5942                                    l10994 5988  
                                  l10898 5720                                    l13386 A3D2  
                                  l13378 A396                                    l12682 863E  
                                  l12666 8598                                    l12658 84FE  
                                  l11882 5406                                    l11866 53B8  
                                  l11858 5396                                    l11874 53D8  
                                  l11890 549E                                    l11794 4F86  
                                  l11786 4F58                                    l11778 4EFA  
                                  l11698 4BBE                                    l11970 6166  
                                  l11954 606E                                    l11938 5FCC  
                                  l11946 6020                                    l12690 A5B0  
                                  l13394 8DB4                                    l12586 3246  
                                  l12594 344E                                    l12498 29AE  
                                  l12930 436C                                    l12922 430E  
                                  l12914 42DE                                    l12906 4298  
                                  l12850 4054                                    l12842 3FCE  
                                  l12826 3F54                                    l12818 3F12  
                                  l12770 3CE6                                    l12762 3CA8  
                                  l12754 3C40                                    l12746 3BE4  
                                  l12738 3BC0                                    l13298 712A  
                                  l13490 76B4                                    l13482 7680  
                                  l13466 75F4                                    l13474 7628  
                                  l13458 75BC                                    l10988 5972  
                                  l10996 5996                                    l12684 8642  
                                  l12676 85F8                                    l11892 54BC  
                                  l11884 545E                                    l11876 53EA  
                                  l11868 53C8                                    l11796 4F9E  
                                  l11788 4F60                                    l11980 621A  
                                  l11972 6184                                    l11964 60FC  
                                  l11956 6094                                    l11948 6032  
                                  l12692 A5B8                                    l13396 8DE6  
                                  l12596 3482                                    l12588 3378  
                                  l12924 431A                                    l12916 42E6  
                                  l12908 42B6                                    l12860 40B8  
                                  l12852 4092                                    l12844 4000  
                                  l12836 3F9C                                    l12780 3D82  
                                  l12772 3CE8                                    l12764 3CBA  
                                  l12756 3C76                                    l12748 3BEC  
                                  l13484 7686                                    l13492 76C4  
                                  l13476 7632                                    l13468 7604  
                                  l10998 599A                                    l12678 862C  
                                  l11894 54D8                                    l11886 5492  
                                  l11878 53FC                                    l11798 4FB0  
                                  l11982 622E                                    l11990 6246  
                                  l11974 61DA                                    l11958 60CE  
                                  l11966 6138                                    l12694 A5D4  
                                  l12686 A596                                    l13398 8E0A  
                                  l12598 3492                                    l12950 4410  
                                  l12942 43D2                                    l12926 432A  
                                  l12934 436E                                    l12918 42EE  
                                  l12870 411C                                    l12862 40BE  
                                  l12854 4096                                    l12846 4016  
                                  l12838 3FC8                                    l12790 3DDC  
                                  l12782 3D9E                                    l12774 3D04  
                                  l12766 3CBE                                    l12758 3C86  
                                  l13494 76D6                                    l13486 769E  
                                  l13478 7652                                    l11896 54E0  
                                  l11888 549A                                    l11984 6236  
                                  l11992 6278                                    l11968 6148  
                                  l12688 A5A8                                    l13840 8788  
                                  l12960 4480                                    l12952 4426  
                                  l12944 43DA                                    l12936 43A0  
                                  l12928 4346                                    l12880 416C  
                                  l12872 412E                                    l12864 40DC  
                                  l12848 4038                                    l12856 40A2  
                                  l12792 3DDE                                    l12784 3DB2  
                                  l12776 3D3A                                    l12768 3CDE  
                                  l13496 76F2                                    l13488 76B0  
                                  l12698 9CF0                                    l11898 54F0  
                                  l13850 639C                                    l11994 629A  
                                  l11986 623E                                    l11978 620A  
                                  l13842 9584                                    l12970 44E8  
                                  l12962 4490                                    l12946 43E2  
                                  l12938 43B0                                    l12890 4230  
                                  l12882 419E                                    l12874 413A  
                                  l12794 3DFA                                    l12786 3DBA  
                                  l12778 3D70                                    l13498 770E  
                                  l13860 A04C                                    l13852 7F1E  
                                  l11996 62CE                                    l13844 6012  
                                  l12980 4550                                    l12972 44F8  
                                  l12964 449E                                    l12956 443A  
                                  l12948 43F4                                    l12884 41B4  
                                  l12876 4166                                    l12892 4234  
                                  l12868 40FE                                    l12796 3E18  
                                  l12788 3DD4                                    l13862 A0C6  
                                  l13854 8F7A                                    l13846 625A  
                                  l12982 459C                                    l12974 4514  
                                  l12966 44BA                                    l12958 446C  
                                  l12886 41D6                                    l12894 4238  
                                  l12798 3E36                                    l13864 833E  
                                  l13856 9C36                                    l13848 6316  
                                  l12992 45F2                                    l12984 45B6  
                                  l12976 452C                                    l12968 44D2  
                                  l12888 41F2                                    l12896 4246  
                                  l13866 8BBE                                    l13858 9FD2  
                                  l12994 45F4                                    l12978 4540  
                                  l12898 4264                                    l12996 4608  
                                  l12988 45C0                                    l12998 4616  
                      ?_lcd_send_char_at 0027                            ___fltol@sign1 0063  
                        __end_of___aodiv 84E0                                    ?_labs 0003  
                                  ?_atof 0095                                    ?_atoi 0009  
            __end_of_INTx_interrupt_init 9E08                          __end_of___fladd 5AC0  
                                  ?_main 0001                                    ?_dtoa 001E  
                                  ?_nanf 0003                          __end_of___aomod 892C  
                        __end_of___fldiv 6BAC                          __end_of___flneg A9AC  
                                  STR_10 10C5                                    STR_20 10BD  
                                  STR_13 10C0                                    STR_22 10C0  
                                  STR_14 10AE                                    STR_15 10A5  
                                  STR_19 10C5                          __end_of___flmul 6812  
                                  ?_powf 0080                          __end_of___flsub A760  
                        __end_of___fltol 91C6                                    u10100 9E30  
                                  u10101 9E2C                                    u10110 9E40  
                                  u10111 9E3C                                    u10120 9E50  
                                  u10121 9E4C                                    u10210 AC7C  
                                  u10211 AC78                                    u10220 A00A  
                                  u10300 8F4C                                    u10060 9E96  
                                  u10221 A006                                    u10301 8F48  
                                  u10061 9E92                                    u10230 A084  
                                  u10310 AC9A                                    u10070 9EB8  
                                  u10231 A080                                    u10311 AC96  
                                  u10071 9EB4                                    u10320 9BC6  
                                  u10240 8E7E                                    u10080 9ED6  
                                  u12000 6CB4                                    u10321 9BC2  
                                  u10241 8E7A                                    u10081 9ED2  
                                  u12001 6CB0                                    u10330 9F90  
                                  u10250 8EA2                                    u10090 9E20  
                                  u12010 6CD0                                    u10331 9F8C  
                                  u10251 8E9E                                    u10091 9E1C  
                                  u12011 6CCC                                    u10260 8EC4  
                                  u11300 A21E                                    u12100 6DD2  
                                  u12020 6CEA                                    u10261 8EC0  
                                  u11301 A21A                                    u12101 6DCE  
                                  u12021 6CE6                                    u10270 8EE6  
                                  u11310 A238                                    u12110 6DF0  
                                  u12030 6D04                                    u10271 8EE2  
                                  u11311 A234                                    u12111 6DEC  
                                  u12031 6D00              ??_MSSP_I2C_Master_Send_Stop 0005  
                                  u10280 8F08                                    u11400 A19E  
                                  u11240 A502                                    u11320 AAF4  
                                  u12200 6EF8                                    u12120 6E0E  
                                  u12040 6D22                                    u10281 8F04  
                                  u11401 A19A                                    u11241 A4FE  
                                  u11321 AAF0                                    u12201 6EF4  
                                  u12121 6E0A                                    u12041 6D1E  
                                  u10290 8F2A                                    u11410 A1D0  
                                  u11250 A514                                    u11330 AB04  
                                  u12210 6F12                                    u12130 6E2A  
                                  u12050 6D44                                    u10291 8F26  
                                  u11411 A1CC                                    u11251 A510  
                                  u11331 AB00                                    u12211 6F0E  
                                  u12131 6E26                                    u12051 6D40  
                                  u13100 562C                                    u11420 8942  
                                  u11500 938A                                    u11260 A526  
                                  u12220 6F36                                    u12140 6E4A  
                                  u12060 6D66                                    u11340 95C4  
                                  u13101 5628                                    u11421 893E  
                                  u11501 9386                                    u11261 A522  
                                  u12221 6F32                                    u12141 6E46  
                                  u12061 6D62                                    u11341 95C0  
                                  u13110 563C                                    u11510 93B6  
                                  u11430 92DC                                    u11270 A538  
                                  u12150 6E64                                    u12070 6D82  
                                  u11350 95E6                                    u13111 5638  
                                  u11431 92D8                                    u11271 A534  
                                  u12151 6E60                                    u12071 6D7E  
                                  u11351 95E2                                    u13200 5788  
                                  u13120 567E                                    u14000 6486  
                                  u11520 93C6                                    u11440 92EE  
                                  u11280 A1EE                                    u12160 6E7E  
                                  u12080 6D9C                                    u11360 9604  
                                  u12400 8D26                                    u13121 567A  
                                  u14001 6482                                    u11521 93C2  
                                  u11441 92EA                                    u11281 A1EA  
                                  u12161 6E7A                                    u12081 6D98  
                                  u11361 9600                                    u12401 8D22  
                                  u13210 57B0                                    u13130 5694  
                                  u13050 9692                                    u14010 64BC  
                                  u11450 9302                                    u11290 A208  
                                  u12170 6E9E                                    u12090 6DB6  
                                  u11370 9616                                    u13211 57AC  
                                  u13131 5690                                    u13051 968E  
                                  u14011 64B8                                    u11451 92FE  
                                  u11291 A204                                    u12171 6E9A  
                                  u12091 6DB2                                    u11371 9612  
                                  u13300 58E8                                    u13220 57CE  
                                  u13140 56A6                                    u13060 96A4  
                                  u14100 6744                                    u14020 64CC  
                                  u11460 9312                                    u12180 6EB8  
                                  u12340 8BFA                                    u13301 58E4  
                                  u13221 57CA                                    u13141 56A2  
                                  u13061 96A0                                    u14101 6740  
                                  u14021 64C8                                    u11517 93AC  
                                  u11461 930E                                    u12181 6EB4  
                                  u12341 8BF6                                    u13310 591E  
                                  u13230 57EE                                    u13150 56B6  
                                  u11390 A174                                    u11710 7D38  
                                  u13070 96CC                                    u14110 678C  
                                  u14030 6646                                    u11470 9322  
                                  u12190 6EDA                                    u12350 8C0C  
                                  u13311 591A                                    u13231 57EA  
                                  u13151 56B2                                    u11391 A170  
                                  u11711 7D34                                    u13071 96C8  
                                  u14111 6788                                    u11471 931E  
                                  u12191 6ED6                                    u12351 8C08  
                                  u11640 9D9A                                    u13400 59E8  
                                  u13320 592E                                    u13240 57FC  
                                  u13160 56F2                                    u11720 7D5C  
                                  u13080 9702                                    u14200 9270  
                                  u14120 67BA                                    u14040 66A0  
                                  u15000 5554                                    u11480 9358  
                                  u11384 9664                                    u12360 8C3A  
                                  u11641 9D96                                    u13401 59E4  
                                  u13321 592A                                    u13241 57F8  
                                  u13161 56EE                                    u11705 7CE0  
                                  u13081 96FE                                    u14201 926C  
                                  u14121 67B6                                    u14041 669C  
                                  u15001 5550                                    u11385 9660  
                                  u12361 8C36                                    u13410 5A02  
                                  u13330 595A                                    u13250 580C  
                                  u13170 5700                                    u13090 561A  
                                  u11730 7D78                                    u11706 7CEA  
                                  u14210 92C0                                    u14130 67F4  
                                  u14050 66C0                                    u15010 5592  
                                  u11490 9376                                    u11650 A134  
                                  u12370 8C96                                    u13411 59FE  
                                  u13331 5956                                    u13251 5808  
                                  u13171 56FC                                    u13091 5616  
                                  u11731 7D74                                    u11707 7CFA  
                                  u14211 92BC                                    u14131 67F0  
                                  u14051 66BC                                    u14035 663C  
                                  u15011 558E                                    u11491 9372  
                                  u11651 A130                                    u12371 8C92  
                                  u13420 5A3C                                    u13340 596A  
                                  u13260 583E                                    u13180 576E  
                                  u11740 7DCC                                    u14300 A778  
                                  u14140 9B38                                    u14060 66D2  
                                  u14220 A98A                                    u13500 7A98  
                                  u15020 55B0                                    u15100 6184  
                                  u11660 A14C                                    u12460 A9C4  
                                  u12380 8CFE                                    u13421 5A38  
                                  u13341 5966                                    u13261 583A  
                                  u13181 576A                                    u11725 7D52  
                                  u14301 A774                                    u14141 9B34  
                                  u14061 66CE                                    u14221 A986  
                                  u13501 7A94                                    u15021 55AC  
                                  u15101 6180                                    u11661 A148  
                                  u12461 A9C0                                    u12381 8CFA  
                                  u13430 5A4E                                    u13350 5986  
                                  u13270 584C                                    u13190 5786  
                                  u14230 90D6                                    u11750 7DE8  
                                  u11670 7C7C                                    u14310 A79A  
                                  u14150 9B76                                    u14070 6700  
                                  u13510 7ABA                                    u15030 55C0  
                                  u15110 6296                                    u12390 8D14  
                                  u13431 5A4A                                    u13351 5982  
                                  u13271 5848                                    u13191 5780  
                                  u14231 90D2                                    u11751 7DE4  
                                  u14311 A796                                    u14151 9B72  
                                  u14071 66FC                                    u13511 7AB6  
                                  u15031 55BC                                    u15111 6292  
                                  u11487 934E                                    u12391 8D10  
                                  u13440 5A5E                                    u13360 5996  
                                  u13280 586A                                    u14240 910A  
                                  u15120 9976                                    u16000 9D06  
                                  u11760 7E24                                    u11680 7CAA  
                                  u14320 AB5E                                    u13600 839C  
                                  u14160 9BAA                                    u14080 6716  
                                  u14400 9478                                    u15040 5F9C  
                                  u15200 5C5C                                    u13441 5A5A  
                                  u13361 5992                                    u13281 5866  
                                  u15121 9972                                    u16001 9D02  
                                  u11761 7E20                                    u11745 7DC2  
                                  u11681 7CA6                                    u14321 AB58  
                                  u13601 8398                                    u14161 9BA6  
                                  u14081 6712                                    u14401 9474  
                                  u15041 5F98                                    u15201 5C58  
                                  u13450 5A7E                                    u13370 59A8  
                                  u13290 58A2                                    u14250 9138  
                                  u15130 9996                                    u16010 9D3A  
                                  u11690 7CCC                                    u14330 AB60  
                                  u14170 91F4                                    u14090 672A  
                                  u13530 7B26                                    u15050 6032  
                                  u15210 5C94                                    u13451 5A7A  
                                  u13371 59A4                                    u13291 589E  
                                  u14251 9134                                    u15131 9992  
                                  u16011 9D36                                    u11691 7CC8  
                                  u11675 7C72                                    u13611 83C6  
                                  u14171 91F0                                    u14091 6726  
                                  u13531 7B22                                    u15051 602E  
                                  u15211 5C90                                    u13460 5A90  
                                  u13380 59BE                                    u14260 914C  
                                  u16020 9D68                                    u14500 7ED6  
                                  u13620 83EA                                    u13700 88A2  
                                  u14340 9F0E                                    u14180 9232  
                                  u14420 94B2                                    u13540 7B4A  
                                  u15060 6058                                    u15140 A58A  
                                  u15300 7872                                    u15220 5D0A  
                                  u16100 3C0A                                    u11940 6BDE  
                                  u13461 5A8C                                    u13381 59BA  
                                  u14261 9148                                    u14245 9100  
                                  u16021 9D64                                    u14501 7ED2  
                                  u13621 83E6                                    u13701 889E  
                                  u14341 9F0A                                    u14181 922E  
                                  u14421 94AC                                    u13525 7ACE  
                                  u15061 6054                                    u15141 A586  
                                  u15301 786E                                    u15221 5D06  
                                  u16101 3C06                                    u11941 6BDA  
                                  u13470 5AAC                                    u13390 59D4  
                                  u14270 9174                                    u14510 7F0C  
                                  u13630 8414                                    u13710 88EA  
                                  u14350 9F64                                    u14190 9250  
                                  u14430 94B4                                    u13550 7B66  
                                  u13526 7AD8                                    u15070 6094  
                                  u15310 78CA                                    u15230 5DA6  
                                  u15150 5B14                                    u16110 3C40  
                                  u16030 3B28                                    u11950 6BF8  
                                  u13471 5AA8                                    u13391 59D0  
                                  u14271 9170                                    u13631 8410  
                                  u13711 88E6                                    u14351 9F60  
                                  u14191 924C                                    u14415 948A  
                                  u13551 7B62                                    u13527 7AE8  
                                  u15071 6090                                    u15311 78C6  
                                  u15231 5DA2                                    u15151 5B10  
                                  u16111 3C3C                                    u16031 3B24  
                                  u11951 6BF4                                    u13800 69AA  
                                  u13720 682C                                    u14280 9194  
                                  u17000 9A96                                    u14520 7F6A  
                                  u13640 8454                                    u14360 A916  
                                  u13480 A8B8                                    u14600 732A  
                                  u13560 7BBA                                    u14440 A8FA  
                                  u15080 6138                                    u15320 78F2  
                                  u15240 5E0E                                    u15160 5B8E  
                                  u15400 11C0                                    u16200 3DB2  
                                  u16120 3C76                                    u16040 3B5C  
                                  u11960 6C12                                    u13801 69A6  
                                  u13721 6828                                    u14281 9190  
                                  u17001 9A92                                    u13641 8450  
                                  u14361 A912                                    u13481 A8B4  
                                  u14601 7326                                    u13545 7B40  
                                  u14441 A8F6                                    u15081 6134  
                                  u15321 78EE                                    u15241 5E0A  
                                  u15161 5B8A                                    u15401 11BC  
                                  u16201 3DAE                                    u16121 3C72  
                                  u16041 3B56                                    u11961 6C0E  
                                  u13810 69CC                                    u13730 683E  
                                  u14290 91A4                                    u17010 9AB6  
                                  u14530 7FA6                                    u13650 849E  
                                  u14610 7356                                    u14370 9408  
                                  u13570 7BD6                                    u13490 7A6A  
                                  u14450 A338                                    u15090 6166  
                                  u15330 794A                                    u15250 5E24  
                                  u15170 5BBC                                    u15410 11E2  
                                  u16210 3DD4                                    u16130 3C86  
                                  u16050 3B5E                                    u11970 6C2C  
                                  u13811 69C8                                    u13731 683A  
                                  u14291 91A0                                    u17011 9AB2  
                                  u13651 849A                                    u14611 7352  
                                  u13571 7BD2                                    u14451 A334  
                                  u15091 6162                                    u15331 7946  
                                  u15251 5E20                                    u15171 5BB8  
                                  u15411 11DE                                    u16211 3DD0  
                                  u16131 3C82                                    u11971 6C28  
                                  u13900 6AD8                                    u13820 69F6  
                                  u13740 684E                                    u17020 9AD2  
                                  u14540 7FCA                                    u13660 87DA  
                                  u14620 736C                                    u14380 9426  
                                  u13580 7C12                                    u14460 A636  
                                  u14700 4C08                                    u15340 79A2  
                                  u15260 5E66                                    u15180 5BDE  
                                  u15500 140A                                    u15420 1238  
                                  u16300 3F54                                    u16220 3DFA  
                                  u16140 3CA8                                    u16060 3B74  
                                  u17100 7092                                    u11980 6C60  
                                  u13901 6AD4                                    u13821 69F2  
                                  u13741 684A                                    u17021 9ACE  
                                  u14541 7FC6                                    u14517 7F02  
                                  u13661 87D6                                    u14621 7368  
                                  u14381 9422                                    u13581 7C0E  
                                  u13565 7BB0                                    u14461 A632  
                                  u14701 4C04                                    u15341 799E  
                                  u15261 5E62                                    u15181 5BDA  
                                  u15501 1406                                    u15421 1234  
                                  u16301 3F50                                    u16221 3DF6  
                                  u16141 3CA4                                    u16061 3B70  
                                  u17101 708E                                    u11981 6C5C  
                                  u13910 6AF2                                    u13830 6A1A  
                                  u13750 6892                                    u17030 9AF2  
                                  u14550 7FDC                                    u14470 7E80  
                                  u13590 836A                                    u13670 880C  
                                  u14630 74A8                                    u14390 944E  
                                  u14710 4C18                                    u15270 5EA8  
                                  u15510 1442                                    u15430 1254  
                                  u16310 3F72                                    u16230 3E18  
                                  u16150 3CBA                                    u16070 3BA8  
                                  u17110 70F0                                    u11990 6C8A  
                                  u13911 6AEE                                    u13831 6A16  
                                  u13751 688E                                    u17031 9AEE  
                                  u14551 7FD8                                    u14527 7F60  
                                  u13591 8366                                    u13671 8808  
                                  u14631 74A4                                    u14391 944A  
                                  u14375 93FE                                    u13495 7A60  
                                  u14711 4C14                                    u15271 5EA4  
                                  u15511 143E                                    u15431 1250  
                                  u16311 3F6E                                    u16231 3E14  
                                  u16151 3CB6                                    u16071 3BA4  
                                  u17111 70EC                                    u11991 6C86  
                                  u13920 6B3A                                    u13840 6A30  
                                  u13760 68A4                                    u14480 7E90  
                                  u13680 884A                                    u14640 74C6  
                                  u14560 72CA                                    u14800 4EF6  
                                  u14720 4C56                                    u15600 1632  
                                  u15520 1450                                    u15440 1284  
                                  u15360 A408                                    u16400 412E  
                                  u16320 3F94                                    u16240 3E36  
                                  u16160 3D04                                    u16080 3BC0  
                                  u17200 7208                                    u17120 7106  
                                  u17040 6F9E                                    u13921 6B36  
                                  u13841 6A2C                                    u13761 68A0  
                                  u14537 7F9C                                    u14481 7E8C  
                                  u13681 8846                                    u14641 74C2  
                                  u14561 72C4                                    u14801 4EF2  
                                  u14721 4C52                                    u15601 162E  
                                  u15521 144C                                    u15441 1280  
                                  u15361 A404                                    u16401 412A  
                                  u16321 3F90                                    u16241 3E32  
                                  u16161 3D00                                    u16081 3BBC  
                                  u17201 7204                                    u17121 7102  
                                  u17041 6F9A                                    u13930 6B6A  
                                  u13850 6A4E                                    u13770 68B4  
                                  u14490 7EB2                                    u13690 8874  
                                  u14650 74E0                                    u14570 72CC  
                                  u14810 4F2C                                    u14730 4C68  
                                  u15290 781A                                    u15610 164E  
                                  u15530 1488                                    u15370 A436  
                                  u16410 4166                                    u16330 3FC8  
                                  u16250 3EA8                                    u16170 3D3A  
                                  u16090 3BE0                                    u17130 7118  
                                  u17050 6FB8                                    u17210 8FC2  
                                  u13931 6B66                                    u13851 6A4A  
                                  u13771 68B0                                    u13691 8870  
                                  u14651 74DC                                    u14811 4F28  
                                  u14731 4C64                                    u15355 79BC  
                                  u15291 7816                                    u15195 5C1C  
                                  u15611 164A                                    u15531 1484  
                                  u15371 A432                                    u16411 4162  
                                  u16331 3FC4                                    u16251 3EA4  
                                  u16171 3D36                                    u16091 3BDC  
                                  u17131 7114                                    u17051 6FB4  
                                  u17211 8FBE                                    u13940 6B98  
                                  u13860 6A6E                                    u13780 68F4  
                                  u14660 74FA                                    u14580 72DE  
                                  u14900 5250                                    u14820 4F42  
                                  u14740 4CE2                                    u15196 5C26  
                                  u15700 1918                                    u15620 166C  
                                  u15540 14E2                                    u15380 1156  
                                  u16500 430E                                    u16420 419E  
                                  u16340 4000                                    u16260 3EB8  
                                  u16180 3D70                                    u17140 712A  
                                  u17060 6FD4                                    u17220 8FDE  
                                  u13941 6B94                                    u13861 6A6A  
                                  u13781 68F0                                    u17301 A3BC  
                                  u14477 7E76                                    u14661 74F6  
                                  u14581 72DA                                    u14901 524C  
                                  u14821 4F3E                                    u14741 4CDE  
                                  u15285 5F24                                    u15197 5C36  
                                  u15701 1914                                    u15621 1668  
                                  u15541 14DE                                    u15381 1152  
                                  u16501 430A                                    u16421 419A  
                                  u16341 3FFC                                    u16261 3EB4  
                                  u16181 3D6C                                    u17141 7126  
                                  u17061 6FD0                                    u17221 8FDA  
                                  u13870 6A80                                    u13790 6934  
                                  u14670 750A                                    u14590 730C  
                                  u13950 6402                                    u14910 529E  
                                  u14830 4F78                                    u14750 4CF4  
                                  u17310 8D82                                    u15710 1926  
                                  u15630 16B0                                    u15550 14F0  
                                  u15470 1348                                    u15390 1188  
                                  u16510 432A                                    u16430 41F2  
                                  u16350 4054                                    u16270 3ED6  
                                  u16190 3D82                                    u17150 713C  
                                  u17070 6FE8                                    u17230 8FF8  
                                  u13871 6A7C                                    u13791 6930  
                                  u14671 7506                                    u14591 7308  
                                  u13951 63FE                                    u14911 529A  
                                  u14831 4F74                                    u14751 4CF0  
                                  u17311 8D7E                                    u15711 1922  
                                  u15631 16AC                                    u15551 14EC  
                                  u15455 129A                                    u15391 1184  
                                  u16511 4326                                    u16431 41EE  
                                  u16351 4050                                    u16271 3ED2  
                                  u16191 3D7E                                    u17151 7138  
                                  u17071 6FE4                                    u17231 8FF4  
                                  u13880 6AAE                                    u14680 751A  
                                  u13960 6414                                    u14920 534C  
                                  u14840 4F86                                    u14760 4D6E  
                                  u17320 8DB4                                    u15800 2F28  
                                  u15720 1A22                                    u15640 1714  
                                  u15560 1554                                    u15480 1382  
                                  u15456 12A4                                    u16600 44E8  
                                  u16520 43A0                                    u16440 421A  
                                  u16360 407C                                    u16280 3EF4  
                                  u17160 714E                                    u17080 704A  
                                  u17240 9012                                    u17400 7586  
                                  u13881 6AAA                                    u14497 7EA8  
                                  u14681 7516                                    u13961 6410  
                                  u14921 5348                                    u14841 4F82  
                                  u14761 4D6A                                    u17321 8DB0  
                                  u15801 2F24                                    u15721 1A1E  
                                  u15641 1710                                    u15561 1550  
                                  u15481 137E                                    u15465 12F4  
                                  u15457 12B4                                    u16601 44E4  
                                  u16521 439C                                    u16281 3EF0  
                                  u17161 714A                                    u17081 7046  
                                  u17241 900E                                    u17401 7582  
                                  u13890 6AC4                                    u13970 6424  
                                  u14930 5388                                    u14850 4FB0  
                                  u14770 4DFA                                    u14690 4BBE  
                                  u17330 8DE6                                    u15810 2FA2  
                                  u15730 1A40                                    u15650 17B6  
                                  u15570 15A4                                    u15490 13EE  
                                  u15466 12FE                                    u16610 4514  
                                  u16530 43B0                                    u16450 4246  
                                  u16370 40DC                                    u16290 3F32  
                                  u17170 7160                                    u17090 7066  
                                  u17250 9032                                    u17410 7598  
                                  u13891 6AC0                                    u13971 6420  
                                  u14931 5384                                    u14851 4FAC  
                                  u14771 4DF6                                    u14691 4BBA  
                                  u17331 8DE2                                    u15811 2F9E  
                                  u15731 1A3C                                    u15651 17B2  
                                  u15571 15A0                                    u15491 13EA  
                                  u15475 133E                                    u15467 130E  
                                  u16611 4510                                    u16531 43AC  
                                  u16451 4242                                    u16371 40D8  
                                  u16291 3F2E                                    u17171 715C  
                                  u17091 7062                                    u17251 902E  
                                  u17411 7594                                    u13980 6464  
                                  u14940 5396                                    u14860 50F8  
                                  u14780 4E2C                                    u15820 3056  
                                  u15740 1E2A                                    u15660 180C  
                                  u15580 15B2                                    u16700 46B2  
                                  u16540 43D2                                    u16460 4264  
                                  u16380 40FA                                    u17180 71E8  
                                  u17260 9052                                    u17500 770E  
                                  u17420 75AA                                    u13981 6460  
                                  u14941 5392                                    u14861 50F4  
                                  u14781 4E28                                    u15821 3052  
                                  u15741 1E26                                    u15661 1808  
                                  u15581 15AE                                    u16701 46AE  
                                  u16541 43CE                                    u16461 4260  
                                  u16445 4210                                    u16381 40F6  
                                  u16365 4072                                    u17181 71E4  
                                  u17261 904E                                    u17501 770A  
                                  u17421 75A6                                    u13990 6476  
                                  u14950 53EA                                    u14870 515E  
                                  u14790 4E6A                                    u15910 340A  
                                  u15830 30E0                                    u15670 1822  
                                  u15590 161C                                    u16710 46CC  
                                  u16550 43F4                                    u16470 4282  
                                  u16390 411C                                    u17190 71F8  
                                  u17270 9072                                    u17510 7758  
                                  u17430 75BC                                    u13991 6472  
                                  u14951 53E6                                    u14871 515A  
                                  u14791 4E66                                    u15911 3406  
                                  u15831 30DC                                    u15671 181E  
                                  u15591 1618                                    u16711 46C8  
                                  u16551 43F0                                    u16471 427E  
                                  u16391 4118                                    u17191 71F4  
                                  u17271 906E                                    u17511 7754  
                                  u17431 75B8                                    u14960 54BC  
                                  u14880 51A6                                    u15840 3136  
                                  u15760 1F4C                                    u15680 18C2  
                                  u16800 4876                                    u16720 46EA  
                                  u16640 459C                                    u16560 4426  
                                  u16480 42B6                                    u17280 9098  
                                  u17520 778C                                    u17440 75F4  
                                  u14961 54B8                                    u14881 51A2  
                                  u15905 33D0                                    u15841 3132  
                                  u15761 1F48                                    u15681 18BE  
                                  u16801 4872                                    u16721 46E6  
                                  u16641 4598                                    u16625 4530  
                                  u16561 4422                                    u16481 42B2  
                                  u17281 9094                                    u17521 7788  
                                  u17441 75F0                                    u14970 54D8  
                                  u14890 51B6                                    u15906 33DA  
                                  u15770 1F84                                    u15690 18F4  
                                  u16810 48DE                                    u16730 470E  
                                  u16650 45B6                                    u16570 446C  
                                  u16490 42DA                                    u17290 90BC  
                                  u17530 77C0                                    u17450 7604  
                                  u14971 54D4                                    u14891 51B2  
                                  u15907 33EA                                    u15771 1F80  
                                  u15755 1EA6                                    u15691 18F0  
                                  u16811 48DA                                    u16731 470A  
                                  u16651 45B2                                    u16635 456A  
                                  u16571 4468                                    u16491 42D6  
                                  u17291 90B8                                    u17531 77BC  
                                  u17451 7600                                    u14980 5540  
                                  u15940 3A8E                                    u15860 3246  
                                  u15756 1EB0                                    u16900 4B1C  
                                  u16820 4904                                    u16740 472C  
                                  u16660 45EE                                    u16580 449E  
                                  u17460 7664                                    u14981 553A  
                                  u15941 3A8A                                    u15925 3A0E  
                                  u15861 3242                                    u15757 1EC0  
                                  u16901 4B18                                    u16821 4900  
                                  u16741 4728                                    u16661 45EA  
                                  u16581 449A                                    u17461 7660  
                                  u15950 84FA                                    u14990 5542  
                                  u15790 2EA4                                    u16910 4B2C  
                                  u16830 496A                                    u16750 475A  
                                  u16670 4608                                    u16590 44BA  
                                  u17470 76B0                                    u17607 89F2  
                                  u15951 84F6                                    u15935 3A54  
                                  u15855 31D2                                    u15791 2EA0  
                                  u16911 4B28                                    u16831 4966  
                                  u16751 4756                                    u16671 4604  
                                  u16591 44B6                                    u17471 76AC  
                                  u15960 853C                                    u15936 3A5E  
                                  u15856 31DC                                    u16920 4B64  
                                  u16840 49BC                                    u16760 47A2  
                                  u16680 4616                                    u17480 76D6  
                                  u17617 8A14                                    u15961 8538  
                                  u15937 3A6E                                    u15857 31EC  
                                  u15785 21CA                                    u16921 4B60  
                                  u16841 49B8                                    u16761 479E  
                                  u16681 4612                                    u17481 76D2  
                                  u15970 85AE                                    u16850 49EE  
                                  u16770 4806                                    u16690 4684  
                                  u17490 76F2                                    u17627 AA44  
                                  u15971 85AA                                    u16931 99A4  
                                  u15875 3260                                    u16851 49EA  
                                  u16771 4802                                    u16691 4680  
                                  u17547 8C54                                    u17491 76EE  
                                  u15980 85F4                                    u16940 99C4  
                                  u15876 326A                                    u16860 49FE  
                                  u16780 4846                                    u17557 8948  
                                  u15981 85F0                                    u16941 99C0  
                                  u15885 32CA                                    u15877 327A  
                                  u16861 49FA                                    u16781 4842  
                                  u15990 8654                                    u16950 9A56  
                                  u15886 32D4                                    u16870 4A40  
                                  u16790 4868                                    u17567 896A  
                                  u15991 8650                                    u16951 9A52  
                                  u15895 3322                                    u15887 32E4  
                                  u16871 4A3C                                    u16791 4864  
                                  u15896 332C                                    u16880 4A98  
                                  u17577 898C                                    u16961 9754  
                                  u15897 333C                                    u16881 4A94  
                                  u16970 9776                                    u16890 4AEA  
                                  u17587 89AE                                    u16971 9772  
                                  u16891 4AE6                                    u16980 9810  
                                  u17597 89D0                                    u16981 980C  
                                  u16990 9A6E                                    u16991 9A6A  
                                  i2l611 AAE0                                    i2l615 AAB0  
                                  i2l560 A4C2                                    i2l563 A4E2  
                                  i2l834 ACA8                                    i2l837 ACB0  
                      ?_lcd_send_command 001C                             vfpfcnvrt@fmt 00B7  
                                  _PORTA 000F80                                    _PORTB 000F81  
                                  _PORTC 000F82                                    _PORTD 000F83  
                                  _PORTE 000F84                       ??_lcd_send_char_at 002C  
                                  _TRISA 000F92                                    _TRISB 000F93  
                                  _TRISC 000F94                                    _TRISD 000F95  
                                  _TRISE 000F96                         ??_keypad_get_val 0011  
                    ___lmul@multiplicand 0007                        ??_INT2_SetHandler 0005  
                     ??_lcd_send_command 001F                                    _lg2_h 1039  
                                  _lg2_l 1035               ?_Calculator_display_result 0111  
                                  _ceilf 7C34                                    _fabsf AA4E  
                                  _flags 00FB                             ?_keypad_init 0019  
                                  _is_op A4EE                                    _errno 021B  
                                  _ivln2 1029                                    _fputc 9680  
                                  _fputs A876                          __end_of_isdigit AB66  
                        __end_of_ivln2_h 1085                             MathError@str 0012  
                        __end_of_ivln2_l 1029                       INT2_SetHandler@ret 0005  
                                  _two24 1075                          __end_of_scalbnf 7A22  
                                  labs@a 0003                                    atof@s 0095  
                                  atoi@n 0010                                    pad@fp 0013  
                                  atoi@s 0009                                    _width 021D  
                                  _putch ACB2                                    dtoa@d 0020  
                                  dtoa@i 003F                                    dtoa@n 0036  
                                  dtoa@p 0032                                    _sqrtf 5AC0  
                                  dtoa@s 003E                                    dtoa@w 0034  
                                  nanf@s 0003                                    nanf@u 0007  
                        __end_of_islower AB3A                          __end_of_isspace A7A6  
                                  pclath 000FFA                                    pclatu 000FFB  
                                  tablat 000FF5                                    powf@i 012C  
                                  powf@j 01AC                                    powf@k 01A0  
                                  powf@n 0180                                    powf@r 014C  
                                  powf@s 015C                                    powf@t 01B0  
                                  powf@u 0174                                    powf@v 0178  
                                  powf@w 0144                                    powf@x 0080  
                                  powf@y 0084                                    powf@z 01B4  
                                  plusw1 000FE3                                    plusw2 000FDB  
                                  ttemp5 007E                                    ttemp6 0081  
                                  ttemp7 0085                                    status 000FD8  
                                  wtemp8 007E                          __end_of_sprintf A5E8  
                         ?___fpclassifyf 0003                          __end_of_strncat A15E  
                        __end_of_toupper A974               __end_of_String_Append_Char AC66  
                        __initialization A832                          ??_lcd_send_char 001F  
                        ??_lcd_send_data 0033                             __end_of_cp_h 108D  
                           __end_of_cp_l 1089                             __end_of_dp_h 1021  
                           __end_of_dp_l 1019                             __end_of_labs A380  
                           __end_of_atof AB8E                             __end_of_atoi 8002  
                           __end_of_main 77EE                             __end_of_dtoa 7552  
                           __end_of_nanf AC48                             __end_of_huge 1075  
                           __end_of_powf 3B14                             __end_of_tiny 1071  
                  GPIO_pin_init@_pin_cfg 0016                            _GPIO_pin_init 9E84  
                          _lat_registers 02B3                    HandleString@FIRST_NUM 00A1  
                                 ??_labs 0007                                   ??_atof 007B  
                                 ??_atoi 000B                                   ??_main 007B  
                                 ??_dtoa 0028                                   ??_nanf 0007  
                   lcd_send_char_at@data 002B                                   ??_powf 0088  
                          __activetblptr 000003                ??_convert_float_to_string 007B  
                         INTx_Enable@pin 0003                           INTx_Enable@ret 0007  
         MSSP_I2C_Master_Send_Start@_i2c 0003                                ??_EXTINT0 0001  
                              ??_EXTINT1 0001                     INTx_Set_Polarity@pin 0003  
                   INTx_Set_Polarity@ret 0007                                   ?_ceilf 0003  
                                 ?_fabsf 0003        __end_of_Calculator_display_result 8E68  
                                 ?_is_op 0001                                   ?_fputc 0003  
                                 ?_fputs 000C                                   ?_putch 0001  
                                 ?_sqrtf 004E             ??_MSSP_I2C_Master_Send_Start 0005  
                           ?_INTx_Enable 0003                                   i2l9730 ACA2  
                                 i2l9732 ACAA                          _Calculator_Init A380  
                          vfpfcnvrt@done 00BE                _MSSP_I2C_Master_Send_Stop A7A6  
                                 _SSPADD 000FC8                                   _SSPBUF 000FC9  
                     _Set_I2C_Master_cfg 98DA                         __end_of___xxtofl 81B6  
              ?_I2C_Module_Interrupt_cfg 0003                                   _Keypad 02CF  
                  __end_of_MSSP_I2C_init 9B0A                             vfprintf@cfmt 00D1  
                       __end_of_lcd_init 8A86                                   ___flge 91C6  
                                 ___fleq 9B0A                      ?_Set_I2C_Master_cfg 0065  
                                 ___lmul A2B0                                ??___aodiv 0013  
                              ??___fladd 0019                                ??___aomod 0013  
                                 ___wmul AB8E                                ??___fldiv 004A  
                              ??___flneg 0007                                ??___flmul 0029  
                              ??___flsub 0042                                ??___fltol 005F  
                  String_Remove_Char@str 0003                                   _efgtoa 4B9A  
                         ?_GPIO_pin_init 0016                                   _floorf 7A22  
                                 ceilf@e 0011                                   ceilf@m 000D  
                                 ceilf@u 0013                                   ceilf@x 0003  
                                 fabsf@u 0007                                   fabsf@x 0003  
                                 _memcpy A5E8                                   _is_num AAE2  
                                 _memset 84E0                            MathError@temp 0015  
                                 clear_0 A858                         __end_of_is_power A242  
                                 isa$std 000001                                   pad@buf 0015  
                                 dtoa@fp 001E                                   _strcpy A8BA  
                                 _strlen A9E2                                   _strtof 3B14  
                       __end_of_isxdigit A442                                   is_op@x 0003  
                I2C_Master_Transmit@_i2c 0009                                   fputc@c 0003  
                                 fputs@c 0010                                   fputs@i 0011  
                                 fputs@s 000C                                ??_isdigit 0005  
                   keypad_get_val@keypad 000D                                ??_scalbnf 0040  
                        ___fpclassifyf@e 000B                          ___fpclassifyf@u 000D  
                        ___fpclassifyf@x 0003                                ??_islower 0005  
                           __mediumconst 0000                                ??_isspace 0005  
                                 powf@s2 018C                                   powf@t1 0184  
                                 powf@t2 011C                                   tblptrh 000FF7  
                                 tblptrl 000FF6                                   powf@y1 0128  
                                 tblptru 000FF8                                   powf@ax 0170  
                                 powf@is 0194                                   powf@hx 0160  
                                 powf@hy 017C                                   powf@ix 01A8  
                                 powf@iy 0190                                   powf@sn 0188  
                   ??_Set_I2C_Master_cfg 0067                                   putch@c 0001  
                       __end_of_vfprintf A596                        __end_of_Calculate 87C8  
                                 sqrtf@i 005B                                   sqrtf@m 006F  
                                 sqrtf@q 0063                                   sqrtf@r 0073  
                                 sqrtf@s 0057                                   sqrtf@t 0067  
                                 sqrtf@x 004E                                   sqrtf@z 006B  
                       _tiny@sqrtf$F2478 1021                                ??_sprintf 007B  
                              ??_strncat 000D                                ??_toupper 0009  
                             ___flge@ff1 0042                               ___flge@ff2 0046  
                        ??___fpclassifyf 0007                             ___xxtofl@arg 000D  
                           ___xxtofl@exp 000C                             ___xxtofl@val 0003  
                             ___fleq@ff1 006F                               ___fleq@ff2 0073  
                   INTx_Set_Priority@pin 0003                     INTx_Set_Priority@ret 0005  
                             __accesstop 0080                  __end_of__initialization A86C  
                              ?_INT0_ISR 0001                                ?_INT1_ISR 0001  
                             ___flneg@f1 0003          __end_of_convert_float_to_string 9812  
                          ___rparam_used 000001                               ___fltol@f1 005B  
                     INTx_Clear_Flag@pin 0003                       INTx_Clear_Flag@ret 0007  
       ??_MSSP_I2C_Master_Write_Blocking 0008          ?_MSSP_I2C_Master_Write_Blocking 0003  
                       ??_lcd_send_4bits 001C       MSSP_I2C_Master_Write_Blocking@Data 0005  
     MSSP_I2C_Master_Write_Blocking@_i2c 0003                           __pcstackCOMRAM 0001  
                    _I2C_Master_Transmit 9812                             __pidataBANK2 A442  
                 Set_I2C_Master_cfg@_i2c 0065                            __end_of_lg2_h 103D  
                          __end_of_lg2_l 1039                  _RB6_InterruptLowHandler 0223  
                          __end_of_ceilf 7E46                            __end_of_fabsf AA82  
                        _INT0_SetHandler AC00                            __end_of_is_op A542  
                          __end_of_ivln2 102D                            __end_of_fputc 974A  
                          __end_of_fputs A8BA                            __end_of_two24 1079  
                          __end_of_putch ACB4                            __end_of_sqrtf 5F76  
                      __end_of_MathError 90C0                               __end_of_L1 106D  
                             __end_of_L2 1069                               __end_of_L3 1065  
                             __end_of_L4 1061                               __end_of_L5 105D  
                             __end_of_L6 1059                               __end_of_P1 1055  
                             __end_of_P2 1051                               __end_of_P3 104D  
                             __end_of_P4 1049                               __end_of_P5 1045  
                             __end_of_bp 1081                               __end_of_cp 1031  
                        SyntaxErr@length 000D            MSSP_I2C_Master_Send_Start@ret 0005  
          MSSP_I2C_Master_Send_Stop@_i2c 0003                         ??_lcd_set_cursor 0024  
               ?_convert_int32_to_string 00E8                           _GPIO_pin_write 8A86  
                __end_of_Calculator_Init A3E2                     lcd_set_cursor@column 0023  
                   ?_I2C_Master_Transmit 0009                                  ??_ceilf 0007  
                                ??_fabsf 0007                             _HandleString 6F3A  
                   IO_expander_write@lcd 0014                                  ??_is_op 0003  
                   IO_expander_write@ret 0017                                  ??_fputc 0007  
                                ??_fputs 0010                          _INT1_SetHandler ABDA  
                                ??_putch 0003                                  ??_sqrtf 0052  
     convert_float_to_string@DataCounter 0110                               __pbssBANK0 00FB  
                             __pbssBANK1 01FE                               __pbssBANK2 0200  
                       lcd_send_char@lcd 001C                    _INT0_InterruptHandler 0233  
                             ??_INT0_ISR 0001                         lcd_send_data@lcd 002D  
                             ??_INT1_ISR 0001             I2C_Module_Interrupt_cfg@_i2c 0003  
                       lcd_send_char@ret 001F                         lcd_send_data@ret 0033  
                       lcd_send_data@row 002F                         lcd_send_data@str 0031  
                      __end_of_Slave_cfg 9CF0                          INTx_Disable@pin 0003  
                        INTx_Disable@ret 0007                      GPIO_pin_write@logic 0005  
                      _GPIO_pin_dir_init 81B6                          ??_GPIO_pin_init 0018  
                                ?___flge 0042               __end_of_String_Remove_Char A9E2  
                                ?___fleq 006F                                  ?___lmul 0003  
                                ?___wmul 0003        MSSP_I2C_Master_Write_Blocking@ret 0008  
                     ?_GPIO_pin_dir_init 000D                          _INT2_SetHandler ABB4  
                                ?_efgtoa 0080                                  ?_floorf 005B  
                                ?_memcpy 0003                                  ?_is_num 0001  
                                ?_memset 0003                           ___lmul@product 000B  
                                ?_strcpy 0003                                  ?_strlen 0003  
                                ?_strtof 0080                   __end_of_GPIO_pin_write 8BD8  
                      ??_INTx_Clear_Flag 0005                      ??_GPIO_pin_dir_init 000F  
                                i2l10120 AAB2                                  i2l10122 AAB4  
                                i2l10130 AA98                                  i2l10124 AAC8  
                                i2l10126 AA82                                  i2l10128 AA84  
                                i2l10350 A4A2                                  i2l10352 A4B0  
                                i2l10354 A4BE                                  i2l10356 A4D0  
                                i2l10358 A4DE                            ?_INTx_Disable 0003  
                              ?___xxtofl 0003                                  _EXTINT0 ACA2  
                                _EXTINT1 ACAA                            ?_MSSP_I2C_Cfg 0067  
                      __end_of_SyntaxErr 6F3A                    ??_I2C_Master_Transmit 0011  
            ??_Calculator_display_result 007B       __end_of_MSSP_I2C_Master_Send_Start A832  
             _MSSP_I2C_Master_Send_Start A7EC                                ?_lcd_init 0020  
                        MSSP_I2C_Cfg@ret 006A                           _tris_registers 02BD  
                              ?_is_power 0003                  __end_of_INT0_SetHandler AC26  
              __end_of_GPIO_pin_dir_init 8358                 _RB6_InterruptHighHandler 0225  
                                __Hparam 0000                                ?_isxdigit 0007  
                                __Lparam 0000                      _GPIO_pin_read_logic 95AE  
                                ___aodiv 8358                                  ___fladd 5600  
                                ___aomod 87C8                                  ___fldiv 6812  
                                ___flneg A974                                  ___flmul 63E8  
                                ___flsub A71A                                  ___fltol 90C0  
            keypad_get_val@row_counter_1 0014              keypad_get_val@row_counter_2 0015  
                              ?_vfprintf 00CB                             __psmallconst 1000  
                           SyntaxErr@str 0008          INT1_SetHandler@InterruptHandler 0003  
                                __pcinit A832                                  __ramtop 1000  
                     _String_Append_Char AC48                                  __ptext0 7552  
                                __ptext1 8BD8                                  __ptext2 95AE  
                                __ptext3 6BAC                                  __ptext4 AAE2  
                                __ptext5 A9AC                                  __ptext6 AC48  
                                __ptext7 A0E8                                  __ptext8 A9E2  
                                __ptext9 8F9C                           ??_INTx_Disable 0005  
                        ?_GPIO_pin_write 0003                  __end_of_INT1_SetHandler AC00  
                         ??_MSSP_I2C_Cfg 0069                                  _isdigit AB3A  
                                _ivln2_h 1081                                  _ivln2_l 1025  
                             ??___xxtofl 0007                                  _scalbnf 77EE  
                                _islower AB0E                                  _isspace A760  
                   ?_GPIO_pin_read_logic 0003                      ?_String_Append_Char 000D  
                                efgtoa@c 0086                                  efgtoa@d 0094  
                                efgtoa@e 0098                                  efgtoa@f 0082  
                                efgtoa@g 00AB                                  efgtoa@h 00A0  
                                efgtoa@i 00A8                                  efgtoa@l 00A4  
                                efgtoa@m 0096                                  efgtoa@n 00AF  
                                efgtoa@p 008B                                  efgtoa@t 008D  
                                efgtoa@u 00B1                                  efgtoa@w 009E  
       __end_of_I2C_Module_Interrupt_cfg AC84                         ?_Calculator_Init 0001  
                                atoi@neg 000E                               fp__EXTINT0 0000  
                             fp__EXTINT1 0000                                  _sprintf A596  
                             ??_lcd_init 0022                                  _strncat A0E8  
                IO_expander_write@ack_St 0018                           __pintcode_body A498  
                                _toupper A93C                     end_of_initialization A86C  
                      lcd_send_4bits@lcd 0019                                  floorf@e 0069  
                                floorf@m 0065                                  floorf@u 006B  
                                floorf@x 005B                                  memcpy@d 000A  
                                memcpy@n 0007                                  memcpy@s 000C  
                                fputc@fp 0005                                  is_num@x 0003  
                                memset@c 0005                                  memset@k 000B  
                                memset@n 0007                                  memset@s 000D  
                                int_func A498                                  fputs@fp 000E  
                             ??_is_power 0005                                i2u1242_40 AAC8  
                              i2u1242_41 AAC4                                i2u1243_48 AACE  
                              i2u1244_40 AA98                                i2u1243_49 AAE0  
                              i2u1244_41 AA94                                i2u1245_48 AA9E  
                              i2u1245_49 AAB0                                i2u1282_40 A4B0  
                              i2u1282_41 A4AC                                i2u1283_40 A4BE  
                              i2u1283_41 A4BA                                i2u1284_40 A4D0  
                              i2u1284_41 A4CC                                i2u1285_40 A4DE  
                              i2u1285_41 A4DA                  __end_of_INT2_SetHandler ABDA  
              GPIO_pin_dir_init@_pin_cfg 000D                               ??_isxdigit 0009  
                   ??_String_Append_Char 0010                                  powf@p_h 019C  
                                powf@p_l 0164                                  powf@s_h 016C  
                                powf@t_h 0168                                  powf@s_l 0130  
                                powf@t_l 0134                                  powf@z_h 0120  
                                powf@z_l 0124                        ??_INTx_SetHandler 0008  
                      __end_of_vfpfcnvrt 63E8                _Calculator_display_result 8D28  
                             efgtoa@mode 0092                               efgtoa@sign 00AA  
                                postdec1 000FE5                                  postdec2 000FDD  
                                postinc0 000FEE                                  postinc1 000FE6  
                                postinc2 000FDE                         vfpfcnvrt@convarg 00C0  
               __end_of_tiny@sqrtf$F2478 1025                    __end_of_lcd_send_char A6D0  
                  __end_of_lcd_send_data 93C8                               ??_vfprintf 007B  
                                sqrtf@ix 0077                                  strcpy@d 0009  
                                strlen@a 0005                                  strcpy@s 0007  
                                strlen@s 0003                        _IO_expander_write A638  
                                strtof@i 0094                                  strtof@s 0080  
                  _INT1_InterruptHandler 0231                I2C_Master_Transmit@Length 000C  
                     ?_IO_expander_write 0014                              ___fladd@grs 0020  
                           is_power@temp 0006       convert_int32_to_string@DataCounter 00FA  
                  ??_GPIO_pin_read_logic 0007                            ___xxtofl@sign 000B  
                              _TRISCbits 000F94                              ___fldiv@grs 0055  
                            ___fldiv@rem 004E                            Slave_cfg@_i2c 0003  
                    ??_IO_expander_write 0017                              ___flmul@grs 002F  
                              _Calculate 8656                               main@length 01FD  
                       ?_INT0_SetHandler 0003                               main@result 01F8  
          convert_uint16_to_string@F3604 0200                __end_of_IO_expander_write A686  
                         __end_of___flge 92CA                           __end_of___fleq 9BB4  
               ?_convert_float_to_string 00E8                           __end_of___lmul A31A  
                            vfpfcnvrt@ap 00B9                              vfpfcnvrt@cp 00C9  
                            vfpfcnvrt@fp 00B5                           __end_of___wmul ABB4  
                         __end_of_efgtoa 5600                           __end_of_floorf 7C34  
                    lcd_send_data@column 0030                           __end_of_memcpy A638  
                         __end_of_is_num AB0E                               floorf@F526 0213  
                         __end_of_memset 8656                         ?_INT1_SetHandler 0003  
                              _MathError 8F9C                           __end_of_strcpy A8FC  
                         __end_of_strlen AA18                           __end_of_strtof 4B9A  
                    start_initialization A832                       INT1_SetHandler@ret 0005  
                            __end_of_lg2 1041                              __end_of_abs A93C  
                            __end_of_pad 9F7A                              __end_of_ovt 1035  
                    lcd_send_char_at@lcd 0027                      lcd_send_char_at@ret 002C  
                    lcd_send_char_at@row 0029                       Calculator_Init@ret 006E  
                       _lcd_send_char_at 9E08                 _I2C_Module_Interrupt_cfg AC66  
                             ?_Calculate 0091                    __end_of___fpclassifyf 94C6  
                       _lcd_send_command A6D0                     __end_of_INTx_Disable A06E  
                       ?_INT2_SetHandler 0003                     __end_of_MSSP_I2C_Cfg 9D84  
                            vfprintf@fmt 00CD                          _INTx_Clear_Flag A06E  
                              _Slave_cfg 9C56                                 ??___flge 004A  
                               ??___fleq 0077             convert_int32_to_string@F3611 029D  
                          _isxdigit$2580 000D                                 ??___lmul 000B  
                _RB4_InterruptLowHandler 022B                                 ??___wmul 0007  
                _RB7_InterruptLowHandler 021F                                 ??_efgtoa 0087  
                            __pdataBANK2 028D                   GPIO_pin_write@_pin_cfg 0003  
                  IO_expander_write@data 0016             convert_uint8_to_string@F3597 0206  
                               ??_floorf 005F                                 ??_memcpy 0009  
                 I2C_Master_Transmit@ack 0013                                 ??_is_num 0003  
                               ??_memset 0009                   I2C_Master_Transmit@ctr 0011  
                 I2C_Master_Transmit@ret 0012                   I2C_Master_Transmit@str 000D  
                             memset@dest 0003                   lcd_send_char_at@column 002A  
                 String_Append_Char@Data 000F                                 ??_strcpy 0007  
                               ??_strlen 0005                                 ??_strtof 0084  
                              ___fladd@a 0015                                ___fladd@b 0011  
                              ___fldiv@a 0046                                ___fldiv@b 0042  
                             ?_MathError 0012             convert_int32_to_string@value 00E8  
                              ___flmul@a 0025                                ___flmul@b 0021  
                            __pbssCOMRAM 007B                       _String_Remove_Char A9AC  
                               ?_EXTINT0 0001                                 ?_EXTINT1 0001  
                              ___flsub@a 003E                                ___flsub@b 003A  
                          __pcstackBANK0 0080                            __pcstackBANK1 0100  
     convert_float_to_string@Temp_String 0100                         ___aodiv@dividend 0003  
                      lcd_send_char@data 001E              GPIO_pin_read_logic@_pin_cfg 0003  
                          ??_keypad_init 001B              ?_MSSP_I2C_Master_Send_Start 0003  
                              _SyntaxErr 6BAC      Calculator_display_result@result_str 0115  
                    ?_String_Remove_Char 0003                    _INT2_InterruptHandler 022F  
               String_Remove_Char@length 0005                 HandleString@numberCaught 00A2  
            I2C_Module_Interrupt_cfg@ret 0005                 GPIO_pin_read_logic@logic 0005  
                            _efgtoa$2267 008F                                _dtoa$2236 0030  
                 GPIO_pin_read_logic@ret 000C                               ?_Slave_cfg 0003  
                          _MSSP_I2C_init 9A58                                __pintcode 0008  
                    _INTx_interrupt_init 9D84                                 ?___aodiv 0003  
                               ?___fladd 0011                                 ?___aomod 0003  
                               ?___fldiv 0042                         ___aodiv@quotient 0015  
                               ?___flneg 0003                                 ?___flmul 0021  
                               ?___flsub 003A                                 ?___fltol 005B  
                       ??_GPIO_pin_write 0006                    __end_of_GPIO_pin_init 9F00  
                   ??_String_Remove_Char 0006                      lcd_send_command@lcd 001C  
                    lcd_send_command@ret 001F              __end_of_I2C_Master_Transmit 98DA  
                              ceilf@F526 0217                                fabsf@F465 020B  
                            __smallconst 1000                                 ?_isdigit 0003  
                               ?_scalbnf 003A                                 ?_islower 0003  
                               ?_isspace 0003  MSSP_I2C_Master_Write_Blocking@ACK_State 0006  
                   ?_INTx_interrupt_init 0016                                 ?_sprintf 00D3  
                               ?_strncat 0007                               ?_SyntaxErr 0008  
                               ?_toupper 0007                                _keypadder 01FE  
                            Calculate@n1 0091                              Calculate@n2 0095  
                          ??_INTx_Enable 0005                          _INTx_SetHandler 9BB4  
                            Calculate@op 0099                        MSSP_I2C_init@_i2c 006B  
                         _keypad_get_val 8BD8                                _powf$2921 01A4  
                              _powf$2922 0154                                _powf$2930 0140  
                              _powf$2923 0148                                _powf$2931 0108  
                              _powf$2924 0198                                _powf$2932 010C  
                              _powf$2925 0138                                _powf$2933 0110  
                              _powf$2934 0114                                _powf$2926 0100  
                              _powf$2935 0118                                _powf$2927 0104  
                              _powf$2928 0158                                _powf$2929 013C  
                            ??_Calculate 009A                  __end_of_INTx_Clear_Flag A0E8  
                               _INT0_ISR AAB2                                 _INT1_ISR AA82  
                         ___wmul@product 0007                           _keypad_buttons 1001  
                    __end_of_keypad_init A1D4                 _RB5_InterruptHighHandler 0229  
                         ?_MSSP_I2C_init 006B                                 _PIR1bits 000F9E  
           I2C_Master_Transmit@ACK_State 000F                              strtof@digit 008A  
                             powf@yisint 0150                              strtof@flags 008B  
                            strtof@expon 008C                                _vfpfcnvrt 5F76  
                      ___wmul@multiplier 0003                         MSSP_I2C_Cfg@_i2c 0067  
              keypad_get_val@col_counter 0017               convert_int32_to_string@str 00EC  
                            ??_MathError 0014                    ??_INTx_interrupt_init 0018  
                           _isspace$2115 0007             convert_float_to_string@F3618 028D  
                             vfpfcnvrt@c 00C8                        ___lmul@multiplier 0003  
                            _INTCON2bits 000FF1                   __end_of_keypad_get_val 8D28  
                            _INTCON3bits 000FF0                                copy_data0 A846  
                      keypad_get_val@ret 0013                        keypad_get_val@val 000F  
                _convert_int32_to_string 999A                   __end_of_keypad_buttons 1011  
                keypad_get_val@col_logic 0016                      __end_of_INTx_Enable 9FF4  
                               __Hrparam 0000             convert_float_to_string@value 00E8  
                              memcpy@tmp 0009                               vfprintf@ap 00CF  
                               __Lrparam 0000                               vfprintf@fp 00CB  
                            ??_Slave_cfg 0005               convert_float_to_string@str 00EC  
                              is_power@x 0003              __end_of_GPIO_pin_read_logic 9680  
                  String_Append_Char@str 000D                               ?_vfpfcnvrt 00B5  
               __end_of_lcd_send_char_at 9E84       convert_int32_to_string@Temp_String 00EE  
                        ___aodiv@divisor 000B                          ___aodiv@counter 0013  
             ?_MSSP_I2C_Master_Send_Stop 0003                 __end_of_lcd_send_command A71A  
                          SyntaxErr@temp 000F                       ___fpclassifyf@F465 020F  
                             sprintf@fmt 00D5               ??_I2C_Module_Interrupt_cfg 0005  
                           _INTx_Disable 9FF4                                 ___xxtofl 8002  
                __end_of_INTx_SetHandler 9C56                             _MSSP_I2C_Cfg 9CF0  
                          ?_HandleString 009C                                 __ptext10 6F3A  
                               __ptext11 A1D4                                 __ptext20 10CE  
                               __ptext12 A4EE                                 __ptext21 5AC0  
                               __ptext13 AB66                                 __ptext30 999A  
                               __ptext22 AC26                                 __ptext14 3B14  
                               __ptext31 974A                                 __ptext23 77EE  
                               __ptext15 A93C                                 __ptext40 93C8  
                               __ptext32 A596                                 __ptext24 AA4E  
                               __ptext16 AB0E                                 __ptext41 A71A  
                               __ptext33 A542                                 __ptext25 8D28  
                               __ptext17 A3E2                                 __ptext50 ACB2  
                               __ptext42 A974                                 __ptext34 5F76  
                               __ptext26 92CA                                 __ptext18 A2B0  
                               __ptext51 A8FC                                 __ptext43 63E8  
                               __ptext35 4B9A                                 __ptext27 9E08  
                               __ptext19 8656                                 __ptext60 A380  
                               __ptext52 87C8                                 __ptext44 91C6  
                               __ptext36 A8BA                                 __ptext28 94C6  
                               __ptext61 892C                                 __ptext53 8358  
                               __ptext45 9B0A                                 __ptext37 A5E8  
                               __ptext29 A686                                 __ptext70 9E84  
                               __ptext62 A6D0                                 __ptext54 7E46  
                               __ptext46 729A                                 __ptext38 A31A  
                               __ptext71 9A58                                 __ptext63 AA18  
                               __ptext55 A760                                 __ptext47 9F00  
                               __ptext39 7A22                                 __ptext80 9D84  
                               __ptext72 9CF0                                 __ptext64 A638  
                               __ptext56 AB3A                                 __ptext48 A876  
                               __ptext81 AC84                                 __ptext73 9C56  
                               __ptext65 9812                                 __ptext57 AB8E  
                               __ptext49 9680                                 __ptext90 81B6  
                               __ptext82 8E68                                 __ptext74 98DA  
                               __ptext66 A242                                 __ptext58 84E0  
                               __ptext91 8A86                                 __ptext83 9BB4  
                               __ptext75 8002                                 __ptext67 A7A6  
                               __ptext59 7C34                                 __ptext84 ABB4  
                               __ptext76 90C0                                 __ptext68 A7EC  
                               __ptext93 AA82                                 __ptext85 ABDA  
                               __ptext77 6812                                 __ptext69 A15E  
                               __ptext94 AAB2                                 __ptext86 AC00  
                               __ptext78 5600                                 __ptext95 ACA2  
                               __ptext87 9F7A                                 __ptext79 AC66  
                               __ptext96 ACAA                                 __ptext88 9FF4  
                               __ptext97 0000                                 __ptext89 A06E  
                      keypad_init@keypad 0019                              _keypad_init A15E  
                               _lcd_init 892C                              ??_SyntaxErr 000A  
                        ?_keypad_get_val 000D                                isxdigit@c 0007  
                             strcpy@dest 0003             MSSP_I2C_Master_Send_Stop@ret 0005  
                       ?_INTx_Clear_Flag 0003                                 _is_power A1D4  
                        ??_MSSP_I2C_init 006D                         MSSP_I2C_init@ret 006D  
                               _isxdigit A3E2                     powf@__xc8_float_word 01B8  
                               efgtoa@fp 0080                                 efgtoa@ne 0089  
                               efgtoa@pp 0091                                 efgtoa@ou 009A  
                               isa$xinst 000000                               strtof@eexp 008E  
                               int$flags 007D          INT2_SetHandler@InterruptHandler 0003  
                               _vfprintf A542                           _lcd_send_4bits AA18  
                       ___aomod@dividend 0003        __end_of_MSSP_I2C_Master_Send_Stop A7EC  
                             _INTCONbits 000FF2               __end_of_Set_I2C_Master_cfg 999A  
                               memcpy@d1 0003                                 memcpy@s1 0005  
                         ??_HandleString 00A0                  lcd_send_command@command 001E  
                   GPIO_pin_dir_init@ret 0015                                 isdigit@c 0003  
              ??_convert_int32_to_string 007B                                 scalbnf@n 003E  
                               scalbnf@u 0044                                 scalbnf@x 003A  
                               scalbnf@y 0048                                 intlevel2 0000  
                         _lcd_set_cursor 94C6                        _INTx_Set_Polarity 8E68  
                      lcd_set_cursor@lcd 0020                                sprintf@ap 00DB  
                      lcd_set_cursor@ret 0026                        lcd_set_cursor@row 0022  
                            _INTx_Enable 9F7A                        _INTx_Set_Priority AC84  
                               islower@c 0003                         keypad_init@index 001E  
                               isspace@c 0003                         HandleString@num1 00AE  
                       HandleString@num2 00AA                       ?_INTx_Set_Polarity 0003  
                       HandleString@temp 00A3                                strcpy@src 0005  
                     ?_INTx_Set_Priority 0003                      ??_INTx_Set_Polarity 0005  
                              strtof@res 0082                              efgtoa@nmode 0093  
                _RB5_InterruptLowHandler 0227                        ??_Calculator_Init 006E  
             HandleString@president_flag 00A7                   __end_of_lcd_send_4bits AA4E  
                    ??_INTx_Set_Priority 0005                          ___aomod@divisor 000B  
                            ??_vfpfcnvrt 00BB                          ___aomod@counter 0013  
                          _lcd_send_char A686                            _lcd_send_data 92CA  
        INT0_SetHandler@InterruptHandler 0003             Calculator_display_result@Res 0111  
                               sprintf@f 00DD                                 sprintf@s 00D3  
                        HandleString@op2 00A9                           _port_registers 02A9  
                        HandleString@str 009C               I2C_Master_Transmit@Address 000B  
                           main@MATH_STR 01BC                                 strncat@d 0007  
                               strncat@n 000B                                 strncat@s 0009  
                       ?_INTx_SetHandler 0006                                 toupper@c 0007  
 __end_of_MSSP_I2C_Master_Write_Blocking A2B0           _MSSP_I2C_Master_Write_Blocking A242  
                               strtof@_u 0090                              _SSPCON1bits 000FC6  
                            _SSPCON2bits 000FC5                   __end_of_lcd_set_cursor 95AE  
              __end_of_INTx_Set_Polarity 8F9C                            ___fladd@signs 001D  
              __end_of_INTx_Set_Priority ACA2                             ___aodiv@sign 0014  
                         HandleString@op 00B2                           keypad_init@ret 001D  
                      _InterruptMananger 0008                    sqrtf@__xc8_float_word 005F  
                           ___fladd@aexp 001E                             ___fladd@bexp 001F  
            HandleString@op_Handle_Power 00A8                       ?_InterruptMananger 0001  
                           ___aomod@sign 0014  
